[22:47:46.524] [Info] Root: Preparing Root...
[22:47:46.525] [Info] Root: Done preparing Root.
[22:47:46.525] [Info] Client Version 1.0.5 (windows x86_64) Source ID: 7d4a2bbba04d43bd7f43f0ca940db23b2187edc1 Protocol: 724
[22:47:46.525] [Info] Root: Scanning for asset sources in directory '..\assets\'
[22:47:46.757] [Info] Root: Scanning for asset sources in directory '..\mods\'
[22:47:46.757] [Warn] Root: Unrecognized file in asset directory 'mods_go_here', skipping
[22:47:46.757] [Info] Root: Detected asset source named 'base' at '..\assets\packed.pak'
[22:47:46.757] [Info] Root: Detected unnamed asset source at '..\assets\user'
[22:47:46.757] [Info] Loading assets from: '..\assets\packed.pak'
[22:47:47.054] [Info] Loading assets from: '..\assets\user'
[22:47:47.790] [Info] Assets digest is 835de2a06240fd303c5cfc854388f3b67407dac8e006f903343715672b0705a3
[22:47:47.790] [Info] Root: Loaded Assets in 1.26496 seconds
[22:47:47.793] [Info] Application: Initializing SDL Video
[22:47:47.796] [Info] Application: Initializing SDL Joystick
[22:47:47.805] [Info] Application: Initializing SDL Sound
[22:47:47.904] [Info] Initialized Steam services
[22:47:47.904] [Info] Application: Creating SDL Window
[22:47:48.011] [Info] Application: Enabling VSync with late swap tearing
[22:47:48.063] [Info] Application: Opened default audio device with 44.1khz / 16 bit stereo audio, 2048 sample size buffer
[22:47:48.072] [Info] OpenGL version: '4.5.0 NVIDIA 359.06' vendor: 'NVIDIA Corporation' renderer: 'GeForce GTX 770/PCIe/SSE2' shader: '4.50 NVIDIA'
[22:47:48.078] [Info] Application: initialization...
[22:47:48.081] [Info] Root: Loaded Configuration in 0.00269866 seconds
[22:47:48.105] [Info] Application: renderer initialization...
[22:47:48.132] [Info] Root: Loaded ImageMetadataDatabase in 4.97373e-06 seconds
[22:47:48.146] [Info] Application: main update loop...
[22:47:48.148] [Info] Loading mods from user generated content with id '729427606' from directory 'D:\Steam\steamapps\workshop\content\211820\729427606'
[22:47:48.148] [Info] Reloading to include all user generated content
[22:47:48.148] [Info] Root: Reloading from disk
[22:47:48.149] [Info] Root: Writing runtime configuration to '..\storage\starbound.config'
[22:47:48.175] [Info] Root: Loaded Configuration in 0.000788768 seconds
[22:47:48.176] [Info] Root: Scanning for asset sources in directory '..\assets\'
[22:47:48.412] [Info] Root: Scanning for asset sources in directory '..\mods\'
[22:47:48.412] [Warn] Root: Unrecognized file in asset directory 'mods_go_here', skipping
[22:47:48.412] [Info] Root: Scanning for asset sources in directory 'D:\Steam\steamapps\workshop\content\211820\729427606'
[22:47:48.414] [Info] Root: Detected asset source named 'base' at '..\assets\packed.pak'
[22:47:48.414] [Info] Root: Detected asset source named 'Improved Containers' at 'D:\Steam\steamapps\workshop\content\211820\729427606\contents.pak'
[22:47:48.414] [Info] Root: Detected unnamed asset source at '..\assets\user'
[22:47:48.414] [Info] Loading assets from: '..\assets\packed.pak'
[22:47:48.712] [Info] Loading assets from: 'D:\Steam\steamapps\workshop\content\211820\729427606\contents.pak'
[22:47:48.715] [Info] Loading assets from: '..\assets\user'
[22:47:49.440] [Info] Assets digest is 14dec77a9dbdd95c04d77d35aefc1374ba7770c1e1b4fa0507c5dc2ffbf4d50f
[22:47:49.440] [Info] Root: Loaded Assets in 1.26403 seconds
[22:47:49.448] [Info] Root: Loaded NameGenerator in 0.00738007 seconds
[22:47:49.455] [Info] Root: Loaded ImageMetadataDatabase in 4.68129e-06 seconds
[22:47:49.465] [Error] OpenGL errors this frame:  GL_INVALID_VALUE
[22:47:49.557] [Info] Root: Loaded PlantDatabase in 0.109616 seconds
[22:47:49.697] [Info] Root: Loaded ObjectDatabase in 0.256835 seconds
[22:47:49.827] [Info] Root: Loaded MonsterDatabase in 0.12956 seconds
[22:47:49.858] [Info] Root: Loaded NpcDatabase in 0.0314951 seconds
[22:47:49.859] [Info] Root: Loaded StagehandDatabase in 0.000808663 seconds
[22:47:49.861] [Info] Root: Loaded VehicleDatabase in 0.00198128 seconds
[22:47:49.864] [Info] Root: Loaded PlayerFactory in 0.00234582 seconds
[22:47:49.914] [Info] Root: Loaded ProjectileDatabase in 0.356038 seconds
[22:47:49.914] [Info] Root: Loaded VersioningDatabase in 0.000419837 seconds
[22:47:49.914] [Info] Root: Loaded EntityFactory in 0.0502696 seconds
[22:47:49.952] [Info] Root: Loaded ParticleDatabase in 0.0378892 seconds
[22:47:50.169] [Info] Root: Loaded MaterialDatabase in 0.254681 seconds
[22:47:50.175] [Info] Root: Loaded TerrainDatabase in 0.00660564 seconds
[22:47:50.206] [Info] Root: Loaded BiomeDatabase in 0.0305966 seconds
[22:47:50.207] [Info] Root: Loaded LiquidsDatabase in 0.000710066 seconds
[22:47:50.213] [Info] Root: Loaded StatusEffectDatabase in 0.00630634 seconds
[22:47:50.333] [Info] Root: Loaded DamageDatabase in 0.120059 seconds
[22:47:50.338] [Info] Root: Loaded EffectSourceDatabase in 0.00480253 seconds
[22:47:50.341] [Info] Root: Loaded FunctionDatabase in 0.00256262 seconds
[22:47:50.364] [Info] Root: Loaded TreasureDatabase in 0.0228769 seconds
[22:47:50.548] [Info] Root: Loaded DungeonDefinitions in 0.18388 seconds
[22:47:50.548] [Info] Root: Loaded TilesetDatabase in 3.92043e-05 seconds
[22:47:50.550] [Info] Root: Loaded StatisticsDatabase in 0.00199971 seconds
[22:47:50.550] [Info] Root: Loaded EmoteProcessor in 5.41254e-05 seconds
[22:47:50.555] [Info] Root: Loaded SpeciesDatabase in 0.00540142 seconds
[22:47:50.567] [Info] Root: Loaded QuestTemplateDatabase in 0.0114676 seconds
[22:47:50.568] [Info] Root: Loaded AiDatabase in 0.00119749 seconds
[22:47:50.569] [Info] Root: Loaded TechDatabase in 0.00078906 seconds
[22:47:50.574] [Info] Root: Loaded CodexDatabase in 0.00526801 seconds
[22:47:50.647] [Info] Root: Loaded BehaviorDatabase in 0.0730131 seconds
[22:47:50.649] [Info] Root: Loaded DanceDatabase in 0.00214892 seconds
[22:47:50.657] [Info] Root: Loaded SpawnTypeDatabase in 0.00707814 seconds
[22:47:50.659] [Info] Root: Loaded RadioMessageDatabase in 0.00224518 seconds
[22:47:51.961] [Info] Root: Loaded ItemDatabase in 2.04729 seconds
[22:48:02.436] [Info] UniverseServer: Acquiring universe lock file
[22:48:02.439] [Info] UniverseServer: Loading settings
[22:48:02.442] [Info] UniverseServer: Starting UniverseServer with UUID: cae075b683d31b430337528d9a33f245
[22:48:02.452] [Info] UniverseServer: Logged in player 'Lutecia' locally
[22:48:02.452] [Info] UniverseServer: Logged in account '<anonymous>' as player 'Lutecia' from address local
[22:48:02.457] [Info] UniverseServer: Reviving player at CelestialWorld:-549421120:-174071947:-77840190:8
[22:48:02.457] [Info] UniverseServer: Client 'Lutecia' <1> (local) connected
[22:48:02.463] [Info] UniverseClient: Joined server as client 1
[22:48:02.547] [Info] UniverseServer: Loading celestial world -549421120:-174071947:-77840190:8
[22:48:02.548] [Info] UniverseServer: Loading client ship world ClientShipWorld:40d0c64bbadbfcac62e62a636f4f2308
[22:48:02.669] [Info] Setting steam rich presence connection as steam id 76561197969201252
[22:48:02.673] [Error] Cannot set Steam achievement kill10poptops
[22:48:03.249] [Info] UniverseServer: Warping player 1 to CelestialWorld:-549421120:-174071947:-77840190:8=1119.750
[22:48:03.510] [Info] UniverseServer: Flying player 1 ship to starter world -549420991:-174072043:5760844:2
[22:48:03.530] [Info] UniverseServer: Loading celestial world -549420991:-174072043:5760844:2
[22:48:03.605] [Info] UniverseServer: Stopping idle world ClientShipWorld:40d0c64bbadbfcac62e62a636f4f2308
[22:48:04.217] [Info] UniverseServer: Loading client ship world ClientShipWorld:40d0c64bbadbfcac62e62a636f4f2308
[22:48:04.991] [Info] UniverseServer: Arriving ship for player 1 at -549420991:-174072043:5760844:2
[22:48:05.030] [Info] UniverseServer: Stopping idle world CelestialWorld:-549420991:-174072043:5760844:2
[22:48:05.241] [Info] UniverseServer: Stopping idle world ClientShipWorld:40d0c64bbadbfcac62e62a636f4f2308
[22:48:49.589] [Warn] 	select()
	rawequal()
	rawset()
	string = {
		gmatch()
		char()
		sub()
		unpack()
		upper()
		lower()
		find()
		rep()
		dump()
		len()
		reverse()
		packsize()
		pack()
		byte()
		match()
		format()
		gsub()
	}
	require()
	pairs()
	next()
	jobject()
	math = {
		pi = 3.1415926535898
		rad()
		max()
		sqrt()
		random()
		floor()
		log()
		acos()
		fmod()
		mininteger = -9223372036854775808
		type()
		huge = inf
		randomseed()
		deg()
		exp()
		maxinteger = 9223372036854775807
		cos()
		min()
		tointeger()
		modf()
		asin()
		tan()
		atan()
		abs()
		sin()
		ult()
		ceil()
	}
	print()
	pcall()
	type()
	init()
	setmetatable()
	jresize()
	ic = {
		checkStack()
		itemAmount()
		stripColor()
		quickstack()
		itemConfig()
		amountEquipped()
		sortFunc()
		lock()
		giveBack()
		renameThis()
		sort()
		searchBox()
		sort_relative()
		clientVersion = 1
		renameButton()
		searchButton()
		getQuality()
	}
	player = {
		equippedTech()
		altHandItem()
		giveEssentialItem()
		consumeTaggedItem()
		setUniverseFlag()
		species()
		itemsWithTag()
		worldId()
		warp()
		completeMission()
		inventoryTags()
		upgradeShip()
		hasQuest()
		consumeItem()
		gender()
		primaryHandItem()
		essentialItem()
		equippedItem()
		setIntroComplete()
		playTime()
		enabledTechs()
		recordEvent()
		playCinematic()
		introComplete()
		hasCompletedQuest()
		makeTechAvailable()
		consumeItemWithParameter()
		startQuest()
		hasItemWithParameter()
		getItemWithParameter()
		lounge()
		enableTech()
		equipTech()
		enableMission()
		removeEssentialItem()
		isLounging()
		availableTechs()
		primaryHandItemTags()
		makeTechUnavailable()
		confirm()
		serverUuid()
		addBookmark()
		altHandItemTags()
		cleanupItems()
		radioMessage()
		setEquippedItem()
		ownShipWorldId()
		hasItem()
		canStartQuest()
		giveBlueprint()
		hasCountOfItem()
		shipUpgrades()
		giveItem()
	}
	config = {
		getParameter()
	}
	self = {
	}
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	world = {
		spawnItem()
		entityPosition()
		entityHealth()
		damageTileArea()
		day()
		placeMaterial()
		entityDescription()
		containerPutItemsAt()
		entityVelocity()
		damageTiles()
		entityHandItem()
		objectAt()
		setProperty()
		containerItemApply()
		containerClose()
		distance()
		findUniqueEntity()
		gravity()
		rectTileCollision()
		entitySpecies()
		platformerPathStart()
		containerOpen()
		containerTakeAll()
		breathable()
		npcType()
		containerAddItems()
		dayLength()
		loungeableOccupied()
		placeObject()
		isTileProtected()
		destroyLiquid()
		debugLine()
		spawnLiquid()
		entityCanDamage()
		containerItemsCanFit()
		xwrap()
		entityUniqueId()
		itemDropQuery()
		lightLevel()
		placeMod()
		spawnNpc()
		spawnTreasure()
		time()
		underground()
		spawnVehicle()
		spawnMonster()
		timeOfDay()
		findPlatformerPath()
		debugPoly()
		containerTakeNumItemsAt()
		isMonster()
		farmableStage()
		polyCollision()
		objectLineQuery()
		entityHasCountOfItem()
		entityHandItemDescriptor()
		tileIsOccupied()
		resolvePolyCollision()
		pointCollision()
		callScriptedEntity()
		collisionBlocksAlongLine()
		containerStackItems()
		objectSpaces()
		containerConsume()
		spawnStagehand()
		spawnProjectile()
		stagehandType()
		entityQuery()
		lineTileCollision()
		containerSwapItemsNoCombine()
		liquidAlongLine()
		playerQuery()
		objectQuery()
		entityGender()
		rectCollision()
		containerItemAt()
		polyContains()
		containerTakeAt()
		magnitude()
		mod()
		containerSwapItems()
		isNpc()
		lineCollision()
		getObjectParameter()
		debugPoint()
		pointTileCollision()
		containerItemsFitWhere()
		containerAvailable()
		getProperty()
		containerItems()
		threatLevel()
		entityType()
		sendEntityMessage()
		material()
		liquidAt()
		containerSize()
		debugText()
		monsterType()
		entityMoney()
		nearestTo()
		npcLineQuery()
		entityPortrait()
		entityName()
		entityDamageTeam()
		containerConsumeAt()
		entityAggressive()
		windLevel()
		monsterQuery()
		entityExists()
		loungeableQuery()
		npcQuery()
		entityLineQuery()
	}
	root = {
		createBiome()
		imageSpaces()
		createItem()
		loadVersionedJson()
		createTreasure()
		getMatchingTenants()
		monsterSkillParameter()
		getConfiguration()
		npcVariant()
		itemHasTag()
		imageSize()
		projectileGravityMultiplier()
		nonEmptyRegion()
		evalFunction2()
		projectileConfig()
		materialMiningSound()
		generateName()
		isTreasurePool()
		hasTech()
		behaviorModule()
		itemConfig()
		treeStemDirectory()
		evalFunction()
		techConfig()
		npcConfig()
		setConfigurationPath()
		getConfigurationPath()
		materialHealth()
		materialFootstepSound()
		monsterMovementSettings()
		materialPath()
		setConfiguration()
		monsterPortrait()
		itemType()
		questConfig()
		recipesForItem()
		assetJson()
		treeFoliageDirectory()
		techType()
		liquidStatusEffects()
		makeCurrentVersionedJson()
		itemTags()
		tenantConfig()
		npcPortrait()
	}
	jsize()
	status = {
		setResourceLocked()
		resourcePercentage()
		addPersistentEffects()
		removeEphemeralEffect()
		resource()
		setResourcePercentage()
		resourcePositive()
		damageTakenSince()
		statPositive()
		stat()
		statusProperty()
		activeUniqueStatusEffectSummary()
		inflictedHitsSince()
		resourceMax()
		setStatusProperty()
		setPersistentEffects()
		resetAllResources()
		addEphemeralEffects()
		overConsumeResource()
		modifyResource()
		addEphemeralEffect()
		getPersistentEffects()
		resetResource()
		consumeResource()
		clearPersistentEffects()
		modifyResourcePercentage()
		clearEphemeralEffects()
		resourceNames()
		addPersistentEffect()
		resourceLocked()
		clearAllPersistentEffects()
		inflictedDamageSince()
		isResource()
		setResource()
		giveResource()
	}
	xpcall()
	getmetatable()
	utf8 = {
		len()
		codepoint()
		offset()
		codes()
		charpattern = "[
[22:48:50.110] [Warn] 	select()
	rawequal()
	rawset()
	string = {
		gmatch()
		char()
		sub()
		unpack()
		upper()
		lower()
		find()
		rep()
		dump()
		len()
		reverse()
		packsize()
		pack()
		byte()
		match()
		format()
		gsub()
	}
	require()
	pairs()
	next()
	jobject()
	math = {
		pi = 3.1415926535898
		rad()
		max()
		sqrt()
		random()
		floor()
		log()
		acos()
		fmod()
		mininteger = -9223372036854775808
		type()
		huge = inf
		randomseed()
		deg()
		exp()
		maxinteger = 9223372036854775807
		cos()
		min()
		tointeger()
		modf()
		asin()
		tan()
		atan()
		abs()
		sin()
		ult()
		ceil()
	}
	print()
	pcall()
	type()
	init()
	setmetatable()
	jresize()
	ic = {
		checkStack()
		itemAmount()
		stripColor()
		quickstack()
		itemConfig()
		amountEquipped()
		sortFunc()
		lock()
		giveBack()
		renameThis()
		sort()
		searchBox()
		sort_relative()
		clientVersion = 1
		renameButton()
		searchButton()
		getQuality()
	}
	player = {
		equippedTech()
		altHandItem()
		giveEssentialItem()
		consumeTaggedItem()
		setUniverseFlag()
		species()
		itemsWithTag()
		worldId()
		warp()
		completeMission()
		inventoryTags()
		upgradeShip()
		hasQuest()
		consumeItem()
		gender()
		primaryHandItem()
		essentialItem()
		equippedItem()
		setIntroComplete()
		playTime()
		enabledTechs()
		recordEvent()
		playCinematic()
		introComplete()
		hasCompletedQuest()
		makeTechAvailable()
		consumeItemWithParameter()
		startQuest()
		hasItemWithParameter()
		getItemWithParameter()
		lounge()
		enableTech()
		equipTech()
		enableMission()
		removeEssentialItem()
		isLounging()
		availableTechs()
		primaryHandItemTags()
		makeTechUnavailable()
		confirm()
		serverUuid()
		addBookmark()
		altHandItemTags()
		cleanupItems()
		radioMessage()
		setEquippedItem()
		ownShipWorldId()
		hasItem()
		canStartQuest()
		giveBlueprint()
		hasCountOfItem()
		shipUpgrades()
		giveItem()
	}
	config = {
		getParameter()
	}
	self = {
	}
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	world = {
		spawnItem()
		entityPosition()
		entityHealth()
		damageTileArea()
		day()
		placeMaterial()
		entityDescription()
		containerPutItemsAt()
		entityVelocity()
		damageTiles()
		entityHandItem()
		objectAt()
		setProperty()
		containerItemApply()
		containerClose()
		distance()
		findUniqueEntity()
		gravity()
		rectTileCollision()
		entitySpecies()
		platformerPathStart()
		containerOpen()
		containerTakeAll()
		breathable()
		npcType()
		containerAddItems()
		dayLength()
		loungeableOccupied()
		placeObject()
		isTileProtected()
		destroyLiquid()
		debugLine()
		spawnLiquid()
		entityCanDamage()
		containerItemsCanFit()
		xwrap()
		entityUniqueId()
		itemDropQuery()
		lightLevel()
		placeMod()
		spawnNpc()
		spawnTreasure()
		time()
		underground()
		spawnVehicle()
		spawnMonster()
		timeOfDay()
		findPlatformerPath()
		debugPoly()
		containerTakeNumItemsAt()
		isMonster()
		farmableStage()
		polyCollision()
		objectLineQuery()
		entityHasCountOfItem()
		entityHandItemDescriptor()
		tileIsOccupied()
		resolvePolyCollision()
		pointCollision()
		callScriptedEntity()
		collisionBlocksAlongLine()
		containerStackItems()
		objectSpaces()
		containerConsume()
		spawnStagehand()
		spawnProjectile()
		stagehandType()
		entityQuery()
		lineTileCollision()
		containerSwapItemsNoCombine()
		liquidAlongLine()
		playerQuery()
		objectQuery()
		entityGender()
		rectCollision()
		containerItemAt()
		polyContains()
		containerTakeAt()
		magnitude()
		mod()
		containerSwapItems()
		isNpc()
		lineCollision()
		getObjectParameter()
		debugPoint()
		pointTileCollision()
		containerItemsFitWhere()
		containerAvailable()
		getProperty()
		containerItems()
		threatLevel()
		entityType()
		sendEntityMessage()
		material()
		liquidAt()
		containerSize()
		debugText()
		monsterType()
		entityMoney()
		nearestTo()
		npcLineQuery()
		entityPortrait()
		entityName()
		entityDamageTeam()
		containerConsumeAt()
		entityAggressive()
		windLevel()
		monsterQuery()
		entityExists()
		loungeableQuery()
		npcQuery()
		entityLineQuery()
	}
	root = {
		createBiome()
		imageSpaces()
		createItem()
		loadVersionedJson()
		createTreasure()
		getMatchingTenants()
		monsterSkillParameter()
		getConfiguration()
		npcVariant()
		itemHasTag()
		imageSize()
		projectileGravityMultiplier()
		nonEmptyRegion()
		evalFunction2()
		projectileConfig()
		materialMiningSound()
		generateName()
		isTreasurePool()
		hasTech()
		behaviorModule()
		itemConfig()
		treeStemDirectory()
		evalFunction()
		techConfig()
		npcConfig()
		setConfigurationPath()
		getConfigurationPath()
		materialHealth()
		materialFootstepSound()
		monsterMovementSettings()
		materialPath()
		setConfiguration()
		monsterPortrait()
		itemType()
		questConfig()
		recipesForItem()
		assetJson()
		treeFoliageDirectory()
		techType()
		liquidStatusEffects()
		makeCurrentVersionedJson()
		itemTags()
		tenantConfig()
		npcPortrait()
	}
	jsize()
	status = {
		setResourceLocked()
		resourcePercentage()
		addPersistentEffects()
		removeEphemeralEffect()
		resource()
		setResourcePercentage()
		resourcePositive()
		damageTakenSince()
		statPositive()
		stat()
		statusProperty()
		activeUniqueStatusEffectSummary()
		inflictedHitsSince()
		resourceMax()
		setStatusProperty()
		setPersistentEffects()
		resetAllResources()
		addEphemeralEffects()
		overConsumeResource()
		modifyResource()
		addEphemeralEffect()
		getPersistentEffects()
		resetResource()
		consumeResource()
		clearPersistentEffects()
		modifyResourcePercentage()
		clearEphemeralEffects()
		resourceNames()
		addPersistentEffect()
		resourceLocked()
		clearAllPersistentEffects()
		inflictedDamageSince()
		isResource()
		setResource()
		giveResource()
	}
	xpcall()
	getmetatable()
	utf8 = {
		len()
		codepoint()
		offset()
		codes()
		charpattern = "[
[22:48:51.444] [Warn] 	select()
	rawequal()
	rawset()
	string = {
		gmatch()
		char()
		sub()
		unpack()
		upper()
		lower()
		find()
		rep()
		dump()
		len()
		reverse()
		packsize()
		pack()
		byte()
		match()
		format()
		gsub()
	}
	require()
	pairs()
	next()
	jobject()
	math = {
		pi = 3.1415926535898
		rad()
		max()
		sqrt()
		random()
		floor()
		log()
		acos()
		fmod()
		mininteger = -9223372036854775808
		type()
		huge = inf
		randomseed()
		deg()
		exp()
		maxinteger = 9223372036854775807
		cos()
		min()
		tointeger()
		modf()
		asin()
		tan()
		atan()
		abs()
		sin()
		ult()
		ceil()
	}
	print()
	pcall()
	type()
	init()
	setmetatable()
	jresize()
	ic = {
		checkStack()
		itemAmount()
		stripColor()
		quickstack()
		itemConfig()
		amountEquipped()
		sortFunc()
		lock()
		giveBack()
		renameThis()
		sort()
		searchBox()
		sort_relative()
		clientVersion = 1
		renameButton()
		searchButton()
		getQuality()
	}
	player = {
		equippedTech()
		altHandItem()
		giveEssentialItem()
		consumeTaggedItem()
		setUniverseFlag()
		species()
		itemsWithTag()
		worldId()
		warp()
		completeMission()
		inventoryTags()
		upgradeShip()
		hasQuest()
		consumeItem()
		gender()
		primaryHandItem()
		essentialItem()
		equippedItem()
		setIntroComplete()
		playTime()
		enabledTechs()
		recordEvent()
		playCinematic()
		introComplete()
		hasCompletedQuest()
		makeTechAvailable()
		consumeItemWithParameter()
		startQuest()
		hasItemWithParameter()
		getItemWithParameter()
		lounge()
		enableTech()
		equipTech()
		enableMission()
		removeEssentialItem()
		isLounging()
		availableTechs()
		primaryHandItemTags()
		makeTechUnavailable()
		confirm()
		serverUuid()
		addBookmark()
		altHandItemTags()
		cleanupItems()
		radioMessage()
		setEquippedItem()
		ownShipWorldId()
		hasItem()
		canStartQuest()
		giveBlueprint()
		hasCountOfItem()
		shipUpgrades()
		giveItem()
	}
	config = {
		getParameter()
	}
	self = {
	}
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	world = {
		spawnItem()
		entityPosition()
		entityHealth()
		damageTileArea()
		day()
		placeMaterial()
		entityDescription()
		containerPutItemsAt()
		entityVelocity()
		damageTiles()
		entityHandItem()
		objectAt()
		setProperty()
		containerItemApply()
		containerClose()
		distance()
		findUniqueEntity()
		gravity()
		rectTileCollision()
		entitySpecies()
		platformerPathStart()
		containerOpen()
		containerTakeAll()
		breathable()
		npcType()
		containerAddItems()
		dayLength()
		loungeableOccupied()
		placeObject()
		isTileProtected()
		destroyLiquid()
		debugLine()
		spawnLiquid()
		entityCanDamage()
		containerItemsCanFit()
		xwrap()
		entityUniqueId()
		itemDropQuery()
		lightLevel()
		placeMod()
		spawnNpc()
		spawnTreasure()
		time()
		underground()
		spawnVehicle()
		spawnMonster()
		timeOfDay()
		findPlatformerPath()
		debugPoly()
		containerTakeNumItemsAt()
		isMonster()
		farmableStage()
		polyCollision()
		objectLineQuery()
		entityHasCountOfItem()
		entityHandItemDescriptor()
		tileIsOccupied()
		resolvePolyCollision()
		pointCollision()
		callScriptedEntity()
		collisionBlocksAlongLine()
		containerStackItems()
		objectSpaces()
		containerConsume()
		spawnStagehand()
		spawnProjectile()
		stagehandType()
		entityQuery()
		lineTileCollision()
		containerSwapItemsNoCombine()
		liquidAlongLine()
		playerQuery()
		objectQuery()
		entityGender()
		rectCollision()
		containerItemAt()
		polyContains()
		containerTakeAt()
		magnitude()
		mod()
		containerSwapItems()
		isNpc()
		lineCollision()
		getObjectParameter()
		debugPoint()
		pointTileCollision()
		containerItemsFitWhere()
		containerAvailable()
		getProperty()
		containerItems()
		threatLevel()
		entityType()
		sendEntityMessage()
		material()
		liquidAt()
		containerSize()
		debugText()
		monsterType()
		entityMoney()
		nearestTo()
		npcLineQuery()
		entityPortrait()
		entityName()
		entityDamageTeam()
		containerConsumeAt()
		entityAggressive()
		windLevel()
		monsterQuery()
		entityExists()
		loungeableQuery()
		npcQuery()
		entityLineQuery()
	}
	root = {
		createBiome()
		imageSpaces()
		createItem()
		loadVersionedJson()
		createTreasure()
		getMatchingTenants()
		monsterSkillParameter()
		getConfiguration()
		npcVariant()
		itemHasTag()
		imageSize()
		projectileGravityMultiplier()
		nonEmptyRegion()
		evalFunction2()
		projectileConfig()
		materialMiningSound()
		generateName()
		isTreasurePool()
		hasTech()
		behaviorModule()
		itemConfig()
		treeStemDirectory()
		evalFunction()
		techConfig()
		npcConfig()
		setConfigurationPath()
		getConfigurationPath()
		materialHealth()
		materialFootstepSound()
		monsterMovementSettings()
		materialPath()
		setConfiguration()
		monsterPortrait()
		itemType()
		questConfig()
		recipesForItem()
		assetJson()
		treeFoliageDirectory()
		techType()
		liquidStatusEffects()
		makeCurrentVersionedJson()
		itemTags()
		tenantConfig()
		npcPortrait()
	}
	jsize()
	status = {
		setResourceLocked()
		resourcePercentage()
		addPersistentEffects()
		removeEphemeralEffect()
		resource()
		setResourcePercentage()
		resourcePositive()
		damageTakenSince()
		statPositive()
		stat()
		statusProperty()
		activeUniqueStatusEffectSummary()
		inflictedHitsSince()
		resourceMax()
		setStatusProperty()
		setPersistentEffects()
		resetAllResources()
		addEphemeralEffects()
		overConsumeResource()
		modifyResource()
		addEphemeralEffect()
		getPersistentEffects()
		resetResource()
		consumeResource()
		clearPersistentEffects()
		modifyResourcePercentage()
		clearEphemeralEffects()
		resourceNames()
		addPersistentEffect()
		resourceLocked()
		clearAllPersistentEffects()
		inflictedDamageSince()
		isResource()
		setResource()
		giveResource()
	}
	xpcall()
	getmetatable()
	utf8 = {
		len()
		codepoint()
		offset()
		codes()
		charpattern = "[
[22:48:52.811] [Warn] 	select()
	rawequal()
	rawset()
	string = {
		gmatch()
		char()
		sub()
		unpack()
		upper()
		lower()
		find()
		rep()
		dump()
		len()
		reverse()
		packsize()
		pack()
		byte()
		match()
		format()
		gsub()
	}
	require()
	pairs()
	next()
	jobject()
	math = {
		pi = 3.1415926535898
		rad()
		max()
		sqrt()
		random()
		floor()
		log()
		acos()
		fmod()
		mininteger = -9223372036854775808
		type()
		huge = inf
		randomseed()
		deg()
		exp()
		maxinteger = 9223372036854775807
		cos()
		min()
		tointeger()
		modf()
		asin()
		tan()
		atan()
		abs()
		sin()
		ult()
		ceil()
	}
	print()
	pcall()
	type()
	init()
	setmetatable()
	jresize()
	ic = {
		checkStack()
		itemAmount()
		stripColor()
		quickstack()
		itemConfig()
		amountEquipped()
		sortFunc()
		lock()
		giveBack()
		renameThis()
		sort()
		searchBox()
		sort_relative()
		clientVersion = 1
		renameButton()
		searchButton()
		getQuality()
	}
	player = {
		equippedTech()
		altHandItem()
		giveEssentialItem()
		consumeTaggedItem()
		setUniverseFlag()
		species()
		itemsWithTag()
		worldId()
		warp()
		completeMission()
		inventoryTags()
		upgradeShip()
		hasQuest()
		consumeItem()
		gender()
		primaryHandItem()
		essentialItem()
		equippedItem()
		setIntroComplete()
		playTime()
		enabledTechs()
		recordEvent()
		playCinematic()
		introComplete()
		hasCompletedQuest()
		makeTechAvailable()
		consumeItemWithParameter()
		startQuest()
		hasItemWithParameter()
		getItemWithParameter()
		lounge()
		enableTech()
		equipTech()
		enableMission()
		removeEssentialItem()
		isLounging()
		availableTechs()
		primaryHandItemTags()
		makeTechUnavailable()
		confirm()
		serverUuid()
		addBookmark()
		altHandItemTags()
		cleanupItems()
		radioMessage()
		setEquippedItem()
		ownShipWorldId()
		hasItem()
		canStartQuest()
		giveBlueprint()
		hasCountOfItem()
		shipUpgrades()
		giveItem()
	}
	config = {
		getParameter()
	}
	self = {
	}
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	world = {
		spawnItem()
		entityPosition()
		entityHealth()
		damageTileArea()
		day()
		placeMaterial()
		entityDescription()
		containerPutItemsAt()
		entityVelocity()
		damageTiles()
		entityHandItem()
		objectAt()
		setProperty()
		containerItemApply()
		containerClose()
		distance()
		findUniqueEntity()
		gravity()
		rectTileCollision()
		entitySpecies()
		platformerPathStart()
		containerOpen()
		containerTakeAll()
		breathable()
		npcType()
		containerAddItems()
		dayLength()
		loungeableOccupied()
		placeObject()
		isTileProtected()
		destroyLiquid()
		debugLine()
		spawnLiquid()
		entityCanDamage()
		containerItemsCanFit()
		xwrap()
		entityUniqueId()
		itemDropQuery()
		lightLevel()
		placeMod()
		spawnNpc()
		spawnTreasure()
		time()
		underground()
		spawnVehicle()
		spawnMonster()
		timeOfDay()
		findPlatformerPath()
		debugPoly()
		containerTakeNumItemsAt()
		isMonster()
		farmableStage()
		polyCollision()
		objectLineQuery()
		entityHasCountOfItem()
		entityHandItemDescriptor()
		tileIsOccupied()
		resolvePolyCollision()
		pointCollision()
		callScriptedEntity()
		collisionBlocksAlongLine()
		containerStackItems()
		objectSpaces()
		containerConsume()
		spawnStagehand()
		spawnProjectile()
		stagehandType()
		entityQuery()
		lineTileCollision()
		containerSwapItemsNoCombine()
		liquidAlongLine()
		playerQuery()
		objectQuery()
		entityGender()
		rectCollision()
		containerItemAt()
		polyContains()
		containerTakeAt()
		magnitude()
		mod()
		containerSwapItems()
		isNpc()
		lineCollision()
		getObjectParameter()
		debugPoint()
		pointTileCollision()
		containerItemsFitWhere()
		containerAvailable()
		getProperty()
		containerItems()
		threatLevel()
		entityType()
		sendEntityMessage()
		material()
		liquidAt()
		containerSize()
		debugText()
		monsterType()
		entityMoney()
		nearestTo()
		npcLineQuery()
		entityPortrait()
		entityName()
		entityDamageTeam()
		containerConsumeAt()
		entityAggressive()
		windLevel()
		monsterQuery()
		entityExists()
		loungeableQuery()
		npcQuery()
		entityLineQuery()
	}
	root = {
		createBiome()
		imageSpaces()
		createItem()
		loadVersionedJson()
		createTreasure()
		getMatchingTenants()
		monsterSkillParameter()
		getConfiguration()
		npcVariant()
		itemHasTag()
		imageSize()
		projectileGravityMultiplier()
		nonEmptyRegion()
		evalFunction2()
		projectileConfig()
		materialMiningSound()
		generateName()
		isTreasurePool()
		hasTech()
		behaviorModule()
		itemConfig()
		treeStemDirectory()
		evalFunction()
		techConfig()
		npcConfig()
		setConfigurationPath()
		getConfigurationPath()
		materialHealth()
		materialFootstepSound()
		monsterMovementSettings()
		materialPath()
		setConfiguration()
		monsterPortrait()
		itemType()
		questConfig()
		recipesForItem()
		assetJson()
		treeFoliageDirectory()
		techType()
		liquidStatusEffects()
		makeCurrentVersionedJson()
		itemTags()
		tenantConfig()
		npcPortrait()
	}
	jsize()
	status = {
		setResourceLocked()
		resourcePercentage()
		addPersistentEffects()
		removeEphemeralEffect()
		resource()
		setResourcePercentage()
		resourcePositive()
		damageTakenSince()
		statPositive()
		stat()
		statusProperty()
		activeUniqueStatusEffectSummary()
		inflictedHitsSince()
		resourceMax()
		setStatusProperty()
		setPersistentEffects()
		resetAllResources()
		addEphemeralEffects()
		overConsumeResource()
		modifyResource()
		addEphemeralEffect()
		getPersistentEffects()
		resetResource()
		consumeResource()
		clearPersistentEffects()
		modifyResourcePercentage()
		clearEphemeralEffects()
		resourceNames()
		addPersistentEffect()
		resourceLocked()
		clearAllPersistentEffects()
		inflictedDamageSince()
		isResource()
		setResource()
		giveResource()
	}
	xpcall()
	getmetatable()
	utf8 = {
		len()
		codepoint()
		offset()
		codes()
		charpattern = "[
[22:48:54.144] [Warn] 	select()
	rawequal()
	rawset()
	string = {
		gmatch()
		char()
		sub()
		unpack()
		upper()
		lower()
		find()
		rep()
		dump()
		len()
		reverse()
		packsize()
		pack()
		byte()
		match()
		format()
		gsub()
	}
	require()
	pairs()
	next()
	jobject()
	math = {
		pi = 3.1415926535898
		rad()
		max()
		sqrt()
		random()
		floor()
		log()
		acos()
		fmod()
		mininteger = -9223372036854775808
		type()
		huge = inf
		randomseed()
		deg()
		exp()
		maxinteger = 9223372036854775807
		cos()
		min()
		tointeger()
		modf()
		asin()
		tan()
		atan()
		abs()
		sin()
		ult()
		ceil()
	}
	print()
	pcall()
	type()
	init()
	setmetatable()
	jresize()
	ic = {
		checkStack()
		itemAmount()
		stripColor()
		quickstack()
		itemConfig()
		amountEquipped()
		sortFunc()
		lock()
		giveBack()
		renameThis()
		sort()
		searchBox()
		sort_relative()
		clientVersion = 1
		renameButton()
		searchButton()
		getQuality()
	}
	player = {
		equippedTech()
		altHandItem()
		giveEssentialItem()
		consumeTaggedItem()
		setUniverseFlag()
		species()
		itemsWithTag()
		worldId()
		warp()
		completeMission()
		inventoryTags()
		upgradeShip()
		hasQuest()
		consumeItem()
		gender()
		primaryHandItem()
		essentialItem()
		equippedItem()
		setIntroComplete()
		playTime()
		enabledTechs()
		recordEvent()
		playCinematic()
		introComplete()
		hasCompletedQuest()
		makeTechAvailable()
		consumeItemWithParameter()
		startQuest()
		hasItemWithParameter()
		getItemWithParameter()
		lounge()
		enableTech()
		equipTech()
		enableMission()
		removeEssentialItem()
		isLounging()
		availableTechs()
		primaryHandItemTags()
		makeTechUnavailable()
		confirm()
		serverUuid()
		addBookmark()
		altHandItemTags()
		cleanupItems()
		radioMessage()
		setEquippedItem()
		ownShipWorldId()
		hasItem()
		canStartQuest()
		giveBlueprint()
		hasCountOfItem()
		shipUpgrades()
		giveItem()
	}
	config = {
		getParameter()
	}
	self = {
	}
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	world = {
		spawnItem()
		entityPosition()
		entityHealth()
		damageTileArea()
		day()
		placeMaterial()
		entityDescription()
		containerPutItemsAt()
		entityVelocity()
		damageTiles()
		entityHandItem()
		objectAt()
		setProperty()
		containerItemApply()
		containerClose()
		distance()
		findUniqueEntity()
		gravity()
		rectTileCollision()
		entitySpecies()
		platformerPathStart()
		containerOpen()
		containerTakeAll()
		breathable()
		npcType()
		containerAddItems()
		dayLength()
		loungeableOccupied()
		placeObject()
		isTileProtected()
		destroyLiquid()
		debugLine()
		spawnLiquid()
		entityCanDamage()
		containerItemsCanFit()
		xwrap()
		entityUniqueId()
		itemDropQuery()
		lightLevel()
		placeMod()
		spawnNpc()
		spawnTreasure()
		time()
		underground()
		spawnVehicle()
		spawnMonster()
		timeOfDay()
		findPlatformerPath()
		debugPoly()
		containerTakeNumItemsAt()
		isMonster()
		farmableStage()
		polyCollision()
		objectLineQuery()
		entityHasCountOfItem()
		entityHandItemDescriptor()
		tileIsOccupied()
		resolvePolyCollision()
		pointCollision()
		callScriptedEntity()
		collisionBlocksAlongLine()
		containerStackItems()
		objectSpaces()
		containerConsume()
		spawnStagehand()
		spawnProjectile()
		stagehandType()
		entityQuery()
		lineTileCollision()
		containerSwapItemsNoCombine()
		liquidAlongLine()
		playerQuery()
		objectQuery()
		entityGender()
		rectCollision()
		containerItemAt()
		polyContains()
		containerTakeAt()
		magnitude()
		mod()
		containerSwapItems()
		isNpc()
		lineCollision()
		getObjectParameter()
		debugPoint()
		pointTileCollision()
		containerItemsFitWhere()
		containerAvailable()
		getProperty()
		containerItems()
		threatLevel()
		entityType()
		sendEntityMessage()
		material()
		liquidAt()
		containerSize()
		debugText()
		monsterType()
		entityMoney()
		nearestTo()
		npcLineQuery()
		entityPortrait()
		entityName()
		entityDamageTeam()
		containerConsumeAt()
		entityAggressive()
		windLevel()
		monsterQuery()
		entityExists()
		loungeableQuery()
		npcQuery()
		entityLineQuery()
	}
	root = {
		createBiome()
		imageSpaces()
		createItem()
		loadVersionedJson()
		createTreasure()
		getMatchingTenants()
		monsterSkillParameter()
		getConfiguration()
		npcVariant()
		itemHasTag()
		imageSize()
		projectileGravityMultiplier()
		nonEmptyRegion()
		evalFunction2()
		projectileConfig()
		materialMiningSound()
		generateName()
		isTreasurePool()
		hasTech()
		behaviorModule()
		itemConfig()
		treeStemDirectory()
		evalFunction()
		techConfig()
		npcConfig()
		setConfigurationPath()
		getConfigurationPath()
		materialHealth()
		materialFootstepSound()
		monsterMovementSettings()
		materialPath()
		setConfiguration()
		monsterPortrait()
		itemType()
		questConfig()
		recipesForItem()
		assetJson()
		treeFoliageDirectory()
		techType()
		liquidStatusEffects()
		makeCurrentVersionedJson()
		itemTags()
		tenantConfig()
		npcPortrait()
	}
	jsize()
	status = {
		setResourceLocked()
		resourcePercentage()
		addPersistentEffects()
		removeEphemeralEffect()
		resource()
		setResourcePercentage()
		resourcePositive()
		damageTakenSince()
		statPositive()
		stat()
		statusProperty()
		activeUniqueStatusEffectSummary()
		inflictedHitsSince()
		resourceMax()
		setStatusProperty()
		setPersistentEffects()
		resetAllResources()
		addEphemeralEffects()
		overConsumeResource()
		modifyResource()
		addEphemeralEffect()
		getPersistentEffects()
		resetResource()
		consumeResource()
		clearPersistentEffects()
		modifyResourcePercentage()
		clearEphemeralEffects()
		resourceNames()
		addPersistentEffect()
		resourceLocked()
		clearAllPersistentEffects()
		inflictedDamageSince()
		isResource()
		setResource()
		giveResource()
	}
	xpcall()
	getmetatable()
	utf8 = {
		len()
		codepoint()
		offset()
		codes()
		charpattern = "[
[22:48:56.227] [Warn] 	select()
	rawequal()
	rawset()
	string = {
		gmatch()
		char()
		sub()
		unpack()
		upper()
		lower()
		find()
		rep()
		dump()
		len()
		reverse()
		packsize()
		pack()
		byte()
		match()
		format()
		gsub()
	}
	require()
	pairs()
	next()
	jobject()
	math = {
		pi = 3.1415926535898
		rad()
		max()
		sqrt()
		random()
		floor()
		log()
		acos()
		fmod()
		mininteger = -9223372036854775808
		type()
		huge = inf
		randomseed()
		deg()
		exp()
		maxinteger = 9223372036854775807
		cos()
		min()
		tointeger()
		modf()
		asin()
		tan()
		atan()
		abs()
		sin()
		ult()
		ceil()
	}
	print()
	pcall()
	type()
	init()
	setmetatable()
	jresize()
	ic = {
		checkStack()
		itemAmount()
		stripColor()
		quickstack()
		itemConfig()
		amountEquipped()
		sortFunc()
		lock()
		giveBack()
		renameThis()
		sort()
		searchBox()
		sort_relative()
		clientVersion = 1
		renameButton()
		searchButton()
		getQuality()
	}
	player = {
		equippedTech()
		altHandItem()
		giveEssentialItem()
		consumeTaggedItem()
		setUniverseFlag()
		species()
		itemsWithTag()
		worldId()
		warp()
		completeMission()
		inventoryTags()
		upgradeShip()
		hasQuest()
		consumeItem()
		gender()
		primaryHandItem()
		essentialItem()
		equippedItem()
		setIntroComplete()
		playTime()
		enabledTechs()
		recordEvent()
		playCinematic()
		introComplete()
		hasCompletedQuest()
		makeTechAvailable()
		consumeItemWithParameter()
		startQuest()
		hasItemWithParameter()
		getItemWithParameter()
		lounge()
		enableTech()
		equipTech()
		enableMission()
		removeEssentialItem()
		isLounging()
		availableTechs()
		primaryHandItemTags()
		makeTechUnavailable()
		confirm()
		serverUuid()
		addBookmark()
		altHandItemTags()
		cleanupItems()
		radioMessage()
		setEquippedItem()
		ownShipWorldId()
		hasItem()
		canStartQuest()
		giveBlueprint()
		hasCountOfItem()
		shipUpgrades()
		giveItem()
	}
	config = {
		getParameter()
	}
	self = {
	}
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	world = {
		spawnItem()
		entityPosition()
		entityHealth()
		damageTileArea()
		day()
		placeMaterial()
		entityDescription()
		containerPutItemsAt()
		entityVelocity()
		damageTiles()
		entityHandItem()
		objectAt()
		setProperty()
		containerItemApply()
		containerClose()
		distance()
		findUniqueEntity()
		gravity()
		rectTileCollision()
		entitySpecies()
		platformerPathStart()
		containerOpen()
		containerTakeAll()
		breathable()
		npcType()
		containerAddItems()
		dayLength()
		loungeableOccupied()
		placeObject()
		isTileProtected()
		destroyLiquid()
		debugLine()
		spawnLiquid()
		entityCanDamage()
		containerItemsCanFit()
		xwrap()
		entityUniqueId()
		itemDropQuery()
		lightLevel()
		placeMod()
		spawnNpc()
		spawnTreasure()
		time()
		underground()
		spawnVehicle()
		spawnMonster()
		timeOfDay()
		findPlatformerPath()
		debugPoly()
		containerTakeNumItemsAt()
		isMonster()
		farmableStage()
		polyCollision()
		objectLineQuery()
		entityHasCountOfItem()
		entityHandItemDescriptor()
		tileIsOccupied()
		resolvePolyCollision()
		pointCollision()
		callScriptedEntity()
		collisionBlocksAlongLine()
		containerStackItems()
		objectSpaces()
		containerConsume()
		spawnStagehand()
		spawnProjectile()
		stagehandType()
		entityQuery()
		lineTileCollision()
		containerSwapItemsNoCombine()
		liquidAlongLine()
		playerQuery()
		objectQuery()
		entityGender()
		rectCollision()
		containerItemAt()
		polyContains()
		containerTakeAt()
		magnitude()
		mod()
		containerSwapItems()
		isNpc()
		lineCollision()
		getObjectParameter()
		debugPoint()
		pointTileCollision()
		containerItemsFitWhere()
		containerAvailable()
		getProperty()
		containerItems()
		threatLevel()
		entityType()
		sendEntityMessage()
		material()
		liquidAt()
		containerSize()
		debugText()
		monsterType()
		entityMoney()
		nearestTo()
		npcLineQuery()
		entityPortrait()
		entityName()
		entityDamageTeam()
		containerConsumeAt()
		entityAggressive()
		windLevel()
		monsterQuery()
		entityExists()
		loungeableQuery()
		npcQuery()
		entityLineQuery()
	}
	root = {
		createBiome()
		imageSpaces()
		createItem()
		loadVersionedJson()
		createTreasure()
		getMatchingTenants()
		monsterSkillParameter()
		getConfiguration()
		npcVariant()
		itemHasTag()
		imageSize()
		projectileGravityMultiplier()
		nonEmptyRegion()
		evalFunction2()
		projectileConfig()
		materialMiningSound()
		generateName()
		isTreasurePool()
		hasTech()
		behaviorModule()
		itemConfig()
		treeStemDirectory()
		evalFunction()
		techConfig()
		npcConfig()
		setConfigurationPath()
		getConfigurationPath()
		materialHealth()
		materialFootstepSound()
		monsterMovementSettings()
		materialPath()
		setConfiguration()
		monsterPortrait()
		itemType()
		questConfig()
		recipesForItem()
		assetJson()
		treeFoliageDirectory()
		techType()
		liquidStatusEffects()
		makeCurrentVersionedJson()
		itemTags()
		tenantConfig()
		npcPortrait()
	}
	jsize()
	status = {
		setResourceLocked()
		resourcePercentage()
		addPersistentEffects()
		removeEphemeralEffect()
		resource()
		setResourcePercentage()
		resourcePositive()
		damageTakenSince()
		statPositive()
		stat()
		statusProperty()
		activeUniqueStatusEffectSummary()
		inflictedHitsSince()
		resourceMax()
		setStatusProperty()
		setPersistentEffects()
		resetAllResources()
		addEphemeralEffects()
		overConsumeResource()
		modifyResource()
		addEphemeralEffect()
		getPersistentEffects()
		resetResource()
		consumeResource()
		clearPersistentEffects()
		modifyResourcePercentage()
		clearEphemeralEffects()
		resourceNames()
		addPersistentEffect()
		resourceLocked()
		clearAllPersistentEffects()
		inflictedDamageSince()
		isResource()
		setResource()
		giveResource()
	}
	xpcall()
	getmetatable()
	utf8 = {
		len()
		codepoint()
		offset()
		codes()
		charpattern = "[
[22:49:01.986] [Warn] 	select()
	rawequal()
	rawset()
	string = {
		gmatch()
		char()
		sub()
		unpack()
		upper()
		lower()
		find()
		rep()
		dump()
		len()
		reverse()
		packsize()
		pack()
		byte()
		match()
		format()
		gsub()
	}
	require()
	pairs()
	next()
	jobject()
	math = {
		pi = 3.1415926535898
		rad()
		max()
		sqrt()
		random()
		floor()
		log()
		acos()
		fmod()
		mininteger = -9223372036854775808
		type()
		huge = inf
		randomseed()
		deg()
		exp()
		maxinteger = 9223372036854775807
		cos()
		min()
		tointeger()
		modf()
		asin()
		tan()
		atan()
		abs()
		sin()
		ult()
		ceil()
	}
	print()
	pcall()
	type()
	init()
	setmetatable()
	jresize()
	ic = {
		checkStack()
		itemAmount()
		stripColor()
		quickstack()
		itemConfig()
		amountEquipped()
		sortFunc()
		lock()
		giveBack()
		renameThis()
		sort()
		searchBox()
		sort_relative()
		clientVersion = 1
		renameButton()
		searchButton()
		getQuality()
	}
	player = {
		equippedTech()
		altHandItem()
		giveEssentialItem()
		consumeTaggedItem()
		setUniverseFlag()
		species()
		itemsWithTag()
		worldId()
		warp()
		completeMission()
		inventoryTags()
		upgradeShip()
		hasQuest()
		consumeItem()
		gender()
		primaryHandItem()
		essentialItem()
		equippedItem()
		setIntroComplete()
		playTime()
		enabledTechs()
		recordEvent()
		playCinematic()
		introComplete()
		hasCompletedQuest()
		makeTechAvailable()
		consumeItemWithParameter()
		startQuest()
		hasItemWithParameter()
		getItemWithParameter()
		lounge()
		enableTech()
		equipTech()
		enableMission()
		removeEssentialItem()
		isLounging()
		availableTechs()
		primaryHandItemTags()
		makeTechUnavailable()
		confirm()
		serverUuid()
		addBookmark()
		altHandItemTags()
		cleanupItems()
		radioMessage()
		setEquippedItem()
		ownShipWorldId()
		hasItem()
		canStartQuest()
		giveBlueprint()
		hasCountOfItem()
		shipUpgrades()
		giveItem()
	}
	config = {
		getParameter()
	}
	self = {
	}
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	world = {
		spawnItem()
		entityPosition()
		entityHealth()
		damageTileArea()
		day()
		placeMaterial()
		entityDescription()
		containerPutItemsAt()
		entityVelocity()
		damageTiles()
		entityHandItem()
		objectAt()
		setProperty()
		containerItemApply()
		containerClose()
		distance()
		findUniqueEntity()
		gravity()
		rectTileCollision()
		entitySpecies()
		platformerPathStart()
		containerOpen()
		containerTakeAll()
		breathable()
		npcType()
		containerAddItems()
		dayLength()
		loungeableOccupied()
		placeObject()
		isTileProtected()
		destroyLiquid()
		debugLine()
		spawnLiquid()
		entityCanDamage()
		containerItemsCanFit()
		xwrap()
		entityUniqueId()
		itemDropQuery()
		lightLevel()
		placeMod()
		spawnNpc()
		spawnTreasure()
		time()
		underground()
		spawnVehicle()
		spawnMonster()
		timeOfDay()
		findPlatformerPath()
		debugPoly()
		containerTakeNumItemsAt()
		isMonster()
		farmableStage()
		polyCollision()
		objectLineQuery()
		entityHasCountOfItem()
		entityHandItemDescriptor()
		tileIsOccupied()
		resolvePolyCollision()
		pointCollision()
		callScriptedEntity()
		collisionBlocksAlongLine()
		containerStackItems()
		objectSpaces()
		containerConsume()
		spawnStagehand()
		spawnProjectile()
		stagehandType()
		entityQuery()
		lineTileCollision()
		containerSwapItemsNoCombine()
		liquidAlongLine()
		playerQuery()
		objectQuery()
		entityGender()
		rectCollision()
		containerItemAt()
		polyContains()
		containerTakeAt()
		magnitude()
		mod()
		containerSwapItems()
		isNpc()
		lineCollision()
		getObjectParameter()
		debugPoint()
		pointTileCollision()
		containerItemsFitWhere()
		containerAvailable()
		getProperty()
		containerItems()
		threatLevel()
		entityType()
		sendEntityMessage()
		material()
		liquidAt()
		containerSize()
		debugText()
		monsterType()
		entityMoney()
		nearestTo()
		npcLineQuery()
		entityPortrait()
		entityName()
		entityDamageTeam()
		containerConsumeAt()
		entityAggressive()
		windLevel()
		monsterQuery()
		entityExists()
		loungeableQuery()
		npcQuery()
		entityLineQuery()
	}
	root = {
		createBiome()
		imageSpaces()
		createItem()
		loadVersionedJson()
		createTreasure()
		getMatchingTenants()
		monsterSkillParameter()
		getConfiguration()
		npcVariant()
		itemHasTag()
		imageSize()
		projectileGravityMultiplier()
		nonEmptyRegion()
		evalFunction2()
		projectileConfig()
		materialMiningSound()
		generateName()
		isTreasurePool()
		hasTech()
		behaviorModule()
		itemConfig()
		treeStemDirectory()
		evalFunction()
		techConfig()
		npcConfig()
		setConfigurationPath()
		getConfigurationPath()
		materialHealth()
		materialFootstepSound()
		monsterMovementSettings()
		materialPath()
		setConfiguration()
		monsterPortrait()
		itemType()
		questConfig()
		recipesForItem()
		assetJson()
		treeFoliageDirectory()
		techType()
		liquidStatusEffects()
		makeCurrentVersionedJson()
		itemTags()
		tenantConfig()
		npcPortrait()
	}
	jsize()
	status = {
		setResourceLocked()
		resourcePercentage()
		addPersistentEffects()
		removeEphemeralEffect()
		resource()
		setResourcePercentage()
		resourcePositive()
		damageTakenSince()
		statPositive()
		stat()
		statusProperty()
		activeUniqueStatusEffectSummary()
		inflictedHitsSince()
		resourceMax()
		setStatusProperty()
		setPersistentEffects()
		resetAllResources()
		addEphemeralEffects()
		overConsumeResource()
		modifyResource()
		addEphemeralEffect()
		getPersistentEffects()
		resetResource()
		consumeResource()
		clearPersistentEffects()
		modifyResourcePercentage()
		clearEphemeralEffects()
		resourceNames()
		addPersistentEffect()
		resourceLocked()
		clearAllPersistentEffects()
		inflictedDamageSince()
		isResource()
		setResource()
		giveResource()
	}
	xpcall()
	getmetatable()
	utf8 = {
		len()
		codepoint()
		offset()
		codes()
		charpattern = "[
[22:51:02.282] [Warn] 	select()
	rawequal()
	rawset()
	string = {
		gmatch()
		char()
		sub()
		unpack()
		upper()
		lower()
		find()
		rep()
		dump()
		len()
		reverse()
		packsize()
		pack()
		byte()
		match()
		format()
		gsub()
	}
	require()
	pairs()
	next()
	jobject()
	math = {
		pi = 3.1415926535898
		rad()
		max()
		sqrt()
		random()
		floor()
		log()
		acos()
		fmod()
		mininteger = -9223372036854775808
		type()
		huge = inf
		randomseed()
		deg()
		exp()
		maxinteger = 9223372036854775807
		cos()
		min()
		tointeger()
		modf()
		asin()
		tan()
		atan()
		abs()
		sin()
		ult()
		ceil()
	}
	print()
	pcall()
	type()
	init()
	setmetatable()
	jresize()
	ic = {
		checkStack()
		itemAmount()
		stripColor()
		quickstack()
		itemConfig()
		amountEquipped()
		sortFunc()
		lock()
		giveBack()
		renameThis()
		sort()
		searchBox()
		sort_relative()
		clientVersion = 1
		renameButton()
		searchButton()
		getQuality()
	}
	player = {
		equippedTech()
		altHandItem()
		giveEssentialItem()
		consumeTaggedItem()
		setUniverseFlag()
		species()
		itemsWithTag()
		worldId()
		warp()
		completeMission()
		inventoryTags()
		upgradeShip()
		hasQuest()
		consumeItem()
		gender()
		primaryHandItem()
		essentialItem()
		equippedItem()
		setIntroComplete()
		playTime()
		enabledTechs()
		recordEvent()
		playCinematic()
		introComplete()
		hasCompletedQuest()
		makeTechAvailable()
		consumeItemWithParameter()
		startQuest()
		hasItemWithParameter()
		getItemWithParameter()
		lounge()
		enableTech()
		equipTech()
		enableMission()
		removeEssentialItem()
		isLounging()
		availableTechs()
		primaryHandItemTags()
		makeTechUnavailable()
		confirm()
		serverUuid()
		addBookmark()
		altHandItemTags()
		cleanupItems()
		radioMessage()
		setEquippedItem()
		ownShipWorldId()
		hasItem()
		canStartQuest()
		giveBlueprint()
		hasCountOfItem()
		shipUpgrades()
		giveItem()
	}
	config = {
		getParameter()
	}
	self = {
	}
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	world = {
		spawnItem()
		entityPosition()
		entityHealth()
		damageTileArea()
		day()
		placeMaterial()
		entityDescription()
		containerPutItemsAt()
		entityVelocity()
		damageTiles()
		entityHandItem()
		objectAt()
		setProperty()
		containerItemApply()
		containerClose()
		distance()
		findUniqueEntity()
		gravity()
		rectTileCollision()
		entitySpecies()
		platformerPathStart()
		containerOpen()
		containerTakeAll()
		breathable()
		npcType()
		containerAddItems()
		dayLength()
		loungeableOccupied()
		placeObject()
		isTileProtected()
		destroyLiquid()
		debugLine()
		spawnLiquid()
		entityCanDamage()
		containerItemsCanFit()
		xwrap()
		entityUniqueId()
		itemDropQuery()
		lightLevel()
		placeMod()
		spawnNpc()
		spawnTreasure()
		time()
		underground()
		spawnVehicle()
		spawnMonster()
		timeOfDay()
		findPlatformerPath()
		debugPoly()
		containerTakeNumItemsAt()
		isMonster()
		farmableStage()
		polyCollision()
		objectLineQuery()
		entityHasCountOfItem()
		entityHandItemDescriptor()
		tileIsOccupied()
		resolvePolyCollision()
		pointCollision()
		callScriptedEntity()
		collisionBlocksAlongLine()
		containerStackItems()
		objectSpaces()
		containerConsume()
		spawnStagehand()
		spawnProjectile()
		stagehandType()
		entityQuery()
		lineTileCollision()
		containerSwapItemsNoCombine()
		liquidAlongLine()
		playerQuery()
		objectQuery()
		entityGender()
		rectCollision()
		containerItemAt()
		polyContains()
		containerTakeAt()
		magnitude()
		mod()
		containerSwapItems()
		isNpc()
		lineCollision()
		getObjectParameter()
		debugPoint()
		pointTileCollision()
		containerItemsFitWhere()
		containerAvailable()
		getProperty()
		containerItems()
		threatLevel()
		entityType()
		sendEntityMessage()
		material()
		liquidAt()
		containerSize()
		debugText()
		monsterType()
		entityMoney()
		nearestTo()
		npcLineQuery()
		entityPortrait()
		entityName()
		entityDamageTeam()
		containerConsumeAt()
		entityAggressive()
		windLevel()
		monsterQuery()
		entityExists()
		loungeableQuery()
		npcQuery()
		entityLineQuery()
	}
	root = {
		createBiome()
		imageSpaces()
		createItem()
		loadVersionedJson()
		createTreasure()
		getMatchingTenants()
		monsterSkillParameter()
		getConfiguration()
		npcVariant()
		itemHasTag()
		imageSize()
		projectileGravityMultiplier()
		nonEmptyRegion()
		evalFunction2()
		projectileConfig()
		materialMiningSound()
		generateName()
		isTreasurePool()
		hasTech()
		behaviorModule()
		itemConfig()
		treeStemDirectory()
		evalFunction()
		techConfig()
		npcConfig()
		setConfigurationPath()
		getConfigurationPath()
		materialHealth()
		materialFootstepSound()
		monsterMovementSettings()
		materialPath()
		setConfiguration()
		monsterPortrait()
		itemType()
		questConfig()
		recipesForItem()
		assetJson()
		treeFoliageDirectory()
		techType()
		liquidStatusEffects()
		makeCurrentVersionedJson()
		itemTags()
		tenantConfig()
		npcPortrait()
	}
	jsize()
	status = {
		setResourceLocked()
		resourcePercentage()
		addPersistentEffects()
		removeEphemeralEffect()
		resource()
		setResourcePercentage()
		resourcePositive()
		damageTakenSince()
		statPositive()
		stat()
		statusProperty()
		activeUniqueStatusEffectSummary()
		inflictedHitsSince()
		resourceMax()
		setStatusProperty()
		setPersistentEffects()
		resetAllResources()
		addEphemeralEffects()
		overConsumeResource()
		modifyResource()
		addEphemeralEffect()
		getPersistentEffects()
		resetResource()
		consumeResource()
		clearPersistentEffects()
		modifyResourcePercentage()
		clearEphemeralEffects()
		resourceNames()
		addPersistentEffect()
		resourceLocked()
		clearAllPersistentEffects()
		inflictedDamageSince()
		isResource()
		setResource()
		giveResource()
	}
	xpcall()
	getmetatable()
	utf8 = {
		len()
		codepoint()
		offset()
		codes()
		charpattern = "[
[22:51:03.652] [Warn] 	select()
	rawequal()
	rawset()
	string = {
		gmatch()
		char()
		sub()
		unpack()
		upper()
		lower()
		find()
		rep()
		dump()
		len()
		reverse()
		packsize()
		pack()
		byte()
		match()
		format()
		gsub()
	}
	require()
	pairs()
	next()
	jobject()
	math = {
		pi = 3.1415926535898
		rad()
		max()
		sqrt()
		random()
		floor()
		log()
		acos()
		fmod()
		mininteger = -9223372036854775808
		type()
		huge = inf
		randomseed()
		deg()
		exp()
		maxinteger = 9223372036854775807
		cos()
		min()
		tointeger()
		modf()
		asin()
		tan()
		atan()
		abs()
		sin()
		ult()
		ceil()
	}
	print()
	pcall()
	type()
	init()
	setmetatable()
	jresize()
	ic = {
		checkStack()
		itemAmount()
		stripColor()
		quickstack()
		itemConfig()
		amountEquipped()
		sortFunc()
		lock()
		giveBack()
		renameThis()
		sort()
		searchBox()
		sort_relative()
		clientVersion = 1
		renameButton()
		searchButton()
		getQuality()
	}
	player = {
		equippedTech()
		altHandItem()
		giveEssentialItem()
		consumeTaggedItem()
		setUniverseFlag()
		species()
		itemsWithTag()
		worldId()
		warp()
		completeMission()
		inventoryTags()
		upgradeShip()
		hasQuest()
		consumeItem()
		gender()
		primaryHandItem()
		essentialItem()
		equippedItem()
		setIntroComplete()
		playTime()
		enabledTechs()
		recordEvent()
		playCinematic()
		introComplete()
		hasCompletedQuest()
		makeTechAvailable()
		consumeItemWithParameter()
		startQuest()
		hasItemWithParameter()
		getItemWithParameter()
		lounge()
		enableTech()
		equipTech()
		enableMission()
		removeEssentialItem()
		isLounging()
		availableTechs()
		primaryHandItemTags()
		makeTechUnavailable()
		confirm()
		serverUuid()
		addBookmark()
		altHandItemTags()
		cleanupItems()
		radioMessage()
		setEquippedItem()
		ownShipWorldId()
		hasItem()
		canStartQuest()
		giveBlueprint()
		hasCountOfItem()
		shipUpgrades()
		giveItem()
	}
	config = {
		getParameter()
	}
	self = {
	}
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	world = {
		spawnItem()
		entityPosition()
		entityHealth()
		damageTileArea()
		day()
		placeMaterial()
		entityDescription()
		containerPutItemsAt()
		entityVelocity()
		damageTiles()
		entityHandItem()
		objectAt()
		setProperty()
		containerItemApply()
		containerClose()
		distance()
		findUniqueEntity()
		gravity()
		rectTileCollision()
		entitySpecies()
		platformerPathStart()
		containerOpen()
		containerTakeAll()
		breathable()
		npcType()
		containerAddItems()
		dayLength()
		loungeableOccupied()
		placeObject()
		isTileProtected()
		destroyLiquid()
		debugLine()
		spawnLiquid()
		entityCanDamage()
		containerItemsCanFit()
		xwrap()
		entityUniqueId()
		itemDropQuery()
		lightLevel()
		placeMod()
		spawnNpc()
		spawnTreasure()
		time()
		underground()
		spawnVehicle()
		spawnMonster()
		timeOfDay()
		findPlatformerPath()
		debugPoly()
		containerTakeNumItemsAt()
		isMonster()
		farmableStage()
		polyCollision()
		objectLineQuery()
		entityHasCountOfItem()
		entityHandItemDescriptor()
		tileIsOccupied()
		resolvePolyCollision()
		pointCollision()
		callScriptedEntity()
		collisionBlocksAlongLine()
		containerStackItems()
		objectSpaces()
		containerConsume()
		spawnStagehand()
		spawnProjectile()
		stagehandType()
		entityQuery()
		lineTileCollision()
		containerSwapItemsNoCombine()
		liquidAlongLine()
		playerQuery()
		objectQuery()
		entityGender()
		rectCollision()
		containerItemAt()
		polyContains()
		containerTakeAt()
		magnitude()
		mod()
		containerSwapItems()
		isNpc()
		lineCollision()
		getObjectParameter()
		debugPoint()
		pointTileCollision()
		containerItemsFitWhere()
		containerAvailable()
		getProperty()
		containerItems()
		threatLevel()
		entityType()
		sendEntityMessage()
		material()
		liquidAt()
		containerSize()
		debugText()
		monsterType()
		entityMoney()
		nearestTo()
		npcLineQuery()
		entityPortrait()
		entityName()
		entityDamageTeam()
		containerConsumeAt()
		entityAggressive()
		windLevel()
		monsterQuery()
		entityExists()
		loungeableQuery()
		npcQuery()
		entityLineQuery()
	}
	root = {
		createBiome()
		imageSpaces()
		createItem()
		loadVersionedJson()
		createTreasure()
		getMatchingTenants()
		monsterSkillParameter()
		getConfiguration()
		npcVariant()
		itemHasTag()
		imageSize()
		projectileGravityMultiplier()
		nonEmptyRegion()
		evalFunction2()
		projectileConfig()
		materialMiningSound()
		generateName()
		isTreasurePool()
		hasTech()
		behaviorModule()
		itemConfig()
		treeStemDirectory()
		evalFunction()
		techConfig()
		npcConfig()
		setConfigurationPath()
		getConfigurationPath()
		materialHealth()
		materialFootstepSound()
		monsterMovementSettings()
		materialPath()
		setConfiguration()
		monsterPortrait()
		itemType()
		questConfig()
		recipesForItem()
		assetJson()
		treeFoliageDirectory()
		techType()
		liquidStatusEffects()
		makeCurrentVersionedJson()
		itemTags()
		tenantConfig()
		npcPortrait()
	}
	jsize()
	status = {
		setResourceLocked()
		resourcePercentage()
		addPersistentEffects()
		removeEphemeralEffect()
		resource()
		setResourcePercentage()
		resourcePositive()
		damageTakenSince()
		statPositive()
		stat()
		statusProperty()
		activeUniqueStatusEffectSummary()
		inflictedHitsSince()
		resourceMax()
		setStatusProperty()
		setPersistentEffects()
		resetAllResources()
		addEphemeralEffects()
		overConsumeResource()
		modifyResource()
		addEphemeralEffect()
		getPersistentEffects()
		resetResource()
		consumeResource()
		clearPersistentEffects()
		modifyResourcePercentage()
		clearEphemeralEffects()
		resourceNames()
		addPersistentEffect()
		resourceLocked()
		clearAllPersistentEffects()
		inflictedDamageSince()
		isResource()
		setResource()
		giveResource()
	}
	xpcall()
	getmetatable()
	utf8 = {
		len()
		codepoint()
		offset()
		codes()
		charpattern = "[
[22:51:04.862] [Warn] 	select()
	rawequal()
	rawset()
	string = {
		gmatch()
		char()
		sub()
		unpack()
		upper()
		lower()
		find()
		rep()
		dump()
		len()
		reverse()
		packsize()
		pack()
		byte()
		match()
		format()
		gsub()
	}
	require()
	pairs()
	next()
	jobject()
	math = {
		pi = 3.1415926535898
		rad()
		max()
		sqrt()
		random()
		floor()
		log()
		acos()
		fmod()
		mininteger = -9223372036854775808
		type()
		huge = inf
		randomseed()
		deg()
		exp()
		maxinteger = 9223372036854775807
		cos()
		min()
		tointeger()
		modf()
		asin()
		tan()
		atan()
		abs()
		sin()
		ult()
		ceil()
	}
	print()
	pcall()
	type()
	init()
	setmetatable()
	jresize()
	ic = {
		checkStack()
		itemAmount()
		stripColor()
		quickstack()
		itemConfig()
		amountEquipped()
		sortFunc()
		lock()
		giveBack()
		renameThis()
		sort()
		searchBox()
		sort_relative()
		clientVersion = 1
		renameButton()
		searchButton()
		getQuality()
	}
	player = {
		equippedTech()
		altHandItem()
		giveEssentialItem()
		consumeTaggedItem()
		setUniverseFlag()
		species()
		itemsWithTag()
		worldId()
		warp()
		completeMission()
		inventoryTags()
		upgradeShip()
		hasQuest()
		consumeItem()
		gender()
		primaryHandItem()
		essentialItem()
		equippedItem()
		setIntroComplete()
		playTime()
		enabledTechs()
		recordEvent()
		playCinematic()
		introComplete()
		hasCompletedQuest()
		makeTechAvailable()
		consumeItemWithParameter()
		startQuest()
		hasItemWithParameter()
		getItemWithParameter()
		lounge()
		enableTech()
		equipTech()
		enableMission()
		removeEssentialItem()
		isLounging()
		availableTechs()
		primaryHandItemTags()
		makeTechUnavailable()
		confirm()
		serverUuid()
		addBookmark()
		altHandItemTags()
		cleanupItems()
		radioMessage()
		setEquippedItem()
		ownShipWorldId()
		hasItem()
		canStartQuest()
		giveBlueprint()
		hasCountOfItem()
		shipUpgrades()
		giveItem()
	}
	config = {
		getParameter()
	}
	self = {
	}
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	world = {
		spawnItem()
		entityPosition()
		entityHealth()
		damageTileArea()
		day()
		placeMaterial()
		entityDescription()
		containerPutItemsAt()
		entityVelocity()
		damageTiles()
		entityHandItem()
		objectAt()
		setProperty()
		containerItemApply()
		containerClose()
		distance()
		findUniqueEntity()
		gravity()
		rectTileCollision()
		entitySpecies()
		platformerPathStart()
		containerOpen()
		containerTakeAll()
		breathable()
		npcType()
		containerAddItems()
		dayLength()
		loungeableOccupied()
		placeObject()
		isTileProtected()
		destroyLiquid()
		debugLine()
		spawnLiquid()
		entityCanDamage()
		containerItemsCanFit()
		xwrap()
		entityUniqueId()
		itemDropQuery()
		lightLevel()
		placeMod()
		spawnNpc()
		spawnTreasure()
		time()
		underground()
		spawnVehicle()
		spawnMonster()
		timeOfDay()
		findPlatformerPath()
		debugPoly()
		containerTakeNumItemsAt()
		isMonster()
		farmableStage()
		polyCollision()
		objectLineQuery()
		entityHasCountOfItem()
		entityHandItemDescriptor()
		tileIsOccupied()
		resolvePolyCollision()
		pointCollision()
		callScriptedEntity()
		collisionBlocksAlongLine()
		containerStackItems()
		objectSpaces()
		containerConsume()
		spawnStagehand()
		spawnProjectile()
		stagehandType()
		entityQuery()
		lineTileCollision()
		containerSwapItemsNoCombine()
		liquidAlongLine()
		playerQuery()
		objectQuery()
		entityGender()
		rectCollision()
		containerItemAt()
		polyContains()
		containerTakeAt()
		magnitude()
		mod()
		containerSwapItems()
		isNpc()
		lineCollision()
		getObjectParameter()
		debugPoint()
		pointTileCollision()
		containerItemsFitWhere()
		containerAvailable()
		getProperty()
		containerItems()
		threatLevel()
		entityType()
		sendEntityMessage()
		material()
		liquidAt()
		containerSize()
		debugText()
		monsterType()
		entityMoney()
		nearestTo()
		npcLineQuery()
		entityPortrait()
		entityName()
		entityDamageTeam()
		containerConsumeAt()
		entityAggressive()
		windLevel()
		monsterQuery()
		entityExists()
		loungeableQuery()
		npcQuery()
		entityLineQuery()
	}
	root = {
		createBiome()
		imageSpaces()
		createItem()
		loadVersionedJson()
		createTreasure()
		getMatchingTenants()
		monsterSkillParameter()
		getConfiguration()
		npcVariant()
		itemHasTag()
		imageSize()
		projectileGravityMultiplier()
		nonEmptyRegion()
		evalFunction2()
		projectileConfig()
		materialMiningSound()
		generateName()
		isTreasurePool()
		hasTech()
		behaviorModule()
		itemConfig()
		treeStemDirectory()
		evalFunction()
		techConfig()
		npcConfig()
		setConfigurationPath()
		getConfigurationPath()
		materialHealth()
		materialFootstepSound()
		monsterMovementSettings()
		materialPath()
		setConfiguration()
		monsterPortrait()
		itemType()
		questConfig()
		recipesForItem()
		assetJson()
		treeFoliageDirectory()
		techType()
		liquidStatusEffects()
		makeCurrentVersionedJson()
		itemTags()
		tenantConfig()
		npcPortrait()
	}
	jsize()
	status = {
		setResourceLocked()
		resourcePercentage()
		addPersistentEffects()
		removeEphemeralEffect()
		resource()
		setResourcePercentage()
		resourcePositive()
		damageTakenSince()
		statPositive()
		stat()
		statusProperty()
		activeUniqueStatusEffectSummary()
		inflictedHitsSince()
		resourceMax()
		setStatusProperty()
		setPersistentEffects()
		resetAllResources()
		addEphemeralEffects()
		overConsumeResource()
		modifyResource()
		addEphemeralEffect()
		getPersistentEffects()
		resetResource()
		consumeResource()
		clearPersistentEffects()
		modifyResourcePercentage()
		clearEphemeralEffects()
		resourceNames()
		addPersistentEffect()
		resourceLocked()
		clearAllPersistentEffects()
		inflictedDamageSince()
		isResource()
		setResource()
		giveResource()
	}
	xpcall()
	getmetatable()
	utf8 = {
		len()
		codepoint()
		offset()
		codes()
		charpattern = "[
[22:51:09.912] [Warn] 	select()
	rawequal()
	rawset()
	string = {
		gmatch()
		char()
		sub()
		unpack()
		upper()
		lower()
		find()
		rep()
		dump()
		len()
		reverse()
		packsize()
		pack()
		byte()
		match()
		format()
		gsub()
	}
	require()
	pairs()
	next()
	jobject()
	math = {
		pi = 3.1415926535898
		rad()
		max()
		sqrt()
		random()
		floor()
		log()
		acos()
		fmod()
		mininteger = -9223372036854775808
		type()
		huge = inf
		randomseed()
		deg()
		exp()
		maxinteger = 9223372036854775807
		cos()
		min()
		tointeger()
		modf()
		asin()
		tan()
		atan()
		abs()
		sin()
		ult()
		ceil()
	}
	print()
	pcall()
	type()
	init()
	setmetatable()
	jresize()
	ic = {
		checkStack()
		itemAmount()
		stripColor()
		quickstack()
		itemConfig()
		amountEquipped()
		sortFunc()
		lock()
		giveBack()
		renameThis()
		sort()
		searchBox()
		sort_relative()
		clientVersion = 1
		renameButton()
		searchButton()
		getQuality()
	}
	player = {
		equippedTech()
		altHandItem()
		giveEssentialItem()
		consumeTaggedItem()
		setUniverseFlag()
		species()
		itemsWithTag()
		worldId()
		warp()
		completeMission()
		inventoryTags()
		upgradeShip()
		hasQuest()
		consumeItem()
		gender()
		primaryHandItem()
		essentialItem()
		equippedItem()
		setIntroComplete()
		playTime()
		enabledTechs()
		recordEvent()
		playCinematic()
		introComplete()
		hasCompletedQuest()
		makeTechAvailable()
		consumeItemWithParameter()
		startQuest()
		hasItemWithParameter()
		getItemWithParameter()
		lounge()
		enableTech()
		equipTech()
		enableMission()
		removeEssentialItem()
		isLounging()
		availableTechs()
		primaryHandItemTags()
		makeTechUnavailable()
		confirm()
		serverUuid()
		addBookmark()
		altHandItemTags()
		cleanupItems()
		radioMessage()
		setEquippedItem()
		ownShipWorldId()
		hasItem()
		canStartQuest()
		giveBlueprint()
		hasCountOfItem()
		shipUpgrades()
		giveItem()
	}
	config = {
		getParameter()
	}
	self = {
	}
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	world = {
		spawnItem()
		entityPosition()
		entityHealth()
		damageTileArea()
		day()
		placeMaterial()
		entityDescription()
		containerPutItemsAt()
		entityVelocity()
		damageTiles()
		entityHandItem()
		objectAt()
		setProperty()
		containerItemApply()
		containerClose()
		distance()
		findUniqueEntity()
		gravity()
		rectTileCollision()
		entitySpecies()
		platformerPathStart()
		containerOpen()
		containerTakeAll()
		breathable()
		npcType()
		containerAddItems()
		dayLength()
		loungeableOccupied()
		placeObject()
		isTileProtected()
		destroyLiquid()
		debugLine()
		spawnLiquid()
		entityCanDamage()
		containerItemsCanFit()
		xwrap()
		entityUniqueId()
		itemDropQuery()
		lightLevel()
		placeMod()
		spawnNpc()
		spawnTreasure()
		time()
		underground()
		spawnVehicle()
		spawnMonster()
		timeOfDay()
		findPlatformerPath()
		debugPoly()
		containerTakeNumItemsAt()
		isMonster()
		farmableStage()
		polyCollision()
		objectLineQuery()
		entityHasCountOfItem()
		entityHandItemDescriptor()
		tileIsOccupied()
		resolvePolyCollision()
		pointCollision()
		callScriptedEntity()
		collisionBlocksAlongLine()
		containerStackItems()
		objectSpaces()
		containerConsume()
		spawnStagehand()
		spawnProjectile()
		stagehandType()
		entityQuery()
		lineTileCollision()
		containerSwapItemsNoCombine()
		liquidAlongLine()
		playerQuery()
		objectQuery()
		entityGender()
		rectCollision()
		containerItemAt()
		polyContains()
		containerTakeAt()
		magnitude()
		mod()
		containerSwapItems()
		isNpc()
		lineCollision()
		getObjectParameter()
		debugPoint()
		pointTileCollision()
		containerItemsFitWhere()
		containerAvailable()
		getProperty()
		containerItems()
		threatLevel()
		entityType()
		sendEntityMessage()
		material()
		liquidAt()
		containerSize()
		debugText()
		monsterType()
		entityMoney()
		nearestTo()
		npcLineQuery()
		entityPortrait()
		entityName()
		entityDamageTeam()
		containerConsumeAt()
		entityAggressive()
		windLevel()
		monsterQuery()
		entityExists()
		loungeableQuery()
		npcQuery()
		entityLineQuery()
	}
	root = {
		createBiome()
		imageSpaces()
		createItem()
		loadVersionedJson()
		createTreasure()
		getMatchingTenants()
		monsterSkillParameter()
		getConfiguration()
		npcVariant()
		itemHasTag()
		imageSize()
		projectileGravityMultiplier()
		nonEmptyRegion()
		evalFunction2()
		projectileConfig()
		materialMiningSound()
		generateName()
		isTreasurePool()
		hasTech()
		behaviorModule()
		itemConfig()
		treeStemDirectory()
		evalFunction()
		techConfig()
		npcConfig()
		setConfigurationPath()
		getConfigurationPath()
		materialHealth()
		materialFootstepSound()
		monsterMovementSettings()
		materialPath()
		setConfiguration()
		monsterPortrait()
		itemType()
		questConfig()
		recipesForItem()
		assetJson()
		treeFoliageDirectory()
		techType()
		liquidStatusEffects()
		makeCurrentVersionedJson()
		itemTags()
		tenantConfig()
		npcPortrait()
	}
	jsize()
	status = {
		setResourceLocked()
		resourcePercentage()
		addPersistentEffects()
		removeEphemeralEffect()
		resource()
		setResourcePercentage()
		resourcePositive()
		damageTakenSince()
		statPositive()
		stat()
		statusProperty()
		activeUniqueStatusEffectSummary()
		inflictedHitsSince()
		resourceMax()
		setStatusProperty()
		setPersistentEffects()
		resetAllResources()
		addEphemeralEffects()
		overConsumeResource()
		modifyResource()
		addEphemeralEffect()
		getPersistentEffects()
		resetResource()
		consumeResource()
		clearPersistentEffects()
		modifyResourcePercentage()
		clearEphemeralEffects()
		resourceNames()
		addPersistentEffect()
		resourceLocked()
		clearAllPersistentEffects()
		inflictedDamageSince()
		isResource()
		setResource()
		giveResource()
	}
	xpcall()
	getmetatable()
	utf8 = {
		len()
		codepoint()
		offset()
		codes()
		charpattern = "[
[22:51:11.029] [Warn] 	select()
	rawequal()
	rawset()
	string = {
		gmatch()
		char()
		sub()
		unpack()
		upper()
		lower()
		find()
		rep()
		dump()
		len()
		reverse()
		packsize()
		pack()
		byte()
		match()
		format()
		gsub()
	}
	require()
	pairs()
	next()
	jobject()
	math = {
		pi = 3.1415926535898
		rad()
		max()
		sqrt()
		random()
		floor()
		log()
		acos()
		fmod()
		mininteger = -9223372036854775808
		type()
		huge = inf
		randomseed()
		deg()
		exp()
		maxinteger = 9223372036854775807
		cos()
		min()
		tointeger()
		modf()
		asin()
		tan()
		atan()
		abs()
		sin()
		ult()
		ceil()
	}
	print()
	pcall()
	type()
	init()
	setmetatable()
	jresize()
	ic = {
		checkStack()
		itemAmount()
		stripColor()
		quickstack()
		itemConfig()
		amountEquipped()
		sortFunc()
		lock()
		giveBack()
		renameThis()
		sort()
		searchBox()
		sort_relative()
		clientVersion = 1
		renameButton()
		searchButton()
		getQuality()
	}
	player = {
		equippedTech()
		altHandItem()
		giveEssentialItem()
		consumeTaggedItem()
		setUniverseFlag()
		species()
		itemsWithTag()
		worldId()
		warp()
		completeMission()
		inventoryTags()
		upgradeShip()
		hasQuest()
		consumeItem()
		gender()
		primaryHandItem()
		essentialItem()
		equippedItem()
		setIntroComplete()
		playTime()
		enabledTechs()
		recordEvent()
		playCinematic()
		introComplete()
		hasCompletedQuest()
		makeTechAvailable()
		consumeItemWithParameter()
		startQuest()
		hasItemWithParameter()
		getItemWithParameter()
		lounge()
		enableTech()
		equipTech()
		enableMission()
		removeEssentialItem()
		isLounging()
		availableTechs()
		primaryHandItemTags()
		makeTechUnavailable()
		confirm()
		serverUuid()
		addBookmark()
		altHandItemTags()
		cleanupItems()
		radioMessage()
		setEquippedItem()
		ownShipWorldId()
		hasItem()
		canStartQuest()
		giveBlueprint()
		hasCountOfItem()
		shipUpgrades()
		giveItem()
	}
	config = {
		getParameter()
	}
	self = {
	}
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	world = {
		spawnItem()
		entityPosition()
		entityHealth()
		damageTileArea()
		day()
		placeMaterial()
		entityDescription()
		containerPutItemsAt()
		entityVelocity()
		damageTiles()
		entityHandItem()
		objectAt()
		setProperty()
		containerItemApply()
		containerClose()
		distance()
		findUniqueEntity()
		gravity()
		rectTileCollision()
		entitySpecies()
		platformerPathStart()
		containerOpen()
		containerTakeAll()
		breathable()
		npcType()
		containerAddItems()
		dayLength()
		loungeableOccupied()
		placeObject()
		isTileProtected()
		destroyLiquid()
		debugLine()
		spawnLiquid()
		entityCanDamage()
		containerItemsCanFit()
		xwrap()
		entityUniqueId()
		itemDropQuery()
		lightLevel()
		placeMod()
		spawnNpc()
		spawnTreasure()
		time()
		underground()
		spawnVehicle()
		spawnMonster()
		timeOfDay()
		findPlatformerPath()
		debugPoly()
		containerTakeNumItemsAt()
		isMonster()
		farmableStage()
		polyCollision()
		objectLineQuery()
		entityHasCountOfItem()
		entityHandItemDescriptor()
		tileIsOccupied()
		resolvePolyCollision()
		pointCollision()
		callScriptedEntity()
		collisionBlocksAlongLine()
		containerStackItems()
		objectSpaces()
		containerConsume()
		spawnStagehand()
		spawnProjectile()
		stagehandType()
		entityQuery()
		lineTileCollision()
		containerSwapItemsNoCombine()
		liquidAlongLine()
		playerQuery()
		objectQuery()
		entityGender()
		rectCollision()
		containerItemAt()
		polyContains()
		containerTakeAt()
		magnitude()
		mod()
		containerSwapItems()
		isNpc()
		lineCollision()
		getObjectParameter()
		debugPoint()
		pointTileCollision()
		containerItemsFitWhere()
		containerAvailable()
		getProperty()
		containerItems()
		threatLevel()
		entityType()
		sendEntityMessage()
		material()
		liquidAt()
		containerSize()
		debugText()
		monsterType()
		entityMoney()
		nearestTo()
		npcLineQuery()
		entityPortrait()
		entityName()
		entityDamageTeam()
		containerConsumeAt()
		entityAggressive()
		windLevel()
		monsterQuery()
		entityExists()
		loungeableQuery()
		npcQuery()
		entityLineQuery()
	}
	root = {
		createBiome()
		imageSpaces()
		createItem()
		loadVersionedJson()
		createTreasure()
		getMatchingTenants()
		monsterSkillParameter()
		getConfiguration()
		npcVariant()
		itemHasTag()
		imageSize()
		projectileGravityMultiplier()
		nonEmptyRegion()
		evalFunction2()
		projectileConfig()
		materialMiningSound()
		generateName()
		isTreasurePool()
		hasTech()
		behaviorModule()
		itemConfig()
		treeStemDirectory()
		evalFunction()
		techConfig()
		npcConfig()
		setConfigurationPath()
		getConfigurationPath()
		materialHealth()
		materialFootstepSound()
		monsterMovementSettings()
		materialPath()
		setConfiguration()
		monsterPortrait()
		itemType()
		questConfig()
		recipesForItem()
		assetJson()
		treeFoliageDirectory()
		techType()
		liquidStatusEffects()
		makeCurrentVersionedJson()
		itemTags()
		tenantConfig()
		npcPortrait()
	}
	jsize()
	status = {
		setResourceLocked()
		resourcePercentage()
		addPersistentEffects()
		removeEphemeralEffect()
		resource()
		setResourcePercentage()
		resourcePositive()
		damageTakenSince()
		statPositive()
		stat()
		statusProperty()
		activeUniqueStatusEffectSummary()
		inflictedHitsSince()
		resourceMax()
		setStatusProperty()
		setPersistentEffects()
		resetAllResources()
		addEphemeralEffects()
		overConsumeResource()
		modifyResource()
		addEphemeralEffect()
		getPersistentEffects()
		resetResource()
		consumeResource()
		clearPersistentEffects()
		modifyResourcePercentage()
		clearEphemeralEffects()
		resourceNames()
		addPersistentEffect()
		resourceLocked()
		clearAllPersistentEffects()
		inflictedDamageSince()
		isResource()
		setResource()
		giveResource()
	}
	xpcall()
	getmetatable()
	utf8 = {
		len()
		codepoint()
		offset()
		codes()
		charpattern = "[
[22:51:13.664] [Warn] 	select()
	rawequal()
	rawset()
	string = {
		gmatch()
		char()
		sub()
		unpack()
		upper()
		lower()
		find()
		rep()
		dump()
		len()
		reverse()
		packsize()
		pack()
		byte()
		match()
		format()
		gsub()
	}
	require()
	pairs()
	next()
	jobject()
	math = {
		pi = 3.1415926535898
		rad()
		max()
		sqrt()
		random()
		floor()
		log()
		acos()
		fmod()
		mininteger = -9223372036854775808
		type()
		huge = inf
		randomseed()
		deg()
		exp()
		maxinteger = 9223372036854775807
		cos()
		min()
		tointeger()
		modf()
		asin()
		tan()
		atan()
		abs()
		sin()
		ult()
		ceil()
	}
	print()
	pcall()
	type()
	init()
	setmetatable()
	jresize()
	ic = {
		checkStack()
		itemAmount()
		stripColor()
		quickstack()
		itemConfig()
		amountEquipped()
		sortFunc()
		lock()
		giveBack()
		renameThis()
		sort()
		searchBox()
		sort_relative()
		clientVersion = 1
		renameButton()
		searchButton()
		getQuality()
	}
	player = {
		equippedTech()
		altHandItem()
		giveEssentialItem()
		consumeTaggedItem()
		setUniverseFlag()
		species()
		itemsWithTag()
		worldId()
		warp()
		completeMission()
		inventoryTags()
		upgradeShip()
		hasQuest()
		consumeItem()
		gender()
		primaryHandItem()
		essentialItem()
		equippedItem()
		setIntroComplete()
		playTime()
		enabledTechs()
		recordEvent()
		playCinematic()
		introComplete()
		hasCompletedQuest()
		makeTechAvailable()
		consumeItemWithParameter()
		startQuest()
		hasItemWithParameter()
		getItemWithParameter()
		lounge()
		enableTech()
		equipTech()
		enableMission()
		removeEssentialItem()
		isLounging()
		availableTechs()
		primaryHandItemTags()
		makeTechUnavailable()
		confirm()
		serverUuid()
		addBookmark()
		altHandItemTags()
		cleanupItems()
		radioMessage()
		setEquippedItem()
		ownShipWorldId()
		hasItem()
		canStartQuest()
		giveBlueprint()
		hasCountOfItem()
		shipUpgrades()
		giveItem()
	}
	config = {
		getParameter()
	}
	self = {
	}
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	world = {
		spawnItem()
		entityPosition()
		entityHealth()
		damageTileArea()
		day()
		placeMaterial()
		entityDescription()
		containerPutItemsAt()
		entityVelocity()
		damageTiles()
		entityHandItem()
		objectAt()
		setProperty()
		containerItemApply()
		containerClose()
		distance()
		findUniqueEntity()
		gravity()
		rectTileCollision()
		entitySpecies()
		platformerPathStart()
		containerOpen()
		containerTakeAll()
		breathable()
		npcType()
		containerAddItems()
		dayLength()
		loungeableOccupied()
		placeObject()
		isTileProtected()
		destroyLiquid()
		debugLine()
		spawnLiquid()
		entityCanDamage()
		containerItemsCanFit()
		xwrap()
		entityUniqueId()
		itemDropQuery()
		lightLevel()
		placeMod()
		spawnNpc()
		spawnTreasure()
		time()
		underground()
		spawnVehicle()
		spawnMonster()
		timeOfDay()
		findPlatformerPath()
		debugPoly()
		containerTakeNumItemsAt()
		isMonster()
		farmableStage()
		polyCollision()
		objectLineQuery()
		entityHasCountOfItem()
		entityHandItemDescriptor()
		tileIsOccupied()
		resolvePolyCollision()
		pointCollision()
		callScriptedEntity()
		collisionBlocksAlongLine()
		containerStackItems()
		objectSpaces()
		containerConsume()
		spawnStagehand()
		spawnProjectile()
		stagehandType()
		entityQuery()
		lineTileCollision()
		containerSwapItemsNoCombine()
		liquidAlongLine()
		playerQuery()
		objectQuery()
		entityGender()
		rectCollision()
		containerItemAt()
		polyContains()
		containerTakeAt()
		magnitude()
		mod()
		containerSwapItems()
		isNpc()
		lineCollision()
		getObjectParameter()
		debugPoint()
		pointTileCollision()
		containerItemsFitWhere()
		containerAvailable()
		getProperty()
		containerItems()
		threatLevel()
		entityType()
		sendEntityMessage()
		material()
		liquidAt()
		containerSize()
		debugText()
		monsterType()
		entityMoney()
		nearestTo()
		npcLineQuery()
		entityPortrait()
		entityName()
		entityDamageTeam()
		containerConsumeAt()
		entityAggressive()
		windLevel()
		monsterQuery()
		entityExists()
		loungeableQuery()
		npcQuery()
		entityLineQuery()
	}
	root = {
		createBiome()
		imageSpaces()
		createItem()
		loadVersionedJson()
		createTreasure()
		getMatchingTenants()
		monsterSkillParameter()
		getConfiguration()
		npcVariant()
		itemHasTag()
		imageSize()
		projectileGravityMultiplier()
		nonEmptyRegion()
		evalFunction2()
		projectileConfig()
		materialMiningSound()
		generateName()
		isTreasurePool()
		hasTech()
		behaviorModule()
		itemConfig()
		treeStemDirectory()
		evalFunction()
		techConfig()
		npcConfig()
		setConfigurationPath()
		getConfigurationPath()
		materialHealth()
		materialFootstepSound()
		monsterMovementSettings()
		materialPath()
		setConfiguration()
		monsterPortrait()
		itemType()
		questConfig()
		recipesForItem()
		assetJson()
		treeFoliageDirectory()
		techType()
		liquidStatusEffects()
		makeCurrentVersionedJson()
		itemTags()
		tenantConfig()
		npcPortrait()
	}
	jsize()
	status = {
		setResourceLocked()
		resourcePercentage()
		addPersistentEffects()
		removeEphemeralEffect()
		resource()
		setResourcePercentage()
		resourcePositive()
		damageTakenSince()
		statPositive()
		stat()
		statusProperty()
		activeUniqueStatusEffectSummary()
		inflictedHitsSince()
		resourceMax()
		setStatusProperty()
		setPersistentEffects()
		resetAllResources()
		addEphemeralEffects()
		overConsumeResource()
		modifyResource()
		addEphemeralEffect()
		getPersistentEffects()
		resetResource()
		consumeResource()
		clearPersistentEffects()
		modifyResourcePercentage()
		clearEphemeralEffects()
		resourceNames()
		addPersistentEffect()
		resourceLocked()
		clearAllPersistentEffects()
		inflictedDamageSince()
		isResource()
		setResource()
		giveResource()
	}
	xpcall()
	getmetatable()
	utf8 = {
		len()
		codepoint()
		offset()
		codes()
		charpattern = "[
[22:51:14.611] [Warn] 	select()
	rawequal()
	rawset()
	string = {
		gmatch()
		char()
		sub()
		unpack()
		upper()
		lower()
		find()
		rep()
		dump()
		len()
		reverse()
		packsize()
		pack()
		byte()
		match()
		format()
		gsub()
	}
	require()
	pairs()
	next()
	jobject()
	math = {
		pi = 3.1415926535898
		rad()
		max()
		sqrt()
		random()
		floor()
		log()
		acos()
		fmod()
		mininteger = -9223372036854775808
		type()
		huge = inf
		randomseed()
		deg()
		exp()
		maxinteger = 9223372036854775807
		cos()
		min()
		tointeger()
		modf()
		asin()
		tan()
		atan()
		abs()
		sin()
		ult()
		ceil()
	}
	print()
	pcall()
	type()
	init()
	setmetatable()
	jresize()
	ic = {
		checkStack()
		itemAmount()
		stripColor()
		quickstack()
		itemConfig()
		amountEquipped()
		sortFunc()
		lock()
		giveBack()
		renameThis()
		sort()
		searchBox()
		sort_relative()
		clientVersion = 1
		renameButton()
		searchButton()
		getQuality()
	}
	player = {
		equippedTech()
		altHandItem()
		giveEssentialItem()
		consumeTaggedItem()
		setUniverseFlag()
		species()
		itemsWithTag()
		worldId()
		warp()
		completeMission()
		inventoryTags()
		upgradeShip()
		hasQuest()
		consumeItem()
		gender()
		primaryHandItem()
		essentialItem()
		equippedItem()
		setIntroComplete()
		playTime()
		enabledTechs()
		recordEvent()
		playCinematic()
		introComplete()
		hasCompletedQuest()
		makeTechAvailable()
		consumeItemWithParameter()
		startQuest()
		hasItemWithParameter()
		getItemWithParameter()
		lounge()
		enableTech()
		equipTech()
		enableMission()
		removeEssentialItem()
		isLounging()
		availableTechs()
		primaryHandItemTags()
		makeTechUnavailable()
		confirm()
		serverUuid()
		addBookmark()
		altHandItemTags()
		cleanupItems()
		radioMessage()
		setEquippedItem()
		ownShipWorldId()
		hasItem()
		canStartQuest()
		giveBlueprint()
		hasCountOfItem()
		shipUpgrades()
		giveItem()
	}
	config = {
		getParameter()
	}
	self = {
	}
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	world = {
		spawnItem()
		entityPosition()
		entityHealth()
		damageTileArea()
		day()
		placeMaterial()
		entityDescription()
		containerPutItemsAt()
		entityVelocity()
		damageTiles()
		entityHandItem()
		objectAt()
		setProperty()
		containerItemApply()
		containerClose()
		distance()
		findUniqueEntity()
		gravity()
		rectTileCollision()
		entitySpecies()
		platformerPathStart()
		containerOpen()
		containerTakeAll()
		breathable()
		npcType()
		containerAddItems()
		dayLength()
		loungeableOccupied()
		placeObject()
		isTileProtected()
		destroyLiquid()
		debugLine()
		spawnLiquid()
		entityCanDamage()
		containerItemsCanFit()
		xwrap()
		entityUniqueId()
		itemDropQuery()
		lightLevel()
		placeMod()
		spawnNpc()
		spawnTreasure()
		time()
		underground()
		spawnVehicle()
		spawnMonster()
		timeOfDay()
		findPlatformerPath()
		debugPoly()
		containerTakeNumItemsAt()
		isMonster()
		farmableStage()
		polyCollision()
		objectLineQuery()
		entityHasCountOfItem()
		entityHandItemDescriptor()
		tileIsOccupied()
		resolvePolyCollision()
		pointCollision()
		callScriptedEntity()
		collisionBlocksAlongLine()
		containerStackItems()
		objectSpaces()
		containerConsume()
		spawnStagehand()
		spawnProjectile()
		stagehandType()
		entityQuery()
		lineTileCollision()
		containerSwapItemsNoCombine()
		liquidAlongLine()
		playerQuery()
		objectQuery()
		entityGender()
		rectCollision()
		containerItemAt()
		polyContains()
		containerTakeAt()
		magnitude()
		mod()
		containerSwapItems()
		isNpc()
		lineCollision()
		getObjectParameter()
		debugPoint()
		pointTileCollision()
		containerItemsFitWhere()
		containerAvailable()
		getProperty()
		containerItems()
		threatLevel()
		entityType()
		sendEntityMessage()
		material()
		liquidAt()
		containerSize()
		debugText()
		monsterType()
		entityMoney()
		nearestTo()
		npcLineQuery()
		entityPortrait()
		entityName()
		entityDamageTeam()
		containerConsumeAt()
		entityAggressive()
		windLevel()
		monsterQuery()
		entityExists()
		loungeableQuery()
		npcQuery()
		entityLineQuery()
	}
	root = {
		createBiome()
		imageSpaces()
		createItem()
		loadVersionedJson()
		createTreasure()
		getMatchingTenants()
		monsterSkillParameter()
		getConfiguration()
		npcVariant()
		itemHasTag()
		imageSize()
		projectileGravityMultiplier()
		nonEmptyRegion()
		evalFunction2()
		projectileConfig()
		materialMiningSound()
		generateName()
		isTreasurePool()
		hasTech()
		behaviorModule()
		itemConfig()
		treeStemDirectory()
		evalFunction()
		techConfig()
		npcConfig()
		setConfigurationPath()
		getConfigurationPath()
		materialHealth()
		materialFootstepSound()
		monsterMovementSettings()
		materialPath()
		setConfiguration()
		monsterPortrait()
		itemType()
		questConfig()
		recipesForItem()
		assetJson()
		treeFoliageDirectory()
		techType()
		liquidStatusEffects()
		makeCurrentVersionedJson()
		itemTags()
		tenantConfig()
		npcPortrait()
	}
	jsize()
	status = {
		setResourceLocked()
		resourcePercentage()
		addPersistentEffects()
		removeEphemeralEffect()
		resource()
		setResourcePercentage()
		resourcePositive()
		damageTakenSince()
		statPositive()
		stat()
		statusProperty()
		activeUniqueStatusEffectSummary()
		inflictedHitsSince()
		resourceMax()
		setStatusProperty()
		setPersistentEffects()
		resetAllResources()
		addEphemeralEffects()
		overConsumeResource()
		modifyResource()
		addEphemeralEffect()
		getPersistentEffects()
		resetResource()
		consumeResource()
		clearPersistentEffects()
		modifyResourcePercentage()
		clearEphemeralEffects()
		resourceNames()
		addPersistentEffect()
		resourceLocked()
		clearAllPersistentEffects()
		inflictedDamageSince()
		isResource()
		setResource()
		giveResource()
	}
	xpcall()
	getmetatable()
	utf8 = {
		len()
		codepoint()
		offset()
		codes()
		charpattern = "[
[22:51:27.480] [Warn] 	select()
	rawequal()
	rawset()
	string = {
		gmatch()
		char()
		sub()
		unpack()
		upper()
		lower()
		find()
		rep()
		dump()
		len()
		reverse()
		packsize()
		pack()
		byte()
		match()
		format()
		gsub()
	}
	require()
	pairs()
	next()
	jobject()
	math = {
		pi = 3.1415926535898
		rad()
		max()
		sqrt()
		random()
		floor()
		log()
		acos()
		fmod()
		mininteger = -9223372036854775808
		type()
		huge = inf
		randomseed()
		deg()
		exp()
		maxinteger = 9223372036854775807
		cos()
		min()
		tointeger()
		modf()
		asin()
		tan()
		atan()
		abs()
		sin()
		ult()
		ceil()
	}
	print()
	pcall()
	type()
	init()
	setmetatable()
	jresize()
	ic = {
		checkStack()
		itemAmount()
		stripColor()
		quickstack()
		itemConfig()
		amountEquipped()
		sortFunc()
		lock()
		giveBack()
		renameThis()
		sort()
		searchBox()
		sort_relative()
		clientVersion = 1
		renameButton()
		searchButton()
		getQuality()
	}
	player = {
		equippedTech()
		altHandItem()
		giveEssentialItem()
		consumeTaggedItem()
		setUniverseFlag()
		species()
		itemsWithTag()
		worldId()
		warp()
		completeMission()
		inventoryTags()
		upgradeShip()
		hasQuest()
		consumeItem()
		gender()
		primaryHandItem()
		essentialItem()
		equippedItem()
		setIntroComplete()
		playTime()
		enabledTechs()
		recordEvent()
		playCinematic()
		introComplete()
		hasCompletedQuest()
		makeTechAvailable()
		consumeItemWithParameter()
		startQuest()
		hasItemWithParameter()
		getItemWithParameter()
		lounge()
		enableTech()
		equipTech()
		enableMission()
		removeEssentialItem()
		isLounging()
		availableTechs()
		primaryHandItemTags()
		makeTechUnavailable()
		confirm()
		serverUuid()
		addBookmark()
		altHandItemTags()
		cleanupItems()
		radioMessage()
		setEquippedItem()
		ownShipWorldId()
		hasItem()
		canStartQuest()
		giveBlueprint()
		hasCountOfItem()
		shipUpgrades()
		giveItem()
	}
	config = {
		getParameter()
	}
	self = {
	}
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	world = {
		spawnItem()
		entityPosition()
		entityHealth()
		damageTileArea()
		day()
		placeMaterial()
		entityDescription()
		containerPutItemsAt()
		entityVelocity()
		damageTiles()
		entityHandItem()
		objectAt()
		setProperty()
		containerItemApply()
		containerClose()
		distance()
		findUniqueEntity()
		gravity()
		rectTileCollision()
		entitySpecies()
		platformerPathStart()
		containerOpen()
		containerTakeAll()
		breathable()
		npcType()
		containerAddItems()
		dayLength()
		loungeableOccupied()
		placeObject()
		isTileProtected()
		destroyLiquid()
		debugLine()
		spawnLiquid()
		entityCanDamage()
		containerItemsCanFit()
		xwrap()
		entityUniqueId()
		itemDropQuery()
		lightLevel()
		placeMod()
		spawnNpc()
		spawnTreasure()
		time()
		underground()
		spawnVehicle()
		spawnMonster()
		timeOfDay()
		findPlatformerPath()
		debugPoly()
		containerTakeNumItemsAt()
		isMonster()
		farmableStage()
		polyCollision()
		objectLineQuery()
		entityHasCountOfItem()
		entityHandItemDescriptor()
		tileIsOccupied()
		resolvePolyCollision()
		pointCollision()
		callScriptedEntity()
		collisionBlocksAlongLine()
		containerStackItems()
		objectSpaces()
		containerConsume()
		spawnStagehand()
		spawnProjectile()
		stagehandType()
		entityQuery()
		lineTileCollision()
		containerSwapItemsNoCombine()
		liquidAlongLine()
		playerQuery()
		objectQuery()
		entityGender()
		rectCollision()
		containerItemAt()
		polyContains()
		containerTakeAt()
		magnitude()
		mod()
		containerSwapItems()
		isNpc()
		lineCollision()
		getObjectParameter()
		debugPoint()
		pointTileCollision()
		containerItemsFitWhere()
		containerAvailable()
		getProperty()
		containerItems()
		threatLevel()
		entityType()
		sendEntityMessage()
		material()
		liquidAt()
		containerSize()
		debugText()
		monsterType()
		entityMoney()
		nearestTo()
		npcLineQuery()
		entityPortrait()
		entityName()
		entityDamageTeam()
		containerConsumeAt()
		entityAggressive()
		windLevel()
		monsterQuery()
		entityExists()
		loungeableQuery()
		npcQuery()
		entityLineQuery()
	}
	root = {
		createBiome()
		imageSpaces()
		createItem()
		loadVersionedJson()
		createTreasure()
		getMatchingTenants()
		monsterSkillParameter()
		getConfiguration()
		npcVariant()
		itemHasTag()
		imageSize()
		projectileGravityMultiplier()
		nonEmptyRegion()
		evalFunction2()
		projectileConfig()
		materialMiningSound()
		generateName()
		isTreasurePool()
		hasTech()
		behaviorModule()
		itemConfig()
		treeStemDirectory()
		evalFunction()
		techConfig()
		npcConfig()
		setConfigurationPath()
		getConfigurationPath()
		materialHealth()
		materialFootstepSound()
		monsterMovementSettings()
		materialPath()
		setConfiguration()
		monsterPortrait()
		itemType()
		questConfig()
		recipesForItem()
		assetJson()
		treeFoliageDirectory()
		techType()
		liquidStatusEffects()
		makeCurrentVersionedJson()
		itemTags()
		tenantConfig()
		npcPortrait()
	}
	jsize()
	status = {
		setResourceLocked()
		resourcePercentage()
		addPersistentEffects()
		removeEphemeralEffect()
		resource()
		setResourcePercentage()
		resourcePositive()
		damageTakenSince()
		statPositive()
		stat()
		statusProperty()
		activeUniqueStatusEffectSummary()
		inflictedHitsSince()
		resourceMax()
		setStatusProperty()
		setPersistentEffects()
		resetAllResources()
		addEphemeralEffects()
		overConsumeResource()
		modifyResource()
		addEphemeralEffect()
		getPersistentEffects()
		resetResource()
		consumeResource()
		clearPersistentEffects()
		modifyResourcePercentage()
		clearEphemeralEffects()
		resourceNames()
		addPersistentEffect()
		resourceLocked()
		clearAllPersistentEffects()
		inflictedDamageSince()
		isResource()
		setResource()
		giveResource()
	}
	xpcall()
	getmetatable()
	utf8 = {
		len()
		codepoint()
		offset()
		codes()
		charpattern = "[
[22:51:29.461] [Warn] 	select()
	rawequal()
	rawset()
	string = {
		gmatch()
		char()
		sub()
		unpack()
		upper()
		lower()
		find()
		rep()
		dump()
		len()
		reverse()
		packsize()
		pack()
		byte()
		match()
		format()
		gsub()
	}
	require()
	pairs()
	next()
	jobject()
	math = {
		pi = 3.1415926535898
		rad()
		max()
		sqrt()
		random()
		floor()
		log()
		acos()
		fmod()
		mininteger = -9223372036854775808
		type()
		huge = inf
		randomseed()
		deg()
		exp()
		maxinteger = 9223372036854775807
		cos()
		min()
		tointeger()
		modf()
		asin()
		tan()
		atan()
		abs()
		sin()
		ult()
		ceil()
	}
	print()
	pcall()
	type()
	init()
	setmetatable()
	jresize()
	ic = {
		checkStack()
		itemAmount()
		stripColor()
		quickstack()
		itemConfig()
		amountEquipped()
		sortFunc()
		lock()
		giveBack()
		renameThis()
		sort()
		searchBox()
		sort_relative()
		clientVersion = 1
		renameButton()
		searchButton()
		getQuality()
	}
	player = {
		equippedTech()
		altHandItem()
		giveEssentialItem()
		consumeTaggedItem()
		setUniverseFlag()
		species()
		itemsWithTag()
		worldId()
		warp()
		completeMission()
		inventoryTags()
		upgradeShip()
		hasQuest()
		consumeItem()
		gender()
		primaryHandItem()
		essentialItem()
		equippedItem()
		setIntroComplete()
		playTime()
		enabledTechs()
		recordEvent()
		playCinematic()
		introComplete()
		hasCompletedQuest()
		makeTechAvailable()
		consumeItemWithParameter()
		startQuest()
		hasItemWithParameter()
		getItemWithParameter()
		lounge()
		enableTech()
		equipTech()
		enableMission()
		removeEssentialItem()
		isLounging()
		availableTechs()
		primaryHandItemTags()
		makeTechUnavailable()
		confirm()
		serverUuid()
		addBookmark()
		altHandItemTags()
		cleanupItems()
		radioMessage()
		setEquippedItem()
		ownShipWorldId()
		hasItem()
		canStartQuest()
		giveBlueprint()
		hasCountOfItem()
		shipUpgrades()
		giveItem()
	}
	config = {
		getParameter()
	}
	self = {
	}
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	world = {
		spawnItem()
		entityPosition()
		entityHealth()
		damageTileArea()
		day()
		placeMaterial()
		entityDescription()
		containerPutItemsAt()
		entityVelocity()
		damageTiles()
		entityHandItem()
		objectAt()
		setProperty()
		containerItemApply()
		containerClose()
		distance()
		findUniqueEntity()
		gravity()
		rectTileCollision()
		entitySpecies()
		platformerPathStart()
		containerOpen()
		containerTakeAll()
		breathable()
		npcType()
		containerAddItems()
		dayLength()
		loungeableOccupied()
		placeObject()
		isTileProtected()
		destroyLiquid()
		debugLine()
		spawnLiquid()
		entityCanDamage()
		containerItemsCanFit()
		xwrap()
		entityUniqueId()
		itemDropQuery()
		lightLevel()
		placeMod()
		spawnNpc()
		spawnTreasure()
		time()
		underground()
		spawnVehicle()
		spawnMonster()
		timeOfDay()
		findPlatformerPath()
		debugPoly()
		containerTakeNumItemsAt()
		isMonster()
		farmableStage()
		polyCollision()
		objectLineQuery()
		entityHasCountOfItem()
		entityHandItemDescriptor()
		tileIsOccupied()
		resolvePolyCollision()
		pointCollision()
		callScriptedEntity()
		collisionBlocksAlongLine()
		containerStackItems()
		objectSpaces()
		containerConsume()
		spawnStagehand()
		spawnProjectile()
		stagehandType()
		entityQuery()
		lineTileCollision()
		containerSwapItemsNoCombine()
		liquidAlongLine()
		playerQuery()
		objectQuery()
		entityGender()
		rectCollision()
		containerItemAt()
		polyContains()
		containerTakeAt()
		magnitude()
		mod()
		containerSwapItems()
		isNpc()
		lineCollision()
		getObjectParameter()
		debugPoint()
		pointTileCollision()
		containerItemsFitWhere()
		containerAvailable()
		getProperty()
		containerItems()
		threatLevel()
		entityType()
		sendEntityMessage()
		material()
		liquidAt()
		containerSize()
		debugText()
		monsterType()
		entityMoney()
		nearestTo()
		npcLineQuery()
		entityPortrait()
		entityName()
		entityDamageTeam()
		containerConsumeAt()
		entityAggressive()
		windLevel()
		monsterQuery()
		entityExists()
		loungeableQuery()
		npcQuery()
		entityLineQuery()
	}
	root = {
		createBiome()
		imageSpaces()
		createItem()
		loadVersionedJson()
		createTreasure()
		getMatchingTenants()
		monsterSkillParameter()
		getConfiguration()
		npcVariant()
		itemHasTag()
		imageSize()
		projectileGravityMultiplier()
		nonEmptyRegion()
		evalFunction2()
		projectileConfig()
		materialMiningSound()
		generateName()
		isTreasurePool()
		hasTech()
		behaviorModule()
		itemConfig()
		treeStemDirectory()
		evalFunction()
		techConfig()
		npcConfig()
		setConfigurationPath()
		getConfigurationPath()
		materialHealth()
		materialFootstepSound()
		monsterMovementSettings()
		materialPath()
		setConfiguration()
		monsterPortrait()
		itemType()
		questConfig()
		recipesForItem()
		assetJson()
		treeFoliageDirectory()
		techType()
		liquidStatusEffects()
		makeCurrentVersionedJson()
		itemTags()
		tenantConfig()
		npcPortrait()
	}
	jsize()
	status = {
		setResourceLocked()
		resourcePercentage()
		addPersistentEffects()
		removeEphemeralEffect()
		resource()
		setResourcePercentage()
		resourcePositive()
		damageTakenSince()
		statPositive()
		stat()
		statusProperty()
		activeUniqueStatusEffectSummary()
		inflictedHitsSince()
		resourceMax()
		setStatusProperty()
		setPersistentEffects()
		resetAllResources()
		addEphemeralEffects()
		overConsumeResource()
		modifyResource()
		addEphemeralEffect()
		getPersistentEffects()
		resetResource()
		consumeResource()
		clearPersistentEffects()
		modifyResourcePercentage()
		clearEphemeralEffects()
		resourceNames()
		addPersistentEffect()
		resourceLocked()
		clearAllPersistentEffects()
		inflictedDamageSince()
		isResource()
		setResource()
		giveResource()
	}
	xpcall()
	getmetatable()
	utf8 = {
		len()
		codepoint()
		offset()
		codes()
		charpattern = "[
[22:51:31.794] [Warn] 	select()
	rawequal()
	rawset()
	string = {
		gmatch()
		char()
		sub()
		unpack()
		upper()
		lower()
		find()
		rep()
		dump()
		len()
		reverse()
		packsize()
		pack()
		byte()
		match()
		format()
		gsub()
	}
	require()
	pairs()
	next()
	jobject()
	math = {
		pi = 3.1415926535898
		rad()
		max()
		sqrt()
		random()
		floor()
		log()
		acos()
		fmod()
		mininteger = -9223372036854775808
		type()
		huge = inf
		randomseed()
		deg()
		exp()
		maxinteger = 9223372036854775807
		cos()
		min()
		tointeger()
		modf()
		asin()
		tan()
		atan()
		abs()
		sin()
		ult()
		ceil()
	}
	print()
	pcall()
	type()
	init()
	setmetatable()
	jresize()
	ic = {
		checkStack()
		itemAmount()
		stripColor()
		quickstack()
		itemConfig()
		amountEquipped()
		sortFunc()
		lock()
		giveBack()
		renameThis()
		sort()
		searchBox()
		sort_relative()
		clientVersion = 1
		renameButton()
		searchButton()
		getQuality()
	}
	player = {
		equippedTech()
		altHandItem()
		giveEssentialItem()
		consumeTaggedItem()
		setUniverseFlag()
		species()
		itemsWithTag()
		worldId()
		warp()
		completeMission()
		inventoryTags()
		upgradeShip()
		hasQuest()
		consumeItem()
		gender()
		primaryHandItem()
		essentialItem()
		equippedItem()
		setIntroComplete()
		playTime()
		enabledTechs()
		recordEvent()
		playCinematic()
		introComplete()
		hasCompletedQuest()
		makeTechAvailable()
		consumeItemWithParameter()
		startQuest()
		hasItemWithParameter()
		getItemWithParameter()
		lounge()
		enableTech()
		equipTech()
		enableMission()
		removeEssentialItem()
		isLounging()
		availableTechs()
		primaryHandItemTags()
		makeTechUnavailable()
		confirm()
		serverUuid()
		addBookmark()
		altHandItemTags()
		cleanupItems()
		radioMessage()
		setEquippedItem()
		ownShipWorldId()
		hasItem()
		canStartQuest()
		giveBlueprint()
		hasCountOfItem()
		shipUpgrades()
		giveItem()
	}
	config = {
		getParameter()
	}
	self = {
	}
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	world = {
		spawnItem()
		entityPosition()
		entityHealth()
		damageTileArea()
		day()
		placeMaterial()
		entityDescription()
		containerPutItemsAt()
		entityVelocity()
		damageTiles()
		entityHandItem()
		objectAt()
		setProperty()
		containerItemApply()
		containerClose()
		distance()
		findUniqueEntity()
		gravity()
		rectTileCollision()
		entitySpecies()
		platformerPathStart()
		containerOpen()
		containerTakeAll()
		breathable()
		npcType()
		containerAddItems()
		dayLength()
		loungeableOccupied()
		placeObject()
		isTileProtected()
		destroyLiquid()
		debugLine()
		spawnLiquid()
		entityCanDamage()
		containerItemsCanFit()
		xwrap()
		entityUniqueId()
		itemDropQuery()
		lightLevel()
		placeMod()
		spawnNpc()
		spawnTreasure()
		time()
		underground()
		spawnVehicle()
		spawnMonster()
		timeOfDay()
		findPlatformerPath()
		debugPoly()
		containerTakeNumItemsAt()
		isMonster()
		farmableStage()
		polyCollision()
		objectLineQuery()
		entityHasCountOfItem()
		entityHandItemDescriptor()
		tileIsOccupied()
		resolvePolyCollision()
		pointCollision()
		callScriptedEntity()
		collisionBlocksAlongLine()
		containerStackItems()
		objectSpaces()
		containerConsume()
		spawnStagehand()
		spawnProjectile()
		stagehandType()
		entityQuery()
		lineTileCollision()
		containerSwapItemsNoCombine()
		liquidAlongLine()
		playerQuery()
		objectQuery()
		entityGender()
		rectCollision()
		containerItemAt()
		polyContains()
		containerTakeAt()
		magnitude()
		mod()
		containerSwapItems()
		isNpc()
		lineCollision()
		getObjectParameter()
		debugPoint()
		pointTileCollision()
		containerItemsFitWhere()
		containerAvailable()
		getProperty()
		containerItems()
		threatLevel()
		entityType()
		sendEntityMessage()
		material()
		liquidAt()
		containerSize()
		debugText()
		monsterType()
		entityMoney()
		nearestTo()
		npcLineQuery()
		entityPortrait()
		entityName()
		entityDamageTeam()
		containerConsumeAt()
		entityAggressive()
		windLevel()
		monsterQuery()
		entityExists()
		loungeableQuery()
		npcQuery()
		entityLineQuery()
	}
	root = {
		createBiome()
		imageSpaces()
		createItem()
		loadVersionedJson()
		createTreasure()
		getMatchingTenants()
		monsterSkillParameter()
		getConfiguration()
		npcVariant()
		itemHasTag()
		imageSize()
		projectileGravityMultiplier()
		nonEmptyRegion()
		evalFunction2()
		projectileConfig()
		materialMiningSound()
		generateName()
		isTreasurePool()
		hasTech()
		behaviorModule()
		itemConfig()
		treeStemDirectory()
		evalFunction()
		techConfig()
		npcConfig()
		setConfigurationPath()
		getConfigurationPath()
		materialHealth()
		materialFootstepSound()
		monsterMovementSettings()
		materialPath()
		setConfiguration()
		monsterPortrait()
		itemType()
		questConfig()
		recipesForItem()
		assetJson()
		treeFoliageDirectory()
		techType()
		liquidStatusEffects()
		makeCurrentVersionedJson()
		itemTags()
		tenantConfig()
		npcPortrait()
	}
	jsize()
	status = {
		setResourceLocked()
		resourcePercentage()
		addPersistentEffects()
		removeEphemeralEffect()
		resource()
		setResourcePercentage()
		resourcePositive()
		damageTakenSince()
		statPositive()
		stat()
		statusProperty()
		activeUniqueStatusEffectSummary()
		inflictedHitsSince()
		resourceMax()
		setStatusProperty()
		setPersistentEffects()
		resetAllResources()
		addEphemeralEffects()
		overConsumeResource()
		modifyResource()
		addEphemeralEffect()
		getPersistentEffects()
		resetResource()
		consumeResource()
		clearPersistentEffects()
		modifyResourcePercentage()
		clearEphemeralEffects()
		resourceNames()
		addPersistentEffect()
		resourceLocked()
		clearAllPersistentEffects()
		inflictedDamageSince()
		isResource()
		setResource()
		giveResource()
	}
	xpcall()
	getmetatable()
	utf8 = {
		len()
		codepoint()
		offset()
		codes()
		charpattern = "[
[22:51:32.728] [Warn] 	select()
	rawequal()
	rawset()
	string = {
		gmatch()
		char()
		sub()
		unpack()
		upper()
		lower()
		find()
		rep()
		dump()
		len()
		reverse()
		packsize()
		pack()
		byte()
		match()
		format()
		gsub()
	}
	require()
	pairs()
	next()
	jobject()
	math = {
		pi = 3.1415926535898
		rad()
		max()
		sqrt()
		random()
		floor()
		log()
		acos()
		fmod()
		mininteger = -9223372036854775808
		type()
		huge = inf
		randomseed()
		deg()
		exp()
		maxinteger = 9223372036854775807
		cos()
		min()
		tointeger()
		modf()
		asin()
		tan()
		atan()
		abs()
		sin()
		ult()
		ceil()
	}
	print()
	pcall()
	type()
	init()
	setmetatable()
	jresize()
	ic = {
		checkStack()
		itemAmount()
		stripColor()
		quickstack()
		itemConfig()
		amountEquipped()
		sortFunc()
		lock()
		giveBack()
		renameThis()
		sort()
		searchBox()
		sort_relative()
		clientVersion = 1
		renameButton()
		searchButton()
		getQuality()
	}
	player = {
		equippedTech()
		altHandItem()
		giveEssentialItem()
		consumeTaggedItem()
		setUniverseFlag()
		species()
		itemsWithTag()
		worldId()
		warp()
		completeMission()
		inventoryTags()
		upgradeShip()
		hasQuest()
		consumeItem()
		gender()
		primaryHandItem()
		essentialItem()
		equippedItem()
		setIntroComplete()
		playTime()
		enabledTechs()
		recordEvent()
		playCinematic()
		introComplete()
		hasCompletedQuest()
		makeTechAvailable()
		consumeItemWithParameter()
		startQuest()
		hasItemWithParameter()
		getItemWithParameter()
		lounge()
		enableTech()
		equipTech()
		enableMission()
		removeEssentialItem()
		isLounging()
		availableTechs()
		primaryHandItemTags()
		makeTechUnavailable()
		confirm()
		serverUuid()
		addBookmark()
		altHandItemTags()
		cleanupItems()
		radioMessage()
		setEquippedItem()
		ownShipWorldId()
		hasItem()
		canStartQuest()
		giveBlueprint()
		hasCountOfItem()
		shipUpgrades()
		giveItem()
	}
	config = {
		getParameter()
	}
	self = {
	}
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	world = {
		spawnItem()
		entityPosition()
		entityHealth()
		damageTileArea()
		day()
		placeMaterial()
		entityDescription()
		containerPutItemsAt()
		entityVelocity()
		damageTiles()
		entityHandItem()
		objectAt()
		setProperty()
		containerItemApply()
		containerClose()
		distance()
		findUniqueEntity()
		gravity()
		rectTileCollision()
		entitySpecies()
		platformerPathStart()
		containerOpen()
		containerTakeAll()
		breathable()
		npcType()
		containerAddItems()
		dayLength()
		loungeableOccupied()
		placeObject()
		isTileProtected()
		destroyLiquid()
		debugLine()
		spawnLiquid()
		entityCanDamage()
		containerItemsCanFit()
		xwrap()
		entityUniqueId()
		itemDropQuery()
		lightLevel()
		placeMod()
		spawnNpc()
		spawnTreasure()
		time()
		underground()
		spawnVehicle()
		spawnMonster()
		timeOfDay()
		findPlatformerPath()
		debugPoly()
		containerTakeNumItemsAt()
		isMonster()
		farmableStage()
		polyCollision()
		objectLineQuery()
		entityHasCountOfItem()
		entityHandItemDescriptor()
		tileIsOccupied()
		resolvePolyCollision()
		pointCollision()
		callScriptedEntity()
		collisionBlocksAlongLine()
		containerStackItems()
		objectSpaces()
		containerConsume()
		spawnStagehand()
		spawnProjectile()
		stagehandType()
		entityQuery()
		lineTileCollision()
		containerSwapItemsNoCombine()
		liquidAlongLine()
		playerQuery()
		objectQuery()
		entityGender()
		rectCollision()
		containerItemAt()
		polyContains()
		containerTakeAt()
		magnitude()
		mod()
		containerSwapItems()
		isNpc()
		lineCollision()
		getObjectParameter()
		debugPoint()
		pointTileCollision()
		containerItemsFitWhere()
		containerAvailable()
		getProperty()
		containerItems()
		threatLevel()
		entityType()
		sendEntityMessage()
		material()
		liquidAt()
		containerSize()
		debugText()
		monsterType()
		entityMoney()
		nearestTo()
		npcLineQuery()
		entityPortrait()
		entityName()
		entityDamageTeam()
		containerConsumeAt()
		entityAggressive()
		windLevel()
		monsterQuery()
		entityExists()
		loungeableQuery()
		npcQuery()
		entityLineQuery()
	}
	root = {
		createBiome()
		imageSpaces()
		createItem()
		loadVersionedJson()
		createTreasure()
		getMatchingTenants()
		monsterSkillParameter()
		getConfiguration()
		npcVariant()
		itemHasTag()
		imageSize()
		projectileGravityMultiplier()
		nonEmptyRegion()
		evalFunction2()
		projectileConfig()
		materialMiningSound()
		generateName()
		isTreasurePool()
		hasTech()
		behaviorModule()
		itemConfig()
		treeStemDirectory()
		evalFunction()
		techConfig()
		npcConfig()
		setConfigurationPath()
		getConfigurationPath()
		materialHealth()
		materialFootstepSound()
		monsterMovementSettings()
		materialPath()
		setConfiguration()
		monsterPortrait()
		itemType()
		questConfig()
		recipesForItem()
		assetJson()
		treeFoliageDirectory()
		techType()
		liquidStatusEffects()
		makeCurrentVersionedJson()
		itemTags()
		tenantConfig()
		npcPortrait()
	}
	jsize()
	status = {
		setResourceLocked()
		resourcePercentage()
		addPersistentEffects()
		removeEphemeralEffect()
		resource()
		setResourcePercentage()
		resourcePositive()
		damageTakenSince()
		statPositive()
		stat()
		statusProperty()
		activeUniqueStatusEffectSummary()
		inflictedHitsSince()
		resourceMax()
		setStatusProperty()
		setPersistentEffects()
		resetAllResources()
		addEphemeralEffects()
		overConsumeResource()
		modifyResource()
		addEphemeralEffect()
		getPersistentEffects()
		resetResource()
		consumeResource()
		clearPersistentEffects()
		modifyResourcePercentage()
		clearEphemeralEffects()
		resourceNames()
		addPersistentEffect()
		resourceLocked()
		clearAllPersistentEffects()
		inflictedDamageSince()
		isResource()
		setResource()
		giveResource()
	}
	xpcall()
	getmetatable()
	utf8 = {
		len()
		codepoint()
		offset()
		codes()
		charpattern = "[
[22:51:36.241] [Warn] 	select()
	rawequal()
	rawset()
	string = {
		gmatch()
		char()
		sub()
		unpack()
		upper()
		lower()
		find()
		rep()
		dump()
		len()
		reverse()
		packsize()
		pack()
		byte()
		match()
		format()
		gsub()
	}
	require()
	pairs()
	next()
	jobject()
	math = {
		pi = 3.1415926535898
		rad()
		max()
		sqrt()
		random()
		floor()
		log()
		acos()
		fmod()
		mininteger = -9223372036854775808
		type()
		huge = inf
		randomseed()
		deg()
		exp()
		maxinteger = 9223372036854775807
		cos()
		min()
		tointeger()
		modf()
		asin()
		tan()
		atan()
		abs()
		sin()
		ult()
		ceil()
	}
	print()
	pcall()
	type()
	init()
	setmetatable()
	jresize()
	ic = {
		checkStack()
		itemAmount()
		stripColor()
		quickstack()
		itemConfig()
		amountEquipped()
		sortFunc()
		lock()
		giveBack()
		renameThis()
		sort()
		searchBox()
		sort_relative()
		clientVersion = 1
		renameButton()
		searchButton()
		getQuality()
	}
	player = {
		equippedTech()
		altHandItem()
		giveEssentialItem()
		consumeTaggedItem()
		setUniverseFlag()
		species()
		itemsWithTag()
		worldId()
		warp()
		completeMission()
		inventoryTags()
		upgradeShip()
		hasQuest()
		consumeItem()
		gender()
		primaryHandItem()
		essentialItem()
		equippedItem()
		setIntroComplete()
		playTime()
		enabledTechs()
		recordEvent()
		playCinematic()
		introComplete()
		hasCompletedQuest()
		makeTechAvailable()
		consumeItemWithParameter()
		startQuest()
		hasItemWithParameter()
		getItemWithParameter()
		lounge()
		enableTech()
		equipTech()
		enableMission()
		removeEssentialItem()
		isLounging()
		availableTechs()
		primaryHandItemTags()
		makeTechUnavailable()
		confirm()
		serverUuid()
		addBookmark()
		altHandItemTags()
		cleanupItems()
		radioMessage()
		setEquippedItem()
		ownShipWorldId()
		hasItem()
		canStartQuest()
		giveBlueprint()
		hasCountOfItem()
		shipUpgrades()
		giveItem()
	}
	config = {
		getParameter()
	}
	self = {
	}
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	world = {
		spawnItem()
		entityPosition()
		entityHealth()
		damageTileArea()
		day()
		placeMaterial()
		entityDescription()
		containerPutItemsAt()
		entityVelocity()
		damageTiles()
		entityHandItem()
		objectAt()
		setProperty()
		containerItemApply()
		containerClose()
		distance()
		findUniqueEntity()
		gravity()
		rectTileCollision()
		entitySpecies()
		platformerPathStart()
		containerOpen()
		containerTakeAll()
		breathable()
		npcType()
		containerAddItems()
		dayLength()
		loungeableOccupied()
		placeObject()
		isTileProtected()
		destroyLiquid()
		debugLine()
		spawnLiquid()
		entityCanDamage()
		containerItemsCanFit()
		xwrap()
		entityUniqueId()
		itemDropQuery()
		lightLevel()
		placeMod()
		spawnNpc()
		spawnTreasure()
		time()
		underground()
		spawnVehicle()
		spawnMonster()
		timeOfDay()
		findPlatformerPath()
		debugPoly()
		containerTakeNumItemsAt()
		isMonster()
		farmableStage()
		polyCollision()
		objectLineQuery()
		entityHasCountOfItem()
		entityHandItemDescriptor()
		tileIsOccupied()
		resolvePolyCollision()
		pointCollision()
		callScriptedEntity()
		collisionBlocksAlongLine()
		containerStackItems()
		objectSpaces()
		containerConsume()
		spawnStagehand()
		spawnProjectile()
		stagehandType()
		entityQuery()
		lineTileCollision()
		containerSwapItemsNoCombine()
		liquidAlongLine()
		playerQuery()
		objectQuery()
		entityGender()
		rectCollision()
		containerItemAt()
		polyContains()
		containerTakeAt()
		magnitude()
		mod()
		containerSwapItems()
		isNpc()
		lineCollision()
		getObjectParameter()
		debugPoint()
		pointTileCollision()
		containerItemsFitWhere()
		containerAvailable()
		getProperty()
		containerItems()
		threatLevel()
		entityType()
		sendEntityMessage()
		material()
		liquidAt()
		containerSize()
		debugText()
		monsterType()
		entityMoney()
		nearestTo()
		npcLineQuery()
		entityPortrait()
		entityName()
		entityDamageTeam()
		containerConsumeAt()
		entityAggressive()
		windLevel()
		monsterQuery()
		entityExists()
		loungeableQuery()
		npcQuery()
		entityLineQuery()
	}
	root = {
		createBiome()
		imageSpaces()
		createItem()
		loadVersionedJson()
		createTreasure()
		getMatchingTenants()
		monsterSkillParameter()
		getConfiguration()
		npcVariant()
		itemHasTag()
		imageSize()
		projectileGravityMultiplier()
		nonEmptyRegion()
		evalFunction2()
		projectileConfig()
		materialMiningSound()
		generateName()
		isTreasurePool()
		hasTech()
		behaviorModule()
		itemConfig()
		treeStemDirectory()
		evalFunction()
		techConfig()
		npcConfig()
		setConfigurationPath()
		getConfigurationPath()
		materialHealth()
		materialFootstepSound()
		monsterMovementSettings()
		materialPath()
		setConfiguration()
		monsterPortrait()
		itemType()
		questConfig()
		recipesForItem()
		assetJson()
		treeFoliageDirectory()
		techType()
		liquidStatusEffects()
		makeCurrentVersionedJson()
		itemTags()
		tenantConfig()
		npcPortrait()
	}
	jsize()
	status = {
		setResourceLocked()
		resourcePercentage()
		addPersistentEffects()
		removeEphemeralEffect()
		resource()
		setResourcePercentage()
		resourcePositive()
		damageTakenSince()
		statPositive()
		stat()
		statusProperty()
		activeUniqueStatusEffectSummary()
		inflictedHitsSince()
		resourceMax()
		setStatusProperty()
		setPersistentEffects()
		resetAllResources()
		addEphemeralEffects()
		overConsumeResource()
		modifyResource()
		addEphemeralEffect()
		getPersistentEffects()
		resetResource()
		consumeResource()
		clearPersistentEffects()
		modifyResourcePercentage()
		clearEphemeralEffects()
		resourceNames()
		addPersistentEffect()
		resourceLocked()
		clearAllPersistentEffects()
		inflictedDamageSince()
		isResource()
		setResource()
		giveResource()
	}
	xpcall()
	getmetatable()
	utf8 = {
		len()
		codepoint()
		offset()
		codes()
		charpattern = "[
[22:51:45.127] [Warn] 	select()
	rawequal()
	rawset()
	string = {
		gmatch()
		char()
		sub()
		unpack()
		upper()
		lower()
		find()
		rep()
		dump()
		len()
		reverse()
		packsize()
		pack()
		byte()
		match()
		format()
		gsub()
	}
	require()
	pairs()
	next()
	jobject()
	math = {
		pi = 3.1415926535898
		rad()
		max()
		sqrt()
		random()
		floor()
		log()
		acos()
		fmod()
		mininteger = -9223372036854775808
		type()
		huge = inf
		randomseed()
		deg()
		exp()
		maxinteger = 9223372036854775807
		cos()
		min()
		tointeger()
		modf()
		asin()
		tan()
		atan()
		abs()
		sin()
		ult()
		ceil()
	}
	print()
	pcall()
	type()
	init()
	setmetatable()
	jresize()
	ic = {
		checkStack()
		itemAmount()
		stripColor()
		quickstack()
		itemConfig()
		amountEquipped()
		sortFunc()
		lock()
		giveBack()
		renameThis()
		sort()
		searchBox()
		sort_relative()
		clientVersion = 1
		renameButton()
		searchButton()
		getQuality()
	}
	player = {
		equippedTech()
		altHandItem()
		giveEssentialItem()
		consumeTaggedItem()
		setUniverseFlag()
		species()
		itemsWithTag()
		worldId()
		warp()
		completeMission()
		inventoryTags()
		upgradeShip()
		hasQuest()
		consumeItem()
		gender()
		primaryHandItem()
		essentialItem()
		equippedItem()
		setIntroComplete()
		playTime()
		enabledTechs()
		recordEvent()
		playCinematic()
		introComplete()
		hasCompletedQuest()
		makeTechAvailable()
		consumeItemWithParameter()
		startQuest()
		hasItemWithParameter()
		getItemWithParameter()
		lounge()
		enableTech()
		equipTech()
		enableMission()
		removeEssentialItem()
		isLounging()
		availableTechs()
		primaryHandItemTags()
		makeTechUnavailable()
		confirm()
		serverUuid()
		addBookmark()
		altHandItemTags()
		cleanupItems()
		radioMessage()
		setEquippedItem()
		ownShipWorldId()
		hasItem()
		canStartQuest()
		giveBlueprint()
		hasCountOfItem()
		shipUpgrades()
		giveItem()
	}
	config = {
		getParameter()
	}
	self = {
	}
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	world = {
		spawnItem()
		entityPosition()
		entityHealth()
		damageTileArea()
		day()
		placeMaterial()
		entityDescription()
		containerPutItemsAt()
		entityVelocity()
		damageTiles()
		entityHandItem()
		objectAt()
		setProperty()
		containerItemApply()
		containerClose()
		distance()
		findUniqueEntity()
		gravity()
		rectTileCollision()
		entitySpecies()
		platformerPathStart()
		containerOpen()
		containerTakeAll()
		breathable()
		npcType()
		containerAddItems()
		dayLength()
		loungeableOccupied()
		placeObject()
		isTileProtected()
		destroyLiquid()
		debugLine()
		spawnLiquid()
		entityCanDamage()
		containerItemsCanFit()
		xwrap()
		entityUniqueId()
		itemDropQuery()
		lightLevel()
		placeMod()
		spawnNpc()
		spawnTreasure()
		time()
		underground()
		spawnVehicle()
		spawnMonster()
		timeOfDay()
		findPlatformerPath()
		debugPoly()
		containerTakeNumItemsAt()
		isMonster()
		farmableStage()
		polyCollision()
		objectLineQuery()
		entityHasCountOfItem()
		entityHandItemDescriptor()
		tileIsOccupied()
		resolvePolyCollision()
		pointCollision()
		callScriptedEntity()
		collisionBlocksAlongLine()
		containerStackItems()
		objectSpaces()
		containerConsume()
		spawnStagehand()
		spawnProjectile()
		stagehandType()
		entityQuery()
		lineTileCollision()
		containerSwapItemsNoCombine()
		liquidAlongLine()
		playerQuery()
		objectQuery()
		entityGender()
		rectCollision()
		containerItemAt()
		polyContains()
		containerTakeAt()
		magnitude()
		mod()
		containerSwapItems()
		isNpc()
		lineCollision()
		getObjectParameter()
		debugPoint()
		pointTileCollision()
		containerItemsFitWhere()
		containerAvailable()
		getProperty()
		containerItems()
		threatLevel()
		entityType()
		sendEntityMessage()
		material()
		liquidAt()
		containerSize()
		debugText()
		monsterType()
		entityMoney()
		nearestTo()
		npcLineQuery()
		entityPortrait()
		entityName()
		entityDamageTeam()
		containerConsumeAt()
		entityAggressive()
		windLevel()
		monsterQuery()
		entityExists()
		loungeableQuery()
		npcQuery()
		entityLineQuery()
	}
	root = {
		createBiome()
		imageSpaces()
		createItem()
		loadVersionedJson()
		createTreasure()
		getMatchingTenants()
		monsterSkillParameter()
		getConfiguration()
		npcVariant()
		itemHasTag()
		imageSize()
		projectileGravityMultiplier()
		nonEmptyRegion()
		evalFunction2()
		projectileConfig()
		materialMiningSound()
		generateName()
		isTreasurePool()
		hasTech()
		behaviorModule()
		itemConfig()
		treeStemDirectory()
		evalFunction()
		techConfig()
		npcConfig()
		setConfigurationPath()
		getConfigurationPath()
		materialHealth()
		materialFootstepSound()
		monsterMovementSettings()
		materialPath()
		setConfiguration()
		monsterPortrait()
		itemType()
		questConfig()
		recipesForItem()
		assetJson()
		treeFoliageDirectory()
		techType()
		liquidStatusEffects()
		makeCurrentVersionedJson()
		itemTags()
		tenantConfig()
		npcPortrait()
	}
	jsize()
	status = {
		setResourceLocked()
		resourcePercentage()
		addPersistentEffects()
		removeEphemeralEffect()
		resource()
		setResourcePercentage()
		resourcePositive()
		damageTakenSince()
		statPositive()
		stat()
		statusProperty()
		activeUniqueStatusEffectSummary()
		inflictedHitsSince()
		resourceMax()
		setStatusProperty()
		setPersistentEffects()
		resetAllResources()
		addEphemeralEffects()
		overConsumeResource()
		modifyResource()
		addEphemeralEffect()
		getPersistentEffects()
		resetResource()
		consumeResource()
		clearPersistentEffects()
		modifyResourcePercentage()
		clearEphemeralEffects()
		resourceNames()
		addPersistentEffect()
		resourceLocked()
		clearAllPersistentEffects()
		inflictedDamageSince()
		isResource()
		setResource()
		giveResource()
	}
	xpcall()
	getmetatable()
	utf8 = {
		len()
		codepoint()
		offset()
		codes()
		charpattern = "[
[22:51:48.230] [Warn] 	select()
	rawequal()
	rawset()
	string = {
		gmatch()
		char()
		sub()
		unpack()
		upper()
		lower()
		find()
		rep()
		dump()
		len()
		reverse()
		packsize()
		pack()
		byte()
		match()
		format()
		gsub()
	}
	require()
	pairs()
	next()
	jobject()
	math = {
		pi = 3.1415926535898
		rad()
		max()
		sqrt()
		random()
		floor()
		log()
		acos()
		fmod()
		mininteger = -9223372036854775808
		type()
		huge = inf
		randomseed()
		deg()
		exp()
		maxinteger = 9223372036854775807
		cos()
		min()
		tointeger()
		modf()
		asin()
		tan()
		atan()
		abs()
		sin()
		ult()
		ceil()
	}
	print()
	pcall()
	type()
	init()
	setmetatable()
	jresize()
	ic = {
		checkStack()
		itemAmount()
		stripColor()
		quickstack()
		itemConfig()
		amountEquipped()
		sortFunc()
		lock()
		giveBack()
		renameThis()
		sort()
		searchBox()
		sort_relative()
		clientVersion = 1
		renameButton()
		searchButton()
		getQuality()
	}
	player = {
		equippedTech()
		altHandItem()
		giveEssentialItem()
		consumeTaggedItem()
		setUniverseFlag()
		species()
		itemsWithTag()
		worldId()
		warp()
		completeMission()
		inventoryTags()
		upgradeShip()
		hasQuest()
		consumeItem()
		gender()
		primaryHandItem()
		essentialItem()
		equippedItem()
		setIntroComplete()
		playTime()
		enabledTechs()
		recordEvent()
		playCinematic()
		introComplete()
		hasCompletedQuest()
		makeTechAvailable()
		consumeItemWithParameter()
		startQuest()
		hasItemWithParameter()
		getItemWithParameter()
		lounge()
		enableTech()
		equipTech()
		enableMission()
		removeEssentialItem()
		isLounging()
		availableTechs()
		primaryHandItemTags()
		makeTechUnavailable()
		confirm()
		serverUuid()
		addBookmark()
		altHandItemTags()
		cleanupItems()
		radioMessage()
		setEquippedItem()
		ownShipWorldId()
		hasItem()
		canStartQuest()
		giveBlueprint()
		hasCountOfItem()
		shipUpgrades()
		giveItem()
	}
	config = {
		getParameter()
	}
	self = {
	}
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	world = {
		spawnItem()
		entityPosition()
		entityHealth()
		damageTileArea()
		day()
		placeMaterial()
		entityDescription()
		containerPutItemsAt()
		entityVelocity()
		damageTiles()
		entityHandItem()
		objectAt()
		setProperty()
		containerItemApply()
		containerClose()
		distance()
		findUniqueEntity()
		gravity()
		rectTileCollision()
		entitySpecies()
		platformerPathStart()
		containerOpen()
		containerTakeAll()
		breathable()
		npcType()
		containerAddItems()
		dayLength()
		loungeableOccupied()
		placeObject()
		isTileProtected()
		destroyLiquid()
		debugLine()
		spawnLiquid()
		entityCanDamage()
		containerItemsCanFit()
		xwrap()
		entityUniqueId()
		itemDropQuery()
		lightLevel()
		placeMod()
		spawnNpc()
		spawnTreasure()
		time()
		underground()
		spawnVehicle()
		spawnMonster()
		timeOfDay()
		findPlatformerPath()
		debugPoly()
		containerTakeNumItemsAt()
		isMonster()
		farmableStage()
		polyCollision()
		objectLineQuery()
		entityHasCountOfItem()
		entityHandItemDescriptor()
		tileIsOccupied()
		resolvePolyCollision()
		pointCollision()
		callScriptedEntity()
		collisionBlocksAlongLine()
		containerStackItems()
		objectSpaces()
		containerConsume()
		spawnStagehand()
		spawnProjectile()
		stagehandType()
		entityQuery()
		lineTileCollision()
		containerSwapItemsNoCombine()
		liquidAlongLine()
		playerQuery()
		objectQuery()
		entityGender()
		rectCollision()
		containerItemAt()
		polyContains()
		containerTakeAt()
		magnitude()
		mod()
		containerSwapItems()
		isNpc()
		lineCollision()
		getObjectParameter()
		debugPoint()
		pointTileCollision()
		containerItemsFitWhere()
		containerAvailable()
		getProperty()
		containerItems()
		threatLevel()
		entityType()
		sendEntityMessage()
		material()
		liquidAt()
		containerSize()
		debugText()
		monsterType()
		entityMoney()
		nearestTo()
		npcLineQuery()
		entityPortrait()
		entityName()
		entityDamageTeam()
		containerConsumeAt()
		entityAggressive()
		windLevel()
		monsterQuery()
		entityExists()
		loungeableQuery()
		npcQuery()
		entityLineQuery()
	}
	root = {
		createBiome()
		imageSpaces()
		createItem()
		loadVersionedJson()
		createTreasure()
		getMatchingTenants()
		monsterSkillParameter()
		getConfiguration()
		npcVariant()
		itemHasTag()
		imageSize()
		projectileGravityMultiplier()
		nonEmptyRegion()
		evalFunction2()
		projectileConfig()
		materialMiningSound()
		generateName()
		isTreasurePool()
		hasTech()
		behaviorModule()
		itemConfig()
		treeStemDirectory()
		evalFunction()
		techConfig()
		npcConfig()
		setConfigurationPath()
		getConfigurationPath()
		materialHealth()
		materialFootstepSound()
		monsterMovementSettings()
		materialPath()
		setConfiguration()
		monsterPortrait()
		itemType()
		questConfig()
		recipesForItem()
		assetJson()
		treeFoliageDirectory()
		techType()
		liquidStatusEffects()
		makeCurrentVersionedJson()
		itemTags()
		tenantConfig()
		npcPortrait()
	}
	jsize()
	status = {
		setResourceLocked()
		resourcePercentage()
		addPersistentEffects()
		removeEphemeralEffect()
		resource()
		setResourcePercentage()
		resourcePositive()
		damageTakenSince()
		statPositive()
		stat()
		statusProperty()
		activeUniqueStatusEffectSummary()
		inflictedHitsSince()
		resourceMax()
		setStatusProperty()
		setPersistentEffects()
		resetAllResources()
		addEphemeralEffects()
		overConsumeResource()
		modifyResource()
		addEphemeralEffect()
		getPersistentEffects()
		resetResource()
		consumeResource()
		clearPersistentEffects()
		modifyResourcePercentage()
		clearEphemeralEffects()
		resourceNames()
		addPersistentEffect()
		resourceLocked()
		clearAllPersistentEffects()
		inflictedDamageSince()
		isResource()
		setResource()
		giveResource()
	}
	xpcall()
	getmetatable()
	utf8 = {
		len()
		codepoint()
		offset()
		codes()
		charpattern = "[
[22:51:51.068] [Info] [IC] [Sort] Time elapsed: 0.011
[22:51:52.812] [Warn] 	select()
	rawequal()
	rawset()
	string = {
		gmatch()
		char()
		sub()
		unpack()
		upper()
		lower()
		find()
		rep()
		dump()
		len()
		reverse()
		packsize()
		pack()
		byte()
		match()
		format()
		gsub()
	}
	require()
	pairs()
	next()
	jobject()
	math = {
		pi = 3.1415926535898
		rad()
		max()
		sqrt()
		random()
		floor()
		log()
		acos()
		fmod()
		mininteger = -9223372036854775808
		type()
		huge = inf
		randomseed()
		deg()
		exp()
		maxinteger = 9223372036854775807
		cos()
		min()
		tointeger()
		modf()
		asin()
		tan()
		atan()
		abs()
		sin()
		ult()
		ceil()
	}
	print()
	pcall()
	type()
	init()
	setmetatable()
	jresize()
	ic = {
		checkStack()
		itemAmount()
		stripColor()
		quickstack()
		itemConfig()
		amountEquipped()
		sortFunc()
		lock()
		giveBack()
		renameThis()
		sort()
		searchBox()
		sort_relative()
		clientVersion = 1
		renameButton()
		searchButton()
		getQuality()
	}
	player = {
		equippedTech()
		altHandItem()
		giveEssentialItem()
		consumeTaggedItem()
		setUniverseFlag()
		species()
		itemsWithTag()
		worldId()
		warp()
		completeMission()
		inventoryTags()
		upgradeShip()
		hasQuest()
		consumeItem()
		gender()
		primaryHandItem()
		essentialItem()
		equippedItem()
		setIntroComplete()
		playTime()
		enabledTechs()
		recordEvent()
		playCinematic()
		introComplete()
		hasCompletedQuest()
		makeTechAvailable()
		consumeItemWithParameter()
		startQuest()
		hasItemWithParameter()
		getItemWithParameter()
		lounge()
		enableTech()
		equipTech()
		enableMission()
		removeEssentialItem()
		isLounging()
		availableTechs()
		primaryHandItemTags()
		makeTechUnavailable()
		confirm()
		serverUuid()
		addBookmark()
		altHandItemTags()
		cleanupItems()
		radioMessage()
		setEquippedItem()
		ownShipWorldId()
		hasItem()
		canStartQuest()
		giveBlueprint()
		hasCountOfItem()
		shipUpgrades()
		giveItem()
	}
	config = {
		getParameter()
	}
	self = {
	}
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	world = {
		spawnItem()
		entityPosition()
		entityHealth()
		damageTileArea()
		day()
		placeMaterial()
		entityDescription()
		containerPutItemsAt()
		entityVelocity()
		damageTiles()
		entityHandItem()
		objectAt()
		setProperty()
		containerItemApply()
		containerClose()
		distance()
		findUniqueEntity()
		gravity()
		rectTileCollision()
		entitySpecies()
		platformerPathStart()
		containerOpen()
		containerTakeAll()
		breathable()
		npcType()
		containerAddItems()
		dayLength()
		loungeableOccupied()
		placeObject()
		isTileProtected()
		destroyLiquid()
		debugLine()
		spawnLiquid()
		entityCanDamage()
		containerItemsCanFit()
		xwrap()
		entityUniqueId()
		itemDropQuery()
		lightLevel()
		placeMod()
		spawnNpc()
		spawnTreasure()
		time()
		underground()
		spawnVehicle()
		spawnMonster()
		timeOfDay()
		findPlatformerPath()
		debugPoly()
		containerTakeNumItemsAt()
		isMonster()
		farmableStage()
		polyCollision()
		objectLineQuery()
		entityHasCountOfItem()
		entityHandItemDescriptor()
		tileIsOccupied()
		resolvePolyCollision()
		pointCollision()
		callScriptedEntity()
		collisionBlocksAlongLine()
		containerStackItems()
		objectSpaces()
		containerConsume()
		spawnStagehand()
		spawnProjectile()
		stagehandType()
		entityQuery()
		lineTileCollision()
		containerSwapItemsNoCombine()
		liquidAlongLine()
		playerQuery()
		objectQuery()
		entityGender()
		rectCollision()
		containerItemAt()
		polyContains()
		containerTakeAt()
		magnitude()
		mod()
		containerSwapItems()
		isNpc()
		lineCollision()
		getObjectParameter()
		debugPoint()
		pointTileCollision()
		containerItemsFitWhere()
		containerAvailable()
		getProperty()
		containerItems()
		threatLevel()
		entityType()
		sendEntityMessage()
		material()
		liquidAt()
		containerSize()
		debugText()
		monsterType()
		entityMoney()
		nearestTo()
		npcLineQuery()
		entityPortrait()
		entityName()
		entityDamageTeam()
		containerConsumeAt()
		entityAggressive()
		windLevel()
		monsterQuery()
		entityExists()
		loungeableQuery()
		npcQuery()
		entityLineQuery()
	}
	root = {
		createBiome()
		imageSpaces()
		createItem()
		loadVersionedJson()
		createTreasure()
		getMatchingTenants()
		monsterSkillParameter()
		getConfiguration()
		npcVariant()
		itemHasTag()
		imageSize()
		projectileGravityMultiplier()
		nonEmptyRegion()
		evalFunction2()
		projectileConfig()
		materialMiningSound()
		generateName()
		isTreasurePool()
		hasTech()
		behaviorModule()
		itemConfig()
		treeStemDirectory()
		evalFunction()
		techConfig()
		npcConfig()
		setConfigurationPath()
		getConfigurationPath()
		materialHealth()
		materialFootstepSound()
		monsterMovementSettings()
		materialPath()
		setConfiguration()
		monsterPortrait()
		itemType()
		questConfig()
		recipesForItem()
		assetJson()
		treeFoliageDirectory()
		techType()
		liquidStatusEffects()
		makeCurrentVersionedJson()
		itemTags()
		tenantConfig()
		npcPortrait()
	}
	jsize()
	status = {
		setResourceLocked()
		resourcePercentage()
		addPersistentEffects()
		removeEphemeralEffect()
		resource()
		setResourcePercentage()
		resourcePositive()
		damageTakenSince()
		statPositive()
		stat()
		statusProperty()
		activeUniqueStatusEffectSummary()
		inflictedHitsSince()
		resourceMax()
		setStatusProperty()
		setPersistentEffects()
		resetAllResources()
		addEphemeralEffects()
		overConsumeResource()
		modifyResource()
		addEphemeralEffect()
		getPersistentEffects()
		resetResource()
		consumeResource()
		clearPersistentEffects()
		modifyResourcePercentage()
		clearEphemeralEffects()
		resourceNames()
		addPersistentEffect()
		resourceLocked()
		clearAllPersistentEffects()
		inflictedDamageSince()
		isResource()
		setResource()
		giveResource()
	}
	xpcall()
	getmetatable()
	utf8 = {
		len()
		codepoint()
		offset()
		codes()
		charpattern = "[
[22:51:53.861] [Warn] 	select()
	rawequal()
	rawset()
	string = {
		gmatch()
		char()
		sub()
		unpack()
		upper()
		lower()
		find()
		rep()
		dump()
		len()
		reverse()
		packsize()
		pack()
		byte()
		match()
		format()
		gsub()
	}
	require()
	pairs()
	next()
	jobject()
	math = {
		pi = 3.1415926535898
		rad()
		max()
		sqrt()
		random()
		floor()
		log()
		acos()
		fmod()
		mininteger = -9223372036854775808
		type()
		huge = inf
		randomseed()
		deg()
		exp()
		maxinteger = 9223372036854775807
		cos()
		min()
		tointeger()
		modf()
		asin()
		tan()
		atan()
		abs()
		sin()
		ult()
		ceil()
	}
	print()
	pcall()
	type()
	init()
	setmetatable()
	jresize()
	ic = {
		checkStack()
		itemAmount()
		stripColor()
		quickstack()
		itemConfig()
		amountEquipped()
		sortFunc()
		lock()
		giveBack()
		renameThis()
		sort()
		searchBox()
		sort_relative()
		clientVersion = 1
		renameButton()
		searchButton()
		getQuality()
	}
	player = {
		equippedTech()
		altHandItem()
		giveEssentialItem()
		consumeTaggedItem()
		setUniverseFlag()
		species()
		itemsWithTag()
		worldId()
		warp()
		completeMission()
		inventoryTags()
		upgradeShip()
		hasQuest()
		consumeItem()
		gender()
		primaryHandItem()
		essentialItem()
		equippedItem()
		setIntroComplete()
		playTime()
		enabledTechs()
		recordEvent()
		playCinematic()
		introComplete()
		hasCompletedQuest()
		makeTechAvailable()
		consumeItemWithParameter()
		startQuest()
		hasItemWithParameter()
		getItemWithParameter()
		lounge()
		enableTech()
		equipTech()
		enableMission()
		removeEssentialItem()
		isLounging()
		availableTechs()
		primaryHandItemTags()
		makeTechUnavailable()
		confirm()
		serverUuid()
		addBookmark()
		altHandItemTags()
		cleanupItems()
		radioMessage()
		setEquippedItem()
		ownShipWorldId()
		hasItem()
		canStartQuest()
		giveBlueprint()
		hasCountOfItem()
		shipUpgrades()
		giveItem()
	}
	config = {
		getParameter()
	}
	self = {
	}
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	world = {
		spawnItem()
		entityPosition()
		entityHealth()
		damageTileArea()
		day()
		placeMaterial()
		entityDescription()
		containerPutItemsAt()
		entityVelocity()
		damageTiles()
		entityHandItem()
		objectAt()
		setProperty()
		containerItemApply()
		containerClose()
		distance()
		findUniqueEntity()
		gravity()
		rectTileCollision()
		entitySpecies()
		platformerPathStart()
		containerOpen()
		containerTakeAll()
		breathable()
		npcType()
		containerAddItems()
		dayLength()
		loungeableOccupied()
		placeObject()
		isTileProtected()
		destroyLiquid()
		debugLine()
		spawnLiquid()
		entityCanDamage()
		containerItemsCanFit()
		xwrap()
		entityUniqueId()
		itemDropQuery()
		lightLevel()
		placeMod()
		spawnNpc()
		spawnTreasure()
		time()
		underground()
		spawnVehicle()
		spawnMonster()
		timeOfDay()
		findPlatformerPath()
		debugPoly()
		containerTakeNumItemsAt()
		isMonster()
		farmableStage()
		polyCollision()
		objectLineQuery()
		entityHasCountOfItem()
		entityHandItemDescriptor()
		tileIsOccupied()
		resolvePolyCollision()
		pointCollision()
		callScriptedEntity()
		collisionBlocksAlongLine()
		containerStackItems()
		objectSpaces()
		containerConsume()
		spawnStagehand()
		spawnProjectile()
		stagehandType()
		entityQuery()
		lineTileCollision()
		containerSwapItemsNoCombine()
		liquidAlongLine()
		playerQuery()
		objectQuery()
		entityGender()
		rectCollision()
		containerItemAt()
		polyContains()
		containerTakeAt()
		magnitude()
		mod()
		containerSwapItems()
		isNpc()
		lineCollision()
		getObjectParameter()
		debugPoint()
		pointTileCollision()
		containerItemsFitWhere()
		containerAvailable()
		getProperty()
		containerItems()
		threatLevel()
		entityType()
		sendEntityMessage()
		material()
		liquidAt()
		containerSize()
		debugText()
		monsterType()
		entityMoney()
		nearestTo()
		npcLineQuery()
		entityPortrait()
		entityName()
		entityDamageTeam()
		containerConsumeAt()
		entityAggressive()
		windLevel()
		monsterQuery()
		entityExists()
		loungeableQuery()
		npcQuery()
		entityLineQuery()
	}
	root = {
		createBiome()
		imageSpaces()
		createItem()
		loadVersionedJson()
		createTreasure()
		getMatchingTenants()
		monsterSkillParameter()
		getConfiguration()
		npcVariant()
		itemHasTag()
		imageSize()
		projectileGravityMultiplier()
		nonEmptyRegion()
		evalFunction2()
		projectileConfig()
		materialMiningSound()
		generateName()
		isTreasurePool()
		hasTech()
		behaviorModule()
		itemConfig()
		treeStemDirectory()
		evalFunction()
		techConfig()
		npcConfig()
		setConfigurationPath()
		getConfigurationPath()
		materialHealth()
		materialFootstepSound()
		monsterMovementSettings()
		materialPath()
		setConfiguration()
		monsterPortrait()
		itemType()
		questConfig()
		recipesForItem()
		assetJson()
		treeFoliageDirectory()
		techType()
		liquidStatusEffects()
		makeCurrentVersionedJson()
		itemTags()
		tenantConfig()
		npcPortrait()
	}
	jsize()
	status = {
		setResourceLocked()
		resourcePercentage()
		addPersistentEffects()
		removeEphemeralEffect()
		resource()
		setResourcePercentage()
		resourcePositive()
		damageTakenSince()
		statPositive()
		stat()
		statusProperty()
		activeUniqueStatusEffectSummary()
		inflictedHitsSince()
		resourceMax()
		setStatusProperty()
		setPersistentEffects()
		resetAllResources()
		addEphemeralEffects()
		overConsumeResource()
		modifyResource()
		addEphemeralEffect()
		getPersistentEffects()
		resetResource()
		consumeResource()
		clearPersistentEffects()
		modifyResourcePercentage()
		clearEphemeralEffects()
		resourceNames()
		addPersistentEffect()
		resourceLocked()
		clearAllPersistentEffects()
		inflictedDamageSince()
		isResource()
		setResource()
		giveResource()
	}
	xpcall()
	getmetatable()
	utf8 = {
		len()
		codepoint()
		offset()
		codes()
		charpattern = "[
[22:51:55.860] [Warn] 	select()
	rawequal()
	rawset()
	string = {
		gmatch()
		char()
		sub()
		unpack()
		upper()
		lower()
		find()
		rep()
		dump()
		len()
		reverse()
		packsize()
		pack()
		byte()
		match()
		format()
		gsub()
	}
	require()
	pairs()
	next()
	jobject()
	math = {
		pi = 3.1415926535898
		rad()
		max()
		sqrt()
		random()
		floor()
		log()
		acos()
		fmod()
		mininteger = -9223372036854775808
		type()
		huge = inf
		randomseed()
		deg()
		exp()
		maxinteger = 9223372036854775807
		cos()
		min()
		tointeger()
		modf()
		asin()
		tan()
		atan()
		abs()
		sin()
		ult()
		ceil()
	}
	print()
	pcall()
	type()
	init()
	setmetatable()
	jresize()
	ic = {
		checkStack()
		itemAmount()
		stripColor()
		quickstack()
		itemConfig()
		amountEquipped()
		sortFunc()
		lock()
		giveBack()
		renameThis()
		sort()
		searchBox()
		sort_relative()
		clientVersion = 1
		renameButton()
		searchButton()
		getQuality()
	}
	player = {
		equippedTech()
		altHandItem()
		giveEssentialItem()
		consumeTaggedItem()
		setUniverseFlag()
		species()
		itemsWithTag()
		worldId()
		warp()
		completeMission()
		inventoryTags()
		upgradeShip()
		hasQuest()
		consumeItem()
		gender()
		primaryHandItem()
		essentialItem()
		equippedItem()
		setIntroComplete()
		playTime()
		enabledTechs()
		recordEvent()
		playCinematic()
		introComplete()
		hasCompletedQuest()
		makeTechAvailable()
		consumeItemWithParameter()
		startQuest()
		hasItemWithParameter()
		getItemWithParameter()
		lounge()
		enableTech()
		equipTech()
		enableMission()
		removeEssentialItem()
		isLounging()
		availableTechs()
		primaryHandItemTags()
		makeTechUnavailable()
		confirm()
		serverUuid()
		addBookmark()
		altHandItemTags()
		cleanupItems()
		radioMessage()
		setEquippedItem()
		ownShipWorldId()
		hasItem()
		canStartQuest()
		giveBlueprint()
		hasCountOfItem()
		shipUpgrades()
		giveItem()
	}
	config = {
		getParameter()
	}
	self = {
	}
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	world = {
		spawnItem()
		entityPosition()
		entityHealth()
		damageTileArea()
		day()
		placeMaterial()
		entityDescription()
		containerPutItemsAt()
		entityVelocity()
		damageTiles()
		entityHandItem()
		objectAt()
		setProperty()
		containerItemApply()
		containerClose()
		distance()
		findUniqueEntity()
		gravity()
		rectTileCollision()
		entitySpecies()
		platformerPathStart()
		containerOpen()
		containerTakeAll()
		breathable()
		npcType()
		containerAddItems()
		dayLength()
		loungeableOccupied()
		placeObject()
		isTileProtected()
		destroyLiquid()
		debugLine()
		spawnLiquid()
		entityCanDamage()
		containerItemsCanFit()
		xwrap()
		entityUniqueId()
		itemDropQuery()
		lightLevel()
		placeMod()
		spawnNpc()
		spawnTreasure()
		time()
		underground()
		spawnVehicle()
		spawnMonster()
		timeOfDay()
		findPlatformerPath()
		debugPoly()
		containerTakeNumItemsAt()
		isMonster()
		farmableStage()
		polyCollision()
		objectLineQuery()
		entityHasCountOfItem()
		entityHandItemDescriptor()
		tileIsOccupied()
		resolvePolyCollision()
		pointCollision()
		callScriptedEntity()
		collisionBlocksAlongLine()
		containerStackItems()
		objectSpaces()
		containerConsume()
		spawnStagehand()
		spawnProjectile()
		stagehandType()
		entityQuery()
		lineTileCollision()
		containerSwapItemsNoCombine()
		liquidAlongLine()
		playerQuery()
		objectQuery()
		entityGender()
		rectCollision()
		containerItemAt()
		polyContains()
		containerTakeAt()
		magnitude()
		mod()
		containerSwapItems()
		isNpc()
		lineCollision()
		getObjectParameter()
		debugPoint()
		pointTileCollision()
		containerItemsFitWhere()
		containerAvailable()
		getProperty()
		containerItems()
		threatLevel()
		entityType()
		sendEntityMessage()
		material()
		liquidAt()
		containerSize()
		debugText()
		monsterType()
		entityMoney()
		nearestTo()
		npcLineQuery()
		entityPortrait()
		entityName()
		entityDamageTeam()
		containerConsumeAt()
		entityAggressive()
		windLevel()
		monsterQuery()
		entityExists()
		loungeableQuery()
		npcQuery()
		entityLineQuery()
	}
	root = {
		createBiome()
		imageSpaces()
		createItem()
		loadVersionedJson()
		createTreasure()
		getMatchingTenants()
		monsterSkillParameter()
		getConfiguration()
		npcVariant()
		itemHasTag()
		imageSize()
		projectileGravityMultiplier()
		nonEmptyRegion()
		evalFunction2()
		projectileConfig()
		materialMiningSound()
		generateName()
		isTreasurePool()
		hasTech()
		behaviorModule()
		itemConfig()
		treeStemDirectory()
		evalFunction()
		techConfig()
		npcConfig()
		setConfigurationPath()
		getConfigurationPath()
		materialHealth()
		materialFootstepSound()
		monsterMovementSettings()
		materialPath()
		setConfiguration()
		monsterPortrait()
		itemType()
		questConfig()
		recipesForItem()
		assetJson()
		treeFoliageDirectory()
		techType()
		liquidStatusEffects()
		makeCurrentVersionedJson()
		itemTags()
		tenantConfig()
		npcPortrait()
	}
	jsize()
	status = {
		setResourceLocked()
		resourcePercentage()
		addPersistentEffects()
		removeEphemeralEffect()
		resource()
		setResourcePercentage()
		resourcePositive()
		damageTakenSince()
		statPositive()
		stat()
		statusProperty()
		activeUniqueStatusEffectSummary()
		inflictedHitsSince()
		resourceMax()
		setStatusProperty()
		setPersistentEffects()
		resetAllResources()
		addEphemeralEffects()
		overConsumeResource()
		modifyResource()
		addEphemeralEffect()
		getPersistentEffects()
		resetResource()
		consumeResource()
		clearPersistentEffects()
		modifyResourcePercentage()
		clearEphemeralEffects()
		resourceNames()
		addPersistentEffect()
		resourceLocked()
		clearAllPersistentEffects()
		inflictedDamageSince()
		isResource()
		setResource()
		giveResource()
	}
	xpcall()
	getmetatable()
	utf8 = {
		len()
		codepoint()
		offset()
		codes()
		charpattern = "[
[22:51:57.979] [Warn] 	select()
	rawequal()
	rawset()
	string = {
		gmatch()
		char()
		sub()
		unpack()
		upper()
		lower()
		find()
		rep()
		dump()
		len()
		reverse()
		packsize()
		pack()
		byte()
		match()
		format()
		gsub()
	}
	require()
	pairs()
	next()
	jobject()
	math = {
		pi = 3.1415926535898
		rad()
		max()
		sqrt()
		random()
		floor()
		log()
		acos()
		fmod()
		mininteger = -9223372036854775808
		type()
		huge = inf
		randomseed()
		deg()
		exp()
		maxinteger = 9223372036854775807
		cos()
		min()
		tointeger()
		modf()
		asin()
		tan()
		atan()
		abs()
		sin()
		ult()
		ceil()
	}
	print()
	pcall()
	type()
	init()
	setmetatable()
	jresize()
	ic = {
		checkStack()
		itemAmount()
		stripColor()
		quickstack()
		itemConfig()
		amountEquipped()
		sortFunc()
		lock()
		giveBack()
		renameThis()
		sort()
		searchBox()
		sort_relative()
		clientVersion = 1
		renameButton()
		searchButton()
		getQuality()
	}
	player = {
		equippedTech()
		altHandItem()
		giveEssentialItem()
		consumeTaggedItem()
		setUniverseFlag()
		species()
		itemsWithTag()
		worldId()
		warp()
		completeMission()
		inventoryTags()
		upgradeShip()
		hasQuest()
		consumeItem()
		gender()
		primaryHandItem()
		essentialItem()
		equippedItem()
		setIntroComplete()
		playTime()
		enabledTechs()
		recordEvent()
		playCinematic()
		introComplete()
		hasCompletedQuest()
		makeTechAvailable()
		consumeItemWithParameter()
		startQuest()
		hasItemWithParameter()
		getItemWithParameter()
		lounge()
		enableTech()
		equipTech()
		enableMission()
		removeEssentialItem()
		isLounging()
		availableTechs()
		primaryHandItemTags()
		makeTechUnavailable()
		confirm()
		serverUuid()
		addBookmark()
		altHandItemTags()
		cleanupItems()
		radioMessage()
		setEquippedItem()
		ownShipWorldId()
		hasItem()
		canStartQuest()
		giveBlueprint()
		hasCountOfItem()
		shipUpgrades()
		giveItem()
	}
	config = {
		getParameter()
	}
	self = {
	}
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	world = {
		spawnItem()
		entityPosition()
		entityHealth()
		damageTileArea()
		day()
		placeMaterial()
		entityDescription()
		containerPutItemsAt()
		entityVelocity()
		damageTiles()
		entityHandItem()
		objectAt()
		setProperty()
		containerItemApply()
		containerClose()
		distance()
		findUniqueEntity()
		gravity()
		rectTileCollision()
		entitySpecies()
		platformerPathStart()
		containerOpen()
		containerTakeAll()
		breathable()
		npcType()
		containerAddItems()
		dayLength()
		loungeableOccupied()
		placeObject()
		isTileProtected()
		destroyLiquid()
		debugLine()
		spawnLiquid()
		entityCanDamage()
		containerItemsCanFit()
		xwrap()
		entityUniqueId()
		itemDropQuery()
		lightLevel()
		placeMod()
		spawnNpc()
		spawnTreasure()
		time()
		underground()
		spawnVehicle()
		spawnMonster()
		timeOfDay()
		findPlatformerPath()
		debugPoly()
		containerTakeNumItemsAt()
		isMonster()
		farmableStage()
		polyCollision()
		objectLineQuery()
		entityHasCountOfItem()
		entityHandItemDescriptor()
		tileIsOccupied()
		resolvePolyCollision()
		pointCollision()
		callScriptedEntity()
		collisionBlocksAlongLine()
		containerStackItems()
		objectSpaces()
		containerConsume()
		spawnStagehand()
		spawnProjectile()
		stagehandType()
		entityQuery()
		lineTileCollision()
		containerSwapItemsNoCombine()
		liquidAlongLine()
		playerQuery()
		objectQuery()
		entityGender()
		rectCollision()
		containerItemAt()
		polyContains()
		containerTakeAt()
		magnitude()
		mod()
		containerSwapItems()
		isNpc()
		lineCollision()
		getObjectParameter()
		debugPoint()
		pointTileCollision()
		containerItemsFitWhere()
		containerAvailable()
		getProperty()
		containerItems()
		threatLevel()
		entityType()
		sendEntityMessage()
		material()
		liquidAt()
		containerSize()
		debugText()
		monsterType()
		entityMoney()
		nearestTo()
		npcLineQuery()
		entityPortrait()
		entityName()
		entityDamageTeam()
		containerConsumeAt()
		entityAggressive()
		windLevel()
		monsterQuery()
		entityExists()
		loungeableQuery()
		npcQuery()
		entityLineQuery()
	}
	root = {
		createBiome()
		imageSpaces()
		createItem()
		loadVersionedJson()
		createTreasure()
		getMatchingTenants()
		monsterSkillParameter()
		getConfiguration()
		npcVariant()
		itemHasTag()
		imageSize()
		projectileGravityMultiplier()
		nonEmptyRegion()
		evalFunction2()
		projectileConfig()
		materialMiningSound()
		generateName()
		isTreasurePool()
		hasTech()
		behaviorModule()
		itemConfig()
		treeStemDirectory()
		evalFunction()
		techConfig()
		npcConfig()
		setConfigurationPath()
		getConfigurationPath()
		materialHealth()
		materialFootstepSound()
		monsterMovementSettings()
		materialPath()
		setConfiguration()
		monsterPortrait()
		itemType()
		questConfig()
		recipesForItem()
		assetJson()
		treeFoliageDirectory()
		techType()
		liquidStatusEffects()
		makeCurrentVersionedJson()
		itemTags()
		tenantConfig()
		npcPortrait()
	}
	jsize()
	status = {
		setResourceLocked()
		resourcePercentage()
		addPersistentEffects()
		removeEphemeralEffect()
		resource()
		setResourcePercentage()
		resourcePositive()
		damageTakenSince()
		statPositive()
		stat()
		statusProperty()
		activeUniqueStatusEffectSummary()
		inflictedHitsSince()
		resourceMax()
		setStatusProperty()
		setPersistentEffects()
		resetAllResources()
		addEphemeralEffects()
		overConsumeResource()
		modifyResource()
		addEphemeralEffect()
		getPersistentEffects()
		resetResource()
		consumeResource()
		clearPersistentEffects()
		modifyResourcePercentage()
		clearEphemeralEffects()
		resourceNames()
		addPersistentEffect()
		resourceLocked()
		clearAllPersistentEffects()
		inflictedDamageSince()
		isResource()
		setResource()
		giveResource()
	}
	xpcall()
	getmetatable()
	utf8 = {
		len()
		codepoint()
		offset()
		codes()
		charpattern = "[
[22:52:01.461] [Warn] 	select()
	rawequal()
	rawset()
	string = {
		gmatch()
		char()
		sub()
		unpack()
		upper()
		lower()
		find()
		rep()
		dump()
		len()
		reverse()
		packsize()
		pack()
		byte()
		match()
		format()
		gsub()
	}
	require()
	pairs()
	next()
	jobject()
	math = {
		pi = 3.1415926535898
		rad()
		max()
		sqrt()
		random()
		floor()
		log()
		acos()
		fmod()
		mininteger = -9223372036854775808
		type()
		huge = inf
		randomseed()
		deg()
		exp()
		maxinteger = 9223372036854775807
		cos()
		min()
		tointeger()
		modf()
		asin()
		tan()
		atan()
		abs()
		sin()
		ult()
		ceil()
	}
	print()
	pcall()
	type()
	init()
	setmetatable()
	jresize()
	ic = {
		checkStack()
		itemAmount()
		stripColor()
		quickstack()
		itemConfig()
		amountEquipped()
		sortFunc()
		lock()
		giveBack()
		renameThis()
		sort()
		searchBox()
		sort_relative()
		clientVersion = 1
		renameButton()
		searchButton()
		getQuality()
	}
	player = {
		equippedTech()
		altHandItem()
		giveEssentialItem()
		consumeTaggedItem()
		setUniverseFlag()
		species()
		itemsWithTag()
		worldId()
		warp()
		completeMission()
		inventoryTags()
		upgradeShip()
		hasQuest()
		consumeItem()
		gender()
		primaryHandItem()
		essentialItem()
		equippedItem()
		setIntroComplete()
		playTime()
		enabledTechs()
		recordEvent()
		playCinematic()
		introComplete()
		hasCompletedQuest()
		makeTechAvailable()
		consumeItemWithParameter()
		startQuest()
		hasItemWithParameter()
		getItemWithParameter()
		lounge()
		enableTech()
		equipTech()
		enableMission()
		removeEssentialItem()
		isLounging()
		availableTechs()
		primaryHandItemTags()
		makeTechUnavailable()
		confirm()
		serverUuid()
		addBookmark()
		altHandItemTags()
		cleanupItems()
		radioMessage()
		setEquippedItem()
		ownShipWorldId()
		hasItem()
		canStartQuest()
		giveBlueprint()
		hasCountOfItem()
		shipUpgrades()
		giveItem()
	}
	config = {
		getParameter()
	}
	self = {
	}
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	world = {
		spawnItem()
		entityPosition()
		entityHealth()
		damageTileArea()
		day()
		placeMaterial()
		entityDescription()
		containerPutItemsAt()
		entityVelocity()
		damageTiles()
		entityHandItem()
		objectAt()
		setProperty()
		containerItemApply()
		containerClose()
		distance()
		findUniqueEntity()
		gravity()
		rectTileCollision()
		entitySpecies()
		platformerPathStart()
		containerOpen()
		containerTakeAll()
		breathable()
		npcType()
		containerAddItems()
		dayLength()
		loungeableOccupied()
		placeObject()
		isTileProtected()
		destroyLiquid()
		debugLine()
		spawnLiquid()
		entityCanDamage()
		containerItemsCanFit()
		xwrap()
		entityUniqueId()
		itemDropQuery()
		lightLevel()
		placeMod()
		spawnNpc()
		spawnTreasure()
		time()
		underground()
		spawnVehicle()
		spawnMonster()
		timeOfDay()
		findPlatformerPath()
		debugPoly()
		containerTakeNumItemsAt()
		isMonster()
		farmableStage()
		polyCollision()
		objectLineQuery()
		entityHasCountOfItem()
		entityHandItemDescriptor()
		tileIsOccupied()
		resolvePolyCollision()
		pointCollision()
		callScriptedEntity()
		collisionBlocksAlongLine()
		containerStackItems()
		objectSpaces()
		containerConsume()
		spawnStagehand()
		spawnProjectile()
		stagehandType()
		entityQuery()
		lineTileCollision()
		containerSwapItemsNoCombine()
		liquidAlongLine()
		playerQuery()
		objectQuery()
		entityGender()
		rectCollision()
		containerItemAt()
		polyContains()
		containerTakeAt()
		magnitude()
		mod()
		containerSwapItems()
		isNpc()
		lineCollision()
		getObjectParameter()
		debugPoint()
		pointTileCollision()
		containerItemsFitWhere()
		containerAvailable()
		getProperty()
		containerItems()
		threatLevel()
		entityType()
		sendEntityMessage()
		material()
		liquidAt()
		containerSize()
		debugText()
		monsterType()
		entityMoney()
		nearestTo()
		npcLineQuery()
		entityPortrait()
		entityName()
		entityDamageTeam()
		containerConsumeAt()
		entityAggressive()
		windLevel()
		monsterQuery()
		entityExists()
		loungeableQuery()
		npcQuery()
		entityLineQuery()
	}
	root = {
		createBiome()
		imageSpaces()
		createItem()
		loadVersionedJson()
		createTreasure()
		getMatchingTenants()
		monsterSkillParameter()
		getConfiguration()
		npcVariant()
		itemHasTag()
		imageSize()
		projectileGravityMultiplier()
		nonEmptyRegion()
		evalFunction2()
		projectileConfig()
		materialMiningSound()
		generateName()
		isTreasurePool()
		hasTech()
		behaviorModule()
		itemConfig()
		treeStemDirectory()
		evalFunction()
		techConfig()
		npcConfig()
		setConfigurationPath()
		getConfigurationPath()
		materialHealth()
		materialFootstepSound()
		monsterMovementSettings()
		materialPath()
		setConfiguration()
		monsterPortrait()
		itemType()
		questConfig()
		recipesForItem()
		assetJson()
		treeFoliageDirectory()
		techType()
		liquidStatusEffects()
		makeCurrentVersionedJson()
		itemTags()
		tenantConfig()
		npcPortrait()
	}
	jsize()
	status = {
		setResourceLocked()
		resourcePercentage()
		addPersistentEffects()
		removeEphemeralEffect()
		resource()
		setResourcePercentage()
		resourcePositive()
		damageTakenSince()
		statPositive()
		stat()
		statusProperty()
		activeUniqueStatusEffectSummary()
		inflictedHitsSince()
		resourceMax()
		setStatusProperty()
		setPersistentEffects()
		resetAllResources()
		addEphemeralEffects()
		overConsumeResource()
		modifyResource()
		addEphemeralEffect()
		getPersistentEffects()
		resetResource()
		consumeResource()
		clearPersistentEffects()
		modifyResourcePercentage()
		clearEphemeralEffects()
		resourceNames()
		addPersistentEffect()
		resourceLocked()
		clearAllPersistentEffects()
		inflictedDamageSince()
		isResource()
		setResource()
		giveResource()
	}
	xpcall()
	getmetatable()
	utf8 = {
		len()
		codepoint()
		offset()
		codes()
		charpattern = "[
[22:52:07.447] [Warn] 	select()
	rawequal()
	rawset()
	string = {
		gmatch()
		char()
		sub()
		unpack()
		upper()
		lower()
		find()
		rep()
		dump()
		len()
		reverse()
		packsize()
		pack()
		byte()
		match()
		format()
		gsub()
	}
	require()
	pairs()
	next()
	jobject()
	math = {
		pi = 3.1415926535898
		rad()
		max()
		sqrt()
		random()
		floor()
		log()
		acos()
		fmod()
		mininteger = -9223372036854775808
		type()
		huge = inf
		randomseed()
		deg()
		exp()
		maxinteger = 9223372036854775807
		cos()
		min()
		tointeger()
		modf()
		asin()
		tan()
		atan()
		abs()
		sin()
		ult()
		ceil()
	}
	print()
	pcall()
	type()
	init()
	setmetatable()
	jresize()
	ic = {
		checkStack()
		itemAmount()
		stripColor()
		quickstack()
		itemConfig()
		amountEquipped()
		sortFunc()
		lock()
		giveBack()
		renameThis()
		sort()
		searchBox()
		sort_relative()
		clientVersion = 1
		renameButton()
		searchButton()
		getQuality()
	}
	player = {
		equippedTech()
		altHandItem()
		giveEssentialItem()
		consumeTaggedItem()
		setUniverseFlag()
		species()
		itemsWithTag()
		worldId()
		warp()
		completeMission()
		inventoryTags()
		upgradeShip()
		hasQuest()
		consumeItem()
		gender()
		primaryHandItem()
		essentialItem()
		equippedItem()
		setIntroComplete()
		playTime()
		enabledTechs()
		recordEvent()
		playCinematic()
		introComplete()
		hasCompletedQuest()
		makeTechAvailable()
		consumeItemWithParameter()
		startQuest()
		hasItemWithParameter()
		getItemWithParameter()
		lounge()
		enableTech()
		equipTech()
		enableMission()
		removeEssentialItem()
		isLounging()
		availableTechs()
		primaryHandItemTags()
		makeTechUnavailable()
		confirm()
		serverUuid()
		addBookmark()
		altHandItemTags()
		cleanupItems()
		radioMessage()
		setEquippedItem()
		ownShipWorldId()
		hasItem()
		canStartQuest()
		giveBlueprint()
		hasCountOfItem()
		shipUpgrades()
		giveItem()
	}
	config = {
		getParameter()
	}
	self = {
	}
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	world = {
		spawnItem()
		entityPosition()
		entityHealth()
		damageTileArea()
		day()
		placeMaterial()
		entityDescription()
		containerPutItemsAt()
		entityVelocity()
		damageTiles()
		entityHandItem()
		objectAt()
		setProperty()
		containerItemApply()
		containerClose()
		distance()
		findUniqueEntity()
		gravity()
		rectTileCollision()
		entitySpecies()
		platformerPathStart()
		containerOpen()
		containerTakeAll()
		breathable()
		npcType()
		containerAddItems()
		dayLength()
		loungeableOccupied()
		placeObject()
		isTileProtected()
		destroyLiquid()
		debugLine()
		spawnLiquid()
		entityCanDamage()
		containerItemsCanFit()
		xwrap()
		entityUniqueId()
		itemDropQuery()
		lightLevel()
		placeMod()
		spawnNpc()
		spawnTreasure()
		time()
		underground()
		spawnVehicle()
		spawnMonster()
		timeOfDay()
		findPlatformerPath()
		debugPoly()
		containerTakeNumItemsAt()
		isMonster()
		farmableStage()
		polyCollision()
		objectLineQuery()
		entityHasCountOfItem()
		entityHandItemDescriptor()
		tileIsOccupied()
		resolvePolyCollision()
		pointCollision()
		callScriptedEntity()
		collisionBlocksAlongLine()
		containerStackItems()
		objectSpaces()
		containerConsume()
		spawnStagehand()
		spawnProjectile()
		stagehandType()
		entityQuery()
		lineTileCollision()
		containerSwapItemsNoCombine()
		liquidAlongLine()
		playerQuery()
		objectQuery()
		entityGender()
		rectCollision()
		containerItemAt()
		polyContains()
		containerTakeAt()
		magnitude()
		mod()
		containerSwapItems()
		isNpc()
		lineCollision()
		getObjectParameter()
		debugPoint()
		pointTileCollision()
		containerItemsFitWhere()
		containerAvailable()
		getProperty()
		containerItems()
		threatLevel()
		entityType()
		sendEntityMessage()
		material()
		liquidAt()
		containerSize()
		debugText()
		monsterType()
		entityMoney()
		nearestTo()
		npcLineQuery()
		entityPortrait()
		entityName()
		entityDamageTeam()
		containerConsumeAt()
		entityAggressive()
		windLevel()
		monsterQuery()
		entityExists()
		loungeableQuery()
		npcQuery()
		entityLineQuery()
	}
	root = {
		createBiome()
		imageSpaces()
		createItem()
		loadVersionedJson()
		createTreasure()
		getMatchingTenants()
		monsterSkillParameter()
		getConfiguration()
		npcVariant()
		itemHasTag()
		imageSize()
		projectileGravityMultiplier()
		nonEmptyRegion()
		evalFunction2()
		projectileConfig()
		materialMiningSound()
		generateName()
		isTreasurePool()
		hasTech()
		behaviorModule()
		itemConfig()
		treeStemDirectory()
		evalFunction()
		techConfig()
		npcConfig()
		setConfigurationPath()
		getConfigurationPath()
		materialHealth()
		materialFootstepSound()
		monsterMovementSettings()
		materialPath()
		setConfiguration()
		monsterPortrait()
		itemType()
		questConfig()
		recipesForItem()
		assetJson()
		treeFoliageDirectory()
		techType()
		liquidStatusEffects()
		makeCurrentVersionedJson()
		itemTags()
		tenantConfig()
		npcPortrait()
	}
	jsize()
	status = {
		setResourceLocked()
		resourcePercentage()
		addPersistentEffects()
		removeEphemeralEffect()
		resource()
		setResourcePercentage()
		resourcePositive()
		damageTakenSince()
		statPositive()
		stat()
		statusProperty()
		activeUniqueStatusEffectSummary()
		inflictedHitsSince()
		resourceMax()
		setStatusProperty()
		setPersistentEffects()
		resetAllResources()
		addEphemeralEffects()
		overConsumeResource()
		modifyResource()
		addEphemeralEffect()
		getPersistentEffects()
		resetResource()
		consumeResource()
		clearPersistentEffects()
		modifyResourcePercentage()
		clearEphemeralEffects()
		resourceNames()
		addPersistentEffect()
		resourceLocked()
		clearAllPersistentEffects()
		inflictedDamageSince()
		isResource()
		setResource()
		giveResource()
	}
	xpcall()
	getmetatable()
	utf8 = {
		len()
		codepoint()
		offset()
		codes()
		charpattern = "[
[22:52:08.913] [Warn] 	select()
	rawequal()
	rawset()
	string = {
		gmatch()
		char()
		sub()
		unpack()
		upper()
		lower()
		find()
		rep()
		dump()
		len()
		reverse()
		packsize()
		pack()
		byte()
		match()
		format()
		gsub()
	}
	require()
	pairs()
	next()
	jobject()
	math = {
		pi = 3.1415926535898
		rad()
		max()
		sqrt()
		random()
		floor()
		log()
		acos()
		fmod()
		mininteger = -9223372036854775808
		type()
		huge = inf
		randomseed()
		deg()
		exp()
		maxinteger = 9223372036854775807
		cos()
		min()
		tointeger()
		modf()
		asin()
		tan()
		atan()
		abs()
		sin()
		ult()
		ceil()
	}
	print()
	pcall()
	type()
	init()
	setmetatable()
	jresize()
	ic = {
		checkStack()
		itemAmount()
		stripColor()
		quickstack()
		itemConfig()
		amountEquipped()
		sortFunc()
		lock()
		giveBack()
		renameThis()
		sort()
		searchBox()
		sort_relative()
		clientVersion = 1
		renameButton()
		searchButton()
		getQuality()
	}
	player = {
		equippedTech()
		altHandItem()
		giveEssentialItem()
		consumeTaggedItem()
		setUniverseFlag()
		species()
		itemsWithTag()
		worldId()
		warp()
		completeMission()
		inventoryTags()
		upgradeShip()
		hasQuest()
		consumeItem()
		gender()
		primaryHandItem()
		essentialItem()
		equippedItem()
		setIntroComplete()
		playTime()
		enabledTechs()
		recordEvent()
		playCinematic()
		introComplete()
		hasCompletedQuest()
		makeTechAvailable()
		consumeItemWithParameter()
		startQuest()
		hasItemWithParameter()
		getItemWithParameter()
		lounge()
		enableTech()
		equipTech()
		enableMission()
		removeEssentialItem()
		isLounging()
		availableTechs()
		primaryHandItemTags()
		makeTechUnavailable()
		confirm()
		serverUuid()
		addBookmark()
		altHandItemTags()
		cleanupItems()
		radioMessage()
		setEquippedItem()
		ownShipWorldId()
		hasItem()
		canStartQuest()
		giveBlueprint()
		hasCountOfItem()
		shipUpgrades()
		giveItem()
	}
	config = {
		getParameter()
	}
	self = {
	}
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	world = {
		spawnItem()
		entityPosition()
		entityHealth()
		damageTileArea()
		day()
		placeMaterial()
		entityDescription()
		containerPutItemsAt()
		entityVelocity()
		damageTiles()
		entityHandItem()
		objectAt()
		setProperty()
		containerItemApply()
		containerClose()
		distance()
		findUniqueEntity()
		gravity()
		rectTileCollision()
		entitySpecies()
		platformerPathStart()
		containerOpen()
		containerTakeAll()
		breathable()
		npcType()
		containerAddItems()
		dayLength()
		loungeableOccupied()
		placeObject()
		isTileProtected()
		destroyLiquid()
		debugLine()
		spawnLiquid()
		entityCanDamage()
		containerItemsCanFit()
		xwrap()
		entityUniqueId()
		itemDropQuery()
		lightLevel()
		placeMod()
		spawnNpc()
		spawnTreasure()
		time()
		underground()
		spawnVehicle()
		spawnMonster()
		timeOfDay()
		findPlatformerPath()
		debugPoly()
		containerTakeNumItemsAt()
		isMonster()
		farmableStage()
		polyCollision()
		objectLineQuery()
		entityHasCountOfItem()
		entityHandItemDescriptor()
		tileIsOccupied()
		resolvePolyCollision()
		pointCollision()
		callScriptedEntity()
		collisionBlocksAlongLine()
		containerStackItems()
		objectSpaces()
		containerConsume()
		spawnStagehand()
		spawnProjectile()
		stagehandType()
		entityQuery()
		lineTileCollision()
		containerSwapItemsNoCombine()
		liquidAlongLine()
		playerQuery()
		objectQuery()
		entityGender()
		rectCollision()
		containerItemAt()
		polyContains()
		containerTakeAt()
		magnitude()
		mod()
		containerSwapItems()
		isNpc()
		lineCollision()
		getObjectParameter()
		debugPoint()
		pointTileCollision()
		containerItemsFitWhere()
		containerAvailable()
		getProperty()
		containerItems()
		threatLevel()
		entityType()
		sendEntityMessage()
		material()
		liquidAt()
		containerSize()
		debugText()
		monsterType()
		entityMoney()
		nearestTo()
		npcLineQuery()
		entityPortrait()
		entityName()
		entityDamageTeam()
		containerConsumeAt()
		entityAggressive()
		windLevel()
		monsterQuery()
		entityExists()
		loungeableQuery()
		npcQuery()
		entityLineQuery()
	}
	root = {
		createBiome()
		imageSpaces()
		createItem()
		loadVersionedJson()
		createTreasure()
		getMatchingTenants()
		monsterSkillParameter()
		getConfiguration()
		npcVariant()
		itemHasTag()
		imageSize()
		projectileGravityMultiplier()
		nonEmptyRegion()
		evalFunction2()
		projectileConfig()
		materialMiningSound()
		generateName()
		isTreasurePool()
		hasTech()
		behaviorModule()
		itemConfig()
		treeStemDirectory()
		evalFunction()
		techConfig()
		npcConfig()
		setConfigurationPath()
		getConfigurationPath()
		materialHealth()
		materialFootstepSound()
		monsterMovementSettings()
		materialPath()
		setConfiguration()
		monsterPortrait()
		itemType()
		questConfig()
		recipesForItem()
		assetJson()
		treeFoliageDirectory()
		techType()
		liquidStatusEffects()
		makeCurrentVersionedJson()
		itemTags()
		tenantConfig()
		npcPortrait()
	}
	jsize()
	status = {
		setResourceLocked()
		resourcePercentage()
		addPersistentEffects()
		removeEphemeralEffect()
		resource()
		setResourcePercentage()
		resourcePositive()
		damageTakenSince()
		statPositive()
		stat()
		statusProperty()
		activeUniqueStatusEffectSummary()
		inflictedHitsSince()
		resourceMax()
		setStatusProperty()
		setPersistentEffects()
		resetAllResources()
		addEphemeralEffects()
		overConsumeResource()
		modifyResource()
		addEphemeralEffect()
		getPersistentEffects()
		resetResource()
		consumeResource()
		clearPersistentEffects()
		modifyResourcePercentage()
		clearEphemeralEffects()
		resourceNames()
		addPersistentEffect()
		resourceLocked()
		clearAllPersistentEffects()
		inflictedDamageSince()
		isResource()
		setResource()
		giveResource()
	}
	xpcall()
	getmetatable()
	utf8 = {
		len()
		codepoint()
		offset()
		codes()
		charpattern = "[
[22:52:10.194] [Warn] 	select()
	rawequal()
	rawset()
	string = {
		gmatch()
		char()
		sub()
		unpack()
		upper()
		lower()
		find()
		rep()
		dump()
		len()
		reverse()
		packsize()
		pack()
		byte()
		match()
		format()
		gsub()
	}
	require()
	pairs()
	next()
	jobject()
	math = {
		pi = 3.1415926535898
		rad()
		max()
		sqrt()
		random()
		floor()
		log()
		acos()
		fmod()
		mininteger = -9223372036854775808
		type()
		huge = inf
		randomseed()
		deg()
		exp()
		maxinteger = 9223372036854775807
		cos()
		min()
		tointeger()
		modf()
		asin()
		tan()
		atan()
		abs()
		sin()
		ult()
		ceil()
	}
	print()
	pcall()
	type()
	init()
	setmetatable()
	jresize()
	ic = {
		checkStack()
		itemAmount()
		stripColor()
		quickstack()
		itemConfig()
		amountEquipped()
		sortFunc()
		lock()
		giveBack()
		renameThis()
		sort()
		searchBox()
		sort_relative()
		clientVersion = 1
		renameButton()
		searchButton()
		getQuality()
	}
	player = {
		equippedTech()
		altHandItem()
		giveEssentialItem()
		consumeTaggedItem()
		setUniverseFlag()
		species()
		itemsWithTag()
		worldId()
		warp()
		completeMission()
		inventoryTags()
		upgradeShip()
		hasQuest()
		consumeItem()
		gender()
		primaryHandItem()
		essentialItem()
		equippedItem()
		setIntroComplete()
		playTime()
		enabledTechs()
		recordEvent()
		playCinematic()
		introComplete()
		hasCompletedQuest()
		makeTechAvailable()
		consumeItemWithParameter()
		startQuest()
		hasItemWithParameter()
		getItemWithParameter()
		lounge()
		enableTech()
		equipTech()
		enableMission()
		removeEssentialItem()
		isLounging()
		availableTechs()
		primaryHandItemTags()
		makeTechUnavailable()
		confirm()
		serverUuid()
		addBookmark()
		altHandItemTags()
		cleanupItems()
		radioMessage()
		setEquippedItem()
		ownShipWorldId()
		hasItem()
		canStartQuest()
		giveBlueprint()
		hasCountOfItem()
		shipUpgrades()
		giveItem()
	}
	config = {
		getParameter()
	}
	self = {
	}
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	world = {
		spawnItem()
		entityPosition()
		entityHealth()
		damageTileArea()
		day()
		placeMaterial()
		entityDescription()
		containerPutItemsAt()
		entityVelocity()
		damageTiles()
		entityHandItem()
		objectAt()
		setProperty()
		containerItemApply()
		containerClose()
		distance()
		findUniqueEntity()
		gravity()
		rectTileCollision()
		entitySpecies()
		platformerPathStart()
		containerOpen()
		containerTakeAll()
		breathable()
		npcType()
		containerAddItems()
		dayLength()
		loungeableOccupied()
		placeObject()
		isTileProtected()
		destroyLiquid()
		debugLine()
		spawnLiquid()
		entityCanDamage()
		containerItemsCanFit()
		xwrap()
		entityUniqueId()
		itemDropQuery()
		lightLevel()
		placeMod()
		spawnNpc()
		spawnTreasure()
		time()
		underground()
		spawnVehicle()
		spawnMonster()
		timeOfDay()
		findPlatformerPath()
		debugPoly()
		containerTakeNumItemsAt()
		isMonster()
		farmableStage()
		polyCollision()
		objectLineQuery()
		entityHasCountOfItem()
		entityHandItemDescriptor()
		tileIsOccupied()
		resolvePolyCollision()
		pointCollision()
		callScriptedEntity()
		collisionBlocksAlongLine()
		containerStackItems()
		objectSpaces()
		containerConsume()
		spawnStagehand()
		spawnProjectile()
		stagehandType()
		entityQuery()
		lineTileCollision()
		containerSwapItemsNoCombine()
		liquidAlongLine()
		playerQuery()
		objectQuery()
		entityGender()
		rectCollision()
		containerItemAt()
		polyContains()
		containerTakeAt()
		magnitude()
		mod()
		containerSwapItems()
		isNpc()
		lineCollision()
		getObjectParameter()
		debugPoint()
		pointTileCollision()
		containerItemsFitWhere()
		containerAvailable()
		getProperty()
		containerItems()
		threatLevel()
		entityType()
		sendEntityMessage()
		material()
		liquidAt()
		containerSize()
		debugText()
		monsterType()
		entityMoney()
		nearestTo()
		npcLineQuery()
		entityPortrait()
		entityName()
		entityDamageTeam()
		containerConsumeAt()
		entityAggressive()
		windLevel()
		monsterQuery()
		entityExists()
		loungeableQuery()
		npcQuery()
		entityLineQuery()
	}
	root = {
		createBiome()
		imageSpaces()
		createItem()
		loadVersionedJson()
		createTreasure()
		getMatchingTenants()
		monsterSkillParameter()
		getConfiguration()
		npcVariant()
		itemHasTag()
		imageSize()
		projectileGravityMultiplier()
		nonEmptyRegion()
		evalFunction2()
		projectileConfig()
		materialMiningSound()
		generateName()
		isTreasurePool()
		hasTech()
		behaviorModule()
		itemConfig()
		treeStemDirectory()
		evalFunction()
		techConfig()
		npcConfig()
		setConfigurationPath()
		getConfigurationPath()
		materialHealth()
		materialFootstepSound()
		monsterMovementSettings()
		materialPath()
		setConfiguration()
		monsterPortrait()
		itemType()
		questConfig()
		recipesForItem()
		assetJson()
		treeFoliageDirectory()
		techType()
		liquidStatusEffects()
		makeCurrentVersionedJson()
		itemTags()
		tenantConfig()
		npcPortrait()
	}
	jsize()
	status = {
		setResourceLocked()
		resourcePercentage()
		addPersistentEffects()
		removeEphemeralEffect()
		resource()
		setResourcePercentage()
		resourcePositive()
		damageTakenSince()
		statPositive()
		stat()
		statusProperty()
		activeUniqueStatusEffectSummary()
		inflictedHitsSince()
		resourceMax()
		setStatusProperty()
		setPersistentEffects()
		resetAllResources()
		addEphemeralEffects()
		overConsumeResource()
		modifyResource()
		addEphemeralEffect()
		getPersistentEffects()
		resetResource()
		consumeResource()
		clearPersistentEffects()
		modifyResourcePercentage()
		clearEphemeralEffects()
		resourceNames()
		addPersistentEffect()
		resourceLocked()
		clearAllPersistentEffects()
		inflictedDamageSince()
		isResource()
		setResource()
		giveResource()
	}
	xpcall()
	getmetatable()
	utf8 = {
		len()
		codepoint()
		offset()
		codes()
		charpattern = "[
[22:52:11.313] [Warn] 	select()
	rawequal()
	rawset()
	string = {
		gmatch()
		char()
		sub()
		unpack()
		upper()
		lower()
		find()
		rep()
		dump()
		len()
		reverse()
		packsize()
		pack()
		byte()
		match()
		format()
		gsub()
	}
	require()
	pairs()
	next()
	jobject()
	math = {
		pi = 3.1415926535898
		rad()
		max()
		sqrt()
		random()
		floor()
		log()
		acos()
		fmod()
		mininteger = -9223372036854775808
		type()
		huge = inf
		randomseed()
		deg()
		exp()
		maxinteger = 9223372036854775807
		cos()
		min()
		tointeger()
		modf()
		asin()
		tan()
		atan()
		abs()
		sin()
		ult()
		ceil()
	}
	print()
	pcall()
	type()
	init()
	setmetatable()
	jresize()
	ic = {
		checkStack()
		itemAmount()
		stripColor()
		quickstack()
		itemConfig()
		amountEquipped()
		sortFunc()
		lock()
		giveBack()
		renameThis()
		sort()
		searchBox()
		sort_relative()
		clientVersion = 1
		renameButton()
		searchButton()
		getQuality()
	}
	player = {
		equippedTech()
		altHandItem()
		giveEssentialItem()
		consumeTaggedItem()
		setUniverseFlag()
		species()
		itemsWithTag()
		worldId()
		warp()
		completeMission()
		inventoryTags()
		upgradeShip()
		hasQuest()
		consumeItem()
		gender()
		primaryHandItem()
		essentialItem()
		equippedItem()
		setIntroComplete()
		playTime()
		enabledTechs()
		recordEvent()
		playCinematic()
		introComplete()
		hasCompletedQuest()
		makeTechAvailable()
		consumeItemWithParameter()
		startQuest()
		hasItemWithParameter()
		getItemWithParameter()
		lounge()
		enableTech()
		equipTech()
		enableMission()
		removeEssentialItem()
		isLounging()
		availableTechs()
		primaryHandItemTags()
		makeTechUnavailable()
		confirm()
		serverUuid()
		addBookmark()
		altHandItemTags()
		cleanupItems()
		radioMessage()
		setEquippedItem()
		ownShipWorldId()
		hasItem()
		canStartQuest()
		giveBlueprint()
		hasCountOfItem()
		shipUpgrades()
		giveItem()
	}
	config = {
		getParameter()
	}
	self = {
	}
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	world = {
		spawnItem()
		entityPosition()
		entityHealth()
		damageTileArea()
		day()
		placeMaterial()
		entityDescription()
		containerPutItemsAt()
		entityVelocity()
		damageTiles()
		entityHandItem()
		objectAt()
		setProperty()
		containerItemApply()
		containerClose()
		distance()
		findUniqueEntity()
		gravity()
		rectTileCollision()
		entitySpecies()
		platformerPathStart()
		containerOpen()
		containerTakeAll()
		breathable()
		npcType()
		containerAddItems()
		dayLength()
		loungeableOccupied()
		placeObject()
		isTileProtected()
		destroyLiquid()
		debugLine()
		spawnLiquid()
		entityCanDamage()
		containerItemsCanFit()
		xwrap()
		entityUniqueId()
		itemDropQuery()
		lightLevel()
		placeMod()
		spawnNpc()
		spawnTreasure()
		time()
		underground()
		spawnVehicle()
		spawnMonster()
		timeOfDay()
		findPlatformerPath()
		debugPoly()
		containerTakeNumItemsAt()
		isMonster()
		farmableStage()
		polyCollision()
		objectLineQuery()
		entityHasCountOfItem()
		entityHandItemDescriptor()
		tileIsOccupied()
		resolvePolyCollision()
		pointCollision()
		callScriptedEntity()
		collisionBlocksAlongLine()
		containerStackItems()
		objectSpaces()
		containerConsume()
		spawnStagehand()
		spawnProjectile()
		stagehandType()
		entityQuery()
		lineTileCollision()
		containerSwapItemsNoCombine()
		liquidAlongLine()
		playerQuery()
		objectQuery()
		entityGender()
		rectCollision()
		containerItemAt()
		polyContains()
		containerTakeAt()
		magnitude()
		mod()
		containerSwapItems()
		isNpc()
		lineCollision()
		getObjectParameter()
		debugPoint()
		pointTileCollision()
		containerItemsFitWhere()
		containerAvailable()
		getProperty()
		containerItems()
		threatLevel()
		entityType()
		sendEntityMessage()
		material()
		liquidAt()
		containerSize()
		debugText()
		monsterType()
		entityMoney()
		nearestTo()
		npcLineQuery()
		entityPortrait()
		entityName()
		entityDamageTeam()
		containerConsumeAt()
		entityAggressive()
		windLevel()
		monsterQuery()
		entityExists()
		loungeableQuery()
		npcQuery()
		entityLineQuery()
	}
	root = {
		createBiome()
		imageSpaces()
		createItem()
		loadVersionedJson()
		createTreasure()
		getMatchingTenants()
		monsterSkillParameter()
		getConfiguration()
		npcVariant()
		itemHasTag()
		imageSize()
		projectileGravityMultiplier()
		nonEmptyRegion()
		evalFunction2()
		projectileConfig()
		materialMiningSound()
		generateName()
		isTreasurePool()
		hasTech()
		behaviorModule()
		itemConfig()
		treeStemDirectory()
		evalFunction()
		techConfig()
		npcConfig()
		setConfigurationPath()
		getConfigurationPath()
		materialHealth()
		materialFootstepSound()
		monsterMovementSettings()
		materialPath()
		setConfiguration()
		monsterPortrait()
		itemType()
		questConfig()
		recipesForItem()
		assetJson()
		treeFoliageDirectory()
		techType()
		liquidStatusEffects()
		makeCurrentVersionedJson()
		itemTags()
		tenantConfig()
		npcPortrait()
	}
	jsize()
	status = {
		setResourceLocked()
		resourcePercentage()
		addPersistentEffects()
		removeEphemeralEffect()
		resource()
		setResourcePercentage()
		resourcePositive()
		damageTakenSince()
		statPositive()
		stat()
		statusProperty()
		activeUniqueStatusEffectSummary()
		inflictedHitsSince()
		resourceMax()
		setStatusProperty()
		setPersistentEffects()
		resetAllResources()
		addEphemeralEffects()
		overConsumeResource()
		modifyResource()
		addEphemeralEffect()
		getPersistentEffects()
		resetResource()
		consumeResource()
		clearPersistentEffects()
		modifyResourcePercentage()
		clearEphemeralEffects()
		resourceNames()
		addPersistentEffect()
		resourceLocked()
		clearAllPersistentEffects()
		inflictedDamageSince()
		isResource()
		setResource()
		giveResource()
	}
	xpcall()
	getmetatable()
	utf8 = {
		len()
		codepoint()
		offset()
		codes()
		charpattern = "[
[22:52:14.778] [Warn] 	select()
	rawequal()
	rawset()
	string = {
		gmatch()
		char()
		sub()
		unpack()
		upper()
		lower()
		find()
		rep()
		dump()
		len()
		reverse()
		packsize()
		pack()
		byte()
		match()
		format()
		gsub()
	}
	require()
	pairs()
	next()
	jobject()
	math = {
		pi = 3.1415926535898
		rad()
		max()
		sqrt()
		random()
		floor()
		log()
		acos()
		fmod()
		mininteger = -9223372036854775808
		type()
		huge = inf
		randomseed()
		deg()
		exp()
		maxinteger = 9223372036854775807
		cos()
		min()
		tointeger()
		modf()
		asin()
		tan()
		atan()
		abs()
		sin()
		ult()
		ceil()
	}
	print()
	pcall()
	type()
	init()
	setmetatable()
	jresize()
	ic = {
		checkStack()
		itemAmount()
		stripColor()
		quickstack()
		itemConfig()
		amountEquipped()
		sortFunc()
		lock()
		giveBack()
		renameThis()
		sort()
		searchBox()
		sort_relative()
		clientVersion = 1
		renameButton()
		searchButton()
		getQuality()
	}
	player = {
		equippedTech()
		altHandItem()
		giveEssentialItem()
		consumeTaggedItem()
		setUniverseFlag()
		species()
		itemsWithTag()
		worldId()
		warp()
		completeMission()
		inventoryTags()
		upgradeShip()
		hasQuest()
		consumeItem()
		gender()
		primaryHandItem()
		essentialItem()
		equippedItem()
		setIntroComplete()
		playTime()
		enabledTechs()
		recordEvent()
		playCinematic()
		introComplete()
		hasCompletedQuest()
		makeTechAvailable()
		consumeItemWithParameter()
		startQuest()
		hasItemWithParameter()
		getItemWithParameter()
		lounge()
		enableTech()
		equipTech()
		enableMission()
		removeEssentialItem()
		isLounging()
		availableTechs()
		primaryHandItemTags()
		makeTechUnavailable()
		confirm()
		serverUuid()
		addBookmark()
		altHandItemTags()
		cleanupItems()
		radioMessage()
		setEquippedItem()
		ownShipWorldId()
		hasItem()
		canStartQuest()
		giveBlueprint()
		hasCountOfItem()
		shipUpgrades()
		giveItem()
	}
	config = {
		getParameter()
	}
	self = {
	}
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	world = {
		spawnItem()
		entityPosition()
		entityHealth()
		damageTileArea()
		day()
		placeMaterial()
		entityDescription()
		containerPutItemsAt()
		entityVelocity()
		damageTiles()
		entityHandItem()
		objectAt()
		setProperty()
		containerItemApply()
		containerClose()
		distance()
		findUniqueEntity()
		gravity()
		rectTileCollision()
		entitySpecies()
		platformerPathStart()
		containerOpen()
		containerTakeAll()
		breathable()
		npcType()
		containerAddItems()
		dayLength()
		loungeableOccupied()
		placeObject()
		isTileProtected()
		destroyLiquid()
		debugLine()
		spawnLiquid()
		entityCanDamage()
		containerItemsCanFit()
		xwrap()
		entityUniqueId()
		itemDropQuery()
		lightLevel()
		placeMod()
		spawnNpc()
		spawnTreasure()
		time()
		underground()
		spawnVehicle()
		spawnMonster()
		timeOfDay()
		findPlatformerPath()
		debugPoly()
		containerTakeNumItemsAt()
		isMonster()
		farmableStage()
		polyCollision()
		objectLineQuery()
		entityHasCountOfItem()
		entityHandItemDescriptor()
		tileIsOccupied()
		resolvePolyCollision()
		pointCollision()
		callScriptedEntity()
		collisionBlocksAlongLine()
		containerStackItems()
		objectSpaces()
		containerConsume()
		spawnStagehand()
		spawnProjectile()
		stagehandType()
		entityQuery()
		lineTileCollision()
		containerSwapItemsNoCombine()
		liquidAlongLine()
		playerQuery()
		objectQuery()
		entityGender()
		rectCollision()
		containerItemAt()
		polyContains()
		containerTakeAt()
		magnitude()
		mod()
		containerSwapItems()
		isNpc()
		lineCollision()
		getObjectParameter()
		debugPoint()
		pointTileCollision()
		containerItemsFitWhere()
		containerAvailable()
		getProperty()
		containerItems()
		threatLevel()
		entityType()
		sendEntityMessage()
		material()
		liquidAt()
		containerSize()
		debugText()
		monsterType()
		entityMoney()
		nearestTo()
		npcLineQuery()
		entityPortrait()
		entityName()
		entityDamageTeam()
		containerConsumeAt()
		entityAggressive()
		windLevel()
		monsterQuery()
		entityExists()
		loungeableQuery()
		npcQuery()
		entityLineQuery()
	}
	root = {
		createBiome()
		imageSpaces()
		createItem()
		loadVersionedJson()
		createTreasure()
		getMatchingTenants()
		monsterSkillParameter()
		getConfiguration()
		npcVariant()
		itemHasTag()
		imageSize()
		projectileGravityMultiplier()
		nonEmptyRegion()
		evalFunction2()
		projectileConfig()
		materialMiningSound()
		generateName()
		isTreasurePool()
		hasTech()
		behaviorModule()
		itemConfig()
		treeStemDirectory()
		evalFunction()
		techConfig()
		npcConfig()
		setConfigurationPath()
		getConfigurationPath()
		materialHealth()
		materialFootstepSound()
		monsterMovementSettings()
		materialPath()
		setConfiguration()
		monsterPortrait()
		itemType()
		questConfig()
		recipesForItem()
		assetJson()
		treeFoliageDirectory()
		techType()
		liquidStatusEffects()
		makeCurrentVersionedJson()
		itemTags()
		tenantConfig()
		npcPortrait()
	}
	jsize()
	status = {
		setResourceLocked()
		resourcePercentage()
		addPersistentEffects()
		removeEphemeralEffect()
		resource()
		setResourcePercentage()
		resourcePositive()
		damageTakenSince()
		statPositive()
		stat()
		statusProperty()
		activeUniqueStatusEffectSummary()
		inflictedHitsSince()
		resourceMax()
		setStatusProperty()
		setPersistentEffects()
		resetAllResources()
		addEphemeralEffects()
		overConsumeResource()
		modifyResource()
		addEphemeralEffect()
		getPersistentEffects()
		resetResource()
		consumeResource()
		clearPersistentEffects()
		modifyResourcePercentage()
		clearEphemeralEffects()
		resourceNames()
		addPersistentEffect()
		resourceLocked()
		clearAllPersistentEffects()
		inflictedDamageSince()
		isResource()
		setResource()
		giveResource()
	}
	xpcall()
	getmetatable()
	utf8 = {
		len()
		codepoint()
		offset()
		codes()
		charpattern = "[
[22:52:15.797] [Warn] 	select()
	rawequal()
	rawset()
	string = {
		gmatch()
		char()
		sub()
		unpack()
		upper()
		lower()
		find()
		rep()
		dump()
		len()
		reverse()
		packsize()
		pack()
		byte()
		match()
		format()
		gsub()
	}
	require()
	pairs()
	next()
	jobject()
	math = {
		pi = 3.1415926535898
		rad()
		max()
		sqrt()
		random()
		floor()
		log()
		acos()
		fmod()
		mininteger = -9223372036854775808
		type()
		huge = inf
		randomseed()
		deg()
		exp()
		maxinteger = 9223372036854775807
		cos()
		min()
		tointeger()
		modf()
		asin()
		tan()
		atan()
		abs()
		sin()
		ult()
		ceil()
	}
	print()
	pcall()
	type()
	init()
	setmetatable()
	jresize()
	ic = {
		checkStack()
		itemAmount()
		stripColor()
		quickstack()
		itemConfig()
		amountEquipped()
		sortFunc()
		lock()
		giveBack()
		renameThis()
		sort()
		searchBox()
		sort_relative()
		clientVersion = 1
		renameButton()
		searchButton()
		getQuality()
	}
	player = {
		equippedTech()
		altHandItem()
		giveEssentialItem()
		consumeTaggedItem()
		setUniverseFlag()
		species()
		itemsWithTag()
		worldId()
		warp()
		completeMission()
		inventoryTags()
		upgradeShip()
		hasQuest()
		consumeItem()
		gender()
		primaryHandItem()
		essentialItem()
		equippedItem()
		setIntroComplete()
		playTime()
		enabledTechs()
		recordEvent()
		playCinematic()
		introComplete()
		hasCompletedQuest()
		makeTechAvailable()
		consumeItemWithParameter()
		startQuest()
		hasItemWithParameter()
		getItemWithParameter()
		lounge()
		enableTech()
		equipTech()
		enableMission()
		removeEssentialItem()
		isLounging()
		availableTechs()
		primaryHandItemTags()
		makeTechUnavailable()
		confirm()
		serverUuid()
		addBookmark()
		altHandItemTags()
		cleanupItems()
		radioMessage()
		setEquippedItem()
		ownShipWorldId()
		hasItem()
		canStartQuest()
		giveBlueprint()
		hasCountOfItem()
		shipUpgrades()
		giveItem()
	}
	config = {
		getParameter()
	}
	self = {
	}
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	world = {
		spawnItem()
		entityPosition()
		entityHealth()
		damageTileArea()
		day()
		placeMaterial()
		entityDescription()
		containerPutItemsAt()
		entityVelocity()
		damageTiles()
		entityHandItem()
		objectAt()
		setProperty()
		containerItemApply()
		containerClose()
		distance()
		findUniqueEntity()
		gravity()
		rectTileCollision()
		entitySpecies()
		platformerPathStart()
		containerOpen()
		containerTakeAll()
		breathable()
		npcType()
		containerAddItems()
		dayLength()
		loungeableOccupied()
		placeObject()
		isTileProtected()
		destroyLiquid()
		debugLine()
		spawnLiquid()
		entityCanDamage()
		containerItemsCanFit()
		xwrap()
		entityUniqueId()
		itemDropQuery()
		lightLevel()
		placeMod()
		spawnNpc()
		spawnTreasure()
		time()
		underground()
		spawnVehicle()
		spawnMonster()
		timeOfDay()
		findPlatformerPath()
		debugPoly()
		containerTakeNumItemsAt()
		isMonster()
		farmableStage()
		polyCollision()
		objectLineQuery()
		entityHasCountOfItem()
		entityHandItemDescriptor()
		tileIsOccupied()
		resolvePolyCollision()
		pointCollision()
		callScriptedEntity()
		collisionBlocksAlongLine()
		containerStackItems()
		objectSpaces()
		containerConsume()
		spawnStagehand()
		spawnProjectile()
		stagehandType()
		entityQuery()
		lineTileCollision()
		containerSwapItemsNoCombine()
		liquidAlongLine()
		playerQuery()
		objectQuery()
		entityGender()
		rectCollision()
		containerItemAt()
		polyContains()
		containerTakeAt()
		magnitude()
		mod()
		containerSwapItems()
		isNpc()
		lineCollision()
		getObjectParameter()
		debugPoint()
		pointTileCollision()
		containerItemsFitWhere()
		containerAvailable()
		getProperty()
		containerItems()
		threatLevel()
		entityType()
		sendEntityMessage()
		material()
		liquidAt()
		containerSize()
		debugText()
		monsterType()
		entityMoney()
		nearestTo()
		npcLineQuery()
		entityPortrait()
		entityName()
		entityDamageTeam()
		containerConsumeAt()
		entityAggressive()
		windLevel()
		monsterQuery()
		entityExists()
		loungeableQuery()
		npcQuery()
		entityLineQuery()
	}
	root = {
		createBiome()
		imageSpaces()
		createItem()
		loadVersionedJson()
		createTreasure()
		getMatchingTenants()
		monsterSkillParameter()
		getConfiguration()
		npcVariant()
		itemHasTag()
		imageSize()
		projectileGravityMultiplier()
		nonEmptyRegion()
		evalFunction2()
		projectileConfig()
		materialMiningSound()
		generateName()
		isTreasurePool()
		hasTech()
		behaviorModule()
		itemConfig()
		treeStemDirectory()
		evalFunction()
		techConfig()
		npcConfig()
		setConfigurationPath()
		getConfigurationPath()
		materialHealth()
		materialFootstepSound()
		monsterMovementSettings()
		materialPath()
		setConfiguration()
		monsterPortrait()
		itemType()
		questConfig()
		recipesForItem()
		assetJson()
		treeFoliageDirectory()
		techType()
		liquidStatusEffects()
		makeCurrentVersionedJson()
		itemTags()
		tenantConfig()
		npcPortrait()
	}
	jsize()
	status = {
		setResourceLocked()
		resourcePercentage()
		addPersistentEffects()
		removeEphemeralEffect()
		resource()
		setResourcePercentage()
		resourcePositive()
		damageTakenSince()
		statPositive()
		stat()
		statusProperty()
		activeUniqueStatusEffectSummary()
		inflictedHitsSince()
		resourceMax()
		setStatusProperty()
		setPersistentEffects()
		resetAllResources()
		addEphemeralEffects()
		overConsumeResource()
		modifyResource()
		addEphemeralEffect()
		getPersistentEffects()
		resetResource()
		consumeResource()
		clearPersistentEffects()
		modifyResourcePercentage()
		clearEphemeralEffects()
		resourceNames()
		addPersistentEffect()
		resourceLocked()
		clearAllPersistentEffects()
		inflictedDamageSince()
		isResource()
		setResource()
		giveResource()
	}
	xpcall()
	getmetatable()
	utf8 = {
		len()
		codepoint()
		offset()
		codes()
		charpattern = "[
[22:52:30.381] [Warn] 	select()
	rawequal()
	rawset()
	string = {
		gmatch()
		char()
		sub()
		unpack()
		upper()
		lower()
		find()
		rep()
		dump()
		len()
		reverse()
		packsize()
		pack()
		byte()
		match()
		format()
		gsub()
	}
	require()
	pairs()
	next()
	jobject()
	math = {
		pi = 3.1415926535898
		rad()
		max()
		sqrt()
		random()
		floor()
		log()
		acos()
		fmod()
		mininteger = -9223372036854775808
		type()
		huge = inf
		randomseed()
		deg()
		exp()
		maxinteger = 9223372036854775807
		cos()
		min()
		tointeger()
		modf()
		asin()
		tan()
		atan()
		abs()
		sin()
		ult()
		ceil()
	}
	print()
	pcall()
	type()
	init()
	setmetatable()
	jresize()
	ic = {
		checkStack()
		itemAmount()
		stripColor()
		quickstack()
		itemConfig()
		amountEquipped()
		sortFunc()
		lock()
		giveBack()
		renameThis()
		sort()
		searchBox()
		sort_relative()
		clientVersion = 1
		renameButton()
		searchButton()
		getQuality()
	}
	player = {
		equippedTech()
		altHandItem()
		giveEssentialItem()
		consumeTaggedItem()
		setUniverseFlag()
		species()
		itemsWithTag()
		worldId()
		warp()
		completeMission()
		inventoryTags()
		upgradeShip()
		hasQuest()
		consumeItem()
		gender()
		primaryHandItem()
		essentialItem()
		equippedItem()
		setIntroComplete()
		playTime()
		enabledTechs()
		recordEvent()
		playCinematic()
		introComplete()
		hasCompletedQuest()
		makeTechAvailable()
		consumeItemWithParameter()
		startQuest()
		hasItemWithParameter()
		getItemWithParameter()
		lounge()
		enableTech()
		equipTech()
		enableMission()
		removeEssentialItem()
		isLounging()
		availableTechs()
		primaryHandItemTags()
		makeTechUnavailable()
		confirm()
		serverUuid()
		addBookmark()
		altHandItemTags()
		cleanupItems()
		radioMessage()
		setEquippedItem()
		ownShipWorldId()
		hasItem()
		canStartQuest()
		giveBlueprint()
		hasCountOfItem()
		shipUpgrades()
		giveItem()
	}
	config = {
		getParameter()
	}
	self = {
	}
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	world = {
		spawnItem()
		entityPosition()
		entityHealth()
		damageTileArea()
		day()
		placeMaterial()
		entityDescription()
		containerPutItemsAt()
		entityVelocity()
		damageTiles()
		entityHandItem()
		objectAt()
		setProperty()
		containerItemApply()
		containerClose()
		distance()
		findUniqueEntity()
		gravity()
		rectTileCollision()
		entitySpecies()
		platformerPathStart()
		containerOpen()
		containerTakeAll()
		breathable()
		npcType()
		containerAddItems()
		dayLength()
		loungeableOccupied()
		placeObject()
		isTileProtected()
		destroyLiquid()
		debugLine()
		spawnLiquid()
		entityCanDamage()
		containerItemsCanFit()
		xwrap()
		entityUniqueId()
		itemDropQuery()
		lightLevel()
		placeMod()
		spawnNpc()
		spawnTreasure()
		time()
		underground()
		spawnVehicle()
		spawnMonster()
		timeOfDay()
		findPlatformerPath()
		debugPoly()
		containerTakeNumItemsAt()
		isMonster()
		farmableStage()
		polyCollision()
		objectLineQuery()
		entityHasCountOfItem()
		entityHandItemDescriptor()
		tileIsOccupied()
		resolvePolyCollision()
		pointCollision()
		callScriptedEntity()
		collisionBlocksAlongLine()
		containerStackItems()
		objectSpaces()
		containerConsume()
		spawnStagehand()
		spawnProjectile()
		stagehandType()
		entityQuery()
		lineTileCollision()
		containerSwapItemsNoCombine()
		liquidAlongLine()
		playerQuery()
		objectQuery()
		entityGender()
		rectCollision()
		containerItemAt()
		polyContains()
		containerTakeAt()
		magnitude()
		mod()
		containerSwapItems()
		isNpc()
		lineCollision()
		getObjectParameter()
		debugPoint()
		pointTileCollision()
		containerItemsFitWhere()
		containerAvailable()
		getProperty()
		containerItems()
		threatLevel()
		entityType()
		sendEntityMessage()
		material()
		liquidAt()
		containerSize()
		debugText()
		monsterType()
		entityMoney()
		nearestTo()
		npcLineQuery()
		entityPortrait()
		entityName()
		entityDamageTeam()
		containerConsumeAt()
		entityAggressive()
		windLevel()
		monsterQuery()
		entityExists()
		loungeableQuery()
		npcQuery()
		entityLineQuery()
	}
	root = {
		createBiome()
		imageSpaces()
		createItem()
		loadVersionedJson()
		createTreasure()
		getMatchingTenants()
		monsterSkillParameter()
		getConfiguration()
		npcVariant()
		itemHasTag()
		imageSize()
		projectileGravityMultiplier()
		nonEmptyRegion()
		evalFunction2()
		projectileConfig()
		materialMiningSound()
		generateName()
		isTreasurePool()
		hasTech()
		behaviorModule()
		itemConfig()
		treeStemDirectory()
		evalFunction()
		techConfig()
		npcConfig()
		setConfigurationPath()
		getConfigurationPath()
		materialHealth()
		materialFootstepSound()
		monsterMovementSettings()
		materialPath()
		setConfiguration()
		monsterPortrait()
		itemType()
		questConfig()
		recipesForItem()
		assetJson()
		treeFoliageDirectory()
		techType()
		liquidStatusEffects()
		makeCurrentVersionedJson()
		itemTags()
		tenantConfig()
		npcPortrait()
	}
	jsize()
	status = {
		setResourceLocked()
		resourcePercentage()
		addPersistentEffects()
		removeEphemeralEffect()
		resource()
		setResourcePercentage()
		resourcePositive()
		damageTakenSince()
		statPositive()
		stat()
		statusProperty()
		activeUniqueStatusEffectSummary()
		inflictedHitsSince()
		resourceMax()
		setStatusProperty()
		setPersistentEffects()
		resetAllResources()
		addEphemeralEffects()
		overConsumeResource()
		modifyResource()
		addEphemeralEffect()
		getPersistentEffects()
		resetResource()
		consumeResource()
		clearPersistentEffects()
		modifyResourcePercentage()
		clearEphemeralEffects()
		resourceNames()
		addPersistentEffect()
		resourceLocked()
		clearAllPersistentEffects()
		inflictedDamageSince()
		isResource()
		setResource()
		giveResource()
	}
	xpcall()
	getmetatable()
	utf8 = {
		len()
		codepoint()
		offset()
		codes()
		charpattern = "[
[22:52:31.427] [Warn] 	select()
	rawequal()
	rawset()
	string = {
		gmatch()
		char()
		sub()
		unpack()
		upper()
		lower()
		find()
		rep()
		dump()
		len()
		reverse()
		packsize()
		pack()
		byte()
		match()
		format()
		gsub()
	}
	require()
	pairs()
	next()
	jobject()
	math = {
		pi = 3.1415926535898
		rad()
		max()
		sqrt()
		random()
		floor()
		log()
		acos()
		fmod()
		mininteger = -9223372036854775808
		type()
		huge = inf
		randomseed()
		deg()
		exp()
		maxinteger = 9223372036854775807
		cos()
		min()
		tointeger()
		modf()
		asin()
		tan()
		atan()
		abs()
		sin()
		ult()
		ceil()
	}
	print()
	pcall()
	type()
	init()
	setmetatable()
	jresize()
	ic = {
		checkStack()
		itemAmount()
		stripColor()
		quickstack()
		itemConfig()
		amountEquipped()
		sortFunc()
		lock()
		giveBack()
		renameThis()
		sort()
		searchBox()
		sort_relative()
		clientVersion = 1
		renameButton()
		searchButton()
		getQuality()
	}
	player = {
		equippedTech()
		altHandItem()
		giveEssentialItem()
		consumeTaggedItem()
		setUniverseFlag()
		species()
		itemsWithTag()
		worldId()
		warp()
		completeMission()
		inventoryTags()
		upgradeShip()
		hasQuest()
		consumeItem()
		gender()
		primaryHandItem()
		essentialItem()
		equippedItem()
		setIntroComplete()
		playTime()
		enabledTechs()
		recordEvent()
		playCinematic()
		introComplete()
		hasCompletedQuest()
		makeTechAvailable()
		consumeItemWithParameter()
		startQuest()
		hasItemWithParameter()
		getItemWithParameter()
		lounge()
		enableTech()
		equipTech()
		enableMission()
		removeEssentialItem()
		isLounging()
		availableTechs()
		primaryHandItemTags()
		makeTechUnavailable()
		confirm()
		serverUuid()
		addBookmark()
		altHandItemTags()
		cleanupItems()
		radioMessage()
		setEquippedItem()
		ownShipWorldId()
		hasItem()
		canStartQuest()
		giveBlueprint()
		hasCountOfItem()
		shipUpgrades()
		giveItem()
	}
	config = {
		getParameter()
	}
	self = {
	}
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	world = {
		spawnItem()
		entityPosition()
		entityHealth()
		damageTileArea()
		day()
		placeMaterial()
		entityDescription()
		containerPutItemsAt()
		entityVelocity()
		damageTiles()
		entityHandItem()
		objectAt()
		setProperty()
		containerItemApply()
		containerClose()
		distance()
		findUniqueEntity()
		gravity()
		rectTileCollision()
		entitySpecies()
		platformerPathStart()
		containerOpen()
		containerTakeAll()
		breathable()
		npcType()
		containerAddItems()
		dayLength()
		loungeableOccupied()
		placeObject()
		isTileProtected()
		destroyLiquid()
		debugLine()
		spawnLiquid()
		entityCanDamage()
		containerItemsCanFit()
		xwrap()
		entityUniqueId()
		itemDropQuery()
		lightLevel()
		placeMod()
		spawnNpc()
		spawnTreasure()
		time()
		underground()
		spawnVehicle()
		spawnMonster()
		timeOfDay()
		findPlatformerPath()
		debugPoly()
		containerTakeNumItemsAt()
		isMonster()
		farmableStage()
		polyCollision()
		objectLineQuery()
		entityHasCountOfItem()
		entityHandItemDescriptor()
		tileIsOccupied()
		resolvePolyCollision()
		pointCollision()
		callScriptedEntity()
		collisionBlocksAlongLine()
		containerStackItems()
		objectSpaces()
		containerConsume()
		spawnStagehand()
		spawnProjectile()
		stagehandType()
		entityQuery()
		lineTileCollision()
		containerSwapItemsNoCombine()
		liquidAlongLine()
		playerQuery()
		objectQuery()
		entityGender()
		rectCollision()
		containerItemAt()
		polyContains()
		containerTakeAt()
		magnitude()
		mod()
		containerSwapItems()
		isNpc()
		lineCollision()
		getObjectParameter()
		debugPoint()
		pointTileCollision()
		containerItemsFitWhere()
		containerAvailable()
		getProperty()
		containerItems()
		threatLevel()
		entityType()
		sendEntityMessage()
		material()
		liquidAt()
		containerSize()
		debugText()
		monsterType()
		entityMoney()
		nearestTo()
		npcLineQuery()
		entityPortrait()
		entityName()
		entityDamageTeam()
		containerConsumeAt()
		entityAggressive()
		windLevel()
		monsterQuery()
		entityExists()
		loungeableQuery()
		npcQuery()
		entityLineQuery()
	}
	root = {
		createBiome()
		imageSpaces()
		createItem()
		loadVersionedJson()
		createTreasure()
		getMatchingTenants()
		monsterSkillParameter()
		getConfiguration()
		npcVariant()
		itemHasTag()
		imageSize()
		projectileGravityMultiplier()
		nonEmptyRegion()
		evalFunction2()
		projectileConfig()
		materialMiningSound()
		generateName()
		isTreasurePool()
		hasTech()
		behaviorModule()
		itemConfig()
		treeStemDirectory()
		evalFunction()
		techConfig()
		npcConfig()
		setConfigurationPath()
		getConfigurationPath()
		materialHealth()
		materialFootstepSound()
		monsterMovementSettings()
		materialPath()
		setConfiguration()
		monsterPortrait()
		itemType()
		questConfig()
		recipesForItem()
		assetJson()
		treeFoliageDirectory()
		techType()
		liquidStatusEffects()
		makeCurrentVersionedJson()
		itemTags()
		tenantConfig()
		npcPortrait()
	}
	jsize()
	status = {
		setResourceLocked()
		resourcePercentage()
		addPersistentEffects()
		removeEphemeralEffect()
		resource()
		setResourcePercentage()
		resourcePositive()
		damageTakenSince()
		statPositive()
		stat()
		statusProperty()
		activeUniqueStatusEffectSummary()
		inflictedHitsSince()
		resourceMax()
		setStatusProperty()
		setPersistentEffects()
		resetAllResources()
		addEphemeralEffects()
		overConsumeResource()
		modifyResource()
		addEphemeralEffect()
		getPersistentEffects()
		resetResource()
		consumeResource()
		clearPersistentEffects()
		modifyResourcePercentage()
		clearEphemeralEffects()
		resourceNames()
		addPersistentEffect()
		resourceLocked()
		clearAllPersistentEffects()
		inflictedDamageSince()
		isResource()
		setResource()
		giveResource()
	}
	xpcall()
	getmetatable()
	utf8 = {
		len()
		codepoint()
		offset()
		codes()
		charpattern = "[
[22:52:34.546] [Warn] 	select()
	rawequal()
	rawset()
	string = {
		gmatch()
		char()
		sub()
		unpack()
		upper()
		lower()
		find()
		rep()
		dump()
		len()
		reverse()
		packsize()
		pack()
		byte()
		match()
		format()
		gsub()
	}
	require()
	pairs()
	next()
	jobject()
	math = {
		pi = 3.1415926535898
		rad()
		max()
		sqrt()
		random()
		floor()
		log()
		acos()
		fmod()
		mininteger = -9223372036854775808
		type()
		huge = inf
		randomseed()
		deg()
		exp()
		maxinteger = 9223372036854775807
		cos()
		min()
		tointeger()
		modf()
		asin()
		tan()
		atan()
		abs()
		sin()
		ult()
		ceil()
	}
	print()
	pcall()
	type()
	init()
	setmetatable()
	jresize()
	ic = {
		checkStack()
		itemAmount()
		stripColor()
		quickstack()
		itemConfig()
		amountEquipped()
		sortFunc()
		lock()
		giveBack()
		renameThis()
		sort()
		searchBox()
		sort_relative()
		clientVersion = 1
		renameButton()
		searchButton()
		getQuality()
	}
	player = {
		equippedTech()
		altHandItem()
		giveEssentialItem()
		consumeTaggedItem()
		setUniverseFlag()
		species()
		itemsWithTag()
		worldId()
		warp()
		completeMission()
		inventoryTags()
		upgradeShip()
		hasQuest()
		consumeItem()
		gender()
		primaryHandItem()
		essentialItem()
		equippedItem()
		setIntroComplete()
		playTime()
		enabledTechs()
		recordEvent()
		playCinematic()
		introComplete()
		hasCompletedQuest()
		makeTechAvailable()
		consumeItemWithParameter()
		startQuest()
		hasItemWithParameter()
		getItemWithParameter()
		lounge()
		enableTech()
		equipTech()
		enableMission()
		removeEssentialItem()
		isLounging()
		availableTechs()
		primaryHandItemTags()
		makeTechUnavailable()
		confirm()
		serverUuid()
		addBookmark()
		altHandItemTags()
		cleanupItems()
		radioMessage()
		setEquippedItem()
		ownShipWorldId()
		hasItem()
		canStartQuest()
		giveBlueprint()
		hasCountOfItem()
		shipUpgrades()
		giveItem()
	}
	config = {
		getParameter()
	}
	self = {
	}
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	world = {
		spawnItem()
		entityPosition()
		entityHealth()
		damageTileArea()
		day()
		placeMaterial()
		entityDescription()
		containerPutItemsAt()
		entityVelocity()
		damageTiles()
		entityHandItem()
		objectAt()
		setProperty()
		containerItemApply()
		containerClose()
		distance()
		findUniqueEntity()
		gravity()
		rectTileCollision()
		entitySpecies()
		platformerPathStart()
		containerOpen()
		containerTakeAll()
		breathable()
		npcType()
		containerAddItems()
		dayLength()
		loungeableOccupied()
		placeObject()
		isTileProtected()
		destroyLiquid()
		debugLine()
		spawnLiquid()
		entityCanDamage()
		containerItemsCanFit()
		xwrap()
		entityUniqueId()
		itemDropQuery()
		lightLevel()
		placeMod()
		spawnNpc()
		spawnTreasure()
		time()
		underground()
		spawnVehicle()
		spawnMonster()
		timeOfDay()
		findPlatformerPath()
		debugPoly()
		containerTakeNumItemsAt()
		isMonster()
		farmableStage()
		polyCollision()
		objectLineQuery()
		entityHasCountOfItem()
		entityHandItemDescriptor()
		tileIsOccupied()
		resolvePolyCollision()
		pointCollision()
		callScriptedEntity()
		collisionBlocksAlongLine()
		containerStackItems()
		objectSpaces()
		containerConsume()
		spawnStagehand()
		spawnProjectile()
		stagehandType()
		entityQuery()
		lineTileCollision()
		containerSwapItemsNoCombine()
		liquidAlongLine()
		playerQuery()
		objectQuery()
		entityGender()
		rectCollision()
		containerItemAt()
		polyContains()
		containerTakeAt()
		magnitude()
		mod()
		containerSwapItems()
		isNpc()
		lineCollision()
		getObjectParameter()
		debugPoint()
		pointTileCollision()
		containerItemsFitWhere()
		containerAvailable()
		getProperty()
		containerItems()
		threatLevel()
		entityType()
		sendEntityMessage()
		material()
		liquidAt()
		containerSize()
		debugText()
		monsterType()
		entityMoney()
		nearestTo()
		npcLineQuery()
		entityPortrait()
		entityName()
		entityDamageTeam()
		containerConsumeAt()
		entityAggressive()
		windLevel()
		monsterQuery()
		entityExists()
		loungeableQuery()
		npcQuery()
		entityLineQuery()
	}
	root = {
		createBiome()
		imageSpaces()
		createItem()
		loadVersionedJson()
		createTreasure()
		getMatchingTenants()
		monsterSkillParameter()
		getConfiguration()
		npcVariant()
		itemHasTag()
		imageSize()
		projectileGravityMultiplier()
		nonEmptyRegion()
		evalFunction2()
		projectileConfig()
		materialMiningSound()
		generateName()
		isTreasurePool()
		hasTech()
		behaviorModule()
		itemConfig()
		treeStemDirectory()
		evalFunction()
		techConfig()
		npcConfig()
		setConfigurationPath()
		getConfigurationPath()
		materialHealth()
		materialFootstepSound()
		monsterMovementSettings()
		materialPath()
		setConfiguration()
		monsterPortrait()
		itemType()
		questConfig()
		recipesForItem()
		assetJson()
		treeFoliageDirectory()
		techType()
		liquidStatusEffects()
		makeCurrentVersionedJson()
		itemTags()
		tenantConfig()
		npcPortrait()
	}
	jsize()
	status = {
		setResourceLocked()
		resourcePercentage()
		addPersistentEffects()
		removeEphemeralEffect()
		resource()
		setResourcePercentage()
		resourcePositive()
		damageTakenSince()
		statPositive()
		stat()
		statusProperty()
		activeUniqueStatusEffectSummary()
		inflictedHitsSince()
		resourceMax()
		setStatusProperty()
		setPersistentEffects()
		resetAllResources()
		addEphemeralEffects()
		overConsumeResource()
		modifyResource()
		addEphemeralEffect()
		getPersistentEffects()
		resetResource()
		consumeResource()
		clearPersistentEffects()
		modifyResourcePercentage()
		clearEphemeralEffects()
		resourceNames()
		addPersistentEffect()
		resourceLocked()
		clearAllPersistentEffects()
		inflictedDamageSince()
		isResource()
		setResource()
		giveResource()
	}
	xpcall()
	getmetatable()
	utf8 = {
		len()
		codepoint()
		offset()
		codes()
		charpattern = "[
[22:52:35.928] [Warn] 	select()
	rawequal()
	rawset()
	string = {
		gmatch()
		char()
		sub()
		unpack()
		upper()
		lower()
		find()
		rep()
		dump()
		len()
		reverse()
		packsize()
		pack()
		byte()
		match()
		format()
		gsub()
	}
	require()
	pairs()
	next()
	jobject()
	math = {
		pi = 3.1415926535898
		rad()
		max()
		sqrt()
		random()
		floor()
		log()
		acos()
		fmod()
		mininteger = -9223372036854775808
		type()
		huge = inf
		randomseed()
		deg()
		exp()
		maxinteger = 9223372036854775807
		cos()
		min()
		tointeger()
		modf()
		asin()
		tan()
		atan()
		abs()
		sin()
		ult()
		ceil()
	}
	print()
	pcall()
	type()
	init()
	setmetatable()
	jresize()
	ic = {
		checkStack()
		itemAmount()
		stripColor()
		quickstack()
		itemConfig()
		amountEquipped()
		sortFunc()
		lock()
		giveBack()
		renameThis()
		sort()
		searchBox()
		sort_relative()
		clientVersion = 1
		renameButton()
		searchButton()
		getQuality()
	}
	player = {
		equippedTech()
		altHandItem()
		giveEssentialItem()
		consumeTaggedItem()
		setUniverseFlag()
		species()
		itemsWithTag()
		worldId()
		warp()
		completeMission()
		inventoryTags()
		upgradeShip()
		hasQuest()
		consumeItem()
		gender()
		primaryHandItem()
		essentialItem()
		equippedItem()
		setIntroComplete()
		playTime()
		enabledTechs()
		recordEvent()
		playCinematic()
		introComplete()
		hasCompletedQuest()
		makeTechAvailable()
		consumeItemWithParameter()
		startQuest()
		hasItemWithParameter()
		getItemWithParameter()
		lounge()
		enableTech()
		equipTech()
		enableMission()
		removeEssentialItem()
		isLounging()
		availableTechs()
		primaryHandItemTags()
		makeTechUnavailable()
		confirm()
		serverUuid()
		addBookmark()
		altHandItemTags()
		cleanupItems()
		radioMessage()
		setEquippedItem()
		ownShipWorldId()
		hasItem()
		canStartQuest()
		giveBlueprint()
		hasCountOfItem()
		shipUpgrades()
		giveItem()
	}
	config = {
		getParameter()
	}
	self = {
	}
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	world = {
		spawnItem()
		entityPosition()
		entityHealth()
		damageTileArea()
		day()
		placeMaterial()
		entityDescription()
		containerPutItemsAt()
		entityVelocity()
		damageTiles()
		entityHandItem()
		objectAt()
		setProperty()
		containerItemApply()
		containerClose()
		distance()
		findUniqueEntity()
		gravity()
		rectTileCollision()
		entitySpecies()
		platformerPathStart()
		containerOpen()
		containerTakeAll()
		breathable()
		npcType()
		containerAddItems()
		dayLength()
		loungeableOccupied()
		placeObject()
		isTileProtected()
		destroyLiquid()
		debugLine()
		spawnLiquid()
		entityCanDamage()
		containerItemsCanFit()
		xwrap()
		entityUniqueId()
		itemDropQuery()
		lightLevel()
		placeMod()
		spawnNpc()
		spawnTreasure()
		time()
		underground()
		spawnVehicle()
		spawnMonster()
		timeOfDay()
		findPlatformerPath()
		debugPoly()
		containerTakeNumItemsAt()
		isMonster()
		farmableStage()
		polyCollision()
		objectLineQuery()
		entityHasCountOfItem()
		entityHandItemDescriptor()
		tileIsOccupied()
		resolvePolyCollision()
		pointCollision()
		callScriptedEntity()
		collisionBlocksAlongLine()
		containerStackItems()
		objectSpaces()
		containerConsume()
		spawnStagehand()
		spawnProjectile()
		stagehandType()
		entityQuery()
		lineTileCollision()
		containerSwapItemsNoCombine()
		liquidAlongLine()
		playerQuery()
		objectQuery()
		entityGender()
		rectCollision()
		containerItemAt()
		polyContains()
		containerTakeAt()
		magnitude()
		mod()
		containerSwapItems()
		isNpc()
		lineCollision()
		getObjectParameter()
		debugPoint()
		pointTileCollision()
		containerItemsFitWhere()
		containerAvailable()
		getProperty()
		containerItems()
		threatLevel()
		entityType()
		sendEntityMessage()
		material()
		liquidAt()
		containerSize()
		debugText()
		monsterType()
		entityMoney()
		nearestTo()
		npcLineQuery()
		entityPortrait()
		entityName()
		entityDamageTeam()
		containerConsumeAt()
		entityAggressive()
		windLevel()
		monsterQuery()
		entityExists()
		loungeableQuery()
		npcQuery()
		entityLineQuery()
	}
	root = {
		createBiome()
		imageSpaces()
		createItem()
		loadVersionedJson()
		createTreasure()
		getMatchingTenants()
		monsterSkillParameter()
		getConfiguration()
		npcVariant()
		itemHasTag()
		imageSize()
		projectileGravityMultiplier()
		nonEmptyRegion()
		evalFunction2()
		projectileConfig()
		materialMiningSound()
		generateName()
		isTreasurePool()
		hasTech()
		behaviorModule()
		itemConfig()
		treeStemDirectory()
		evalFunction()
		techConfig()
		npcConfig()
		setConfigurationPath()
		getConfigurationPath()
		materialHealth()
		materialFootstepSound()
		monsterMovementSettings()
		materialPath()
		setConfiguration()
		monsterPortrait()
		itemType()
		questConfig()
		recipesForItem()
		assetJson()
		treeFoliageDirectory()
		techType()
		liquidStatusEffects()
		makeCurrentVersionedJson()
		itemTags()
		tenantConfig()
		npcPortrait()
	}
	jsize()
	status = {
		setResourceLocked()
		resourcePercentage()
		addPersistentEffects()
		removeEphemeralEffect()
		resource()
		setResourcePercentage()
		resourcePositive()
		damageTakenSince()
		statPositive()
		stat()
		statusProperty()
		activeUniqueStatusEffectSummary()
		inflictedHitsSince()
		resourceMax()
		setStatusProperty()
		setPersistentEffects()
		resetAllResources()
		addEphemeralEffects()
		overConsumeResource()
		modifyResource()
		addEphemeralEffect()
		getPersistentEffects()
		resetResource()
		consumeResource()
		clearPersistentEffects()
		modifyResourcePercentage()
		clearEphemeralEffects()
		resourceNames()
		addPersistentEffect()
		resourceLocked()
		clearAllPersistentEffects()
		inflictedDamageSince()
		isResource()
		setResource()
		giveResource()
	}
	xpcall()
	getmetatable()
	utf8 = {
		len()
		codepoint()
		offset()
		codes()
		charpattern = "[
[22:52:37.179] [Warn] 	select()
	rawequal()
	rawset()
	string = {
		gmatch()
		char()
		sub()
		unpack()
		upper()
		lower()
		find()
		rep()
		dump()
		len()
		reverse()
		packsize()
		pack()
		byte()
		match()
		format()
		gsub()
	}
	require()
	pairs()
	next()
	jobject()
	math = {
		pi = 3.1415926535898
		rad()
		max()
		sqrt()
		random()
		floor()
		log()
		acos()
		fmod()
		mininteger = -9223372036854775808
		type()
		huge = inf
		randomseed()
		deg()
		exp()
		maxinteger = 9223372036854775807
		cos()
		min()
		tointeger()
		modf()
		asin()
		tan()
		atan()
		abs()
		sin()
		ult()
		ceil()
	}
	print()
	pcall()
	type()
	init()
	setmetatable()
	jresize()
	ic = {
		checkStack()
		itemAmount()
		stripColor()
		quickstack()
		itemConfig()
		amountEquipped()
		sortFunc()
		lock()
		giveBack()
		renameThis()
		sort()
		searchBox()
		sort_relative()
		clientVersion = 1
		renameButton()
		searchButton()
		getQuality()
	}
	player = {
		equippedTech()
		altHandItem()
		giveEssentialItem()
		consumeTaggedItem()
		setUniverseFlag()
		species()
		itemsWithTag()
		worldId()
		warp()
		completeMission()
		inventoryTags()
		upgradeShip()
		hasQuest()
		consumeItem()
		gender()
		primaryHandItem()
		essentialItem()
		equippedItem()
		setIntroComplete()
		playTime()
		enabledTechs()
		recordEvent()
		playCinematic()
		introComplete()
		hasCompletedQuest()
		makeTechAvailable()
		consumeItemWithParameter()
		startQuest()
		hasItemWithParameter()
		getItemWithParameter()
		lounge()
		enableTech()
		equipTech()
		enableMission()
		removeEssentialItem()
		isLounging()
		availableTechs()
		primaryHandItemTags()
		makeTechUnavailable()
		confirm()
		serverUuid()
		addBookmark()
		altHandItemTags()
		cleanupItems()
		radioMessage()
		setEquippedItem()
		ownShipWorldId()
		hasItem()
		canStartQuest()
		giveBlueprint()
		hasCountOfItem()
		shipUpgrades()
		giveItem()
	}
	config = {
		getParameter()
	}
	self = {
	}
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	world = {
		spawnItem()
		entityPosition()
		entityHealth()
		damageTileArea()
		day()
		placeMaterial()
		entityDescription()
		containerPutItemsAt()
		entityVelocity()
		damageTiles()
		entityHandItem()
		objectAt()
		setProperty()
		containerItemApply()
		containerClose()
		distance()
		findUniqueEntity()
		gravity()
		rectTileCollision()
		entitySpecies()
		platformerPathStart()
		containerOpen()
		containerTakeAll()
		breathable()
		npcType()
		containerAddItems()
		dayLength()
		loungeableOccupied()
		placeObject()
		isTileProtected()
		destroyLiquid()
		debugLine()
		spawnLiquid()
		entityCanDamage()
		containerItemsCanFit()
		xwrap()
		entityUniqueId()
		itemDropQuery()
		lightLevel()
		placeMod()
		spawnNpc()
		spawnTreasure()
		time()
		underground()
		spawnVehicle()
		spawnMonster()
		timeOfDay()
		findPlatformerPath()
		debugPoly()
		containerTakeNumItemsAt()
		isMonster()
		farmableStage()
		polyCollision()
		objectLineQuery()
		entityHasCountOfItem()
		entityHandItemDescriptor()
		tileIsOccupied()
		resolvePolyCollision()
		pointCollision()
		callScriptedEntity()
		collisionBlocksAlongLine()
		containerStackItems()
		objectSpaces()
		containerConsume()
		spawnStagehand()
		spawnProjectile()
		stagehandType()
		entityQuery()
		lineTileCollision()
		containerSwapItemsNoCombine()
		liquidAlongLine()
		playerQuery()
		objectQuery()
		entityGender()
		rectCollision()
		containerItemAt()
		polyContains()
		containerTakeAt()
		magnitude()
		mod()
		containerSwapItems()
		isNpc()
		lineCollision()
		getObjectParameter()
		debugPoint()
		pointTileCollision()
		containerItemsFitWhere()
		containerAvailable()
		getProperty()
		containerItems()
		threatLevel()
		entityType()
		sendEntityMessage()
		material()
		liquidAt()
		containerSize()
		debugText()
		monsterType()
		entityMoney()
		nearestTo()
		npcLineQuery()
		entityPortrait()
		entityName()
		entityDamageTeam()
		containerConsumeAt()
		entityAggressive()
		windLevel()
		monsterQuery()
		entityExists()
		loungeableQuery()
		npcQuery()
		entityLineQuery()
	}
	root = {
		createBiome()
		imageSpaces()
		createItem()
		loadVersionedJson()
		createTreasure()
		getMatchingTenants()
		monsterSkillParameter()
		getConfiguration()
		npcVariant()
		itemHasTag()
		imageSize()
		projectileGravityMultiplier()
		nonEmptyRegion()
		evalFunction2()
		projectileConfig()
		materialMiningSound()
		generateName()
		isTreasurePool()
		hasTech()
		behaviorModule()
		itemConfig()
		treeStemDirectory()
		evalFunction()
		techConfig()
		npcConfig()
		setConfigurationPath()
		getConfigurationPath()
		materialHealth()
		materialFootstepSound()
		monsterMovementSettings()
		materialPath()
		setConfiguration()
		monsterPortrait()
		itemType()
		questConfig()
		recipesForItem()
		assetJson()
		treeFoliageDirectory()
		techType()
		liquidStatusEffects()
		makeCurrentVersionedJson()
		itemTags()
		tenantConfig()
		npcPortrait()
	}
	jsize()
	status = {
		setResourceLocked()
		resourcePercentage()
		addPersistentEffects()
		removeEphemeralEffect()
		resource()
		setResourcePercentage()
		resourcePositive()
		damageTakenSince()
		statPositive()
		stat()
		statusProperty()
		activeUniqueStatusEffectSummary()
		inflictedHitsSince()
		resourceMax()
		setStatusProperty()
		setPersistentEffects()
		resetAllResources()
		addEphemeralEffects()
		overConsumeResource()
		modifyResource()
		addEphemeralEffect()
		getPersistentEffects()
		resetResource()
		consumeResource()
		clearPersistentEffects()
		modifyResourcePercentage()
		clearEphemeralEffects()
		resourceNames()
		addPersistentEffect()
		resourceLocked()
		clearAllPersistentEffects()
		inflictedDamageSince()
		isResource()
		setResource()
		giveResource()
	}
	xpcall()
	getmetatable()
	utf8 = {
		len()
		codepoint()
		offset()
		codes()
		charpattern = "[
[22:52:38.362] [Warn] 	select()
	rawequal()
	rawset()
	string = {
		gmatch()
		char()
		sub()
		unpack()
		upper()
		lower()
		find()
		rep()
		dump()
		len()
		reverse()
		packsize()
		pack()
		byte()
		match()
		format()
		gsub()
	}
	require()
	pairs()
	next()
	jobject()
	math = {
		pi = 3.1415926535898
		rad()
		max()
		sqrt()
		random()
		floor()
		log()
		acos()
		fmod()
		mininteger = -9223372036854775808
		type()
		huge = inf
		randomseed()
		deg()
		exp()
		maxinteger = 9223372036854775807
		cos()
		min()
		tointeger()
		modf()
		asin()
		tan()
		atan()
		abs()
		sin()
		ult()
		ceil()
	}
	print()
	pcall()
	type()
	init()
	setmetatable()
	jresize()
	ic = {
		checkStack()
		itemAmount()
		stripColor()
		quickstack()
		itemConfig()
		amountEquipped()
		sortFunc()
		lock()
		giveBack()
		renameThis()
		sort()
		searchBox()
		sort_relative()
		clientVersion = 1
		renameButton()
		searchButton()
		getQuality()
	}
	player = {
		equippedTech()
		altHandItem()
		giveEssentialItem()
		consumeTaggedItem()
		setUniverseFlag()
		species()
		itemsWithTag()
		worldId()
		warp()
		completeMission()
		inventoryTags()
		upgradeShip()
		hasQuest()
		consumeItem()
		gender()
		primaryHandItem()
		essentialItem()
		equippedItem()
		setIntroComplete()
		playTime()
		enabledTechs()
		recordEvent()
		playCinematic()
		introComplete()
		hasCompletedQuest()
		makeTechAvailable()
		consumeItemWithParameter()
		startQuest()
		hasItemWithParameter()
		getItemWithParameter()
		lounge()
		enableTech()
		equipTech()
		enableMission()
		removeEssentialItem()
		isLounging()
		availableTechs()
		primaryHandItemTags()
		makeTechUnavailable()
		confirm()
		serverUuid()
		addBookmark()
		altHandItemTags()
		cleanupItems()
		radioMessage()
		setEquippedItem()
		ownShipWorldId()
		hasItem()
		canStartQuest()
		giveBlueprint()
		hasCountOfItem()
		shipUpgrades()
		giveItem()
	}
	config = {
		getParameter()
	}
	self = {
	}
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	world = {
		spawnItem()
		entityPosition()
		entityHealth()
		damageTileArea()
		day()
		placeMaterial()
		entityDescription()
		containerPutItemsAt()
		entityVelocity()
		damageTiles()
		entityHandItem()
		objectAt()
		setProperty()
		containerItemApply()
		containerClose()
		distance()
		findUniqueEntity()
		gravity()
		rectTileCollision()
		entitySpecies()
		platformerPathStart()
		containerOpen()
		containerTakeAll()
		breathable()
		npcType()
		containerAddItems()
		dayLength()
		loungeableOccupied()
		placeObject()
		isTileProtected()
		destroyLiquid()
		debugLine()
		spawnLiquid()
		entityCanDamage()
		containerItemsCanFit()
		xwrap()
		entityUniqueId()
		itemDropQuery()
		lightLevel()
		placeMod()
		spawnNpc()
		spawnTreasure()
		time()
		underground()
		spawnVehicle()
		spawnMonster()
		timeOfDay()
		findPlatformerPath()
		debugPoly()
		containerTakeNumItemsAt()
		isMonster()
		farmableStage()
		polyCollision()
		objectLineQuery()
		entityHasCountOfItem()
		entityHandItemDescriptor()
		tileIsOccupied()
		resolvePolyCollision()
		pointCollision()
		callScriptedEntity()
		collisionBlocksAlongLine()
		containerStackItems()
		objectSpaces()
		containerConsume()
		spawnStagehand()
		spawnProjectile()
		stagehandType()
		entityQuery()
		lineTileCollision()
		containerSwapItemsNoCombine()
		liquidAlongLine()
		playerQuery()
		objectQuery()
		entityGender()
		rectCollision()
		containerItemAt()
		polyContains()
		containerTakeAt()
		magnitude()
		mod()
		containerSwapItems()
		isNpc()
		lineCollision()
		getObjectParameter()
		debugPoint()
		pointTileCollision()
		containerItemsFitWhere()
		containerAvailable()
		getProperty()
		containerItems()
		threatLevel()
		entityType()
		sendEntityMessage()
		material()
		liquidAt()
		containerSize()
		debugText()
		monsterType()
		entityMoney()
		nearestTo()
		npcLineQuery()
		entityPortrait()
		entityName()
		entityDamageTeam()
		containerConsumeAt()
		entityAggressive()
		windLevel()
		monsterQuery()
		entityExists()
		loungeableQuery()
		npcQuery()
		entityLineQuery()
	}
	root = {
		createBiome()
		imageSpaces()
		createItem()
		loadVersionedJson()
		createTreasure()
		getMatchingTenants()
		monsterSkillParameter()
		getConfiguration()
		npcVariant()
		itemHasTag()
		imageSize()
		projectileGravityMultiplier()
		nonEmptyRegion()
		evalFunction2()
		projectileConfig()
		materialMiningSound()
		generateName()
		isTreasurePool()
		hasTech()
		behaviorModule()
		itemConfig()
		treeStemDirectory()
		evalFunction()
		techConfig()
		npcConfig()
		setConfigurationPath()
		getConfigurationPath()
		materialHealth()
		materialFootstepSound()
		monsterMovementSettings()
		materialPath()
		setConfiguration()
		monsterPortrait()
		itemType()
		questConfig()
		recipesForItem()
		assetJson()
		treeFoliageDirectory()
		techType()
		liquidStatusEffects()
		makeCurrentVersionedJson()
		itemTags()
		tenantConfig()
		npcPortrait()
	}
	jsize()
	status = {
		setResourceLocked()
		resourcePercentage()
		addPersistentEffects()
		removeEphemeralEffect()
		resource()
		setResourcePercentage()
		resourcePositive()
		damageTakenSince()
		statPositive()
		stat()
		statusProperty()
		activeUniqueStatusEffectSummary()
		inflictedHitsSince()
		resourceMax()
		setStatusProperty()
		setPersistentEffects()
		resetAllResources()
		addEphemeralEffects()
		overConsumeResource()
		modifyResource()
		addEphemeralEffect()
		getPersistentEffects()
		resetResource()
		consumeResource()
		clearPersistentEffects()
		modifyResourcePercentage()
		clearEphemeralEffects()
		resourceNames()
		addPersistentEffect()
		resourceLocked()
		clearAllPersistentEffects()
		inflictedDamageSince()
		isResource()
		setResource()
		giveResource()
	}
	xpcall()
	getmetatable()
	utf8 = {
		len()
		codepoint()
		offset()
		codes()
		charpattern = "[
[22:52:51.479] [Warn] 	select()
	rawequal()
	rawset()
	string = {
		gmatch()
		char()
		sub()
		unpack()
		upper()
		lower()
		find()
		rep()
		dump()
		len()
		reverse()
		packsize()
		pack()
		byte()
		match()
		format()
		gsub()
	}
	require()
	pairs()
	next()
	jobject()
	math = {
		pi = 3.1415926535898
		rad()
		max()
		sqrt()
		random()
		floor()
		log()
		acos()
		fmod()
		mininteger = -9223372036854775808
		type()
		huge = inf
		randomseed()
		deg()
		exp()
		maxinteger = 9223372036854775807
		cos()
		min()
		tointeger()
		modf()
		asin()
		tan()
		atan()
		abs()
		sin()
		ult()
		ceil()
	}
	print()
	pcall()
	type()
	init()
	setmetatable()
	jresize()
	ic = {
		checkStack()
		itemAmount()
		stripColor()
		quickstack()
		itemConfig()
		amountEquipped()
		sortFunc()
		lock()
		giveBack()
		renameThis()
		sort()
		searchBox()
		sort_relative()
		clientVersion = 1
		renameButton()
		searchButton()
		getQuality()
	}
	player = {
		equippedTech()
		altHandItem()
		giveEssentialItem()
		consumeTaggedItem()
		setUniverseFlag()
		species()
		itemsWithTag()
		worldId()
		warp()
		completeMission()
		inventoryTags()
		upgradeShip()
		hasQuest()
		consumeItem()
		gender()
		primaryHandItem()
		essentialItem()
		equippedItem()
		setIntroComplete()
		playTime()
		enabledTechs()
		recordEvent()
		playCinematic()
		introComplete()
		hasCompletedQuest()
		makeTechAvailable()
		consumeItemWithParameter()
		startQuest()
		hasItemWithParameter()
		getItemWithParameter()
		lounge()
		enableTech()
		equipTech()
		enableMission()
		removeEssentialItem()
		isLounging()
		availableTechs()
		primaryHandItemTags()
		makeTechUnavailable()
		confirm()
		serverUuid()
		addBookmark()
		altHandItemTags()
		cleanupItems()
		radioMessage()
		setEquippedItem()
		ownShipWorldId()
		hasItem()
		canStartQuest()
		giveBlueprint()
		hasCountOfItem()
		shipUpgrades()
		giveItem()
	}
	config = {
		getParameter()
	}
	self = {
	}
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	world = {
		spawnItem()
		entityPosition()
		entityHealth()
		damageTileArea()
		day()
		placeMaterial()
		entityDescription()
		containerPutItemsAt()
		entityVelocity()
		damageTiles()
		entityHandItem()
		objectAt()
		setProperty()
		containerItemApply()
		containerClose()
		distance()
		findUniqueEntity()
		gravity()
		rectTileCollision()
		entitySpecies()
		platformerPathStart()
		containerOpen()
		containerTakeAll()
		breathable()
		npcType()
		containerAddItems()
		dayLength()
		loungeableOccupied()
		placeObject()
		isTileProtected()
		destroyLiquid()
		debugLine()
		spawnLiquid()
		entityCanDamage()
		containerItemsCanFit()
		xwrap()
		entityUniqueId()
		itemDropQuery()
		lightLevel()
		placeMod()
		spawnNpc()
		spawnTreasure()
		time()
		underground()
		spawnVehicle()
		spawnMonster()
		timeOfDay()
		findPlatformerPath()
		debugPoly()
		containerTakeNumItemsAt()
		isMonster()
		farmableStage()
		polyCollision()
		objectLineQuery()
		entityHasCountOfItem()
		entityHandItemDescriptor()
		tileIsOccupied()
		resolvePolyCollision()
		pointCollision()
		callScriptedEntity()
		collisionBlocksAlongLine()
		containerStackItems()
		objectSpaces()
		containerConsume()
		spawnStagehand()
		spawnProjectile()
		stagehandType()
		entityQuery()
		lineTileCollision()
		containerSwapItemsNoCombine()
		liquidAlongLine()
		playerQuery()
		objectQuery()
		entityGender()
		rectCollision()
		containerItemAt()
		polyContains()
		containerTakeAt()
		magnitude()
		mod()
		containerSwapItems()
		isNpc()
		lineCollision()
		getObjectParameter()
		debugPoint()
		pointTileCollision()
		containerItemsFitWhere()
		containerAvailable()
		getProperty()
		containerItems()
		threatLevel()
		entityType()
		sendEntityMessage()
		material()
		liquidAt()
		containerSize()
		debugText()
		monsterType()
		entityMoney()
		nearestTo()
		npcLineQuery()
		entityPortrait()
		entityName()
		entityDamageTeam()
		containerConsumeAt()
		entityAggressive()
		windLevel()
		monsterQuery()
		entityExists()
		loungeableQuery()
		npcQuery()
		entityLineQuery()
	}
	root = {
		createBiome()
		imageSpaces()
		createItem()
		loadVersionedJson()
		createTreasure()
		getMatchingTenants()
		monsterSkillParameter()
		getConfiguration()
		npcVariant()
		itemHasTag()
		imageSize()
		projectileGravityMultiplier()
		nonEmptyRegion()
		evalFunction2()
		projectileConfig()
		materialMiningSound()
		generateName()
		isTreasurePool()
		hasTech()
		behaviorModule()
		itemConfig()
		treeStemDirectory()
		evalFunction()
		techConfig()
		npcConfig()
		setConfigurationPath()
		getConfigurationPath()
		materialHealth()
		materialFootstepSound()
		monsterMovementSettings()
		materialPath()
		setConfiguration()
		monsterPortrait()
		itemType()
		questConfig()
		recipesForItem()
		assetJson()
		treeFoliageDirectory()
		techType()
		liquidStatusEffects()
		makeCurrentVersionedJson()
		itemTags()
		tenantConfig()
		npcPortrait()
	}
	jsize()
	status = {
		setResourceLocked()
		resourcePercentage()
		addPersistentEffects()
		removeEphemeralEffect()
		resource()
		setResourcePercentage()
		resourcePositive()
		damageTakenSince()
		statPositive()
		stat()
		statusProperty()
		activeUniqueStatusEffectSummary()
		inflictedHitsSince()
		resourceMax()
		setStatusProperty()
		setPersistentEffects()
		resetAllResources()
		addEphemeralEffects()
		overConsumeResource()
		modifyResource()
		addEphemeralEffect()
		getPersistentEffects()
		resetResource()
		consumeResource()
		clearPersistentEffects()
		modifyResourcePercentage()
		clearEphemeralEffects()
		resourceNames()
		addPersistentEffect()
		resourceLocked()
		clearAllPersistentEffects()
		inflictedDamageSince()
		isResource()
		setResource()
		giveResource()
	}
	xpcall()
	getmetatable()
	utf8 = {
		len()
		codepoint()
		offset()
		codes()
		charpattern = "[
[22:52:52.544] [Warn] 	select()
	rawequal()
	rawset()
	string = {
		gmatch()
		char()
		sub()
		unpack()
		upper()
		lower()
		find()
		rep()
		dump()
		len()
		reverse()
		packsize()
		pack()
		byte()
		match()
		format()
		gsub()
	}
	require()
	pairs()
	next()
	jobject()
	math = {
		pi = 3.1415926535898
		rad()
		max()
		sqrt()
		random()
		floor()
		log()
		acos()
		fmod()
		mininteger = -9223372036854775808
		type()
		huge = inf
		randomseed()
		deg()
		exp()
		maxinteger = 9223372036854775807
		cos()
		min()
		tointeger()
		modf()
		asin()
		tan()
		atan()
		abs()
		sin()
		ult()
		ceil()
	}
	print()
	pcall()
	type()
	init()
	setmetatable()
	jresize()
	ic = {
		checkStack()
		itemAmount()
		stripColor()
		quickstack()
		itemConfig()
		amountEquipped()
		sortFunc()
		lock()
		giveBack()
		renameThis()
		sort()
		searchBox()
		sort_relative()
		clientVersion = 1
		renameButton()
		searchButton()
		getQuality()
	}
	player = {
		equippedTech()
		altHandItem()
		giveEssentialItem()
		consumeTaggedItem()
		setUniverseFlag()
		species()
		itemsWithTag()
		worldId()
		warp()
		completeMission()
		inventoryTags()
		upgradeShip()
		hasQuest()
		consumeItem()
		gender()
		primaryHandItem()
		essentialItem()
		equippedItem()
		setIntroComplete()
		playTime()
		enabledTechs()
		recordEvent()
		playCinematic()
		introComplete()
		hasCompletedQuest()
		makeTechAvailable()
		consumeItemWithParameter()
		startQuest()
		hasItemWithParameter()
		getItemWithParameter()
		lounge()
		enableTech()
		equipTech()
		enableMission()
		removeEssentialItem()
		isLounging()
		availableTechs()
		primaryHandItemTags()
		makeTechUnavailable()
		confirm()
		serverUuid()
		addBookmark()
		altHandItemTags()
		cleanupItems()
		radioMessage()
		setEquippedItem()
		ownShipWorldId()
		hasItem()
		canStartQuest()
		giveBlueprint()
		hasCountOfItem()
		shipUpgrades()
		giveItem()
	}
	config = {
		getParameter()
	}
	self = {
	}
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	world = {
		spawnItem()
		entityPosition()
		entityHealth()
		damageTileArea()
		day()
		placeMaterial()
		entityDescription()
		containerPutItemsAt()
		entityVelocity()
		damageTiles()
		entityHandItem()
		objectAt()
		setProperty()
		containerItemApply()
		containerClose()
		distance()
		findUniqueEntity()
		gravity()
		rectTileCollision()
		entitySpecies()
		platformerPathStart()
		containerOpen()
		containerTakeAll()
		breathable()
		npcType()
		containerAddItems()
		dayLength()
		loungeableOccupied()
		placeObject()
		isTileProtected()
		destroyLiquid()
		debugLine()
		spawnLiquid()
		entityCanDamage()
		containerItemsCanFit()
		xwrap()
		entityUniqueId()
		itemDropQuery()
		lightLevel()
		placeMod()
		spawnNpc()
		spawnTreasure()
		time()
		underground()
		spawnVehicle()
		spawnMonster()
		timeOfDay()
		findPlatformerPath()
		debugPoly()
		containerTakeNumItemsAt()
		isMonster()
		farmableStage()
		polyCollision()
		objectLineQuery()
		entityHasCountOfItem()
		entityHandItemDescriptor()
		tileIsOccupied()
		resolvePolyCollision()
		pointCollision()
		callScriptedEntity()
		collisionBlocksAlongLine()
		containerStackItems()
		objectSpaces()
		containerConsume()
		spawnStagehand()
		spawnProjectile()
		stagehandType()
		entityQuery()
		lineTileCollision()
		containerSwapItemsNoCombine()
		liquidAlongLine()
		playerQuery()
		objectQuery()
		entityGender()
		rectCollision()
		containerItemAt()
		polyContains()
		containerTakeAt()
		magnitude()
		mod()
		containerSwapItems()
		isNpc()
		lineCollision()
		getObjectParameter()
		debugPoint()
		pointTileCollision()
		containerItemsFitWhere()
		containerAvailable()
		getProperty()
		containerItems()
		threatLevel()
		entityType()
		sendEntityMessage()
		material()
		liquidAt()
		containerSize()
		debugText()
		monsterType()
		entityMoney()
		nearestTo()
		npcLineQuery()
		entityPortrait()
		entityName()
		entityDamageTeam()
		containerConsumeAt()
		entityAggressive()
		windLevel()
		monsterQuery()
		entityExists()
		loungeableQuery()
		npcQuery()
		entityLineQuery()
	}
	root = {
		createBiome()
		imageSpaces()
		createItem()
		loadVersionedJson()
		createTreasure()
		getMatchingTenants()
		monsterSkillParameter()
		getConfiguration()
		npcVariant()
		itemHasTag()
		imageSize()
		projectileGravityMultiplier()
		nonEmptyRegion()
		evalFunction2()
		projectileConfig()
		materialMiningSound()
		generateName()
		isTreasurePool()
		hasTech()
		behaviorModule()
		itemConfig()
		treeStemDirectory()
		evalFunction()
		techConfig()
		npcConfig()
		setConfigurationPath()
		getConfigurationPath()
		materialHealth()
		materialFootstepSound()
		monsterMovementSettings()
		materialPath()
		setConfiguration()
		monsterPortrait()
		itemType()
		questConfig()
		recipesForItem()
		assetJson()
		treeFoliageDirectory()
		techType()
		liquidStatusEffects()
		makeCurrentVersionedJson()
		itemTags()
		tenantConfig()
		npcPortrait()
	}
	jsize()
	status = {
		setResourceLocked()
		resourcePercentage()
		addPersistentEffects()
		removeEphemeralEffect()
		resource()
		setResourcePercentage()
		resourcePositive()
		damageTakenSince()
		statPositive()
		stat()
		statusProperty()
		activeUniqueStatusEffectSummary()
		inflictedHitsSince()
		resourceMax()
		setStatusProperty()
		setPersistentEffects()
		resetAllResources()
		addEphemeralEffects()
		overConsumeResource()
		modifyResource()
		addEphemeralEffect()
		getPersistentEffects()
		resetResource()
		consumeResource()
		clearPersistentEffects()
		modifyResourcePercentage()
		clearEphemeralEffects()
		resourceNames()
		addPersistentEffect()
		resourceLocked()
		clearAllPersistentEffects()
		inflictedDamageSince()
		isResource()
		setResource()
		giveResource()
	}
	xpcall()
	getmetatable()
	utf8 = {
		len()
		codepoint()
		offset()
		codes()
		charpattern = "[
[22:52:53.646] [Warn] 	select()
	rawequal()
	rawset()
	string = {
		gmatch()
		char()
		sub()
		unpack()
		upper()
		lower()
		find()
		rep()
		dump()
		len()
		reverse()
		packsize()
		pack()
		byte()
		match()
		format()
		gsub()
	}
	require()
	pairs()
	next()
	jobject()
	math = {
		pi = 3.1415926535898
		rad()
		max()
		sqrt()
		random()
		floor()
		log()
		acos()
		fmod()
		mininteger = -9223372036854775808
		type()
		huge = inf
		randomseed()
		deg()
		exp()
		maxinteger = 9223372036854775807
		cos()
		min()
		tointeger()
		modf()
		asin()
		tan()
		atan()
		abs()
		sin()
		ult()
		ceil()
	}
	print()
	pcall()
	type()
	init()
	setmetatable()
	jresize()
	ic = {
		checkStack()
		itemAmount()
		stripColor()
		quickstack()
		itemConfig()
		amountEquipped()
		sortFunc()
		lock()
		giveBack()
		renameThis()
		sort()
		searchBox()
		sort_relative()
		clientVersion = 1
		renameButton()
		searchButton()
		getQuality()
	}
	player = {
		equippedTech()
		altHandItem()
		giveEssentialItem()
		consumeTaggedItem()
		setUniverseFlag()
		species()
		itemsWithTag()
		worldId()
		warp()
		completeMission()
		inventoryTags()
		upgradeShip()
		hasQuest()
		consumeItem()
		gender()
		primaryHandItem()
		essentialItem()
		equippedItem()
		setIntroComplete()
		playTime()
		enabledTechs()
		recordEvent()
		playCinematic()
		introComplete()
		hasCompletedQuest()
		makeTechAvailable()
		consumeItemWithParameter()
		startQuest()
		hasItemWithParameter()
		getItemWithParameter()
		lounge()
		enableTech()
		equipTech()
		enableMission()
		removeEssentialItem()
		isLounging()
		availableTechs()
		primaryHandItemTags()
		makeTechUnavailable()
		confirm()
		serverUuid()
		addBookmark()
		altHandItemTags()
		cleanupItems()
		radioMessage()
		setEquippedItem()
		ownShipWorldId()
		hasItem()
		canStartQuest()
		giveBlueprint()
		hasCountOfItem()
		shipUpgrades()
		giveItem()
	}
	config = {
		getParameter()
	}
	self = {
	}
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	world = {
		spawnItem()
		entityPosition()
		entityHealth()
		damageTileArea()
		day()
		placeMaterial()
		entityDescription()
		containerPutItemsAt()
		entityVelocity()
		damageTiles()
		entityHandItem()
		objectAt()
		setProperty()
		containerItemApply()
		containerClose()
		distance()
		findUniqueEntity()
		gravity()
		rectTileCollision()
		entitySpecies()
		platformerPathStart()
		containerOpen()
		containerTakeAll()
		breathable()
		npcType()
		containerAddItems()
		dayLength()
		loungeableOccupied()
		placeObject()
		isTileProtected()
		destroyLiquid()
		debugLine()
		spawnLiquid()
		entityCanDamage()
		containerItemsCanFit()
		xwrap()
		entityUniqueId()
		itemDropQuery()
		lightLevel()
		placeMod()
		spawnNpc()
		spawnTreasure()
		time()
		underground()
		spawnVehicle()
		spawnMonster()
		timeOfDay()
		findPlatformerPath()
		debugPoly()
		containerTakeNumItemsAt()
		isMonster()
		farmableStage()
		polyCollision()
		objectLineQuery()
		entityHasCountOfItem()
		entityHandItemDescriptor()
		tileIsOccupied()
		resolvePolyCollision()
		pointCollision()
		callScriptedEntity()
		collisionBlocksAlongLine()
		containerStackItems()
		objectSpaces()
		containerConsume()
		spawnStagehand()
		spawnProjectile()
		stagehandType()
		entityQuery()
		lineTileCollision()
		containerSwapItemsNoCombine()
		liquidAlongLine()
		playerQuery()
		objectQuery()
		entityGender()
		rectCollision()
		containerItemAt()
		polyContains()
		containerTakeAt()
		magnitude()
		mod()
		containerSwapItems()
		isNpc()
		lineCollision()
		getObjectParameter()
		debugPoint()
		pointTileCollision()
		containerItemsFitWhere()
		containerAvailable()
		getProperty()
		containerItems()
		threatLevel()
		entityType()
		sendEntityMessage()
		material()
		liquidAt()
		containerSize()
		debugText()
		monsterType()
		entityMoney()
		nearestTo()
		npcLineQuery()
		entityPortrait()
		entityName()
		entityDamageTeam()
		containerConsumeAt()
		entityAggressive()
		windLevel()
		monsterQuery()
		entityExists()
		loungeableQuery()
		npcQuery()
		entityLineQuery()
	}
	root = {
		createBiome()
		imageSpaces()
		createItem()
		loadVersionedJson()
		createTreasure()
		getMatchingTenants()
		monsterSkillParameter()
		getConfiguration()
		npcVariant()
		itemHasTag()
		imageSize()
		projectileGravityMultiplier()
		nonEmptyRegion()
		evalFunction2()
		projectileConfig()
		materialMiningSound()
		generateName()
		isTreasurePool()
		hasTech()
		behaviorModule()
		itemConfig()
		treeStemDirectory()
		evalFunction()
		techConfig()
		npcConfig()
		setConfigurationPath()
		getConfigurationPath()
		materialHealth()
		materialFootstepSound()
		monsterMovementSettings()
		materialPath()
		setConfiguration()
		monsterPortrait()
		itemType()
		questConfig()
		recipesForItem()
		assetJson()
		treeFoliageDirectory()
		techType()
		liquidStatusEffects()
		makeCurrentVersionedJson()
		itemTags()
		tenantConfig()
		npcPortrait()
	}
	jsize()
	status = {
		setResourceLocked()
		resourcePercentage()
		addPersistentEffects()
		removeEphemeralEffect()
		resource()
		setResourcePercentage()
		resourcePositive()
		damageTakenSince()
		statPositive()
		stat()
		statusProperty()
		activeUniqueStatusEffectSummary()
		inflictedHitsSince()
		resourceMax()
		setStatusProperty()
		setPersistentEffects()
		resetAllResources()
		addEphemeralEffects()
		overConsumeResource()
		modifyResource()
		addEphemeralEffect()
		getPersistentEffects()
		resetResource()
		consumeResource()
		clearPersistentEffects()
		modifyResourcePercentage()
		clearEphemeralEffects()
		resourceNames()
		addPersistentEffect()
		resourceLocked()
		clearAllPersistentEffects()
		inflictedDamageSince()
		isResource()
		setResource()
		giveResource()
	}
	xpcall()
	getmetatable()
	utf8 = {
		len()
		codepoint()
		offset()
		codes()
		charpattern = "[
[22:52:54.897] [Warn] 	select()
	rawequal()
	rawset()
	string = {
		gmatch()
		char()
		sub()
		unpack()
		upper()
		lower()
		find()
		rep()
		dump()
		len()
		reverse()
		packsize()
		pack()
		byte()
		match()
		format()
		gsub()
	}
	require()
	pairs()
	next()
	jobject()
	math = {
		pi = 3.1415926535898
		rad()
		max()
		sqrt()
		random()
		floor()
		log()
		acos()
		fmod()
		mininteger = -9223372036854775808
		type()
		huge = inf
		randomseed()
		deg()
		exp()
		maxinteger = 9223372036854775807
		cos()
		min()
		tointeger()
		modf()
		asin()
		tan()
		atan()
		abs()
		sin()
		ult()
		ceil()
	}
	print()
	pcall()
	type()
	init()
	setmetatable()
	jresize()
	ic = {
		checkStack()
		itemAmount()
		stripColor()
		quickstack()
		itemConfig()
		amountEquipped()
		sortFunc()
		lock()
		giveBack()
		renameThis()
		sort()
		searchBox()
		sort_relative()
		clientVersion = 1
		renameButton()
		searchButton()
		getQuality()
	}
	player = {
		equippedTech()
		altHandItem()
		giveEssentialItem()
		consumeTaggedItem()
		setUniverseFlag()
		species()
		itemsWithTag()
		worldId()
		warp()
		completeMission()
		inventoryTags()
		upgradeShip()
		hasQuest()
		consumeItem()
		gender()
		primaryHandItem()
		essentialItem()
		equippedItem()
		setIntroComplete()
		playTime()
		enabledTechs()
		recordEvent()
		playCinematic()
		introComplete()
		hasCompletedQuest()
		makeTechAvailable()
		consumeItemWithParameter()
		startQuest()
		hasItemWithParameter()
		getItemWithParameter()
		lounge()
		enableTech()
		equipTech()
		enableMission()
		removeEssentialItem()
		isLounging()
		availableTechs()
		primaryHandItemTags()
		makeTechUnavailable()
		confirm()
		serverUuid()
		addBookmark()
		altHandItemTags()
		cleanupItems()
		radioMessage()
		setEquippedItem()
		ownShipWorldId()
		hasItem()
		canStartQuest()
		giveBlueprint()
		hasCountOfItem()
		shipUpgrades()
		giveItem()
	}
	config = {
		getParameter()
	}
	self = {
	}
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	world = {
		spawnItem()
		entityPosition()
		entityHealth()
		damageTileArea()
		day()
		placeMaterial()
		entityDescription()
		containerPutItemsAt()
		entityVelocity()
		damageTiles()
		entityHandItem()
		objectAt()
		setProperty()
		containerItemApply()
		containerClose()
		distance()
		findUniqueEntity()
		gravity()
		rectTileCollision()
		entitySpecies()
		platformerPathStart()
		containerOpen()
		containerTakeAll()
		breathable()
		npcType()
		containerAddItems()
		dayLength()
		loungeableOccupied()
		placeObject()
		isTileProtected()
		destroyLiquid()
		debugLine()
		spawnLiquid()
		entityCanDamage()
		containerItemsCanFit()
		xwrap()
		entityUniqueId()
		itemDropQuery()
		lightLevel()
		placeMod()
		spawnNpc()
		spawnTreasure()
		time()
		underground()
		spawnVehicle()
		spawnMonster()
		timeOfDay()
		findPlatformerPath()
		debugPoly()
		containerTakeNumItemsAt()
		isMonster()
		farmableStage()
		polyCollision()
		objectLineQuery()
		entityHasCountOfItem()
		entityHandItemDescriptor()
		tileIsOccupied()
		resolvePolyCollision()
		pointCollision()
		callScriptedEntity()
		collisionBlocksAlongLine()
		containerStackItems()
		objectSpaces()
		containerConsume()
		spawnStagehand()
		spawnProjectile()
		stagehandType()
		entityQuery()
		lineTileCollision()
		containerSwapItemsNoCombine()
		liquidAlongLine()
		playerQuery()
		objectQuery()
		entityGender()
		rectCollision()
		containerItemAt()
		polyContains()
		containerTakeAt()
		magnitude()
		mod()
		containerSwapItems()
		isNpc()
		lineCollision()
		getObjectParameter()
		debugPoint()
		pointTileCollision()
		containerItemsFitWhere()
		containerAvailable()
		getProperty()
		containerItems()
		threatLevel()
		entityType()
		sendEntityMessage()
		material()
		liquidAt()
		containerSize()
		debugText()
		monsterType()
		entityMoney()
		nearestTo()
		npcLineQuery()
		entityPortrait()
		entityName()
		entityDamageTeam()
		containerConsumeAt()
		entityAggressive()
		windLevel()
		monsterQuery()
		entityExists()
		loungeableQuery()
		npcQuery()
		entityLineQuery()
	}
	root = {
		createBiome()
		imageSpaces()
		createItem()
		loadVersionedJson()
		createTreasure()
		getMatchingTenants()
		monsterSkillParameter()
		getConfiguration()
		npcVariant()
		itemHasTag()
		imageSize()
		projectileGravityMultiplier()
		nonEmptyRegion()
		evalFunction2()
		projectileConfig()
		materialMiningSound()
		generateName()
		isTreasurePool()
		hasTech()
		behaviorModule()
		itemConfig()
		treeStemDirectory()
		evalFunction()
		techConfig()
		npcConfig()
		setConfigurationPath()
		getConfigurationPath()
		materialHealth()
		materialFootstepSound()
		monsterMovementSettings()
		materialPath()
		setConfiguration()
		monsterPortrait()
		itemType()
		questConfig()
		recipesForItem()
		assetJson()
		treeFoliageDirectory()
		techType()
		liquidStatusEffects()
		makeCurrentVersionedJson()
		itemTags()
		tenantConfig()
		npcPortrait()
	}
	jsize()
	status = {
		setResourceLocked()
		resourcePercentage()
		addPersistentEffects()
		removeEphemeralEffect()
		resource()
		setResourcePercentage()
		resourcePositive()
		damageTakenSince()
		statPositive()
		stat()
		statusProperty()
		activeUniqueStatusEffectSummary()
		inflictedHitsSince()
		resourceMax()
		setStatusProperty()
		setPersistentEffects()
		resetAllResources()
		addEphemeralEffects()
		overConsumeResource()
		modifyResource()
		addEphemeralEffect()
		getPersistentEffects()
		resetResource()
		consumeResource()
		clearPersistentEffects()
		modifyResourcePercentage()
		clearEphemeralEffects()
		resourceNames()
		addPersistentEffect()
		resourceLocked()
		clearAllPersistentEffects()
		inflictedDamageSince()
		isResource()
		setResource()
		giveResource()
	}
	xpcall()
	getmetatable()
	utf8 = {
		len()
		codepoint()
		offset()
		codes()
		charpattern = "[
[22:52:55.879] [Warn] 	select()
	rawequal()
	rawset()
	string = {
		gmatch()
		char()
		sub()
		unpack()
		upper()
		lower()
		find()
		rep()
		dump()
		len()
		reverse()
		packsize()
		pack()
		byte()
		match()
		format()
		gsub()
	}
	require()
	pairs()
	next()
	jobject()
	math = {
		pi = 3.1415926535898
		rad()
		max()
		sqrt()
		random()
		floor()
		log()
		acos()
		fmod()
		mininteger = -9223372036854775808
		type()
		huge = inf
		randomseed()
		deg()
		exp()
		maxinteger = 9223372036854775807
		cos()
		min()
		tointeger()
		modf()
		asin()
		tan()
		atan()
		abs()
		sin()
		ult()
		ceil()
	}
	print()
	pcall()
	type()
	init()
	setmetatable()
	jresize()
	ic = {
		checkStack()
		itemAmount()
		stripColor()
		quickstack()
		itemConfig()
		amountEquipped()
		sortFunc()
		lock()
		giveBack()
		renameThis()
		sort()
		searchBox()
		sort_relative()
		clientVersion = 1
		renameButton()
		searchButton()
		getQuality()
	}
	player = {
		equippedTech()
		altHandItem()
		giveEssentialItem()
		consumeTaggedItem()
		setUniverseFlag()
		species()
		itemsWithTag()
		worldId()
		warp()
		completeMission()
		inventoryTags()
		upgradeShip()
		hasQuest()
		consumeItem()
		gender()
		primaryHandItem()
		essentialItem()
		equippedItem()
		setIntroComplete()
		playTime()
		enabledTechs()
		recordEvent()
		playCinematic()
		introComplete()
		hasCompletedQuest()
		makeTechAvailable()
		consumeItemWithParameter()
		startQuest()
		hasItemWithParameter()
		getItemWithParameter()
		lounge()
		enableTech()
		equipTech()
		enableMission()
		removeEssentialItem()
		isLounging()
		availableTechs()
		primaryHandItemTags()
		makeTechUnavailable()
		confirm()
		serverUuid()
		addBookmark()
		altHandItemTags()
		cleanupItems()
		radioMessage()
		setEquippedItem()
		ownShipWorldId()
		hasItem()
		canStartQuest()
		giveBlueprint()
		hasCountOfItem()
		shipUpgrades()
		giveItem()
	}
	config = {
		getParameter()
	}
	self = {
	}
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	world = {
		spawnItem()
		entityPosition()
		entityHealth()
		damageTileArea()
		day()
		placeMaterial()
		entityDescription()
		containerPutItemsAt()
		entityVelocity()
		damageTiles()
		entityHandItem()
		objectAt()
		setProperty()
		containerItemApply()
		containerClose()
		distance()
		findUniqueEntity()
		gravity()
		rectTileCollision()
		entitySpecies()
		platformerPathStart()
		containerOpen()
		containerTakeAll()
		breathable()
		npcType()
		containerAddItems()
		dayLength()
		loungeableOccupied()
		placeObject()
		isTileProtected()
		destroyLiquid()
		debugLine()
		spawnLiquid()
		entityCanDamage()
		containerItemsCanFit()
		xwrap()
		entityUniqueId()
		itemDropQuery()
		lightLevel()
		placeMod()
		spawnNpc()
		spawnTreasure()
		time()
		underground()
		spawnVehicle()
		spawnMonster()
		timeOfDay()
		findPlatformerPath()
		debugPoly()
		containerTakeNumItemsAt()
		isMonster()
		farmableStage()
		polyCollision()
		objectLineQuery()
		entityHasCountOfItem()
		entityHandItemDescriptor()
		tileIsOccupied()
		resolvePolyCollision()
		pointCollision()
		callScriptedEntity()
		collisionBlocksAlongLine()
		containerStackItems()
		objectSpaces()
		containerConsume()
		spawnStagehand()
		spawnProjectile()
		stagehandType()
		entityQuery()
		lineTileCollision()
		containerSwapItemsNoCombine()
		liquidAlongLine()
		playerQuery()
		objectQuery()
		entityGender()
		rectCollision()
		containerItemAt()
		polyContains()
		containerTakeAt()
		magnitude()
		mod()
		containerSwapItems()
		isNpc()
		lineCollision()
		getObjectParameter()
		debugPoint()
		pointTileCollision()
		containerItemsFitWhere()
		containerAvailable()
		getProperty()
		containerItems()
		threatLevel()
		entityType()
		sendEntityMessage()
		material()
		liquidAt()
		containerSize()
		debugText()
		monsterType()
		entityMoney()
		nearestTo()
		npcLineQuery()
		entityPortrait()
		entityName()
		entityDamageTeam()
		containerConsumeAt()
		entityAggressive()
		windLevel()
		monsterQuery()
		entityExists()
		loungeableQuery()
		npcQuery()
		entityLineQuery()
	}
	root = {
		createBiome()
		imageSpaces()
		createItem()
		loadVersionedJson()
		createTreasure()
		getMatchingTenants()
		monsterSkillParameter()
		getConfiguration()
		npcVariant()
		itemHasTag()
		imageSize()
		projectileGravityMultiplier()
		nonEmptyRegion()
		evalFunction2()
		projectileConfig()
		materialMiningSound()
		generateName()
		isTreasurePool()
		hasTech()
		behaviorModule()
		itemConfig()
		treeStemDirectory()
		evalFunction()
		techConfig()
		npcConfig()
		setConfigurationPath()
		getConfigurationPath()
		materialHealth()
		materialFootstepSound()
		monsterMovementSettings()
		materialPath()
		setConfiguration()
		monsterPortrait()
		itemType()
		questConfig()
		recipesForItem()
		assetJson()
		treeFoliageDirectory()
		techType()
		liquidStatusEffects()
		makeCurrentVersionedJson()
		itemTags()
		tenantConfig()
		npcPortrait()
	}
	jsize()
	status = {
		setResourceLocked()
		resourcePercentage()
		addPersistentEffects()
		removeEphemeralEffect()
		resource()
		setResourcePercentage()
		resourcePositive()
		damageTakenSince()
		statPositive()
		stat()
		statusProperty()
		activeUniqueStatusEffectSummary()
		inflictedHitsSince()
		resourceMax()
		setStatusProperty()
		setPersistentEffects()
		resetAllResources()
		addEphemeralEffects()
		overConsumeResource()
		modifyResource()
		addEphemeralEffect()
		getPersistentEffects()
		resetResource()
		consumeResource()
		clearPersistentEffects()
		modifyResourcePercentage()
		clearEphemeralEffects()
		resourceNames()
		addPersistentEffect()
		resourceLocked()
		clearAllPersistentEffects()
		inflictedDamageSince()
		isResource()
		setResource()
		giveResource()
	}
	xpcall()
	getmetatable()
	utf8 = {
		len()
		codepoint()
		offset()
		codes()
		charpattern = "[
[22:52:57.195] [Warn] 	select()
	rawequal()
	rawset()
	string = {
		gmatch()
		char()
		sub()
		unpack()
		upper()
		lower()
		find()
		rep()
		dump()
		len()
		reverse()
		packsize()
		pack()
		byte()
		match()
		format()
		gsub()
	}
	require()
	pairs()
	next()
	jobject()
	math = {
		pi = 3.1415926535898
		rad()
		max()
		sqrt()
		random()
		floor()
		log()
		acos()
		fmod()
		mininteger = -9223372036854775808
		type()
		huge = inf
		randomseed()
		deg()
		exp()
		maxinteger = 9223372036854775807
		cos()
		min()
		tointeger()
		modf()
		asin()
		tan()
		atan()
		abs()
		sin()
		ult()
		ceil()
	}
	print()
	pcall()
	type()
	init()
	setmetatable()
	jresize()
	ic = {
		checkStack()
		itemAmount()
		stripColor()
		quickstack()
		itemConfig()
		amountEquipped()
		sortFunc()
		lock()
		giveBack()
		renameThis()
		sort()
		searchBox()
		sort_relative()
		clientVersion = 1
		renameButton()
		searchButton()
		getQuality()
	}
	player = {
		equippedTech()
		altHandItem()
		giveEssentialItem()
		consumeTaggedItem()
		setUniverseFlag()
		species()
		itemsWithTag()
		worldId()
		warp()
		completeMission()
		inventoryTags()
		upgradeShip()
		hasQuest()
		consumeItem()
		gender()
		primaryHandItem()
		essentialItem()
		equippedItem()
		setIntroComplete()
		playTime()
		enabledTechs()
		recordEvent()
		playCinematic()
		introComplete()
		hasCompletedQuest()
		makeTechAvailable()
		consumeItemWithParameter()
		startQuest()
		hasItemWithParameter()
		getItemWithParameter()
		lounge()
		enableTech()
		equipTech()
		enableMission()
		removeEssentialItem()
		isLounging()
		availableTechs()
		primaryHandItemTags()
		makeTechUnavailable()
		confirm()
		serverUuid()
		addBookmark()
		altHandItemTags()
		cleanupItems()
		radioMessage()
		setEquippedItem()
		ownShipWorldId()
		hasItem()
		canStartQuest()
		giveBlueprint()
		hasCountOfItem()
		shipUpgrades()
		giveItem()
	}
	config = {
		getParameter()
	}
	self = {
	}
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	world = {
		spawnItem()
		entityPosition()
		entityHealth()
		damageTileArea()
		day()
		placeMaterial()
		entityDescription()
		containerPutItemsAt()
		entityVelocity()
		damageTiles()
		entityHandItem()
		objectAt()
		setProperty()
		containerItemApply()
		containerClose()
		distance()
		findUniqueEntity()
		gravity()
		rectTileCollision()
		entitySpecies()
		platformerPathStart()
		containerOpen()
		containerTakeAll()
		breathable()
		npcType()
		containerAddItems()
		dayLength()
		loungeableOccupied()
		placeObject()
		isTileProtected()
		destroyLiquid()
		debugLine()
		spawnLiquid()
		entityCanDamage()
		containerItemsCanFit()
		xwrap()
		entityUniqueId()
		itemDropQuery()
		lightLevel()
		placeMod()
		spawnNpc()
		spawnTreasure()
		time()
		underground()
		spawnVehicle()
		spawnMonster()
		timeOfDay()
		findPlatformerPath()
		debugPoly()
		containerTakeNumItemsAt()
		isMonster()
		farmableStage()
		polyCollision()
		objectLineQuery()
		entityHasCountOfItem()
		entityHandItemDescriptor()
		tileIsOccupied()
		resolvePolyCollision()
		pointCollision()
		callScriptedEntity()
		collisionBlocksAlongLine()
		containerStackItems()
		objectSpaces()
		containerConsume()
		spawnStagehand()
		spawnProjectile()
		stagehandType()
		entityQuery()
		lineTileCollision()
		containerSwapItemsNoCombine()
		liquidAlongLine()
		playerQuery()
		objectQuery()
		entityGender()
		rectCollision()
		containerItemAt()
		polyContains()
		containerTakeAt()
		magnitude()
		mod()
		containerSwapItems()
		isNpc()
		lineCollision()
		getObjectParameter()
		debugPoint()
		pointTileCollision()
		containerItemsFitWhere()
		containerAvailable()
		getProperty()
		containerItems()
		threatLevel()
		entityType()
		sendEntityMessage()
		material()
		liquidAt()
		containerSize()
		debugText()
		monsterType()
		entityMoney()
		nearestTo()
		npcLineQuery()
		entityPortrait()
		entityName()
		entityDamageTeam()
		containerConsumeAt()
		entityAggressive()
		windLevel()
		monsterQuery()
		entityExists()
		loungeableQuery()
		npcQuery()
		entityLineQuery()
	}
	root = {
		createBiome()
		imageSpaces()
		createItem()
		loadVersionedJson()
		createTreasure()
		getMatchingTenants()
		monsterSkillParameter()
		getConfiguration()
		npcVariant()
		itemHasTag()
		imageSize()
		projectileGravityMultiplier()
		nonEmptyRegion()
		evalFunction2()
		projectileConfig()
		materialMiningSound()
		generateName()
		isTreasurePool()
		hasTech()
		behaviorModule()
		itemConfig()
		treeStemDirectory()
		evalFunction()
		techConfig()
		npcConfig()
		setConfigurationPath()
		getConfigurationPath()
		materialHealth()
		materialFootstepSound()
		monsterMovementSettings()
		materialPath()
		setConfiguration()
		monsterPortrait()
		itemType()
		questConfig()
		recipesForItem()
		assetJson()
		treeFoliageDirectory()
		techType()
		liquidStatusEffects()
		makeCurrentVersionedJson()
		itemTags()
		tenantConfig()
		npcPortrait()
	}
	jsize()
	status = {
		setResourceLocked()
		resourcePercentage()
		addPersistentEffects()
		removeEphemeralEffect()
		resource()
		setResourcePercentage()
		resourcePositive()
		damageTakenSince()
		statPositive()
		stat()
		statusProperty()
		activeUniqueStatusEffectSummary()
		inflictedHitsSince()
		resourceMax()
		setStatusProperty()
		setPersistentEffects()
		resetAllResources()
		addEphemeralEffects()
		overConsumeResource()
		modifyResource()
		addEphemeralEffect()
		getPersistentEffects()
		resetResource()
		consumeResource()
		clearPersistentEffects()
		modifyResourcePercentage()
		clearEphemeralEffects()
		resourceNames()
		addPersistentEffect()
		resourceLocked()
		clearAllPersistentEffects()
		inflictedDamageSince()
		isResource()
		setResource()
		giveResource()
	}
	xpcall()
	getmetatable()
	utf8 = {
		len()
		codepoint()
		offset()
		codes()
		charpattern = "[
[22:53:07.749] [Warn] 	select()
	rawequal()
	rawset()
	string = {
		gmatch()
		char()
		sub()
		unpack()
		upper()
		lower()
		find()
		rep()
		dump()
		len()
		reverse()
		packsize()
		pack()
		byte()
		match()
		format()
		gsub()
	}
	require()
	pairs()
	next()
	jobject()
	math = {
		pi = 3.1415926535898
		rad()
		max()
		sqrt()
		random()
		floor()
		log()
		acos()
		fmod()
		mininteger = -9223372036854775808
		type()
		huge = inf
		randomseed()
		deg()
		exp()
		maxinteger = 9223372036854775807
		cos()
		min()
		tointeger()
		modf()
		asin()
		tan()
		atan()
		abs()
		sin()
		ult()
		ceil()
	}
	print()
	pcall()
	type()
	init()
	setmetatable()
	jresize()
	ic = {
		checkStack()
		itemAmount()
		stripColor()
		quickstack()
		itemConfig()
		amountEquipped()
		sortFunc()
		lock()
		giveBack()
		renameThis()
		sort()
		searchBox()
		sort_relative()
		clientVersion = 1
		renameButton()
		searchButton()
		getQuality()
	}
	player = {
		equippedTech()
		altHandItem()
		giveEssentialItem()
		consumeTaggedItem()
		setUniverseFlag()
		species()
		itemsWithTag()
		worldId()
		warp()
		completeMission()
		inventoryTags()
		upgradeShip()
		hasQuest()
		consumeItem()
		gender()
		primaryHandItem()
		essentialItem()
		equippedItem()
		setIntroComplete()
		playTime()
		enabledTechs()
		recordEvent()
		playCinematic()
		introComplete()
		hasCompletedQuest()
		makeTechAvailable()
		consumeItemWithParameter()
		startQuest()
		hasItemWithParameter()
		getItemWithParameter()
		lounge()
		enableTech()
		equipTech()
		enableMission()
		removeEssentialItem()
		isLounging()
		availableTechs()
		primaryHandItemTags()
		makeTechUnavailable()
		confirm()
		serverUuid()
		addBookmark()
		altHandItemTags()
		cleanupItems()
		radioMessage()
		setEquippedItem()
		ownShipWorldId()
		hasItem()
		canStartQuest()
		giveBlueprint()
		hasCountOfItem()
		shipUpgrades()
		giveItem()
	}
	config = {
		getParameter()
	}
	self = {
	}
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	world = {
		spawnItem()
		entityPosition()
		entityHealth()
		damageTileArea()
		day()
		placeMaterial()
		entityDescription()
		containerPutItemsAt()
		entityVelocity()
		damageTiles()
		entityHandItem()
		objectAt()
		setProperty()
		containerItemApply()
		containerClose()
		distance()
		findUniqueEntity()
		gravity()
		rectTileCollision()
		entitySpecies()
		platformerPathStart()
		containerOpen()
		containerTakeAll()
		breathable()
		npcType()
		containerAddItems()
		dayLength()
		loungeableOccupied()
		placeObject()
		isTileProtected()
		destroyLiquid()
		debugLine()
		spawnLiquid()
		entityCanDamage()
		containerItemsCanFit()
		xwrap()
		entityUniqueId()
		itemDropQuery()
		lightLevel()
		placeMod()
		spawnNpc()
		spawnTreasure()
		time()
		underground()
		spawnVehicle()
		spawnMonster()
		timeOfDay()
		findPlatformerPath()
		debugPoly()
		containerTakeNumItemsAt()
		isMonster()
		farmableStage()
		polyCollision()
		objectLineQuery()
		entityHasCountOfItem()
		entityHandItemDescriptor()
		tileIsOccupied()
		resolvePolyCollision()
		pointCollision()
		callScriptedEntity()
		collisionBlocksAlongLine()
		containerStackItems()
		objectSpaces()
		containerConsume()
		spawnStagehand()
		spawnProjectile()
		stagehandType()
		entityQuery()
		lineTileCollision()
		containerSwapItemsNoCombine()
		liquidAlongLine()
		playerQuery()
		objectQuery()
		entityGender()
		rectCollision()
		containerItemAt()
		polyContains()
		containerTakeAt()
		magnitude()
		mod()
		containerSwapItems()
		isNpc()
		lineCollision()
		getObjectParameter()
		debugPoint()
		pointTileCollision()
		containerItemsFitWhere()
		containerAvailable()
		getProperty()
		containerItems()
		threatLevel()
		entityType()
		sendEntityMessage()
		material()
		liquidAt()
		containerSize()
		debugText()
		monsterType()
		entityMoney()
		nearestTo()
		npcLineQuery()
		entityPortrait()
		entityName()
		entityDamageTeam()
		containerConsumeAt()
		entityAggressive()
		windLevel()
		monsterQuery()
		entityExists()
		loungeableQuery()
		npcQuery()
		entityLineQuery()
	}
	root = {
		createBiome()
		imageSpaces()
		createItem()
		loadVersionedJson()
		createTreasure()
		getMatchingTenants()
		monsterSkillParameter()
		getConfiguration()
		npcVariant()
		itemHasTag()
		imageSize()
		projectileGravityMultiplier()
		nonEmptyRegion()
		evalFunction2()
		projectileConfig()
		materialMiningSound()
		generateName()
		isTreasurePool()
		hasTech()
		behaviorModule()
		itemConfig()
		treeStemDirectory()
		evalFunction()
		techConfig()
		npcConfig()
		setConfigurationPath()
		getConfigurationPath()
		materialHealth()
		materialFootstepSound()
		monsterMovementSettings()
		materialPath()
		setConfiguration()
		monsterPortrait()
		itemType()
		questConfig()
		recipesForItem()
		assetJson()
		treeFoliageDirectory()
		techType()
		liquidStatusEffects()
		makeCurrentVersionedJson()
		itemTags()
		tenantConfig()
		npcPortrait()
	}
	jsize()
	status = {
		setResourceLocked()
		resourcePercentage()
		addPersistentEffects()
		removeEphemeralEffect()
		resource()
		setResourcePercentage()
		resourcePositive()
		damageTakenSince()
		statPositive()
		stat()
		statusProperty()
		activeUniqueStatusEffectSummary()
		inflictedHitsSince()
		resourceMax()
		setStatusProperty()
		setPersistentEffects()
		resetAllResources()
		addEphemeralEffects()
		overConsumeResource()
		modifyResource()
		addEphemeralEffect()
		getPersistentEffects()
		resetResource()
		consumeResource()
		clearPersistentEffects()
		modifyResourcePercentage()
		clearEphemeralEffects()
		resourceNames()
		addPersistentEffect()
		resourceLocked()
		clearAllPersistentEffects()
		inflictedDamageSince()
		isResource()
		setResource()
		giveResource()
	}
	xpcall()
	getmetatable()
	utf8 = {
		len()
		codepoint()
		offset()
		codes()
		charpattern = "[
[22:54:00.732] [Warn] 	select()
	rawequal()
	rawset()
	string = {
		gmatch()
		char()
		sub()
		unpack()
		upper()
		lower()
		find()
		rep()
		dump()
		len()
		reverse()
		packsize()
		pack()
		byte()
		match()
		format()
		gsub()
	}
	require()
	pairs()
	next()
	jobject()
	math = {
		pi = 3.1415926535898
		rad()
		max()
		sqrt()
		random()
		floor()
		log()
		acos()
		fmod()
		mininteger = -9223372036854775808
		type()
		huge = inf
		randomseed()
		deg()
		exp()
		maxinteger = 9223372036854775807
		cos()
		min()
		tointeger()
		modf()
		asin()
		tan()
		atan()
		abs()
		sin()
		ult()
		ceil()
	}
	print()
	pcall()
	type()
	init()
	setmetatable()
	jresize()
	ic = {
		checkStack()
		itemAmount()
		stripColor()
		quickstack()
		itemConfig()
		amountEquipped()
		sortFunc()
		lock()
		giveBack()
		renameThis()
		sort()
		searchBox()
		sort_relative()
		clientVersion = 1
		renameButton()
		searchButton()
		getQuality()
	}
	player = {
		equippedTech()
		altHandItem()
		giveEssentialItem()
		consumeTaggedItem()
		setUniverseFlag()
		species()
		itemsWithTag()
		worldId()
		warp()
		completeMission()
		inventoryTags()
		upgradeShip()
		hasQuest()
		consumeItem()
		gender()
		primaryHandItem()
		essentialItem()
		equippedItem()
		setIntroComplete()
		playTime()
		enabledTechs()
		recordEvent()
		playCinematic()
		introComplete()
		hasCompletedQuest()
		makeTechAvailable()
		consumeItemWithParameter()
		startQuest()
		hasItemWithParameter()
		getItemWithParameter()
		lounge()
		enableTech()
		equipTech()
		enableMission()
		removeEssentialItem()
		isLounging()
		availableTechs()
		primaryHandItemTags()
		makeTechUnavailable()
		confirm()
		serverUuid()
		addBookmark()
		altHandItemTags()
		cleanupItems()
		radioMessage()
		setEquippedItem()
		ownShipWorldId()
		hasItem()
		canStartQuest()
		giveBlueprint()
		hasCountOfItem()
		shipUpgrades()
		giveItem()
	}
	config = {
		getParameter()
	}
	self = {
	}
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	world = {
		spawnItem()
		entityPosition()
		entityHealth()
		damageTileArea()
		day()
		placeMaterial()
		entityDescription()
		containerPutItemsAt()
		entityVelocity()
		damageTiles()
		entityHandItem()
		objectAt()
		setProperty()
		containerItemApply()
		containerClose()
		distance()
		findUniqueEntity()
		gravity()
		rectTileCollision()
		entitySpecies()
		platformerPathStart()
		containerOpen()
		containerTakeAll()
		breathable()
		npcType()
		containerAddItems()
		dayLength()
		loungeableOccupied()
		placeObject()
		isTileProtected()
		destroyLiquid()
		debugLine()
		spawnLiquid()
		entityCanDamage()
		containerItemsCanFit()
		xwrap()
		entityUniqueId()
		itemDropQuery()
		lightLevel()
		placeMod()
		spawnNpc()
		spawnTreasure()
		time()
		underground()
		spawnVehicle()
		spawnMonster()
		timeOfDay()
		findPlatformerPath()
		debugPoly()
		containerTakeNumItemsAt()
		isMonster()
		farmableStage()
		polyCollision()
		objectLineQuery()
		entityHasCountOfItem()
		entityHandItemDescriptor()
		tileIsOccupied()
		resolvePolyCollision()
		pointCollision()
		callScriptedEntity()
		collisionBlocksAlongLine()
		containerStackItems()
		objectSpaces()
		containerConsume()
		spawnStagehand()
		spawnProjectile()
		stagehandType()
		entityQuery()
		lineTileCollision()
		containerSwapItemsNoCombine()
		liquidAlongLine()
		playerQuery()
		objectQuery()
		entityGender()
		rectCollision()
		containerItemAt()
		polyContains()
		containerTakeAt()
		magnitude()
		mod()
		containerSwapItems()
		isNpc()
		lineCollision()
		getObjectParameter()
		debugPoint()
		pointTileCollision()
		containerItemsFitWhere()
		containerAvailable()
		getProperty()
		containerItems()
		threatLevel()
		entityType()
		sendEntityMessage()
		material()
		liquidAt()
		containerSize()
		debugText()
		monsterType()
		entityMoney()
		nearestTo()
		npcLineQuery()
		entityPortrait()
		entityName()
		entityDamageTeam()
		containerConsumeAt()
		entityAggressive()
		windLevel()
		monsterQuery()
		entityExists()
		loungeableQuery()
		npcQuery()
		entityLineQuery()
	}
	root = {
		createBiome()
		imageSpaces()
		createItem()
		loadVersionedJson()
		createTreasure()
		getMatchingTenants()
		monsterSkillParameter()
		getConfiguration()
		npcVariant()
		itemHasTag()
		imageSize()
		projectileGravityMultiplier()
		nonEmptyRegion()
		evalFunction2()
		projectileConfig()
		materialMiningSound()
		generateName()
		isTreasurePool()
		hasTech()
		behaviorModule()
		itemConfig()
		treeStemDirectory()
		evalFunction()
		techConfig()
		npcConfig()
		setConfigurationPath()
		getConfigurationPath()
		materialHealth()
		materialFootstepSound()
		monsterMovementSettings()
		materialPath()
		setConfiguration()
		monsterPortrait()
		itemType()
		questConfig()
		recipesForItem()
		assetJson()
		treeFoliageDirectory()
		techType()
		liquidStatusEffects()
		makeCurrentVersionedJson()
		itemTags()
		tenantConfig()
		npcPortrait()
	}
	jsize()
	status = {
		setResourceLocked()
		resourcePercentage()
		addPersistentEffects()
		removeEphemeralEffect()
		resource()
		setResourcePercentage()
		resourcePositive()
		damageTakenSince()
		statPositive()
		stat()
		statusProperty()
		activeUniqueStatusEffectSummary()
		inflictedHitsSince()
		resourceMax()
		setStatusProperty()
		setPersistentEffects()
		resetAllResources()
		addEphemeralEffects()
		overConsumeResource()
		modifyResource()
		addEphemeralEffect()
		getPersistentEffects()
		resetResource()
		consumeResource()
		clearPersistentEffects()
		modifyResourcePercentage()
		clearEphemeralEffects()
		resourceNames()
		addPersistentEffect()
		resourceLocked()
		clearAllPersistentEffects()
		inflictedDamageSince()
		isResource()
		setResource()
		giveResource()
	}
	xpcall()
	getmetatable()
	utf8 = {
		len()
		codepoint()
		offset()
		codes()
		charpattern = "[
[22:54:01.561] [Warn] 	select()
	rawequal()
	rawset()
	string = {
		gmatch()
		char()
		sub()
		unpack()
		upper()
		lower()
		find()
		rep()
		dump()
		len()
		reverse()
		packsize()
		pack()
		byte()
		match()
		format()
		gsub()
	}
	require()
	pairs()
	next()
	jobject()
	math = {
		pi = 3.1415926535898
		rad()
		max()
		sqrt()
		random()
		floor()
		log()
		acos()
		fmod()
		mininteger = -9223372036854775808
		type()
		huge = inf
		randomseed()
		deg()
		exp()
		maxinteger = 9223372036854775807
		cos()
		min()
		tointeger()
		modf()
		asin()
		tan()
		atan()
		abs()
		sin()
		ult()
		ceil()
	}
	print()
	pcall()
	type()
	init()
	setmetatable()
	jresize()
	ic = {
		checkStack()
		itemAmount()
		stripColor()
		quickstack()
		itemConfig()
		amountEquipped()
		sortFunc()
		lock()
		giveBack()
		renameThis()
		sort()
		searchBox()
		sort_relative()
		clientVersion = 1
		renameButton()
		searchButton()
		getQuality()
	}
	player = {
		equippedTech()
		altHandItem()
		giveEssentialItem()
		consumeTaggedItem()
		setUniverseFlag()
		species()
		itemsWithTag()
		worldId()
		warp()
		completeMission()
		inventoryTags()
		upgradeShip()
		hasQuest()
		consumeItem()
		gender()
		primaryHandItem()
		essentialItem()
		equippedItem()
		setIntroComplete()
		playTime()
		enabledTechs()
		recordEvent()
		playCinematic()
		introComplete()
		hasCompletedQuest()
		makeTechAvailable()
		consumeItemWithParameter()
		startQuest()
		hasItemWithParameter()
		getItemWithParameter()
		lounge()
		enableTech()
		equipTech()
		enableMission()
		removeEssentialItem()
		isLounging()
		availableTechs()
		primaryHandItemTags()
		makeTechUnavailable()
		confirm()
		serverUuid()
		addBookmark()
		altHandItemTags()
		cleanupItems()
		radioMessage()
		setEquippedItem()
		ownShipWorldId()
		hasItem()
		canStartQuest()
		giveBlueprint()
		hasCountOfItem()
		shipUpgrades()
		giveItem()
	}
	config = {
		getParameter()
	}
	self = {
	}
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	world = {
		spawnItem()
		entityPosition()
		entityHealth()
		damageTileArea()
		day()
		placeMaterial()
		entityDescription()
		containerPutItemsAt()
		entityVelocity()
		damageTiles()
		entityHandItem()
		objectAt()
		setProperty()
		containerItemApply()
		containerClose()
		distance()
		findUniqueEntity()
		gravity()
		rectTileCollision()
		entitySpecies()
		platformerPathStart()
		containerOpen()
		containerTakeAll()
		breathable()
		npcType()
		containerAddItems()
		dayLength()
		loungeableOccupied()
		placeObject()
		isTileProtected()
		destroyLiquid()
		debugLine()
		spawnLiquid()
		entityCanDamage()
		containerItemsCanFit()
		xwrap()
		entityUniqueId()
		itemDropQuery()
		lightLevel()
		placeMod()
		spawnNpc()
		spawnTreasure()
		time()
		underground()
		spawnVehicle()
		spawnMonster()
		timeOfDay()
		findPlatformerPath()
		debugPoly()
		containerTakeNumItemsAt()
		isMonster()
		farmableStage()
		polyCollision()
		objectLineQuery()
		entityHasCountOfItem()
		entityHandItemDescriptor()
		tileIsOccupied()
		resolvePolyCollision()
		pointCollision()
		callScriptedEntity()
		collisionBlocksAlongLine()
		containerStackItems()
		objectSpaces()
		containerConsume()
		spawnStagehand()
		spawnProjectile()
		stagehandType()
		entityQuery()
		lineTileCollision()
		containerSwapItemsNoCombine()
		liquidAlongLine()
		playerQuery()
		objectQuery()
		entityGender()
		rectCollision()
		containerItemAt()
		polyContains()
		containerTakeAt()
		magnitude()
		mod()
		containerSwapItems()
		isNpc()
		lineCollision()
		getObjectParameter()
		debugPoint()
		pointTileCollision()
		containerItemsFitWhere()
		containerAvailable()
		getProperty()
		containerItems()
		threatLevel()
		entityType()
		sendEntityMessage()
		material()
		liquidAt()
		containerSize()
		debugText()
		monsterType()
		entityMoney()
		nearestTo()
		npcLineQuery()
		entityPortrait()
		entityName()
		entityDamageTeam()
		containerConsumeAt()
		entityAggressive()
		windLevel()
		monsterQuery()
		entityExists()
		loungeableQuery()
		npcQuery()
		entityLineQuery()
	}
	root = {
		createBiome()
		imageSpaces()
		createItem()
		loadVersionedJson()
		createTreasure()
		getMatchingTenants()
		monsterSkillParameter()
		getConfiguration()
		npcVariant()
		itemHasTag()
		imageSize()
		projectileGravityMultiplier()
		nonEmptyRegion()
		evalFunction2()
		projectileConfig()
		materialMiningSound()
		generateName()
		isTreasurePool()
		hasTech()
		behaviorModule()
		itemConfig()
		treeStemDirectory()
		evalFunction()
		techConfig()
		npcConfig()
		setConfigurationPath()
		getConfigurationPath()
		materialHealth()
		materialFootstepSound()
		monsterMovementSettings()
		materialPath()
		setConfiguration()
		monsterPortrait()
		itemType()
		questConfig()
		recipesForItem()
		assetJson()
		treeFoliageDirectory()
		techType()
		liquidStatusEffects()
		makeCurrentVersionedJson()
		itemTags()
		tenantConfig()
		npcPortrait()
	}
	jsize()
	status = {
		setResourceLocked()
		resourcePercentage()
		addPersistentEffects()
		removeEphemeralEffect()
		resource()
		setResourcePercentage()
		resourcePositive()
		damageTakenSince()
		statPositive()
		stat()
		statusProperty()
		activeUniqueStatusEffectSummary()
		inflictedHitsSince()
		resourceMax()
		setStatusProperty()
		setPersistentEffects()
		resetAllResources()
		addEphemeralEffects()
		overConsumeResource()
		modifyResource()
		addEphemeralEffect()
		getPersistentEffects()
		resetResource()
		consumeResource()
		clearPersistentEffects()
		modifyResourcePercentage()
		clearEphemeralEffects()
		resourceNames()
		addPersistentEffect()
		resourceLocked()
		clearAllPersistentEffects()
		inflictedDamageSince()
		isResource()
		setResource()
		giveResource()
	}
	xpcall()
	getmetatable()
	utf8 = {
		len()
		codepoint()
		offset()
		codes()
		charpattern = "[
[22:57:45.669] [Info] Skipped event recording for nonexistent entity 13257
[23:01:16.015] [Warn] 	select()
	rawequal()
	rawset()
	string = {
		gmatch()
		char()
		sub()
		unpack()
		upper()
		lower()
		find()
		rep()
		dump()
		len()
		reverse()
		packsize()
		pack()
		byte()
		match()
		format()
		gsub()
	}
	require()
	pairs()
	next()
	jobject()
	math = {
		pi = 3.1415926535898
		rad()
		max()
		sqrt()
		random()
		floor()
		log()
		acos()
		fmod()
		mininteger = -9223372036854775808
		type()
		huge = inf
		randomseed()
		deg()
		exp()
		maxinteger = 9223372036854775807
		cos()
		min()
		tointeger()
		modf()
		asin()
		tan()
		atan()
		abs()
		sin()
		ult()
		ceil()
	}
	print()
	pcall()
	type()
	init()
	setmetatable()
	jresize()
	ic = {
		checkStack()
		itemAmount()
		stripColor()
		quickstack()
		itemConfig()
		amountEquipped()
		sortFunc()
		lock()
		giveBack()
		renameThis()
		sort()
		searchBox()
		sort_relative()
		clientVersion = 1
		renameButton()
		searchButton()
		getQuality()
	}
	player = {
		equippedTech()
		altHandItem()
		giveEssentialItem()
		consumeTaggedItem()
		setUniverseFlag()
		species()
		itemsWithTag()
		worldId()
		warp()
		completeMission()
		inventoryTags()
		upgradeShip()
		hasQuest()
		consumeItem()
		gender()
		primaryHandItem()
		essentialItem()
		equippedItem()
		setIntroComplete()
		playTime()
		enabledTechs()
		recordEvent()
		playCinematic()
		introComplete()
		hasCompletedQuest()
		makeTechAvailable()
		consumeItemWithParameter()
		startQuest()
		hasItemWithParameter()
		getItemWithParameter()
		lounge()
		enableTech()
		equipTech()
		enableMission()
		removeEssentialItem()
		isLounging()
		availableTechs()
		primaryHandItemTags()
		makeTechUnavailable()
		confirm()
		serverUuid()
		addBookmark()
		altHandItemTags()
		cleanupItems()
		radioMessage()
		setEquippedItem()
		ownShipWorldId()
		hasItem()
		canStartQuest()
		giveBlueprint()
		hasCountOfItem()
		shipUpgrades()
		giveItem()
	}
	config = {
		getParameter()
	}
	self = {
	}
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	world = {
		spawnItem()
		entityPosition()
		entityHealth()
		damageTileArea()
		day()
		placeMaterial()
		entityDescription()
		containerPutItemsAt()
		entityVelocity()
		damageTiles()
		entityHandItem()
		objectAt()
		setProperty()
		containerItemApply()
		containerClose()
		distance()
		findUniqueEntity()
		gravity()
		rectTileCollision()
		entitySpecies()
		platformerPathStart()
		containerOpen()
		containerTakeAll()
		breathable()
		npcType()
		containerAddItems()
		dayLength()
		loungeableOccupied()
		placeObject()
		isTileProtected()
		destroyLiquid()
		debugLine()
		spawnLiquid()
		entityCanDamage()
		containerItemsCanFit()
		xwrap()
		entityUniqueId()
		itemDropQuery()
		lightLevel()
		placeMod()
		spawnNpc()
		spawnTreasure()
		time()
		underground()
		spawnVehicle()
		spawnMonster()
		timeOfDay()
		findPlatformerPath()
		debugPoly()
		containerTakeNumItemsAt()
		isMonster()
		farmableStage()
		polyCollision()
		objectLineQuery()
		entityHasCountOfItem()
		entityHandItemDescriptor()
		tileIsOccupied()
		resolvePolyCollision()
		pointCollision()
		callScriptedEntity()
		collisionBlocksAlongLine()
		containerStackItems()
		objectSpaces()
		containerConsume()
		spawnStagehand()
		spawnProjectile()
		stagehandType()
		entityQuery()
		lineTileCollision()
		containerSwapItemsNoCombine()
		liquidAlongLine()
		playerQuery()
		objectQuery()
		entityGender()
		rectCollision()
		containerItemAt()
		polyContains()
		containerTakeAt()
		magnitude()
		mod()
		containerSwapItems()
		isNpc()
		lineCollision()
		getObjectParameter()
		debugPoint()
		pointTileCollision()
		containerItemsFitWhere()
		containerAvailable()
		getProperty()
		containerItems()
		threatLevel()
		entityType()
		sendEntityMessage()
		material()
		liquidAt()
		containerSize()
		debugText()
		monsterType()
		entityMoney()
		nearestTo()
		npcLineQuery()
		entityPortrait()
		entityName()
		entityDamageTeam()
		containerConsumeAt()
		entityAggressive()
		windLevel()
		monsterQuery()
		entityExists()
		loungeableQuery()
		npcQuery()
		entityLineQuery()
	}
	root = {
		createBiome()
		imageSpaces()
		createItem()
		loadVersionedJson()
		createTreasure()
		getMatchingTenants()
		monsterSkillParameter()
		getConfiguration()
		npcVariant()
		itemHasTag()
		imageSize()
		projectileGravityMultiplier()
		nonEmptyRegion()
		evalFunction2()
		projectileConfig()
		materialMiningSound()
		generateName()
		isTreasurePool()
		hasTech()
		behaviorModule()
		itemConfig()
		treeStemDirectory()
		evalFunction()
		techConfig()
		npcConfig()
		setConfigurationPath()
		getConfigurationPath()
		materialHealth()
		materialFootstepSound()
		monsterMovementSettings()
		materialPath()
		setConfiguration()
		monsterPortrait()
		itemType()
		questConfig()
		recipesForItem()
		assetJson()
		treeFoliageDirectory()
		techType()
		liquidStatusEffects()
		makeCurrentVersionedJson()
		itemTags()
		tenantConfig()
		npcPortrait()
	}
	jsize()
	status = {
		setResourceLocked()
		resourcePercentage()
		addPersistentEffects()
		removeEphemeralEffect()
		resource()
		setResourcePercentage()
		resourcePositive()
		damageTakenSince()
		statPositive()
		stat()
		statusProperty()
		activeUniqueStatusEffectSummary()
		inflictedHitsSince()
		resourceMax()
		setStatusProperty()
		setPersistentEffects()
		resetAllResources()
		addEphemeralEffects()
		overConsumeResource()
		modifyResource()
		addEphemeralEffect()
		getPersistentEffects()
		resetResource()
		consumeResource()
		clearPersistentEffects()
		modifyResourcePercentage()
		clearEphemeralEffects()
		resourceNames()
		addPersistentEffect()
		resourceLocked()
		clearAllPersistentEffects()
		inflictedDamageSince()
		isResource()
		setResource()
		giveResource()
	}
	xpcall()
	getmetatable()
	utf8 = {
		len()
		codepoint()
		offset()
		codes()
		charpattern = "[
[23:01:19.331] [Info] [IC] [Sort] Time elapsed: 0.01
[23:02:19.105] [Warn] 	select()
	rawequal()
	rawset()
	string = {
		gmatch()
		char()
		sub()
		unpack()
		upper()
		lower()
		find()
		rep()
		dump()
		len()
		reverse()
		packsize()
		pack()
		byte()
		match()
		format()
		gsub()
	}
	require()
	pairs()
	next()
	jobject()
	math = {
		pi = 3.1415926535898
		rad()
		max()
		sqrt()
		random()
		floor()
		log()
		acos()
		fmod()
		mininteger = -9223372036854775808
		type()
		huge = inf
		randomseed()
		deg()
		exp()
		maxinteger = 9223372036854775807
		cos()
		min()
		tointeger()
		modf()
		asin()
		tan()
		atan()
		abs()
		sin()
		ult()
		ceil()
	}
	print()
	pcall()
	type()
	init()
	setmetatable()
	jresize()
	ic = {
		checkStack()
		itemAmount()
		stripColor()
		quickstack()
		itemConfig()
		amountEquipped()
		sortFunc()
		lock()
		giveBack()
		renameThis()
		sort()
		searchBox()
		sort_relative()
		clientVersion = 1
		renameButton()
		searchButton()
		getQuality()
	}
	player = {
		equippedTech()
		altHandItem()
		giveEssentialItem()
		consumeTaggedItem()
		setUniverseFlag()
		species()
		itemsWithTag()
		worldId()
		warp()
		completeMission()
		inventoryTags()
		upgradeShip()
		hasQuest()
		consumeItem()
		gender()
		primaryHandItem()
		essentialItem()
		equippedItem()
		setIntroComplete()
		playTime()
		enabledTechs()
		recordEvent()
		playCinematic()
		introComplete()
		hasCompletedQuest()
		makeTechAvailable()
		consumeItemWithParameter()
		startQuest()
		hasItemWithParameter()
		getItemWithParameter()
		lounge()
		enableTech()
		equipTech()
		enableMission()
		removeEssentialItem()
		isLounging()
		availableTechs()
		primaryHandItemTags()
		makeTechUnavailable()
		confirm()
		serverUuid()
		addBookmark()
		altHandItemTags()
		cleanupItems()
		radioMessage()
		setEquippedItem()
		ownShipWorldId()
		hasItem()
		canStartQuest()
		giveBlueprint()
		hasCountOfItem()
		shipUpgrades()
		giveItem()
	}
	config = {
		getParameter()
	}
	self = {
	}
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	world = {
		spawnItem()
		entityPosition()
		entityHealth()
		damageTileArea()
		day()
		placeMaterial()
		entityDescription()
		containerPutItemsAt()
		entityVelocity()
		damageTiles()
		entityHandItem()
		objectAt()
		setProperty()
		containerItemApply()
		containerClose()
		distance()
		findUniqueEntity()
		gravity()
		rectTileCollision()
		entitySpecies()
		platformerPathStart()
		containerOpen()
		containerTakeAll()
		breathable()
		npcType()
		containerAddItems()
		dayLength()
		loungeableOccupied()
		placeObject()
		isTileProtected()
		destroyLiquid()
		debugLine()
		spawnLiquid()
		entityCanDamage()
		containerItemsCanFit()
		xwrap()
		entityUniqueId()
		itemDropQuery()
		lightLevel()
		placeMod()
		spawnNpc()
		spawnTreasure()
		time()
		underground()
		spawnVehicle()
		spawnMonster()
		timeOfDay()
		findPlatformerPath()
		debugPoly()
		containerTakeNumItemsAt()
		isMonster()
		farmableStage()
		polyCollision()
		objectLineQuery()
		entityHasCountOfItem()
		entityHandItemDescriptor()
		tileIsOccupied()
		resolvePolyCollision()
		pointCollision()
		callScriptedEntity()
		collisionBlocksAlongLine()
		containerStackItems()
		objectSpaces()
		containerConsume()
		spawnStagehand()
		spawnProjectile()
		stagehandType()
		entityQuery()
		lineTileCollision()
		containerSwapItemsNoCombine()
		liquidAlongLine()
		playerQuery()
		objectQuery()
		entityGender()
		rectCollision()
		containerItemAt()
		polyContains()
		containerTakeAt()
		magnitude()
		mod()
		containerSwapItems()
		isNpc()
		lineCollision()
		getObjectParameter()
		debugPoint()
		pointTileCollision()
		containerItemsFitWhere()
		containerAvailable()
		getProperty()
		containerItems()
		threatLevel()
		entityType()
		sendEntityMessage()
		material()
		liquidAt()
		containerSize()
		debugText()
		monsterType()
		entityMoney()
		nearestTo()
		npcLineQuery()
		entityPortrait()
		entityName()
		entityDamageTeam()
		containerConsumeAt()
		entityAggressive()
		windLevel()
		monsterQuery()
		entityExists()
		loungeableQuery()
		npcQuery()
		entityLineQuery()
	}
	root = {
		createBiome()
		imageSpaces()
		createItem()
		loadVersionedJson()
		createTreasure()
		getMatchingTenants()
		monsterSkillParameter()
		getConfiguration()
		npcVariant()
		itemHasTag()
		imageSize()
		projectileGravityMultiplier()
		nonEmptyRegion()
		evalFunction2()
		projectileConfig()
		materialMiningSound()
		generateName()
		isTreasurePool()
		hasTech()
		behaviorModule()
		itemConfig()
		treeStemDirectory()
		evalFunction()
		techConfig()
		npcConfig()
		setConfigurationPath()
		getConfigurationPath()
		materialHealth()
		materialFootstepSound()
		monsterMovementSettings()
		materialPath()
		setConfiguration()
		monsterPortrait()
		itemType()
		questConfig()
		recipesForItem()
		assetJson()
		treeFoliageDirectory()
		techType()
		liquidStatusEffects()
		makeCurrentVersionedJson()
		itemTags()
		tenantConfig()
		npcPortrait()
	}
	jsize()
	status = {
		setResourceLocked()
		resourcePercentage()
		addPersistentEffects()
		removeEphemeralEffect()
		resource()
		setResourcePercentage()
		resourcePositive()
		damageTakenSince()
		statPositive()
		stat()
		statusProperty()
		activeUniqueStatusEffectSummary()
		inflictedHitsSince()
		resourceMax()
		setStatusProperty()
		setPersistentEffects()
		resetAllResources()
		addEphemeralEffects()
		overConsumeResource()
		modifyResource()
		addEphemeralEffect()
		getPersistentEffects()
		resetResource()
		consumeResource()
		clearPersistentEffects()
		modifyResourcePercentage()
		clearEphemeralEffects()
		resourceNames()
		addPersistentEffect()
		resourceLocked()
		clearAllPersistentEffects()
		inflictedDamageSince()
		isResource()
		setResource()
		giveResource()
	}
	xpcall()
	getmetatable()
	utf8 = {
		len()
		codepoint()
		offset()
		codes()
		charpattern = "[
[23:02:23.941] [Warn] 	select()
	rawequal()
	rawset()
	string = {
		gmatch()
		char()
		sub()
		unpack()
		upper()
		lower()
		find()
		rep()
		dump()
		len()
		reverse()
		packsize()
		pack()
		byte()
		match()
		format()
		gsub()
	}
	require()
	pairs()
	next()
	jobject()
	math = {
		pi = 3.1415926535898
		rad()
		max()
		sqrt()
		random()
		floor()
		log()
		acos()
		fmod()
		mininteger = -9223372036854775808
		type()
		huge = inf
		randomseed()
		deg()
		exp()
		maxinteger = 9223372036854775807
		cos()
		min()
		tointeger()
		modf()
		asin()
		tan()
		atan()
		abs()
		sin()
		ult()
		ceil()
	}
	print()
	pcall()
	type()
	init()
	setmetatable()
	jresize()
	ic = {
		checkStack()
		itemAmount()
		stripColor()
		quickstack()
		itemConfig()
		amountEquipped()
		sortFunc()
		lock()
		giveBack()
		renameThis()
		sort()
		searchBox()
		sort_relative()
		clientVersion = 1
		renameButton()
		searchButton()
		getQuality()
	}
	player = {
		equippedTech()
		altHandItem()
		giveEssentialItem()
		consumeTaggedItem()
		setUniverseFlag()
		species()
		itemsWithTag()
		worldId()
		warp()
		completeMission()
		inventoryTags()
		upgradeShip()
		hasQuest()
		consumeItem()
		gender()
		primaryHandItem()
		essentialItem()
		equippedItem()
		setIntroComplete()
		playTime()
		enabledTechs()
		recordEvent()
		playCinematic()
		introComplete()
		hasCompletedQuest()
		makeTechAvailable()
		consumeItemWithParameter()
		startQuest()
		hasItemWithParameter()
		getItemWithParameter()
		lounge()
		enableTech()
		equipTech()
		enableMission()
		removeEssentialItem()
		isLounging()
		availableTechs()
		primaryHandItemTags()
		makeTechUnavailable()
		confirm()
		serverUuid()
		addBookmark()
		altHandItemTags()
		cleanupItems()
		radioMessage()
		setEquippedItem()
		ownShipWorldId()
		hasItem()
		canStartQuest()
		giveBlueprint()
		hasCountOfItem()
		shipUpgrades()
		giveItem()
	}
	config = {
		getParameter()
	}
	self = {
	}
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	world = {
		spawnItem()
		entityPosition()
		entityHealth()
		damageTileArea()
		day()
		placeMaterial()
		entityDescription()
		containerPutItemsAt()
		entityVelocity()
		damageTiles()
		entityHandItem()
		objectAt()
		setProperty()
		containerItemApply()
		containerClose()
		distance()
		findUniqueEntity()
		gravity()
		rectTileCollision()
		entitySpecies()
		platformerPathStart()
		containerOpen()
		containerTakeAll()
		breathable()
		npcType()
		containerAddItems()
		dayLength()
		loungeableOccupied()
		placeObject()
		isTileProtected()
		destroyLiquid()
		debugLine()
		spawnLiquid()
		entityCanDamage()
		containerItemsCanFit()
		xwrap()
		entityUniqueId()
		itemDropQuery()
		lightLevel()
		placeMod()
		spawnNpc()
		spawnTreasure()
		time()
		underground()
		spawnVehicle()
		spawnMonster()
		timeOfDay()
		findPlatformerPath()
		debugPoly()
		containerTakeNumItemsAt()
		isMonster()
		farmableStage()
		polyCollision()
		objectLineQuery()
		entityHasCountOfItem()
		entityHandItemDescriptor()
		tileIsOccupied()
		resolvePolyCollision()
		pointCollision()
		callScriptedEntity()
		collisionBlocksAlongLine()
		containerStackItems()
		objectSpaces()
		containerConsume()
		spawnStagehand()
		spawnProjectile()
		stagehandType()
		entityQuery()
		lineTileCollision()
		containerSwapItemsNoCombine()
		liquidAlongLine()
		playerQuery()
		objectQuery()
		entityGender()
		rectCollision()
		containerItemAt()
		polyContains()
		containerTakeAt()
		magnitude()
		mod()
		containerSwapItems()
		isNpc()
		lineCollision()
		getObjectParameter()
		debugPoint()
		pointTileCollision()
		containerItemsFitWhere()
		containerAvailable()
		getProperty()
		containerItems()
		threatLevel()
		entityType()
		sendEntityMessage()
		material()
		liquidAt()
		containerSize()
		debugText()
		monsterType()
		entityMoney()
		nearestTo()
		npcLineQuery()
		entityPortrait()
		entityName()
		entityDamageTeam()
		containerConsumeAt()
		entityAggressive()
		windLevel()
		monsterQuery()
		entityExists()
		loungeableQuery()
		npcQuery()
		entityLineQuery()
	}
	root = {
		createBiome()
		imageSpaces()
		createItem()
		loadVersionedJson()
		createTreasure()
		getMatchingTenants()
		monsterSkillParameter()
		getConfiguration()
		npcVariant()
		itemHasTag()
		imageSize()
		projectileGravityMultiplier()
		nonEmptyRegion()
		evalFunction2()
		projectileConfig()
		materialMiningSound()
		generateName()
		isTreasurePool()
		hasTech()
		behaviorModule()
		itemConfig()
		treeStemDirectory()
		evalFunction()
		techConfig()
		npcConfig()
		setConfigurationPath()
		getConfigurationPath()
		materialHealth()
		materialFootstepSound()
		monsterMovementSettings()
		materialPath()
		setConfiguration()
		monsterPortrait()
		itemType()
		questConfig()
		recipesForItem()
		assetJson()
		treeFoliageDirectory()
		techType()
		liquidStatusEffects()
		makeCurrentVersionedJson()
		itemTags()
		tenantConfig()
		npcPortrait()
	}
	jsize()
	status = {
		setResourceLocked()
		resourcePercentage()
		addPersistentEffects()
		removeEphemeralEffect()
		resource()
		setResourcePercentage()
		resourcePositive()
		damageTakenSince()
		statPositive()
		stat()
		statusProperty()
		activeUniqueStatusEffectSummary()
		inflictedHitsSince()
		resourceMax()
		setStatusProperty()
		setPersistentEffects()
		resetAllResources()
		addEphemeralEffects()
		overConsumeResource()
		modifyResource()
		addEphemeralEffect()
		getPersistentEffects()
		resetResource()
		consumeResource()
		clearPersistentEffects()
		modifyResourcePercentage()
		clearEphemeralEffects()
		resourceNames()
		addPersistentEffect()
		resourceLocked()
		clearAllPersistentEffects()
		inflictedDamageSince()
		isResource()
		setResource()
		giveResource()
	}
	xpcall()
	getmetatable()
	utf8 = {
		len()
		codepoint()
		offset()
		codes()
		charpattern = "[
[23:02:26.483] [Warn] 	select()
	rawequal()
	rawset()
	string = {
		gmatch()
		char()
		sub()
		unpack()
		upper()
		lower()
		find()
		rep()
		dump()
		len()
		reverse()
		packsize()
		pack()
		byte()
		match()
		format()
		gsub()
	}
	require()
	pairs()
	next()
	jobject()
	math = {
		pi = 3.1415926535898
		rad()
		max()
		sqrt()
		random()
		floor()
		log()
		acos()
		fmod()
		mininteger = -9223372036854775808
		type()
		huge = inf
		randomseed()
		deg()
		exp()
		maxinteger = 9223372036854775807
		cos()
		min()
		tointeger()
		modf()
		asin()
		tan()
		atan()
		abs()
		sin()
		ult()
		ceil()
	}
	print()
	pcall()
	type()
	init()
	setmetatable()
	jresize()
	ic = {
		checkStack()
		itemAmount()
		stripColor()
		quickstack()
		itemConfig()
		amountEquipped()
		sortFunc()
		lock()
		giveBack()
		renameThis()
		sort()
		searchBox()
		sort_relative()
		clientVersion = 1
		renameButton()
		searchButton()
		getQuality()
	}
	player = {
		equippedTech()
		altHandItem()
		giveEssentialItem()
		consumeTaggedItem()
		setUniverseFlag()
		species()
		itemsWithTag()
		worldId()
		warp()
		completeMission()
		inventoryTags()
		upgradeShip()
		hasQuest()
		consumeItem()
		gender()
		primaryHandItem()
		essentialItem()
		equippedItem()
		setIntroComplete()
		playTime()
		enabledTechs()
		recordEvent()
		playCinematic()
		introComplete()
		hasCompletedQuest()
		makeTechAvailable()
		consumeItemWithParameter()
		startQuest()
		hasItemWithParameter()
		getItemWithParameter()
		lounge()
		enableTech()
		equipTech()
		enableMission()
		removeEssentialItem()
		isLounging()
		availableTechs()
		primaryHandItemTags()
		makeTechUnavailable()
		confirm()
		serverUuid()
		addBookmark()
		altHandItemTags()
		cleanupItems()
		radioMessage()
		setEquippedItem()
		ownShipWorldId()
		hasItem()
		canStartQuest()
		giveBlueprint()
		hasCountOfItem()
		shipUpgrades()
		giveItem()
	}
	config = {
		getParameter()
	}
	self = {
	}
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	world = {
		spawnItem()
		entityPosition()
		entityHealth()
		damageTileArea()
		day()
		placeMaterial()
		entityDescription()
		containerPutItemsAt()
		entityVelocity()
		damageTiles()
		entityHandItem()
		objectAt()
		setProperty()
		containerItemApply()
		containerClose()
		distance()
		findUniqueEntity()
		gravity()
		rectTileCollision()
		entitySpecies()
		platformerPathStart()
		containerOpen()
		containerTakeAll()
		breathable()
		npcType()
		containerAddItems()
		dayLength()
		loungeableOccupied()
		placeObject()
		isTileProtected()
		destroyLiquid()
		debugLine()
		spawnLiquid()
		entityCanDamage()
		containerItemsCanFit()
		xwrap()
		entityUniqueId()
		itemDropQuery()
		lightLevel()
		placeMod()
		spawnNpc()
		spawnTreasure()
		time()
		underground()
		spawnVehicle()
		spawnMonster()
		timeOfDay()
		findPlatformerPath()
		debugPoly()
		containerTakeNumItemsAt()
		isMonster()
		farmableStage()
		polyCollision()
		objectLineQuery()
		entityHasCountOfItem()
		entityHandItemDescriptor()
		tileIsOccupied()
		resolvePolyCollision()
		pointCollision()
		callScriptedEntity()
		collisionBlocksAlongLine()
		containerStackItems()
		objectSpaces()
		containerConsume()
		spawnStagehand()
		spawnProjectile()
		stagehandType()
		entityQuery()
		lineTileCollision()
		containerSwapItemsNoCombine()
		liquidAlongLine()
		playerQuery()
		objectQuery()
		entityGender()
		rectCollision()
		containerItemAt()
		polyContains()
		containerTakeAt()
		magnitude()
		mod()
		containerSwapItems()
		isNpc()
		lineCollision()
		getObjectParameter()
		debugPoint()
		pointTileCollision()
		containerItemsFitWhere()
		containerAvailable()
		getProperty()
		containerItems()
		threatLevel()
		entityType()
		sendEntityMessage()
		material()
		liquidAt()
		containerSize()
		debugText()
		monsterType()
		entityMoney()
		nearestTo()
		npcLineQuery()
		entityPortrait()
		entityName()
		entityDamageTeam()
		containerConsumeAt()
		entityAggressive()
		windLevel()
		monsterQuery()
		entityExists()
		loungeableQuery()
		npcQuery()
		entityLineQuery()
	}
	root = {
		createBiome()
		imageSpaces()
		createItem()
		loadVersionedJson()
		createTreasure()
		getMatchingTenants()
		monsterSkillParameter()
		getConfiguration()
		npcVariant()
		itemHasTag()
		imageSize()
		projectileGravityMultiplier()
		nonEmptyRegion()
		evalFunction2()
		projectileConfig()
		materialMiningSound()
		generateName()
		isTreasurePool()
		hasTech()
		behaviorModule()
		itemConfig()
		treeStemDirectory()
		evalFunction()
		techConfig()
		npcConfig()
		setConfigurationPath()
		getConfigurationPath()
		materialHealth()
		materialFootstepSound()
		monsterMovementSettings()
		materialPath()
		setConfiguration()
		monsterPortrait()
		itemType()
		questConfig()
		recipesForItem()
		assetJson()
		treeFoliageDirectory()
		techType()
		liquidStatusEffects()
		makeCurrentVersionedJson()
		itemTags()
		tenantConfig()
		npcPortrait()
	}
	jsize()
	status = {
		setResourceLocked()
		resourcePercentage()
		addPersistentEffects()
		removeEphemeralEffect()
		resource()
		setResourcePercentage()
		resourcePositive()
		damageTakenSince()
		statPositive()
		stat()
		statusProperty()
		activeUniqueStatusEffectSummary()
		inflictedHitsSince()
		resourceMax()
		setStatusProperty()
		setPersistentEffects()
		resetAllResources()
		addEphemeralEffects()
		overConsumeResource()
		modifyResource()
		addEphemeralEffect()
		getPersistentEffects()
		resetResource()
		consumeResource()
		clearPersistentEffects()
		modifyResourcePercentage()
		clearEphemeralEffects()
		resourceNames()
		addPersistentEffect()
		resourceLocked()
		clearAllPersistentEffects()
		inflictedDamageSince()
		isResource()
		setResource()
		giveResource()
	}
	xpcall()
	getmetatable()
	utf8 = {
		len()
		codepoint()
		offset()
		codes()
		charpattern = "[
[23:02:27.643] [Warn] 	select()
	rawequal()
	rawset()
	string = {
		gmatch()
		char()
		sub()
		unpack()
		upper()
		lower()
		find()
		rep()
		dump()
		len()
		reverse()
		packsize()
		pack()
		byte()
		match()
		format()
		gsub()
	}
	require()
	pairs()
	next()
	jobject()
	math = {
		pi = 3.1415926535898
		rad()
		max()
		sqrt()
		random()
		floor()
		log()
		acos()
		fmod()
		mininteger = -9223372036854775808
		type()
		huge = inf
		randomseed()
		deg()
		exp()
		maxinteger = 9223372036854775807
		cos()
		min()
		tointeger()
		modf()
		asin()
		tan()
		atan()
		abs()
		sin()
		ult()
		ceil()
	}
	print()
	pcall()
	type()
	init()
	setmetatable()
	jresize()
	ic = {
		checkStack()
		itemAmount()
		stripColor()
		quickstack()
		itemConfig()
		amountEquipped()
		sortFunc()
		lock()
		giveBack()
		renameThis()
		sort()
		searchBox()
		sort_relative()
		clientVersion = 1
		renameButton()
		searchButton()
		getQuality()
	}
	player = {
		equippedTech()
		altHandItem()
		giveEssentialItem()
		consumeTaggedItem()
		setUniverseFlag()
		species()
		itemsWithTag()
		worldId()
		warp()
		completeMission()
		inventoryTags()
		upgradeShip()
		hasQuest()
		consumeItem()
		gender()
		primaryHandItem()
		essentialItem()
		equippedItem()
		setIntroComplete()
		playTime()
		enabledTechs()
		recordEvent()
		playCinematic()
		introComplete()
		hasCompletedQuest()
		makeTechAvailable()
		consumeItemWithParameter()
		startQuest()
		hasItemWithParameter()
		getItemWithParameter()
		lounge()
		enableTech()
		equipTech()
		enableMission()
		removeEssentialItem()
		isLounging()
		availableTechs()
		primaryHandItemTags()
		makeTechUnavailable()
		confirm()
		serverUuid()
		addBookmark()
		altHandItemTags()
		cleanupItems()
		radioMessage()
		setEquippedItem()
		ownShipWorldId()
		hasItem()
		canStartQuest()
		giveBlueprint()
		hasCountOfItem()
		shipUpgrades()
		giveItem()
	}
	config = {
		getParameter()
	}
	self = {
	}
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	world = {
		spawnItem()
		entityPosition()
		entityHealth()
		damageTileArea()
		day()
		placeMaterial()
		entityDescription()
		containerPutItemsAt()
		entityVelocity()
		damageTiles()
		entityHandItem()
		objectAt()
		setProperty()
		containerItemApply()
		containerClose()
		distance()
		findUniqueEntity()
		gravity()
		rectTileCollision()
		entitySpecies()
		platformerPathStart()
		containerOpen()
		containerTakeAll()
		breathable()
		npcType()
		containerAddItems()
		dayLength()
		loungeableOccupied()
		placeObject()
		isTileProtected()
		destroyLiquid()
		debugLine()
		spawnLiquid()
		entityCanDamage()
		containerItemsCanFit()
		xwrap()
		entityUniqueId()
		itemDropQuery()
		lightLevel()
		placeMod()
		spawnNpc()
		spawnTreasure()
		time()
		underground()
		spawnVehicle()
		spawnMonster()
		timeOfDay()
		findPlatformerPath()
		debugPoly()
		containerTakeNumItemsAt()
		isMonster()
		farmableStage()
		polyCollision()
		objectLineQuery()
		entityHasCountOfItem()
		entityHandItemDescriptor()
		tileIsOccupied()
		resolvePolyCollision()
		pointCollision()
		callScriptedEntity()
		collisionBlocksAlongLine()
		containerStackItems()
		objectSpaces()
		containerConsume()
		spawnStagehand()
		spawnProjectile()
		stagehandType()
		entityQuery()
		lineTileCollision()
		containerSwapItemsNoCombine()
		liquidAlongLine()
		playerQuery()
		objectQuery()
		entityGender()
		rectCollision()
		containerItemAt()
		polyContains()
		containerTakeAt()
		magnitude()
		mod()
		containerSwapItems()
		isNpc()
		lineCollision()
		getObjectParameter()
		debugPoint()
		pointTileCollision()
		containerItemsFitWhere()
		containerAvailable()
		getProperty()
		containerItems()
		threatLevel()
		entityType()
		sendEntityMessage()
		material()
		liquidAt()
		containerSize()
		debugText()
		monsterType()
		entityMoney()
		nearestTo()
		npcLineQuery()
		entityPortrait()
		entityName()
		entityDamageTeam()
		containerConsumeAt()
		entityAggressive()
		windLevel()
		monsterQuery()
		entityExists()
		loungeableQuery()
		npcQuery()
		entityLineQuery()
	}
	root = {
		createBiome()
		imageSpaces()
		createItem()
		loadVersionedJson()
		createTreasure()
		getMatchingTenants()
		monsterSkillParameter()
		getConfiguration()
		npcVariant()
		itemHasTag()
		imageSize()
		projectileGravityMultiplier()
		nonEmptyRegion()
		evalFunction2()
		projectileConfig()
		materialMiningSound()
		generateName()
		isTreasurePool()
		hasTech()
		behaviorModule()
		itemConfig()
		treeStemDirectory()
		evalFunction()
		techConfig()
		npcConfig()
		setConfigurationPath()
		getConfigurationPath()
		materialHealth()
		materialFootstepSound()
		monsterMovementSettings()
		materialPath()
		setConfiguration()
		monsterPortrait()
		itemType()
		questConfig()
		recipesForItem()
		assetJson()
		treeFoliageDirectory()
		techType()
		liquidStatusEffects()
		makeCurrentVersionedJson()
		itemTags()
		tenantConfig()
		npcPortrait()
	}
	jsize()
	status = {
		setResourceLocked()
		resourcePercentage()
		addPersistentEffects()
		removeEphemeralEffect()
		resource()
		setResourcePercentage()
		resourcePositive()
		damageTakenSince()
		statPositive()
		stat()
		statusProperty()
		activeUniqueStatusEffectSummary()
		inflictedHitsSince()
		resourceMax()
		setStatusProperty()
		setPersistentEffects()
		resetAllResources()
		addEphemeralEffects()
		overConsumeResource()
		modifyResource()
		addEphemeralEffect()
		getPersistentEffects()
		resetResource()
		consumeResource()
		clearPersistentEffects()
		modifyResourcePercentage()
		clearEphemeralEffects()
		resourceNames()
		addPersistentEffect()
		resourceLocked()
		clearAllPersistentEffects()
		inflictedDamageSince()
		isResource()
		setResource()
		giveResource()
	}
	xpcall()
	getmetatable()
	utf8 = {
		len()
		codepoint()
		offset()
		codes()
		charpattern = "[
[23:02:29.097] [Warn] 	select()
	rawequal()
	rawset()
	string = {
		gmatch()
		char()
		sub()
		unpack()
		upper()
		lower()
		find()
		rep()
		dump()
		len()
		reverse()
		packsize()
		pack()
		byte()
		match()
		format()
		gsub()
	}
	require()
	pairs()
	next()
	jobject()
	math = {
		pi = 3.1415926535898
		rad()
		max()
		sqrt()
		random()
		floor()
		log()
		acos()
		fmod()
		mininteger = -9223372036854775808
		type()
		huge = inf
		randomseed()
		deg()
		exp()
		maxinteger = 9223372036854775807
		cos()
		min()
		tointeger()
		modf()
		asin()
		tan()
		atan()
		abs()
		sin()
		ult()
		ceil()
	}
	print()
	pcall()
	type()
	init()
	setmetatable()
	jresize()
	ic = {
		checkStack()
		itemAmount()
		stripColor()
		quickstack()
		itemConfig()
		amountEquipped()
		sortFunc()
		lock()
		giveBack()
		renameThis()
		sort()
		searchBox()
		sort_relative()
		clientVersion = 1
		renameButton()
		searchButton()
		getQuality()
	}
	player = {
		equippedTech()
		altHandItem()
		giveEssentialItem()
		consumeTaggedItem()
		setUniverseFlag()
		species()
		itemsWithTag()
		worldId()
		warp()
		completeMission()
		inventoryTags()
		upgradeShip()
		hasQuest()
		consumeItem()
		gender()
		primaryHandItem()
		essentialItem()
		equippedItem()
		setIntroComplete()
		playTime()
		enabledTechs()
		recordEvent()
		playCinematic()
		introComplete()
		hasCompletedQuest()
		makeTechAvailable()
		consumeItemWithParameter()
		startQuest()
		hasItemWithParameter()
		getItemWithParameter()
		lounge()
		enableTech()
		equipTech()
		enableMission()
		removeEssentialItem()
		isLounging()
		availableTechs()
		primaryHandItemTags()
		makeTechUnavailable()
		confirm()
		serverUuid()
		addBookmark()
		altHandItemTags()
		cleanupItems()
		radioMessage()
		setEquippedItem()
		ownShipWorldId()
		hasItem()
		canStartQuest()
		giveBlueprint()
		hasCountOfItem()
		shipUpgrades()
		giveItem()
	}
	config = {
		getParameter()
	}
	self = {
	}
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	world = {
		spawnItem()
		entityPosition()
		entityHealth()
		damageTileArea()
		day()
		placeMaterial()
		entityDescription()
		containerPutItemsAt()
		entityVelocity()
		damageTiles()
		entityHandItem()
		objectAt()
		setProperty()
		containerItemApply()
		containerClose()
		distance()
		findUniqueEntity()
		gravity()
		rectTileCollision()
		entitySpecies()
		platformerPathStart()
		containerOpen()
		containerTakeAll()
		breathable()
		npcType()
		containerAddItems()
		dayLength()
		loungeableOccupied()
		placeObject()
		isTileProtected()
		destroyLiquid()
		debugLine()
		spawnLiquid()
		entityCanDamage()
		containerItemsCanFit()
		xwrap()
		entityUniqueId()
		itemDropQuery()
		lightLevel()
		placeMod()
		spawnNpc()
		spawnTreasure()
		time()
		underground()
		spawnVehicle()
		spawnMonster()
		timeOfDay()
		findPlatformerPath()
		debugPoly()
		containerTakeNumItemsAt()
		isMonster()
		farmableStage()
		polyCollision()
		objectLineQuery()
		entityHasCountOfItem()
		entityHandItemDescriptor()
		tileIsOccupied()
		resolvePolyCollision()
		pointCollision()
		callScriptedEntity()
		collisionBlocksAlongLine()
		containerStackItems()
		objectSpaces()
		containerConsume()
		spawnStagehand()
		spawnProjectile()
		stagehandType()
		entityQuery()
		lineTileCollision()
		containerSwapItemsNoCombine()
		liquidAlongLine()
		playerQuery()
		objectQuery()
		entityGender()
		rectCollision()
		containerItemAt()
		polyContains()
		containerTakeAt()
		magnitude()
		mod()
		containerSwapItems()
		isNpc()
		lineCollision()
		getObjectParameter()
		debugPoint()
		pointTileCollision()
		containerItemsFitWhere()
		containerAvailable()
		getProperty()
		containerItems()
		threatLevel()
		entityType()
		sendEntityMessage()
		material()
		liquidAt()
		containerSize()
		debugText()
		monsterType()
		entityMoney()
		nearestTo()
		npcLineQuery()
		entityPortrait()
		entityName()
		entityDamageTeam()
		containerConsumeAt()
		entityAggressive()
		windLevel()
		monsterQuery()
		entityExists()
		loungeableQuery()
		npcQuery()
		entityLineQuery()
	}
	root = {
		createBiome()
		imageSpaces()
		createItem()
		loadVersionedJson()
		createTreasure()
		getMatchingTenants()
		monsterSkillParameter()
		getConfiguration()
		npcVariant()
		itemHasTag()
		imageSize()
		projectileGravityMultiplier()
		nonEmptyRegion()
		evalFunction2()
		projectileConfig()
		materialMiningSound()
		generateName()
		isTreasurePool()
		hasTech()
		behaviorModule()
		itemConfig()
		treeStemDirectory()
		evalFunction()
		techConfig()
		npcConfig()
		setConfigurationPath()
		getConfigurationPath()
		materialHealth()
		materialFootstepSound()
		monsterMovementSettings()
		materialPath()
		setConfiguration()
		monsterPortrait()
		itemType()
		questConfig()
		recipesForItem()
		assetJson()
		treeFoliageDirectory()
		techType()
		liquidStatusEffects()
		makeCurrentVersionedJson()
		itemTags()
		tenantConfig()
		npcPortrait()
	}
	jsize()
	status = {
		setResourceLocked()
		resourcePercentage()
		addPersistentEffects()
		removeEphemeralEffect()
		resource()
		setResourcePercentage()
		resourcePositive()
		damageTakenSince()
		statPositive()
		stat()
		statusProperty()
		activeUniqueStatusEffectSummary()
		inflictedHitsSince()
		resourceMax()
		setStatusProperty()
		setPersistentEffects()
		resetAllResources()
		addEphemeralEffects()
		overConsumeResource()
		modifyResource()
		addEphemeralEffect()
		getPersistentEffects()
		resetResource()
		consumeResource()
		clearPersistentEffects()
		modifyResourcePercentage()
		clearEphemeralEffects()
		resourceNames()
		addPersistentEffect()
		resourceLocked()
		clearAllPersistentEffects()
		inflictedDamageSince()
		isResource()
		setResource()
		giveResource()
	}
	xpcall()
	getmetatable()
	utf8 = {
		len()
		codepoint()
		offset()
		codes()
		charpattern = "[
[23:02:30.333] [Warn] 	select()
	rawequal()
	rawset()
	string = {
		gmatch()
		char()
		sub()
		unpack()
		upper()
		lower()
		find()
		rep()
		dump()
		len()
		reverse()
		packsize()
		pack()
		byte()
		match()
		format()
		gsub()
	}
	require()
	pairs()
	next()
	jobject()
	math = {
		pi = 3.1415926535898
		rad()
		max()
		sqrt()
		random()
		floor()
		log()
		acos()
		fmod()
		mininteger = -9223372036854775808
		type()
		huge = inf
		randomseed()
		deg()
		exp()
		maxinteger = 9223372036854775807
		cos()
		min()
		tointeger()
		modf()
		asin()
		tan()
		atan()
		abs()
		sin()
		ult()
		ceil()
	}
	print()
	pcall()
	type()
	init()
	setmetatable()
	jresize()
	ic = {
		checkStack()
		itemAmount()
		stripColor()
		quickstack()
		itemConfig()
		amountEquipped()
		sortFunc()
		lock()
		giveBack()
		renameThis()
		sort()
		searchBox()
		sort_relative()
		clientVersion = 1
		renameButton()
		searchButton()
		getQuality()
	}
	player = {
		equippedTech()
		altHandItem()
		giveEssentialItem()
		consumeTaggedItem()
		setUniverseFlag()
		species()
		itemsWithTag()
		worldId()
		warp()
		completeMission()
		inventoryTags()
		upgradeShip()
		hasQuest()
		consumeItem()
		gender()
		primaryHandItem()
		essentialItem()
		equippedItem()
		setIntroComplete()
		playTime()
		enabledTechs()
		recordEvent()
		playCinematic()
		introComplete()
		hasCompletedQuest()
		makeTechAvailable()
		consumeItemWithParameter()
		startQuest()
		hasItemWithParameter()
		getItemWithParameter()
		lounge()
		enableTech()
		equipTech()
		enableMission()
		removeEssentialItem()
		isLounging()
		availableTechs()
		primaryHandItemTags()
		makeTechUnavailable()
		confirm()
		serverUuid()
		addBookmark()
		altHandItemTags()
		cleanupItems()
		radioMessage()
		setEquippedItem()
		ownShipWorldId()
		hasItem()
		canStartQuest()
		giveBlueprint()
		hasCountOfItem()
		shipUpgrades()
		giveItem()
	}
	config = {
		getParameter()
	}
	self = {
	}
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	world = {
		spawnItem()
		entityPosition()
		entityHealth()
		damageTileArea()
		day()
		placeMaterial()
		entityDescription()
		containerPutItemsAt()
		entityVelocity()
		damageTiles()
		entityHandItem()
		objectAt()
		setProperty()
		containerItemApply()
		containerClose()
		distance()
		findUniqueEntity()
		gravity()
		rectTileCollision()
		entitySpecies()
		platformerPathStart()
		containerOpen()
		containerTakeAll()
		breathable()
		npcType()
		containerAddItems()
		dayLength()
		loungeableOccupied()
		placeObject()
		isTileProtected()
		destroyLiquid()
		debugLine()
		spawnLiquid()
		entityCanDamage()
		containerItemsCanFit()
		xwrap()
		entityUniqueId()
		itemDropQuery()
		lightLevel()
		placeMod()
		spawnNpc()
		spawnTreasure()
		time()
		underground()
		spawnVehicle()
		spawnMonster()
		timeOfDay()
		findPlatformerPath()
		debugPoly()
		containerTakeNumItemsAt()
		isMonster()
		farmableStage()
		polyCollision()
		objectLineQuery()
		entityHasCountOfItem()
		entityHandItemDescriptor()
		tileIsOccupied()
		resolvePolyCollision()
		pointCollision()
		callScriptedEntity()
		collisionBlocksAlongLine()
		containerStackItems()
		objectSpaces()
		containerConsume()
		spawnStagehand()
		spawnProjectile()
		stagehandType()
		entityQuery()
		lineTileCollision()
		containerSwapItemsNoCombine()
		liquidAlongLine()
		playerQuery()
		objectQuery()
		entityGender()
		rectCollision()
		containerItemAt()
		polyContains()
		containerTakeAt()
		magnitude()
		mod()
		containerSwapItems()
		isNpc()
		lineCollision()
		getObjectParameter()
		debugPoint()
		pointTileCollision()
		containerItemsFitWhere()
		containerAvailable()
		getProperty()
		containerItems()
		threatLevel()
		entityType()
		sendEntityMessage()
		material()
		liquidAt()
		containerSize()
		debugText()
		monsterType()
		entityMoney()
		nearestTo()
		npcLineQuery()
		entityPortrait()
		entityName()
		entityDamageTeam()
		containerConsumeAt()
		entityAggressive()
		windLevel()
		monsterQuery()
		entityExists()
		loungeableQuery()
		npcQuery()
		entityLineQuery()
	}
	root = {
		createBiome()
		imageSpaces()
		createItem()
		loadVersionedJson()
		createTreasure()
		getMatchingTenants()
		monsterSkillParameter()
		getConfiguration()
		npcVariant()
		itemHasTag()
		imageSize()
		projectileGravityMultiplier()
		nonEmptyRegion()
		evalFunction2()
		projectileConfig()
		materialMiningSound()
		generateName()
		isTreasurePool()
		hasTech()
		behaviorModule()
		itemConfig()
		treeStemDirectory()
		evalFunction()
		techConfig()
		npcConfig()
		setConfigurationPath()
		getConfigurationPath()
		materialHealth()
		materialFootstepSound()
		monsterMovementSettings()
		materialPath()
		setConfiguration()
		monsterPortrait()
		itemType()
		questConfig()
		recipesForItem()
		assetJson()
		treeFoliageDirectory()
		techType()
		liquidStatusEffects()
		makeCurrentVersionedJson()
		itemTags()
		tenantConfig()
		npcPortrait()
	}
	jsize()
	status = {
		setResourceLocked()
		resourcePercentage()
		addPersistentEffects()
		removeEphemeralEffect()
		resource()
		setResourcePercentage()
		resourcePositive()
		damageTakenSince()
		statPositive()
		stat()
		statusProperty()
		activeUniqueStatusEffectSummary()
		inflictedHitsSince()
		resourceMax()
		setStatusProperty()
		setPersistentEffects()
		resetAllResources()
		addEphemeralEffects()
		overConsumeResource()
		modifyResource()
		addEphemeralEffect()
		getPersistentEffects()
		resetResource()
		consumeResource()
		clearPersistentEffects()
		modifyResourcePercentage()
		clearEphemeralEffects()
		resourceNames()
		addPersistentEffect()
		resourceLocked()
		clearAllPersistentEffects()
		inflictedDamageSince()
		isResource()
		setResource()
		giveResource()
	}
	xpcall()
	getmetatable()
	utf8 = {
		len()
		codepoint()
		offset()
		codes()
		charpattern = "[
[23:02:31.712] [Warn] 	select()
	rawequal()
	rawset()
	string = {
		gmatch()
		char()
		sub()
		unpack()
		upper()
		lower()
		find()
		rep()
		dump()
		len()
		reverse()
		packsize()
		pack()
		byte()
		match()
		format()
		gsub()
	}
	require()
	pairs()
	next()
	jobject()
	math = {
		pi = 3.1415926535898
		rad()
		max()
		sqrt()
		random()
		floor()
		log()
		acos()
		fmod()
		mininteger = -9223372036854775808
		type()
		huge = inf
		randomseed()
		deg()
		exp()
		maxinteger = 9223372036854775807
		cos()
		min()
		tointeger()
		modf()
		asin()
		tan()
		atan()
		abs()
		sin()
		ult()
		ceil()
	}
	print()
	pcall()
	type()
	init()
	setmetatable()
	jresize()
	ic = {
		checkStack()
		itemAmount()
		stripColor()
		quickstack()
		itemConfig()
		amountEquipped()
		sortFunc()
		lock()
		giveBack()
		renameThis()
		sort()
		searchBox()
		sort_relative()
		clientVersion = 1
		renameButton()
		searchButton()
		getQuality()
	}
	player = {
		equippedTech()
		altHandItem()
		giveEssentialItem()
		consumeTaggedItem()
		setUniverseFlag()
		species()
		itemsWithTag()
		worldId()
		warp()
		completeMission()
		inventoryTags()
		upgradeShip()
		hasQuest()
		consumeItem()
		gender()
		primaryHandItem()
		essentialItem()
		equippedItem()
		setIntroComplete()
		playTime()
		enabledTechs()
		recordEvent()
		playCinematic()
		introComplete()
		hasCompletedQuest()
		makeTechAvailable()
		consumeItemWithParameter()
		startQuest()
		hasItemWithParameter()
		getItemWithParameter()
		lounge()
		enableTech()
		equipTech()
		enableMission()
		removeEssentialItem()
		isLounging()
		availableTechs()
		primaryHandItemTags()
		makeTechUnavailable()
		confirm()
		serverUuid()
		addBookmark()
		altHandItemTags()
		cleanupItems()
		radioMessage()
		setEquippedItem()
		ownShipWorldId()
		hasItem()
		canStartQuest()
		giveBlueprint()
		hasCountOfItem()
		shipUpgrades()
		giveItem()
	}
	config = {
		getParameter()
	}
	self = {
	}
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	world = {
		spawnItem()
		entityPosition()
		entityHealth()
		damageTileArea()
		day()
		placeMaterial()
		entityDescription()
		containerPutItemsAt()
		entityVelocity()
		damageTiles()
		entityHandItem()
		objectAt()
		setProperty()
		containerItemApply()
		containerClose()
		distance()
		findUniqueEntity()
		gravity()
		rectTileCollision()
		entitySpecies()
		platformerPathStart()
		containerOpen()
		containerTakeAll()
		breathable()
		npcType()
		containerAddItems()
		dayLength()
		loungeableOccupied()
		placeObject()
		isTileProtected()
		destroyLiquid()
		debugLine()
		spawnLiquid()
		entityCanDamage()
		containerItemsCanFit()
		xwrap()
		entityUniqueId()
		itemDropQuery()
		lightLevel()
		placeMod()
		spawnNpc()
		spawnTreasure()
		time()
		underground()
		spawnVehicle()
		spawnMonster()
		timeOfDay()
		findPlatformerPath()
		debugPoly()
		containerTakeNumItemsAt()
		isMonster()
		farmableStage()
		polyCollision()
		objectLineQuery()
		entityHasCountOfItem()
		entityHandItemDescriptor()
		tileIsOccupied()
		resolvePolyCollision()
		pointCollision()
		callScriptedEntity()
		collisionBlocksAlongLine()
		containerStackItems()
		objectSpaces()
		containerConsume()
		spawnStagehand()
		spawnProjectile()
		stagehandType()
		entityQuery()
		lineTileCollision()
		containerSwapItemsNoCombine()
		liquidAlongLine()
		playerQuery()
		objectQuery()
		entityGender()
		rectCollision()
		containerItemAt()
		polyContains()
		containerTakeAt()
		magnitude()
		mod()
		containerSwapItems()
		isNpc()
		lineCollision()
		getObjectParameter()
		debugPoint()
		pointTileCollision()
		containerItemsFitWhere()
		containerAvailable()
		getProperty()
		containerItems()
		threatLevel()
		entityType()
		sendEntityMessage()
		material()
		liquidAt()
		containerSize()
		debugText()
		monsterType()
		entityMoney()
		nearestTo()
		npcLineQuery()
		entityPortrait()
		entityName()
		entityDamageTeam()
		containerConsumeAt()
		entityAggressive()
		windLevel()
		monsterQuery()
		entityExists()
		loungeableQuery()
		npcQuery()
		entityLineQuery()
	}
	root = {
		createBiome()
		imageSpaces()
		createItem()
		loadVersionedJson()
		createTreasure()
		getMatchingTenants()
		monsterSkillParameter()
		getConfiguration()
		npcVariant()
		itemHasTag()
		imageSize()
		projectileGravityMultiplier()
		nonEmptyRegion()
		evalFunction2()
		projectileConfig()
		materialMiningSound()
		generateName()
		isTreasurePool()
		hasTech()
		behaviorModule()
		itemConfig()
		treeStemDirectory()
		evalFunction()
		techConfig()
		npcConfig()
		setConfigurationPath()
		getConfigurationPath()
		materialHealth()
		materialFootstepSound()
		monsterMovementSettings()
		materialPath()
		setConfiguration()
		monsterPortrait()
		itemType()
		questConfig()
		recipesForItem()
		assetJson()
		treeFoliageDirectory()
		techType()
		liquidStatusEffects()
		makeCurrentVersionedJson()
		itemTags()
		tenantConfig()
		npcPortrait()
	}
	jsize()
	status = {
		setResourceLocked()
		resourcePercentage()
		addPersistentEffects()
		removeEphemeralEffect()
		resource()
		setResourcePercentage()
		resourcePositive()
		damageTakenSince()
		statPositive()
		stat()
		statusProperty()
		activeUniqueStatusEffectSummary()
		inflictedHitsSince()
		resourceMax()
		setStatusProperty()
		setPersistentEffects()
		resetAllResources()
		addEphemeralEffects()
		overConsumeResource()
		modifyResource()
		addEphemeralEffect()
		getPersistentEffects()
		resetResource()
		consumeResource()
		clearPersistentEffects()
		modifyResourcePercentage()
		clearEphemeralEffects()
		resourceNames()
		addPersistentEffect()
		resourceLocked()
		clearAllPersistentEffects()
		inflictedDamageSince()
		isResource()
		setResource()
		giveResource()
	}
	xpcall()
	getmetatable()
	utf8 = {
		len()
		codepoint()
		offset()
		codes()
		charpattern = "[
[23:02:57.705] [Warn] 	select()
	rawequal()
	rawset()
	string = {
		gmatch()
		char()
		sub()
		unpack()
		upper()
		lower()
		find()
		rep()
		dump()
		len()
		reverse()
		packsize()
		pack()
		byte()
		match()
		format()
		gsub()
	}
	require()
	pairs()
	next()
	jobject()
	math = {
		pi = 3.1415926535898
		rad()
		max()
		sqrt()
		random()
		floor()
		log()
		acos()
		fmod()
		mininteger = -9223372036854775808
		type()
		huge = inf
		randomseed()
		deg()
		exp()
		maxinteger = 9223372036854775807
		cos()
		min()
		tointeger()
		modf()
		asin()
		tan()
		atan()
		abs()
		sin()
		ult()
		ceil()
	}
	print()
	pcall()
	type()
	init()
	setmetatable()
	jresize()
	ic = {
		checkStack()
		itemAmount()
		stripColor()
		quickstack()
		itemConfig()
		amountEquipped()
		sortFunc()
		lock()
		giveBack()
		renameThis()
		sort()
		searchBox()
		sort_relative()
		clientVersion = 1
		renameButton()
		searchButton()
		getQuality()
	}
	player = {
		equippedTech()
		altHandItem()
		giveEssentialItem()
		consumeTaggedItem()
		setUniverseFlag()
		species()
		itemsWithTag()
		worldId()
		warp()
		completeMission()
		inventoryTags()
		upgradeShip()
		hasQuest()
		consumeItem()
		gender()
		primaryHandItem()
		essentialItem()
		equippedItem()
		setIntroComplete()
		playTime()
		enabledTechs()
		recordEvent()
		playCinematic()
		introComplete()
		hasCompletedQuest()
		makeTechAvailable()
		consumeItemWithParameter()
		startQuest()
		hasItemWithParameter()
		getItemWithParameter()
		lounge()
		enableTech()
		equipTech()
		enableMission()
		removeEssentialItem()
		isLounging()
		availableTechs()
		primaryHandItemTags()
		makeTechUnavailable()
		confirm()
		serverUuid()
		addBookmark()
		altHandItemTags()
		cleanupItems()
		radioMessage()
		setEquippedItem()
		ownShipWorldId()
		hasItem()
		canStartQuest()
		giveBlueprint()
		hasCountOfItem()
		shipUpgrades()
		giveItem()
	}
	config = {
		getParameter()
	}
	self = {
	}
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	world = {
		spawnItem()
		entityPosition()
		entityHealth()
		damageTileArea()
		day()
		placeMaterial()
		entityDescription()
		containerPutItemsAt()
		entityVelocity()
		damageTiles()
		entityHandItem()
		objectAt()
		setProperty()
		containerItemApply()
		containerClose()
		distance()
		findUniqueEntity()
		gravity()
		rectTileCollision()
		entitySpecies()
		platformerPathStart()
		containerOpen()
		containerTakeAll()
		breathable()
		npcType()
		containerAddItems()
		dayLength()
		loungeableOccupied()
		placeObject()
		isTileProtected()
		destroyLiquid()
		debugLine()
		spawnLiquid()
		entityCanDamage()
		containerItemsCanFit()
		xwrap()
		entityUniqueId()
		itemDropQuery()
		lightLevel()
		placeMod()
		spawnNpc()
		spawnTreasure()
		time()
		underground()
		spawnVehicle()
		spawnMonster()
		timeOfDay()
		findPlatformerPath()
		debugPoly()
		containerTakeNumItemsAt()
		isMonster()
		farmableStage()
		polyCollision()
		objectLineQuery()
		entityHasCountOfItem()
		entityHandItemDescriptor()
		tileIsOccupied()
		resolvePolyCollision()
		pointCollision()
		callScriptedEntity()
		collisionBlocksAlongLine()
		containerStackItems()
		objectSpaces()
		containerConsume()
		spawnStagehand()
		spawnProjectile()
		stagehandType()
		entityQuery()
		lineTileCollision()
		containerSwapItemsNoCombine()
		liquidAlongLine()
		playerQuery()
		objectQuery()
		entityGender()
		rectCollision()
		containerItemAt()
		polyContains()
		containerTakeAt()
		magnitude()
		mod()
		containerSwapItems()
		isNpc()
		lineCollision()
		getObjectParameter()
		debugPoint()
		pointTileCollision()
		containerItemsFitWhere()
		containerAvailable()
		getProperty()
		containerItems()
		threatLevel()
		entityType()
		sendEntityMessage()
		material()
		liquidAt()
		containerSize()
		debugText()
		monsterType()
		entityMoney()
		nearestTo()
		npcLineQuery()
		entityPortrait()
		entityName()
		entityDamageTeam()
		containerConsumeAt()
		entityAggressive()
		windLevel()
		monsterQuery()
		entityExists()
		loungeableQuery()
		npcQuery()
		entityLineQuery()
	}
	root = {
		createBiome()
		imageSpaces()
		createItem()
		loadVersionedJson()
		createTreasure()
		getMatchingTenants()
		monsterSkillParameter()
		getConfiguration()
		npcVariant()
		itemHasTag()
		imageSize()
		projectileGravityMultiplier()
		nonEmptyRegion()
		evalFunction2()
		projectileConfig()
		materialMiningSound()
		generateName()
		isTreasurePool()
		hasTech()
		behaviorModule()
		itemConfig()
		treeStemDirectory()
		evalFunction()
		techConfig()
		npcConfig()
		setConfigurationPath()
		getConfigurationPath()
		materialHealth()
		materialFootstepSound()
		monsterMovementSettings()
		materialPath()
		setConfiguration()
		monsterPortrait()
		itemType()
		questConfig()
		recipesForItem()
		assetJson()
		treeFoliageDirectory()
		techType()
		liquidStatusEffects()
		makeCurrentVersionedJson()
		itemTags()
		tenantConfig()
		npcPortrait()
	}
	jsize()
	status = {
		setResourceLocked()
		resourcePercentage()
		addPersistentEffects()
		removeEphemeralEffect()
		resource()
		setResourcePercentage()
		resourcePositive()
		damageTakenSince()
		statPositive()
		stat()
		statusProperty()
		activeUniqueStatusEffectSummary()
		inflictedHitsSince()
		resourceMax()
		setStatusProperty()
		setPersistentEffects()
		resetAllResources()
		addEphemeralEffects()
		overConsumeResource()
		modifyResource()
		addEphemeralEffect()
		getPersistentEffects()
		resetResource()
		consumeResource()
		clearPersistentEffects()
		modifyResourcePercentage()
		clearEphemeralEffects()
		resourceNames()
		addPersistentEffect()
		resourceLocked()
		clearAllPersistentEffects()
		inflictedDamageSince()
		isResource()
		setResource()
		giveResource()
	}
	xpcall()
	getmetatable()
	utf8 = {
		len()
		codepoint()
		offset()
		codes()
		charpattern = "[
[23:02:58.897] [Warn] 	select()
	rawequal()
	rawset()
	string = {
		gmatch()
		char()
		sub()
		unpack()
		upper()
		lower()
		find()
		rep()
		dump()
		len()
		reverse()
		packsize()
		pack()
		byte()
		match()
		format()
		gsub()
	}
	require()
	pairs()
	next()
	jobject()
	math = {
		pi = 3.1415926535898
		rad()
		max()
		sqrt()
		random()
		floor()
		log()
		acos()
		fmod()
		mininteger = -9223372036854775808
		type()
		huge = inf
		randomseed()
		deg()
		exp()
		maxinteger = 9223372036854775807
		cos()
		min()
		tointeger()
		modf()
		asin()
		tan()
		atan()
		abs()
		sin()
		ult()
		ceil()
	}
	print()
	pcall()
	type()
	init()
	setmetatable()
	jresize()
	ic = {
		checkStack()
		itemAmount()
		stripColor()
		quickstack()
		itemConfig()
		amountEquipped()
		sortFunc()
		lock()
		giveBack()
		renameThis()
		sort()
		searchBox()
		sort_relative()
		clientVersion = 1
		renameButton()
		searchButton()
		getQuality()
	}
	player = {
		equippedTech()
		altHandItem()
		giveEssentialItem()
		consumeTaggedItem()
		setUniverseFlag()
		species()
		itemsWithTag()
		worldId()
		warp()
		completeMission()
		inventoryTags()
		upgradeShip()
		hasQuest()
		consumeItem()
		gender()
		primaryHandItem()
		essentialItem()
		equippedItem()
		setIntroComplete()
		playTime()
		enabledTechs()
		recordEvent()
		playCinematic()
		introComplete()
		hasCompletedQuest()
		makeTechAvailable()
		consumeItemWithParameter()
		startQuest()
		hasItemWithParameter()
		getItemWithParameter()
		lounge()
		enableTech()
		equipTech()
		enableMission()
		removeEssentialItem()
		isLounging()
		availableTechs()
		primaryHandItemTags()
		makeTechUnavailable()
		confirm()
		serverUuid()
		addBookmark()
		altHandItemTags()
		cleanupItems()
		radioMessage()
		setEquippedItem()
		ownShipWorldId()
		hasItem()
		canStartQuest()
		giveBlueprint()
		hasCountOfItem()
		shipUpgrades()
		giveItem()
	}
	config = {
		getParameter()
	}
	self = {
	}
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	world = {
		spawnItem()
		entityPosition()
		entityHealth()
		damageTileArea()
		day()
		placeMaterial()
		entityDescription()
		containerPutItemsAt()
		entityVelocity()
		damageTiles()
		entityHandItem()
		objectAt()
		setProperty()
		containerItemApply()
		containerClose()
		distance()
		findUniqueEntity()
		gravity()
		rectTileCollision()
		entitySpecies()
		platformerPathStart()
		containerOpen()
		containerTakeAll()
		breathable()
		npcType()
		containerAddItems()
		dayLength()
		loungeableOccupied()
		placeObject()
		isTileProtected()
		destroyLiquid()
		debugLine()
		spawnLiquid()
		entityCanDamage()
		containerItemsCanFit()
		xwrap()
		entityUniqueId()
		itemDropQuery()
		lightLevel()
		placeMod()
		spawnNpc()
		spawnTreasure()
		time()
		underground()
		spawnVehicle()
		spawnMonster()
		timeOfDay()
		findPlatformerPath()
		debugPoly()
		containerTakeNumItemsAt()
		isMonster()
		farmableStage()
		polyCollision()
		objectLineQuery()
		entityHasCountOfItem()
		entityHandItemDescriptor()
		tileIsOccupied()
		resolvePolyCollision()
		pointCollision()
		callScriptedEntity()
		collisionBlocksAlongLine()
		containerStackItems()
		objectSpaces()
		containerConsume()
		spawnStagehand()
		spawnProjectile()
		stagehandType()
		entityQuery()
		lineTileCollision()
		containerSwapItemsNoCombine()
		liquidAlongLine()
		playerQuery()
		objectQuery()
		entityGender()
		rectCollision()
		containerItemAt()
		polyContains()
		containerTakeAt()
		magnitude()
		mod()
		containerSwapItems()
		isNpc()
		lineCollision()
		getObjectParameter()
		debugPoint()
		pointTileCollision()
		containerItemsFitWhere()
		containerAvailable()
		getProperty()
		containerItems()
		threatLevel()
		entityType()
		sendEntityMessage()
		material()
		liquidAt()
		containerSize()
		debugText()
		monsterType()
		entityMoney()
		nearestTo()
		npcLineQuery()
		entityPortrait()
		entityName()
		entityDamageTeam()
		containerConsumeAt()
		entityAggressive()
		windLevel()
		monsterQuery()
		entityExists()
		loungeableQuery()
		npcQuery()
		entityLineQuery()
	}
	root = {
		createBiome()
		imageSpaces()
		createItem()
		loadVersionedJson()
		createTreasure()
		getMatchingTenants()
		monsterSkillParameter()
		getConfiguration()
		npcVariant()
		itemHasTag()
		imageSize()
		projectileGravityMultiplier()
		nonEmptyRegion()
		evalFunction2()
		projectileConfig()
		materialMiningSound()
		generateName()
		isTreasurePool()
		hasTech()
		behaviorModule()
		itemConfig()
		treeStemDirectory()
		evalFunction()
		techConfig()
		npcConfig()
		setConfigurationPath()
		getConfigurationPath()
		materialHealth()
		materialFootstepSound()
		monsterMovementSettings()
		materialPath()
		setConfiguration()
		monsterPortrait()
		itemType()
		questConfig()
		recipesForItem()
		assetJson()
		treeFoliageDirectory()
		techType()
		liquidStatusEffects()
		makeCurrentVersionedJson()
		itemTags()
		tenantConfig()
		npcPortrait()
	}
	jsize()
	status = {
		setResourceLocked()
		resourcePercentage()
		addPersistentEffects()
		removeEphemeralEffect()
		resource()
		setResourcePercentage()
		resourcePositive()
		damageTakenSince()
		statPositive()
		stat()
		statusProperty()
		activeUniqueStatusEffectSummary()
		inflictedHitsSince()
		resourceMax()
		setStatusProperty()
		setPersistentEffects()
		resetAllResources()
		addEphemeralEffects()
		overConsumeResource()
		modifyResource()
		addEphemeralEffect()
		getPersistentEffects()
		resetResource()
		consumeResource()
		clearPersistentEffects()
		modifyResourcePercentage()
		clearEphemeralEffects()
		resourceNames()
		addPersistentEffect()
		resourceLocked()
		clearAllPersistentEffects()
		inflictedDamageSince()
		isResource()
		setResource()
		giveResource()
	}
	xpcall()
	getmetatable()
	utf8 = {
		len()
		codepoint()
		offset()
		codes()
		charpattern = "[
[23:03:00.196] [Warn] 	select()
	rawequal()
	rawset()
	string = {
		gmatch()
		char()
		sub()
		unpack()
		upper()
		lower()
		find()
		rep()
		dump()
		len()
		reverse()
		packsize()
		pack()
		byte()
		match()
		format()
		gsub()
	}
	require()
	pairs()
	next()
	jobject()
	math = {
		pi = 3.1415926535898
		rad()
		max()
		sqrt()
		random()
		floor()
		log()
		acos()
		fmod()
		mininteger = -9223372036854775808
		type()
		huge = inf
		randomseed()
		deg()
		exp()
		maxinteger = 9223372036854775807
		cos()
		min()
		tointeger()
		modf()
		asin()
		tan()
		atan()
		abs()
		sin()
		ult()
		ceil()
	}
	print()
	pcall()
	type()
	init()
	setmetatable()
	jresize()
	ic = {
		checkStack()
		itemAmount()
		stripColor()
		quickstack()
		itemConfig()
		amountEquipped()
		sortFunc()
		lock()
		giveBack()
		renameThis()
		sort()
		searchBox()
		sort_relative()
		clientVersion = 1
		renameButton()
		searchButton()
		getQuality()
	}
	player = {
		equippedTech()
		altHandItem()
		giveEssentialItem()
		consumeTaggedItem()
		setUniverseFlag()
		species()
		itemsWithTag()
		worldId()
		warp()
		completeMission()
		inventoryTags()
		upgradeShip()
		hasQuest()
		consumeItem()
		gender()
		primaryHandItem()
		essentialItem()
		equippedItem()
		setIntroComplete()
		playTime()
		enabledTechs()
		recordEvent()
		playCinematic()
		introComplete()
		hasCompletedQuest()
		makeTechAvailable()
		consumeItemWithParameter()
		startQuest()
		hasItemWithParameter()
		getItemWithParameter()
		lounge()
		enableTech()
		equipTech()
		enableMission()
		removeEssentialItem()
		isLounging()
		availableTechs()
		primaryHandItemTags()
		makeTechUnavailable()
		confirm()
		serverUuid()
		addBookmark()
		altHandItemTags()
		cleanupItems()
		radioMessage()
		setEquippedItem()
		ownShipWorldId()
		hasItem()
		canStartQuest()
		giveBlueprint()
		hasCountOfItem()
		shipUpgrades()
		giveItem()
	}
	config = {
		getParameter()
	}
	self = {
	}
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	world = {
		spawnItem()
		entityPosition()
		entityHealth()
		damageTileArea()
		day()
		placeMaterial()
		entityDescription()
		containerPutItemsAt()
		entityVelocity()
		damageTiles()
		entityHandItem()
		objectAt()
		setProperty()
		containerItemApply()
		containerClose()
		distance()
		findUniqueEntity()
		gravity()
		rectTileCollision()
		entitySpecies()
		platformerPathStart()
		containerOpen()
		containerTakeAll()
		breathable()
		npcType()
		containerAddItems()
		dayLength()
		loungeableOccupied()
		placeObject()
		isTileProtected()
		destroyLiquid()
		debugLine()
		spawnLiquid()
		entityCanDamage()
		containerItemsCanFit()
		xwrap()
		entityUniqueId()
		itemDropQuery()
		lightLevel()
		placeMod()
		spawnNpc()
		spawnTreasure()
		time()
		underground()
		spawnVehicle()
		spawnMonster()
		timeOfDay()
		findPlatformerPath()
		debugPoly()
		containerTakeNumItemsAt()
		isMonster()
		farmableStage()
		polyCollision()
		objectLineQuery()
		entityHasCountOfItem()
		entityHandItemDescriptor()
		tileIsOccupied()
		resolvePolyCollision()
		pointCollision()
		callScriptedEntity()
		collisionBlocksAlongLine()
		containerStackItems()
		objectSpaces()
		containerConsume()
		spawnStagehand()
		spawnProjectile()
		stagehandType()
		entityQuery()
		lineTileCollision()
		containerSwapItemsNoCombine()
		liquidAlongLine()
		playerQuery()
		objectQuery()
		entityGender()
		rectCollision()
		containerItemAt()
		polyContains()
		containerTakeAt()
		magnitude()
		mod()
		containerSwapItems()
		isNpc()
		lineCollision()
		getObjectParameter()
		debugPoint()
		pointTileCollision()
		containerItemsFitWhere()
		containerAvailable()
		getProperty()
		containerItems()
		threatLevel()
		entityType()
		sendEntityMessage()
		material()
		liquidAt()
		containerSize()
		debugText()
		monsterType()
		entityMoney()
		nearestTo()
		npcLineQuery()
		entityPortrait()
		entityName()
		entityDamageTeam()
		containerConsumeAt()
		entityAggressive()
		windLevel()
		monsterQuery()
		entityExists()
		loungeableQuery()
		npcQuery()
		entityLineQuery()
	}
	root = {
		createBiome()
		imageSpaces()
		createItem()
		loadVersionedJson()
		createTreasure()
		getMatchingTenants()
		monsterSkillParameter()
		getConfiguration()
		npcVariant()
		itemHasTag()
		imageSize()
		projectileGravityMultiplier()
		nonEmptyRegion()
		evalFunction2()
		projectileConfig()
		materialMiningSound()
		generateName()
		isTreasurePool()
		hasTech()
		behaviorModule()
		itemConfig()
		treeStemDirectory()
		evalFunction()
		techConfig()
		npcConfig()
		setConfigurationPath()
		getConfigurationPath()
		materialHealth()
		materialFootstepSound()
		monsterMovementSettings()
		materialPath()
		setConfiguration()
		monsterPortrait()
		itemType()
		questConfig()
		recipesForItem()
		assetJson()
		treeFoliageDirectory()
		techType()
		liquidStatusEffects()
		makeCurrentVersionedJson()
		itemTags()
		tenantConfig()
		npcPortrait()
	}
	jsize()
	status = {
		setResourceLocked()
		resourcePercentage()
		addPersistentEffects()
		removeEphemeralEffect()
		resource()
		setResourcePercentage()
		resourcePositive()
		damageTakenSince()
		statPositive()
		stat()
		statusProperty()
		activeUniqueStatusEffectSummary()
		inflictedHitsSince()
		resourceMax()
		setStatusProperty()
		setPersistentEffects()
		resetAllResources()
		addEphemeralEffects()
		overConsumeResource()
		modifyResource()
		addEphemeralEffect()
		getPersistentEffects()
		resetResource()
		consumeResource()
		clearPersistentEffects()
		modifyResourcePercentage()
		clearEphemeralEffects()
		resourceNames()
		addPersistentEffect()
		resourceLocked()
		clearAllPersistentEffects()
		inflictedDamageSince()
		isResource()
		setResource()
		giveResource()
	}
	xpcall()
	getmetatable()
	utf8 = {
		len()
		codepoint()
		offset()
		codes()
		charpattern = "[
[23:03:06.547] [Warn] 	select()
	rawequal()
	rawset()
	string = {
		gmatch()
		char()
		sub()
		unpack()
		upper()
		lower()
		find()
		rep()
		dump()
		len()
		reverse()
		packsize()
		pack()
		byte()
		match()
		format()
		gsub()
	}
	require()
	pairs()
	next()
	jobject()
	math = {
		pi = 3.1415926535898
		rad()
		max()
		sqrt()
		random()
		floor()
		log()
		acos()
		fmod()
		mininteger = -9223372036854775808
		type()
		huge = inf
		randomseed()
		deg()
		exp()
		maxinteger = 9223372036854775807
		cos()
		min()
		tointeger()
		modf()
		asin()
		tan()
		atan()
		abs()
		sin()
		ult()
		ceil()
	}
	print()
	pcall()
	type()
	init()
	setmetatable()
	jresize()
	ic = {
		checkStack()
		itemAmount()
		stripColor()
		quickstack()
		itemConfig()
		amountEquipped()
		sortFunc()
		lock()
		giveBack()
		renameThis()
		sort()
		searchBox()
		sort_relative()
		clientVersion = 1
		renameButton()
		searchButton()
		getQuality()
	}
	player = {
		equippedTech()
		altHandItem()
		giveEssentialItem()
		consumeTaggedItem()
		setUniverseFlag()
		species()
		itemsWithTag()
		worldId()
		warp()
		completeMission()
		inventoryTags()
		upgradeShip()
		hasQuest()
		consumeItem()
		gender()
		primaryHandItem()
		essentialItem()
		equippedItem()
		setIntroComplete()
		playTime()
		enabledTechs()
		recordEvent()
		playCinematic()
		introComplete()
		hasCompletedQuest()
		makeTechAvailable()
		consumeItemWithParameter()
		startQuest()
		hasItemWithParameter()
		getItemWithParameter()
		lounge()
		enableTech()
		equipTech()
		enableMission()
		removeEssentialItem()
		isLounging()
		availableTechs()
		primaryHandItemTags()
		makeTechUnavailable()
		confirm()
		serverUuid()
		addBookmark()
		altHandItemTags()
		cleanupItems()
		radioMessage()
		setEquippedItem()
		ownShipWorldId()
		hasItem()
		canStartQuest()
		giveBlueprint()
		hasCountOfItem()
		shipUpgrades()
		giveItem()
	}
	config = {
		getParameter()
	}
	self = {
	}
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	world = {
		spawnItem()
		entityPosition()
		entityHealth()
		damageTileArea()
		day()
		placeMaterial()
		entityDescription()
		containerPutItemsAt()
		entityVelocity()
		damageTiles()
		entityHandItem()
		objectAt()
		setProperty()
		containerItemApply()
		containerClose()
		distance()
		findUniqueEntity()
		gravity()
		rectTileCollision()
		entitySpecies()
		platformerPathStart()
		containerOpen()
		containerTakeAll()
		breathable()
		npcType()
		containerAddItems()
		dayLength()
		loungeableOccupied()
		placeObject()
		isTileProtected()
		destroyLiquid()
		debugLine()
		spawnLiquid()
		entityCanDamage()
		containerItemsCanFit()
		xwrap()
		entityUniqueId()
		itemDropQuery()
		lightLevel()
		placeMod()
		spawnNpc()
		spawnTreasure()
		time()
		underground()
		spawnVehicle()
		spawnMonster()
		timeOfDay()
		findPlatformerPath()
		debugPoly()
		containerTakeNumItemsAt()
		isMonster()
		farmableStage()
		polyCollision()
		objectLineQuery()
		entityHasCountOfItem()
		entityHandItemDescriptor()
		tileIsOccupied()
		resolvePolyCollision()
		pointCollision()
		callScriptedEntity()
		collisionBlocksAlongLine()
		containerStackItems()
		objectSpaces()
		containerConsume()
		spawnStagehand()
		spawnProjectile()
		stagehandType()
		entityQuery()
		lineTileCollision()
		containerSwapItemsNoCombine()
		liquidAlongLine()
		playerQuery()
		objectQuery()
		entityGender()
		rectCollision()
		containerItemAt()
		polyContains()
		containerTakeAt()
		magnitude()
		mod()
		containerSwapItems()
		isNpc()
		lineCollision()
		getObjectParameter()
		debugPoint()
		pointTileCollision()
		containerItemsFitWhere()
		containerAvailable()
		getProperty()
		containerItems()
		threatLevel()
		entityType()
		sendEntityMessage()
		material()
		liquidAt()
		containerSize()
		debugText()
		monsterType()
		entityMoney()
		nearestTo()
		npcLineQuery()
		entityPortrait()
		entityName()
		entityDamageTeam()
		containerConsumeAt()
		entityAggressive()
		windLevel()
		monsterQuery()
		entityExists()
		loungeableQuery()
		npcQuery()
		entityLineQuery()
	}
	root = {
		createBiome()
		imageSpaces()
		createItem()
		loadVersionedJson()
		createTreasure()
		getMatchingTenants()
		monsterSkillParameter()
		getConfiguration()
		npcVariant()
		itemHasTag()
		imageSize()
		projectileGravityMultiplier()
		nonEmptyRegion()
		evalFunction2()
		projectileConfig()
		materialMiningSound()
		generateName()
		isTreasurePool()
		hasTech()
		behaviorModule()
		itemConfig()
		treeStemDirectory()
		evalFunction()
		techConfig()
		npcConfig()
		setConfigurationPath()
		getConfigurationPath()
		materialHealth()
		materialFootstepSound()
		monsterMovementSettings()
		materialPath()
		setConfiguration()
		monsterPortrait()
		itemType()
		questConfig()
		recipesForItem()
		assetJson()
		treeFoliageDirectory()
		techType()
		liquidStatusEffects()
		makeCurrentVersionedJson()
		itemTags()
		tenantConfig()
		npcPortrait()
	}
	jsize()
	status = {
		setResourceLocked()
		resourcePercentage()
		addPersistentEffects()
		removeEphemeralEffect()
		resource()
		setResourcePercentage()
		resourcePositive()
		damageTakenSince()
		statPositive()
		stat()
		statusProperty()
		activeUniqueStatusEffectSummary()
		inflictedHitsSince()
		resourceMax()
		setStatusProperty()
		setPersistentEffects()
		resetAllResources()
		addEphemeralEffects()
		overConsumeResource()
		modifyResource()
		addEphemeralEffect()
		getPersistentEffects()
		resetResource()
		consumeResource()
		clearPersistentEffects()
		modifyResourcePercentage()
		clearEphemeralEffects()
		resourceNames()
		addPersistentEffect()
		resourceLocked()
		clearAllPersistentEffects()
		inflictedDamageSince()
		isResource()
		setResource()
		giveResource()
	}
	xpcall()
	getmetatable()
	utf8 = {
		len()
		codepoint()
		offset()
		codes()
		charpattern = "[
[23:03:15.464] [Warn] 	select()
	rawequal()
	rawset()
	string = {
		gmatch()
		char()
		sub()
		unpack()
		upper()
		lower()
		find()
		rep()
		dump()
		len()
		reverse()
		packsize()
		pack()
		byte()
		match()
		format()
		gsub()
	}
	require()
	pairs()
	next()
	jobject()
	math = {
		pi = 3.1415926535898
		rad()
		max()
		sqrt()
		random()
		floor()
		log()
		acos()
		fmod()
		mininteger = -9223372036854775808
		type()
		huge = inf
		randomseed()
		deg()
		exp()
		maxinteger = 9223372036854775807
		cos()
		min()
		tointeger()
		modf()
		asin()
		tan()
		atan()
		abs()
		sin()
		ult()
		ceil()
	}
	print()
	pcall()
	type()
	init()
	setmetatable()
	jresize()
	ic = {
		checkStack()
		itemAmount()
		stripColor()
		quickstack()
		itemConfig()
		amountEquipped()
		sortFunc()
		lock()
		giveBack()
		renameThis()
		sort()
		searchBox()
		sort_relative()
		clientVersion = 1
		renameButton()
		searchButton()
		getQuality()
	}
	player = {
		equippedTech()
		altHandItem()
		giveEssentialItem()
		consumeTaggedItem()
		setUniverseFlag()
		species()
		itemsWithTag()
		worldId()
		warp()
		completeMission()
		inventoryTags()
		upgradeShip()
		hasQuest()
		consumeItem()
		gender()
		primaryHandItem()
		essentialItem()
		equippedItem()
		setIntroComplete()
		playTime()
		enabledTechs()
		recordEvent()
		playCinematic()
		introComplete()
		hasCompletedQuest()
		makeTechAvailable()
		consumeItemWithParameter()
		startQuest()
		hasItemWithParameter()
		getItemWithParameter()
		lounge()
		enableTech()
		equipTech()
		enableMission()
		removeEssentialItem()
		isLounging()
		availableTechs()
		primaryHandItemTags()
		makeTechUnavailable()
		confirm()
		serverUuid()
		addBookmark()
		altHandItemTags()
		cleanupItems()
		radioMessage()
		setEquippedItem()
		ownShipWorldId()
		hasItem()
		canStartQuest()
		giveBlueprint()
		hasCountOfItem()
		shipUpgrades()
		giveItem()
	}
	config = {
		getParameter()
	}
	self = {
	}
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	world = {
		spawnItem()
		entityPosition()
		entityHealth()
		damageTileArea()
		day()
		placeMaterial()
		entityDescription()
		containerPutItemsAt()
		entityVelocity()
		damageTiles()
		entityHandItem()
		objectAt()
		setProperty()
		containerItemApply()
		containerClose()
		distance()
		findUniqueEntity()
		gravity()
		rectTileCollision()
		entitySpecies()
		platformerPathStart()
		containerOpen()
		containerTakeAll()
		breathable()
		npcType()
		containerAddItems()
		dayLength()
		loungeableOccupied()
		placeObject()
		isTileProtected()
		destroyLiquid()
		debugLine()
		spawnLiquid()
		entityCanDamage()
		containerItemsCanFit()
		xwrap()
		entityUniqueId()
		itemDropQuery()
		lightLevel()
		placeMod()
		spawnNpc()
		spawnTreasure()
		time()
		underground()
		spawnVehicle()
		spawnMonster()
		timeOfDay()
		findPlatformerPath()
		debugPoly()
		containerTakeNumItemsAt()
		isMonster()
		farmableStage()
		polyCollision()
		objectLineQuery()
		entityHasCountOfItem()
		entityHandItemDescriptor()
		tileIsOccupied()
		resolvePolyCollision()
		pointCollision()
		callScriptedEntity()
		collisionBlocksAlongLine()
		containerStackItems()
		objectSpaces()
		containerConsume()
		spawnStagehand()
		spawnProjectile()
		stagehandType()
		entityQuery()
		lineTileCollision()
		containerSwapItemsNoCombine()
		liquidAlongLine()
		playerQuery()
		objectQuery()
		entityGender()
		rectCollision()
		containerItemAt()
		polyContains()
		containerTakeAt()
		magnitude()
		mod()
		containerSwapItems()
		isNpc()
		lineCollision()
		getObjectParameter()
		debugPoint()
		pointTileCollision()
		containerItemsFitWhere()
		containerAvailable()
		getProperty()
		containerItems()
		threatLevel()
		entityType()
		sendEntityMessage()
		material()
		liquidAt()
		containerSize()
		debugText()
		monsterType()
		entityMoney()
		nearestTo()
		npcLineQuery()
		entityPortrait()
		entityName()
		entityDamageTeam()
		containerConsumeAt()
		entityAggressive()
		windLevel()
		monsterQuery()
		entityExists()
		loungeableQuery()
		npcQuery()
		entityLineQuery()
	}
	root = {
		createBiome()
		imageSpaces()
		createItem()
		loadVersionedJson()
		createTreasure()
		getMatchingTenants()
		monsterSkillParameter()
		getConfiguration()
		npcVariant()
		itemHasTag()
		imageSize()
		projectileGravityMultiplier()
		nonEmptyRegion()
		evalFunction2()
		projectileConfig()
		materialMiningSound()
		generateName()
		isTreasurePool()
		hasTech()
		behaviorModule()
		itemConfig()
		treeStemDirectory()
		evalFunction()
		techConfig()
		npcConfig()
		setConfigurationPath()
		getConfigurationPath()
		materialHealth()
		materialFootstepSound()
		monsterMovementSettings()
		materialPath()
		setConfiguration()
		monsterPortrait()
		itemType()
		questConfig()
		recipesForItem()
		assetJson()
		treeFoliageDirectory()
		techType()
		liquidStatusEffects()
		makeCurrentVersionedJson()
		itemTags()
		tenantConfig()
		npcPortrait()
	}
	jsize()
	status = {
		setResourceLocked()
		resourcePercentage()
		addPersistentEffects()
		removeEphemeralEffect()
		resource()
		setResourcePercentage()
		resourcePositive()
		damageTakenSince()
		statPositive()
		stat()
		statusProperty()
		activeUniqueStatusEffectSummary()
		inflictedHitsSince()
		resourceMax()
		setStatusProperty()
		setPersistentEffects()
		resetAllResources()
		addEphemeralEffects()
		overConsumeResource()
		modifyResource()
		addEphemeralEffect()
		getPersistentEffects()
		resetResource()
		consumeResource()
		clearPersistentEffects()
		modifyResourcePercentage()
		clearEphemeralEffects()
		resourceNames()
		addPersistentEffect()
		resourceLocked()
		clearAllPersistentEffects()
		inflictedDamageSince()
		isResource()
		setResource()
		giveResource()
	}
	xpcall()
	getmetatable()
	utf8 = {
		len()
		codepoint()
		offset()
		codes()
		charpattern = "[
[23:03:16.798] [Warn] 	select()
	rawequal()
	rawset()
	string = {
		gmatch()
		char()
		sub()
		unpack()
		upper()
		lower()
		find()
		rep()
		dump()
		len()
		reverse()
		packsize()
		pack()
		byte()
		match()
		format()
		gsub()
	}
	require()
	pairs()
	next()
	jobject()
	math = {
		pi = 3.1415926535898
		rad()
		max()
		sqrt()
		random()
		floor()
		log()
		acos()
		fmod()
		mininteger = -9223372036854775808
		type()
		huge = inf
		randomseed()
		deg()
		exp()
		maxinteger = 9223372036854775807
		cos()
		min()
		tointeger()
		modf()
		asin()
		tan()
		atan()
		abs()
		sin()
		ult()
		ceil()
	}
	print()
	pcall()
	type()
	init()
	setmetatable()
	jresize()
	ic = {
		checkStack()
		itemAmount()
		stripColor()
		quickstack()
		itemConfig()
		amountEquipped()
		sortFunc()
		lock()
		giveBack()
		renameThis()
		sort()
		searchBox()
		sort_relative()
		clientVersion = 1
		renameButton()
		searchButton()
		getQuality()
	}
	player = {
		equippedTech()
		altHandItem()
		giveEssentialItem()
		consumeTaggedItem()
		setUniverseFlag()
		species()
		itemsWithTag()
		worldId()
		warp()
		completeMission()
		inventoryTags()
		upgradeShip()
		hasQuest()
		consumeItem()
		gender()
		primaryHandItem()
		essentialItem()
		equippedItem()
		setIntroComplete()
		playTime()
		enabledTechs()
		recordEvent()
		playCinematic()
		introComplete()
		hasCompletedQuest()
		makeTechAvailable()
		consumeItemWithParameter()
		startQuest()
		hasItemWithParameter()
		getItemWithParameter()
		lounge()
		enableTech()
		equipTech()
		enableMission()
		removeEssentialItem()
		isLounging()
		availableTechs()
		primaryHandItemTags()
		makeTechUnavailable()
		confirm()
		serverUuid()
		addBookmark()
		altHandItemTags()
		cleanupItems()
		radioMessage()
		setEquippedItem()
		ownShipWorldId()
		hasItem()
		canStartQuest()
		giveBlueprint()
		hasCountOfItem()
		shipUpgrades()
		giveItem()
	}
	config = {
		getParameter()
	}
	self = {
	}
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	world = {
		spawnItem()
		entityPosition()
		entityHealth()
		damageTileArea()
		day()
		placeMaterial()
		entityDescription()
		containerPutItemsAt()
		entityVelocity()
		damageTiles()
		entityHandItem()
		objectAt()
		setProperty()
		containerItemApply()
		containerClose()
		distance()
		findUniqueEntity()
		gravity()
		rectTileCollision()
		entitySpecies()
		platformerPathStart()
		containerOpen()
		containerTakeAll()
		breathable()
		npcType()
		containerAddItems()
		dayLength()
		loungeableOccupied()
		placeObject()
		isTileProtected()
		destroyLiquid()
		debugLine()
		spawnLiquid()
		entityCanDamage()
		containerItemsCanFit()
		xwrap()
		entityUniqueId()
		itemDropQuery()
		lightLevel()
		placeMod()
		spawnNpc()
		spawnTreasure()
		time()
		underground()
		spawnVehicle()
		spawnMonster()
		timeOfDay()
		findPlatformerPath()
		debugPoly()
		containerTakeNumItemsAt()
		isMonster()
		farmableStage()
		polyCollision()
		objectLineQuery()
		entityHasCountOfItem()
		entityHandItemDescriptor()
		tileIsOccupied()
		resolvePolyCollision()
		pointCollision()
		callScriptedEntity()
		collisionBlocksAlongLine()
		containerStackItems()
		objectSpaces()
		containerConsume()
		spawnStagehand()
		spawnProjectile()
		stagehandType()
		entityQuery()
		lineTileCollision()
		containerSwapItemsNoCombine()
		liquidAlongLine()
		playerQuery()
		objectQuery()
		entityGender()
		rectCollision()
		containerItemAt()
		polyContains()
		containerTakeAt()
		magnitude()
		mod()
		containerSwapItems()
		isNpc()
		lineCollision()
		getObjectParameter()
		debugPoint()
		pointTileCollision()
		containerItemsFitWhere()
		containerAvailable()
		getProperty()
		containerItems()
		threatLevel()
		entityType()
		sendEntityMessage()
		material()
		liquidAt()
		containerSize()
		debugText()
		monsterType()
		entityMoney()
		nearestTo()
		npcLineQuery()
		entityPortrait()
		entityName()
		entityDamageTeam()
		containerConsumeAt()
		entityAggressive()
		windLevel()
		monsterQuery()
		entityExists()
		loungeableQuery()
		npcQuery()
		entityLineQuery()
	}
	root = {
		createBiome()
		imageSpaces()
		createItem()
		loadVersionedJson()
		createTreasure()
		getMatchingTenants()
		monsterSkillParameter()
		getConfiguration()
		npcVariant()
		itemHasTag()
		imageSize()
		projectileGravityMultiplier()
		nonEmptyRegion()
		evalFunction2()
		projectileConfig()
		materialMiningSound()
		generateName()
		isTreasurePool()
		hasTech()
		behaviorModule()
		itemConfig()
		treeStemDirectory()
		evalFunction()
		techConfig()
		npcConfig()
		setConfigurationPath()
		getConfigurationPath()
		materialHealth()
		materialFootstepSound()
		monsterMovementSettings()
		materialPath()
		setConfiguration()
		monsterPortrait()
		itemType()
		questConfig()
		recipesForItem()
		assetJson()
		treeFoliageDirectory()
		techType()
		liquidStatusEffects()
		makeCurrentVersionedJson()
		itemTags()
		tenantConfig()
		npcPortrait()
	}
	jsize()
	status = {
		setResourceLocked()
		resourcePercentage()
		addPersistentEffects()
		removeEphemeralEffect()
		resource()
		setResourcePercentage()
		resourcePositive()
		damageTakenSince()
		statPositive()
		stat()
		statusProperty()
		activeUniqueStatusEffectSummary()
		inflictedHitsSince()
		resourceMax()
		setStatusProperty()
		setPersistentEffects()
		resetAllResources()
		addEphemeralEffects()
		overConsumeResource()
		modifyResource()
		addEphemeralEffect()
		getPersistentEffects()
		resetResource()
		consumeResource()
		clearPersistentEffects()
		modifyResourcePercentage()
		clearEphemeralEffects()
		resourceNames()
		addPersistentEffect()
		resourceLocked()
		clearAllPersistentEffects()
		inflictedDamageSince()
		isResource()
		setResource()
		giveResource()
	}
	xpcall()
	getmetatable()
	utf8 = {
		len()
		codepoint()
		offset()
		codes()
		charpattern = "[
[23:03:18.129] [Warn] 	select()
	rawequal()
	rawset()
	string = {
		gmatch()
		char()
		sub()
		unpack()
		upper()
		lower()
		find()
		rep()
		dump()
		len()
		reverse()
		packsize()
		pack()
		byte()
		match()
		format()
		gsub()
	}
	require()
	pairs()
	next()
	jobject()
	math = {
		pi = 3.1415926535898
		rad()
		max()
		sqrt()
		random()
		floor()
		log()
		acos()
		fmod()
		mininteger = -9223372036854775808
		type()
		huge = inf
		randomseed()
		deg()
		exp()
		maxinteger = 9223372036854775807
		cos()
		min()
		tointeger()
		modf()
		asin()
		tan()
		atan()
		abs()
		sin()
		ult()
		ceil()
	}
	print()
	pcall()
	type()
	init()
	setmetatable()
	jresize()
	ic = {
		checkStack()
		itemAmount()
		stripColor()
		quickstack()
		itemConfig()
		amountEquipped()
		sortFunc()
		lock()
		giveBack()
		renameThis()
		sort()
		searchBox()
		sort_relative()
		clientVersion = 1
		renameButton()
		searchButton()
		getQuality()
	}
	player = {
		equippedTech()
		altHandItem()
		giveEssentialItem()
		consumeTaggedItem()
		setUniverseFlag()
		species()
		itemsWithTag()
		worldId()
		warp()
		completeMission()
		inventoryTags()
		upgradeShip()
		hasQuest()
		consumeItem()
		gender()
		primaryHandItem()
		essentialItem()
		equippedItem()
		setIntroComplete()
		playTime()
		enabledTechs()
		recordEvent()
		playCinematic()
		introComplete()
		hasCompletedQuest()
		makeTechAvailable()
		consumeItemWithParameter()
		startQuest()
		hasItemWithParameter()
		getItemWithParameter()
		lounge()
		enableTech()
		equipTech()
		enableMission()
		removeEssentialItem()
		isLounging()
		availableTechs()
		primaryHandItemTags()
		makeTechUnavailable()
		confirm()
		serverUuid()
		addBookmark()
		altHandItemTags()
		cleanupItems()
		radioMessage()
		setEquippedItem()
		ownShipWorldId()
		hasItem()
		canStartQuest()
		giveBlueprint()
		hasCountOfItem()
		shipUpgrades()
		giveItem()
	}
	config = {
		getParameter()
	}
	self = {
	}
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	world = {
		spawnItem()
		entityPosition()
		entityHealth()
		damageTileArea()
		day()
		placeMaterial()
		entityDescription()
		containerPutItemsAt()
		entityVelocity()
		damageTiles()
		entityHandItem()
		objectAt()
		setProperty()
		containerItemApply()
		containerClose()
		distance()
		findUniqueEntity()
		gravity()
		rectTileCollision()
		entitySpecies()
		platformerPathStart()
		containerOpen()
		containerTakeAll()
		breathable()
		npcType()
		containerAddItems()
		dayLength()
		loungeableOccupied()
		placeObject()
		isTileProtected()
		destroyLiquid()
		debugLine()
		spawnLiquid()
		entityCanDamage()
		containerItemsCanFit()
		xwrap()
		entityUniqueId()
		itemDropQuery()
		lightLevel()
		placeMod()
		spawnNpc()
		spawnTreasure()
		time()
		underground()
		spawnVehicle()
		spawnMonster()
		timeOfDay()
		findPlatformerPath()
		debugPoly()
		containerTakeNumItemsAt()
		isMonster()
		farmableStage()
		polyCollision()
		objectLineQuery()
		entityHasCountOfItem()
		entityHandItemDescriptor()
		tileIsOccupied()
		resolvePolyCollision()
		pointCollision()
		callScriptedEntity()
		collisionBlocksAlongLine()
		containerStackItems()
		objectSpaces()
		containerConsume()
		spawnStagehand()
		spawnProjectile()
		stagehandType()
		entityQuery()
		lineTileCollision()
		containerSwapItemsNoCombine()
		liquidAlongLine()
		playerQuery()
		objectQuery()
		entityGender()
		rectCollision()
		containerItemAt()
		polyContains()
		containerTakeAt()
		magnitude()
		mod()
		containerSwapItems()
		isNpc()
		lineCollision()
		getObjectParameter()
		debugPoint()
		pointTileCollision()
		containerItemsFitWhere()
		containerAvailable()
		getProperty()
		containerItems()
		threatLevel()
		entityType()
		sendEntityMessage()
		material()
		liquidAt()
		containerSize()
		debugText()
		monsterType()
		entityMoney()
		nearestTo()
		npcLineQuery()
		entityPortrait()
		entityName()
		entityDamageTeam()
		containerConsumeAt()
		entityAggressive()
		windLevel()
		monsterQuery()
		entityExists()
		loungeableQuery()
		npcQuery()
		entityLineQuery()
	}
	root = {
		createBiome()
		imageSpaces()
		createItem()
		loadVersionedJson()
		createTreasure()
		getMatchingTenants()
		monsterSkillParameter()
		getConfiguration()
		npcVariant()
		itemHasTag()
		imageSize()
		projectileGravityMultiplier()
		nonEmptyRegion()
		evalFunction2()
		projectileConfig()
		materialMiningSound()
		generateName()
		isTreasurePool()
		hasTech()
		behaviorModule()
		itemConfig()
		treeStemDirectory()
		evalFunction()
		techConfig()
		npcConfig()
		setConfigurationPath()
		getConfigurationPath()
		materialHealth()
		materialFootstepSound()
		monsterMovementSettings()
		materialPath()
		setConfiguration()
		monsterPortrait()
		itemType()
		questConfig()
		recipesForItem()
		assetJson()
		treeFoliageDirectory()
		techType()
		liquidStatusEffects()
		makeCurrentVersionedJson()
		itemTags()
		tenantConfig()
		npcPortrait()
	}
	jsize()
	status = {
		setResourceLocked()
		resourcePercentage()
		addPersistentEffects()
		removeEphemeralEffect()
		resource()
		setResourcePercentage()
		resourcePositive()
		damageTakenSince()
		statPositive()
		stat()
		statusProperty()
		activeUniqueStatusEffectSummary()
		inflictedHitsSince()
		resourceMax()
		setStatusProperty()
		setPersistentEffects()
		resetAllResources()
		addEphemeralEffects()
		overConsumeResource()
		modifyResource()
		addEphemeralEffect()
		getPersistentEffects()
		resetResource()
		consumeResource()
		clearPersistentEffects()
		modifyResourcePercentage()
		clearEphemeralEffects()
		resourceNames()
		addPersistentEffect()
		resourceLocked()
		clearAllPersistentEffects()
		inflictedDamageSince()
		isResource()
		setResource()
		giveResource()
	}
	xpcall()
	getmetatable()
	utf8 = {
		len()
		codepoint()
		offset()
		codes()
		charpattern = "[
[23:03:19.255] [Warn] 	select()
	rawequal()
	rawset()
	string = {
		gmatch()
		char()
		sub()
		unpack()
		upper()
		lower()
		find()
		rep()
		dump()
		len()
		reverse()
		packsize()
		pack()
		byte()
		match()
		format()
		gsub()
	}
	require()
	pairs()
	next()
	jobject()
	math = {
		pi = 3.1415926535898
		rad()
		max()
		sqrt()
		random()
		floor()
		log()
		acos()
		fmod()
		mininteger = -9223372036854775808
		type()
		huge = inf
		randomseed()
		deg()
		exp()
		maxinteger = 9223372036854775807
		cos()
		min()
		tointeger()
		modf()
		asin()
		tan()
		atan()
		abs()
		sin()
		ult()
		ceil()
	}
	print()
	pcall()
	type()
	init()
	setmetatable()
	jresize()
	ic = {
		checkStack()
		itemAmount()
		stripColor()
		quickstack()
		itemConfig()
		amountEquipped()
		sortFunc()
		lock()
		giveBack()
		renameThis()
		sort()
		searchBox()
		sort_relative()
		clientVersion = 1
		renameButton()
		searchButton()
		getQuality()
	}
	player = {
		equippedTech()
		altHandItem()
		giveEssentialItem()
		consumeTaggedItem()
		setUniverseFlag()
		species()
		itemsWithTag()
		worldId()
		warp()
		completeMission()
		inventoryTags()
		upgradeShip()
		hasQuest()
		consumeItem()
		gender()
		primaryHandItem()
		essentialItem()
		equippedItem()
		setIntroComplete()
		playTime()
		enabledTechs()
		recordEvent()
		playCinematic()
		introComplete()
		hasCompletedQuest()
		makeTechAvailable()
		consumeItemWithParameter()
		startQuest()
		hasItemWithParameter()
		getItemWithParameter()
		lounge()
		enableTech()
		equipTech()
		enableMission()
		removeEssentialItem()
		isLounging()
		availableTechs()
		primaryHandItemTags()
		makeTechUnavailable()
		confirm()
		serverUuid()
		addBookmark()
		altHandItemTags()
		cleanupItems()
		radioMessage()
		setEquippedItem()
		ownShipWorldId()
		hasItem()
		canStartQuest()
		giveBlueprint()
		hasCountOfItem()
		shipUpgrades()
		giveItem()
	}
	config = {
		getParameter()
	}
	self = {
	}
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	world = {
		spawnItem()
		entityPosition()
		entityHealth()
		damageTileArea()
		day()
		placeMaterial()
		entityDescription()
		containerPutItemsAt()
		entityVelocity()
		damageTiles()
		entityHandItem()
		objectAt()
		setProperty()
		containerItemApply()
		containerClose()
		distance()
		findUniqueEntity()
		gravity()
		rectTileCollision()
		entitySpecies()
		platformerPathStart()
		containerOpen()
		containerTakeAll()
		breathable()
		npcType()
		containerAddItems()
		dayLength()
		loungeableOccupied()
		placeObject()
		isTileProtected()
		destroyLiquid()
		debugLine()
		spawnLiquid()
		entityCanDamage()
		containerItemsCanFit()
		xwrap()
		entityUniqueId()
		itemDropQuery()
		lightLevel()
		placeMod()
		spawnNpc()
		spawnTreasure()
		time()
		underground()
		spawnVehicle()
		spawnMonster()
		timeOfDay()
		findPlatformerPath()
		debugPoly()
		containerTakeNumItemsAt()
		isMonster()
		farmableStage()
		polyCollision()
		objectLineQuery()
		entityHasCountOfItem()
		entityHandItemDescriptor()
		tileIsOccupied()
		resolvePolyCollision()
		pointCollision()
		callScriptedEntity()
		collisionBlocksAlongLine()
		containerStackItems()
		objectSpaces()
		containerConsume()
		spawnStagehand()
		spawnProjectile()
		stagehandType()
		entityQuery()
		lineTileCollision()
		containerSwapItemsNoCombine()
		liquidAlongLine()
		playerQuery()
		objectQuery()
		entityGender()
		rectCollision()
		containerItemAt()
		polyContains()
		containerTakeAt()
		magnitude()
		mod()
		containerSwapItems()
		isNpc()
		lineCollision()
		getObjectParameter()
		debugPoint()
		pointTileCollision()
		containerItemsFitWhere()
		containerAvailable()
		getProperty()
		containerItems()
		threatLevel()
		entityType()
		sendEntityMessage()
		material()
		liquidAt()
		containerSize()
		debugText()
		monsterType()
		entityMoney()
		nearestTo()
		npcLineQuery()
		entityPortrait()
		entityName()
		entityDamageTeam()
		containerConsumeAt()
		entityAggressive()
		windLevel()
		monsterQuery()
		entityExists()
		loungeableQuery()
		npcQuery()
		entityLineQuery()
	}
	root = {
		createBiome()
		imageSpaces()
		createItem()
		loadVersionedJson()
		createTreasure()
		getMatchingTenants()
		monsterSkillParameter()
		getConfiguration()
		npcVariant()
		itemHasTag()
		imageSize()
		projectileGravityMultiplier()
		nonEmptyRegion()
		evalFunction2()
		projectileConfig()
		materialMiningSound()
		generateName()
		isTreasurePool()
		hasTech()
		behaviorModule()
		itemConfig()
		treeStemDirectory()
		evalFunction()
		techConfig()
		npcConfig()
		setConfigurationPath()
		getConfigurationPath()
		materialHealth()
		materialFootstepSound()
		monsterMovementSettings()
		materialPath()
		setConfiguration()
		monsterPortrait()
		itemType()
		questConfig()
		recipesForItem()
		assetJson()
		treeFoliageDirectory()
		techType()
		liquidStatusEffects()
		makeCurrentVersionedJson()
		itemTags()
		tenantConfig()
		npcPortrait()
	}
	jsize()
	status = {
		setResourceLocked()
		resourcePercentage()
		addPersistentEffects()
		removeEphemeralEffect()
		resource()
		setResourcePercentage()
		resourcePositive()
		damageTakenSince()
		statPositive()
		stat()
		statusProperty()
		activeUniqueStatusEffectSummary()
		inflictedHitsSince()
		resourceMax()
		setStatusProperty()
		setPersistentEffects()
		resetAllResources()
		addEphemeralEffects()
		overConsumeResource()
		modifyResource()
		addEphemeralEffect()
		getPersistentEffects()
		resetResource()
		consumeResource()
		clearPersistentEffects()
		modifyResourcePercentage()
		clearEphemeralEffects()
		resourceNames()
		addPersistentEffect()
		resourceLocked()
		clearAllPersistentEffects()
		inflictedDamageSince()
		isResource()
		setResource()
		giveResource()
	}
	xpcall()
	getmetatable()
	utf8 = {
		len()
		codepoint()
		offset()
		codes()
		charpattern = "[
[23:03:20.412] [Warn] 	select()
	rawequal()
	rawset()
	string = {
		gmatch()
		char()
		sub()
		unpack()
		upper()
		lower()
		find()
		rep()
		dump()
		len()
		reverse()
		packsize()
		pack()
		byte()
		match()
		format()
		gsub()
	}
	require()
	pairs()
	next()
	jobject()
	math = {
		pi = 3.1415926535898
		rad()
		max()
		sqrt()
		random()
		floor()
		log()
		acos()
		fmod()
		mininteger = -9223372036854775808
		type()
		huge = inf
		randomseed()
		deg()
		exp()
		maxinteger = 9223372036854775807
		cos()
		min()
		tointeger()
		modf()
		asin()
		tan()
		atan()
		abs()
		sin()
		ult()
		ceil()
	}
	print()
	pcall()
	type()
	init()
	setmetatable()
	jresize()
	ic = {
		checkStack()
		itemAmount()
		stripColor()
		quickstack()
		itemConfig()
		amountEquipped()
		sortFunc()
		lock()
		giveBack()
		renameThis()
		sort()
		searchBox()
		sort_relative()
		clientVersion = 1
		renameButton()
		searchButton()
		getQuality()
	}
	player = {
		equippedTech()
		altHandItem()
		giveEssentialItem()
		consumeTaggedItem()
		setUniverseFlag()
		species()
		itemsWithTag()
		worldId()
		warp()
		completeMission()
		inventoryTags()
		upgradeShip()
		hasQuest()
		consumeItem()
		gender()
		primaryHandItem()
		essentialItem()
		equippedItem()
		setIntroComplete()
		playTime()
		enabledTechs()
		recordEvent()
		playCinematic()
		introComplete()
		hasCompletedQuest()
		makeTechAvailable()
		consumeItemWithParameter()
		startQuest()
		hasItemWithParameter()
		getItemWithParameter()
		lounge()
		enableTech()
		equipTech()
		enableMission()
		removeEssentialItem()
		isLounging()
		availableTechs()
		primaryHandItemTags()
		makeTechUnavailable()
		confirm()
		serverUuid()
		addBookmark()
		altHandItemTags()
		cleanupItems()
		radioMessage()
		setEquippedItem()
		ownShipWorldId()
		hasItem()
		canStartQuest()
		giveBlueprint()
		hasCountOfItem()
		shipUpgrades()
		giveItem()
	}
	config = {
		getParameter()
	}
	self = {
	}
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	world = {
		spawnItem()
		entityPosition()
		entityHealth()
		damageTileArea()
		day()
		placeMaterial()
		entityDescription()
		containerPutItemsAt()
		entityVelocity()
		damageTiles()
		entityHandItem()
		objectAt()
		setProperty()
		containerItemApply()
		containerClose()
		distance()
		findUniqueEntity()
		gravity()
		rectTileCollision()
		entitySpecies()
		platformerPathStart()
		containerOpen()
		containerTakeAll()
		breathable()
		npcType()
		containerAddItems()
		dayLength()
		loungeableOccupied()
		placeObject()
		isTileProtected()
		destroyLiquid()
		debugLine()
		spawnLiquid()
		entityCanDamage()
		containerItemsCanFit()
		xwrap()
		entityUniqueId()
		itemDropQuery()
		lightLevel()
		placeMod()
		spawnNpc()
		spawnTreasure()
		time()
		underground()
		spawnVehicle()
		spawnMonster()
		timeOfDay()
		findPlatformerPath()
		debugPoly()
		containerTakeNumItemsAt()
		isMonster()
		farmableStage()
		polyCollision()
		objectLineQuery()
		entityHasCountOfItem()
		entityHandItemDescriptor()
		tileIsOccupied()
		resolvePolyCollision()
		pointCollision()
		callScriptedEntity()
		collisionBlocksAlongLine()
		containerStackItems()
		objectSpaces()
		containerConsume()
		spawnStagehand()
		spawnProjectile()
		stagehandType()
		entityQuery()
		lineTileCollision()
		containerSwapItemsNoCombine()
		liquidAlongLine()
		playerQuery()
		objectQuery()
		entityGender()
		rectCollision()
		containerItemAt()
		polyContains()
		containerTakeAt()
		magnitude()
		mod()
		containerSwapItems()
		isNpc()
		lineCollision()
		getObjectParameter()
		debugPoint()
		pointTileCollision()
		containerItemsFitWhere()
		containerAvailable()
		getProperty()
		containerItems()
		threatLevel()
		entityType()
		sendEntityMessage()
		material()
		liquidAt()
		containerSize()
		debugText()
		monsterType()
		entityMoney()
		nearestTo()
		npcLineQuery()
		entityPortrait()
		entityName()
		entityDamageTeam()
		containerConsumeAt()
		entityAggressive()
		windLevel()
		monsterQuery()
		entityExists()
		loungeableQuery()
		npcQuery()
		entityLineQuery()
	}
	root = {
		createBiome()
		imageSpaces()
		createItem()
		loadVersionedJson()
		createTreasure()
		getMatchingTenants()
		monsterSkillParameter()
		getConfiguration()
		npcVariant()
		itemHasTag()
		imageSize()
		projectileGravityMultiplier()
		nonEmptyRegion()
		evalFunction2()
		projectileConfig()
		materialMiningSound()
		generateName()
		isTreasurePool()
		hasTech()
		behaviorModule()
		itemConfig()
		treeStemDirectory()
		evalFunction()
		techConfig()
		npcConfig()
		setConfigurationPath()
		getConfigurationPath()
		materialHealth()
		materialFootstepSound()
		monsterMovementSettings()
		materialPath()
		setConfiguration()
		monsterPortrait()
		itemType()
		questConfig()
		recipesForItem()
		assetJson()
		treeFoliageDirectory()
		techType()
		liquidStatusEffects()
		makeCurrentVersionedJson()
		itemTags()
		tenantConfig()
		npcPortrait()
	}
	jsize()
	status = {
		setResourceLocked()
		resourcePercentage()
		addPersistentEffects()
		removeEphemeralEffect()
		resource()
		setResourcePercentage()
		resourcePositive()
		damageTakenSince()
		statPositive()
		stat()
		statusProperty()
		activeUniqueStatusEffectSummary()
		inflictedHitsSince()
		resourceMax()
		setStatusProperty()
		setPersistentEffects()
		resetAllResources()
		addEphemeralEffects()
		overConsumeResource()
		modifyResource()
		addEphemeralEffect()
		getPersistentEffects()
		resetResource()
		consumeResource()
		clearPersistentEffects()
		modifyResourcePercentage()
		clearEphemeralEffects()
		resourceNames()
		addPersistentEffect()
		resourceLocked()
		clearAllPersistentEffects()
		inflictedDamageSince()
		isResource()
		setResource()
		giveResource()
	}
	xpcall()
	getmetatable()
	utf8 = {
		len()
		codepoint()
		offset()
		codes()
		charpattern = "[
[23:03:21.796] [Warn] 	select()
	rawequal()
	rawset()
	string = {
		gmatch()
		char()
		sub()
		unpack()
		upper()
		lower()
		find()
		rep()
		dump()
		len()
		reverse()
		packsize()
		pack()
		byte()
		match()
		format()
		gsub()
	}
	require()
	pairs()
	next()
	jobject()
	math = {
		pi = 3.1415926535898
		rad()
		max()
		sqrt()
		random()
		floor()
		log()
		acos()
		fmod()
		mininteger = -9223372036854775808
		type()
		huge = inf
		randomseed()
		deg()
		exp()
		maxinteger = 9223372036854775807
		cos()
		min()
		tointeger()
		modf()
		asin()
		tan()
		atan()
		abs()
		sin()
		ult()
		ceil()
	}
	print()
	pcall()
	type()
	init()
	setmetatable()
	jresize()
	ic = {
		checkStack()
		itemAmount()
		stripColor()
		quickstack()
		itemConfig()
		amountEquipped()
		sortFunc()
		lock()
		giveBack()
		renameThis()
		sort()
		searchBox()
		sort_relative()
		clientVersion = 1
		renameButton()
		searchButton()
		getQuality()
	}
	player = {
		equippedTech()
		altHandItem()
		giveEssentialItem()
		consumeTaggedItem()
		setUniverseFlag()
		species()
		itemsWithTag()
		worldId()
		warp()
		completeMission()
		inventoryTags()
		upgradeShip()
		hasQuest()
		consumeItem()
		gender()
		primaryHandItem()
		essentialItem()
		equippedItem()
		setIntroComplete()
		playTime()
		enabledTechs()
		recordEvent()
		playCinematic()
		introComplete()
		hasCompletedQuest()
		makeTechAvailable()
		consumeItemWithParameter()
		startQuest()
		hasItemWithParameter()
		getItemWithParameter()
		lounge()
		enableTech()
		equipTech()
		enableMission()
		removeEssentialItem()
		isLounging()
		availableTechs()
		primaryHandItemTags()
		makeTechUnavailable()
		confirm()
		serverUuid()
		addBookmark()
		altHandItemTags()
		cleanupItems()
		radioMessage()
		setEquippedItem()
		ownShipWorldId()
		hasItem()
		canStartQuest()
		giveBlueprint()
		hasCountOfItem()
		shipUpgrades()
		giveItem()
	}
	config = {
		getParameter()
	}
	self = {
	}
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	world = {
		spawnItem()
		entityPosition()
		entityHealth()
		damageTileArea()
		day()
		placeMaterial()
		entityDescription()
		containerPutItemsAt()
		entityVelocity()
		damageTiles()
		entityHandItem()
		objectAt()
		setProperty()
		containerItemApply()
		containerClose()
		distance()
		findUniqueEntity()
		gravity()
		rectTileCollision()
		entitySpecies()
		platformerPathStart()
		containerOpen()
		containerTakeAll()
		breathable()
		npcType()
		containerAddItems()
		dayLength()
		loungeableOccupied()
		placeObject()
		isTileProtected()
		destroyLiquid()
		debugLine()
		spawnLiquid()
		entityCanDamage()
		containerItemsCanFit()
		xwrap()
		entityUniqueId()
		itemDropQuery()
		lightLevel()
		placeMod()
		spawnNpc()
		spawnTreasure()
		time()
		underground()
		spawnVehicle()
		spawnMonster()
		timeOfDay()
		findPlatformerPath()
		debugPoly()
		containerTakeNumItemsAt()
		isMonster()
		farmableStage()
		polyCollision()
		objectLineQuery()
		entityHasCountOfItem()
		entityHandItemDescriptor()
		tileIsOccupied()
		resolvePolyCollision()
		pointCollision()
		callScriptedEntity()
		collisionBlocksAlongLine()
		containerStackItems()
		objectSpaces()
		containerConsume()
		spawnStagehand()
		spawnProjectile()
		stagehandType()
		entityQuery()
		lineTileCollision()
		containerSwapItemsNoCombine()
		liquidAlongLine()
		playerQuery()
		objectQuery()
		entityGender()
		rectCollision()
		containerItemAt()
		polyContains()
		containerTakeAt()
		magnitude()
		mod()
		containerSwapItems()
		isNpc()
		lineCollision()
		getObjectParameter()
		debugPoint()
		pointTileCollision()
		containerItemsFitWhere()
		containerAvailable()
		getProperty()
		containerItems()
		threatLevel()
		entityType()
		sendEntityMessage()
		material()
		liquidAt()
		containerSize()
		debugText()
		monsterType()
		entityMoney()
		nearestTo()
		npcLineQuery()
		entityPortrait()
		entityName()
		entityDamageTeam()
		containerConsumeAt()
		entityAggressive()
		windLevel()
		monsterQuery()
		entityExists()
		loungeableQuery()
		npcQuery()
		entityLineQuery()
	}
	root = {
		createBiome()
		imageSpaces()
		createItem()
		loadVersionedJson()
		createTreasure()
		getMatchingTenants()
		monsterSkillParameter()
		getConfiguration()
		npcVariant()
		itemHasTag()
		imageSize()
		projectileGravityMultiplier()
		nonEmptyRegion()
		evalFunction2()
		projectileConfig()
		materialMiningSound()
		generateName()
		isTreasurePool()
		hasTech()
		behaviorModule()
		itemConfig()
		treeStemDirectory()
		evalFunction()
		techConfig()
		npcConfig()
		setConfigurationPath()
		getConfigurationPath()
		materialHealth()
		materialFootstepSound()
		monsterMovementSettings()
		materialPath()
		setConfiguration()
		monsterPortrait()
		itemType()
		questConfig()
		recipesForItem()
		assetJson()
		treeFoliageDirectory()
		techType()
		liquidStatusEffects()
		makeCurrentVersionedJson()
		itemTags()
		tenantConfig()
		npcPortrait()
	}
	jsize()
	status = {
		setResourceLocked()
		resourcePercentage()
		addPersistentEffects()
		removeEphemeralEffect()
		resource()
		setResourcePercentage()
		resourcePositive()
		damageTakenSince()
		statPositive()
		stat()
		statusProperty()
		activeUniqueStatusEffectSummary()
		inflictedHitsSince()
		resourceMax()
		setStatusProperty()
		setPersistentEffects()
		resetAllResources()
		addEphemeralEffects()
		overConsumeResource()
		modifyResource()
		addEphemeralEffect()
		getPersistentEffects()
		resetResource()
		consumeResource()
		clearPersistentEffects()
		modifyResourcePercentage()
		clearEphemeralEffects()
		resourceNames()
		addPersistentEffect()
		resourceLocked()
		clearAllPersistentEffects()
		inflictedDamageSince()
		isResource()
		setResource()
		giveResource()
	}
	xpcall()
	getmetatable()
	utf8 = {
		len()
		codepoint()
		offset()
		codes()
		charpattern = "[
[23:05:07.105] [Warn] 	select()
	rawequal()
	rawset()
	string = {
		gmatch()
		char()
		sub()
		unpack()
		upper()
		lower()
		find()
		rep()
		dump()
		len()
		reverse()
		packsize()
		pack()
		byte()
		match()
		format()
		gsub()
	}
	require()
	pairs()
	next()
	jobject()
	math = {
		pi = 3.1415926535898
		rad()
		max()
		sqrt()
		random()
		floor()
		log()
		acos()
		fmod()
		mininteger = -9223372036854775808
		type()
		huge = inf
		randomseed()
		deg()
		exp()
		maxinteger = 9223372036854775807
		cos()
		min()
		tointeger()
		modf()
		asin()
		tan()
		atan()
		abs()
		sin()
		ult()
		ceil()
	}
	print()
	pcall()
	type()
	init()
	setmetatable()
	jresize()
	ic = {
		checkStack()
		itemAmount()
		stripColor()
		quickstack()
		itemConfig()
		amountEquipped()
		sortFunc()
		lock()
		giveBack()
		renameThis()
		sort()
		searchBox()
		sort_relative()
		clientVersion = 1
		renameButton()
		searchButton()
		getQuality()
	}
	player = {
		equippedTech()
		altHandItem()
		giveEssentialItem()
		consumeTaggedItem()
		setUniverseFlag()
		species()
		itemsWithTag()
		worldId()
		warp()
		completeMission()
		inventoryTags()
		upgradeShip()
		hasQuest()
		consumeItem()
		gender()
		primaryHandItem()
		essentialItem()
		equippedItem()
		setIntroComplete()
		playTime()
		enabledTechs()
		recordEvent()
		playCinematic()
		introComplete()
		hasCompletedQuest()
		makeTechAvailable()
		consumeItemWithParameter()
		startQuest()
		hasItemWithParameter()
		getItemWithParameter()
		lounge()
		enableTech()
		equipTech()
		enableMission()
		removeEssentialItem()
		isLounging()
		availableTechs()
		primaryHandItemTags()
		makeTechUnavailable()
		confirm()
		serverUuid()
		addBookmark()
		altHandItemTags()
		cleanupItems()
		radioMessage()
		setEquippedItem()
		ownShipWorldId()
		hasItem()
		canStartQuest()
		giveBlueprint()
		hasCountOfItem()
		shipUpgrades()
		giveItem()
	}
	config = {
		getParameter()
	}
	self = {
	}
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	world = {
		spawnItem()
		entityPosition()
		entityHealth()
		damageTileArea()
		day()
		placeMaterial()
		entityDescription()
		containerPutItemsAt()
		entityVelocity()
		damageTiles()
		entityHandItem()
		objectAt()
		setProperty()
		containerItemApply()
		containerClose()
		distance()
		findUniqueEntity()
		gravity()
		rectTileCollision()
		entitySpecies()
		platformerPathStart()
		containerOpen()
		containerTakeAll()
		breathable()
		npcType()
		containerAddItems()
		dayLength()
		loungeableOccupied()
		placeObject()
		isTileProtected()
		destroyLiquid()
		debugLine()
		spawnLiquid()
		entityCanDamage()
		containerItemsCanFit()
		xwrap()
		entityUniqueId()
		itemDropQuery()
		lightLevel()
		placeMod()
		spawnNpc()
		spawnTreasure()
		time()
		underground()
		spawnVehicle()
		spawnMonster()
		timeOfDay()
		findPlatformerPath()
		debugPoly()
		containerTakeNumItemsAt()
		isMonster()
		farmableStage()
		polyCollision()
		objectLineQuery()
		entityHasCountOfItem()
		entityHandItemDescriptor()
		tileIsOccupied()
		resolvePolyCollision()
		pointCollision()
		callScriptedEntity()
		collisionBlocksAlongLine()
		containerStackItems()
		objectSpaces()
		containerConsume()
		spawnStagehand()
		spawnProjectile()
		stagehandType()
		entityQuery()
		lineTileCollision()
		containerSwapItemsNoCombine()
		liquidAlongLine()
		playerQuery()
		objectQuery()
		entityGender()
		rectCollision()
		containerItemAt()
		polyContains()
		containerTakeAt()
		magnitude()
		mod()
		containerSwapItems()
		isNpc()
		lineCollision()
		getObjectParameter()
		debugPoint()
		pointTileCollision()
		containerItemsFitWhere()
		containerAvailable()
		getProperty()
		containerItems()
		threatLevel()
		entityType()
		sendEntityMessage()
		material()
		liquidAt()
		containerSize()
		debugText()
		monsterType()
		entityMoney()
		nearestTo()
		npcLineQuery()
		entityPortrait()
		entityName()
		entityDamageTeam()
		containerConsumeAt()
		entityAggressive()
		windLevel()
		monsterQuery()
		entityExists()
		loungeableQuery()
		npcQuery()
		entityLineQuery()
	}
	root = {
		createBiome()
		imageSpaces()
		createItem()
		loadVersionedJson()
		createTreasure()
		getMatchingTenants()
		monsterSkillParameter()
		getConfiguration()
		npcVariant()
		itemHasTag()
		imageSize()
		projectileGravityMultiplier()
		nonEmptyRegion()
		evalFunction2()
		projectileConfig()
		materialMiningSound()
		generateName()
		isTreasurePool()
		hasTech()
		behaviorModule()
		itemConfig()
		treeStemDirectory()
		evalFunction()
		techConfig()
		npcConfig()
		setConfigurationPath()
		getConfigurationPath()
		materialHealth()
		materialFootstepSound()
		monsterMovementSettings()
		materialPath()
		setConfiguration()
		monsterPortrait()
		itemType()
		questConfig()
		recipesForItem()
		assetJson()
		treeFoliageDirectory()
		techType()
		liquidStatusEffects()
		makeCurrentVersionedJson()
		itemTags()
		tenantConfig()
		npcPortrait()
	}
	jsize()
	status = {
		setResourceLocked()
		resourcePercentage()
		addPersistentEffects()
		removeEphemeralEffect()
		resource()
		setResourcePercentage()
		resourcePositive()
		damageTakenSince()
		statPositive()
		stat()
		statusProperty()
		activeUniqueStatusEffectSummary()
		inflictedHitsSince()
		resourceMax()
		setStatusProperty()
		setPersistentEffects()
		resetAllResources()
		addEphemeralEffects()
		overConsumeResource()
		modifyResource()
		addEphemeralEffect()
		getPersistentEffects()
		resetResource()
		consumeResource()
		clearPersistentEffects()
		modifyResourcePercentage()
		clearEphemeralEffects()
		resourceNames()
		addPersistentEffect()
		resourceLocked()
		clearAllPersistentEffects()
		inflictedDamageSince()
		isResource()
		setResource()
		giveResource()
	}
	xpcall()
	getmetatable()
	utf8 = {
		len()
		codepoint()
		offset()
		codes()
		charpattern = "[
[23:05:08.115] [Warn] 	select()
	rawequal()
	rawset()
	string = {
		gmatch()
		char()
		sub()
		unpack()
		upper()
		lower()
		find()
		rep()
		dump()
		len()
		reverse()
		packsize()
		pack()
		byte()
		match()
		format()
		gsub()
	}
	require()
	pairs()
	next()
	jobject()
	math = {
		pi = 3.1415926535898
		rad()
		max()
		sqrt()
		random()
		floor()
		log()
		acos()
		fmod()
		mininteger = -9223372036854775808
		type()
		huge = inf
		randomseed()
		deg()
		exp()
		maxinteger = 9223372036854775807
		cos()
		min()
		tointeger()
		modf()
		asin()
		tan()
		atan()
		abs()
		sin()
		ult()
		ceil()
	}
	print()
	pcall()
	type()
	init()
	setmetatable()
	jresize()
	ic = {
		checkStack()
		itemAmount()
		stripColor()
		quickstack()
		itemConfig()
		amountEquipped()
		sortFunc()
		lock()
		giveBack()
		renameThis()
		sort()
		searchBox()
		sort_relative()
		clientVersion = 1
		renameButton()
		searchButton()
		getQuality()
	}
	player = {
		equippedTech()
		altHandItem()
		giveEssentialItem()
		consumeTaggedItem()
		setUniverseFlag()
		species()
		itemsWithTag()
		worldId()
		warp()
		completeMission()
		inventoryTags()
		upgradeShip()
		hasQuest()
		consumeItem()
		gender()
		primaryHandItem()
		essentialItem()
		equippedItem()
		setIntroComplete()
		playTime()
		enabledTechs()
		recordEvent()
		playCinematic()
		introComplete()
		hasCompletedQuest()
		makeTechAvailable()
		consumeItemWithParameter()
		startQuest()
		hasItemWithParameter()
		getItemWithParameter()
		lounge()
		enableTech()
		equipTech()
		enableMission()
		removeEssentialItem()
		isLounging()
		availableTechs()
		primaryHandItemTags()
		makeTechUnavailable()
		confirm()
		serverUuid()
		addBookmark()
		altHandItemTags()
		cleanupItems()
		radioMessage()
		setEquippedItem()
		ownShipWorldId()
		hasItem()
		canStartQuest()
		giveBlueprint()
		hasCountOfItem()
		shipUpgrades()
		giveItem()
	}
	config = {
		getParameter()
	}
	self = {
	}
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	world = {
		spawnItem()
		entityPosition()
		entityHealth()
		damageTileArea()
		day()
		placeMaterial()
		entityDescription()
		containerPutItemsAt()
		entityVelocity()
		damageTiles()
		entityHandItem()
		objectAt()
		setProperty()
		containerItemApply()
		containerClose()
		distance()
		findUniqueEntity()
		gravity()
		rectTileCollision()
		entitySpecies()
		platformerPathStart()
		containerOpen()
		containerTakeAll()
		breathable()
		npcType()
		containerAddItems()
		dayLength()
		loungeableOccupied()
		placeObject()
		isTileProtected()
		destroyLiquid()
		debugLine()
		spawnLiquid()
		entityCanDamage()
		containerItemsCanFit()
		xwrap()
		entityUniqueId()
		itemDropQuery()
		lightLevel()
		placeMod()
		spawnNpc()
		spawnTreasure()
		time()
		underground()
		spawnVehicle()
		spawnMonster()
		timeOfDay()
		findPlatformerPath()
		debugPoly()
		containerTakeNumItemsAt()
		isMonster()
		farmableStage()
		polyCollision()
		objectLineQuery()
		entityHasCountOfItem()
		entityHandItemDescriptor()
		tileIsOccupied()
		resolvePolyCollision()
		pointCollision()
		callScriptedEntity()
		collisionBlocksAlongLine()
		containerStackItems()
		objectSpaces()
		containerConsume()
		spawnStagehand()
		spawnProjectile()
		stagehandType()
		entityQuery()
		lineTileCollision()
		containerSwapItemsNoCombine()
		liquidAlongLine()
		playerQuery()
		objectQuery()
		entityGender()
		rectCollision()
		containerItemAt()
		polyContains()
		containerTakeAt()
		magnitude()
		mod()
		containerSwapItems()
		isNpc()
		lineCollision()
		getObjectParameter()
		debugPoint()
		pointTileCollision()
		containerItemsFitWhere()
		containerAvailable()
		getProperty()
		containerItems()
		threatLevel()
		entityType()
		sendEntityMessage()
		material()
		liquidAt()
		containerSize()
		debugText()
		monsterType()
		entityMoney()
		nearestTo()
		npcLineQuery()
		entityPortrait()
		entityName()
		entityDamageTeam()
		containerConsumeAt()
		entityAggressive()
		windLevel()
		monsterQuery()
		entityExists()
		loungeableQuery()
		npcQuery()
		entityLineQuery()
	}
	root = {
		createBiome()
		imageSpaces()
		createItem()
		loadVersionedJson()
		createTreasure()
		getMatchingTenants()
		monsterSkillParameter()
		getConfiguration()
		npcVariant()
		itemHasTag()
		imageSize()
		projectileGravityMultiplier()
		nonEmptyRegion()
		evalFunction2()
		projectileConfig()
		materialMiningSound()
		generateName()
		isTreasurePool()
		hasTech()
		behaviorModule()
		itemConfig()
		treeStemDirectory()
		evalFunction()
		techConfig()
		npcConfig()
		setConfigurationPath()
		getConfigurationPath()
		materialHealth()
		materialFootstepSound()
		monsterMovementSettings()
		materialPath()
		setConfiguration()
		monsterPortrait()
		itemType()
		questConfig()
		recipesForItem()
		assetJson()
		treeFoliageDirectory()
		techType()
		liquidStatusEffects()
		makeCurrentVersionedJson()
		itemTags()
		tenantConfig()
		npcPortrait()
	}
	jsize()
	status = {
		setResourceLocked()
		resourcePercentage()
		addPersistentEffects()
		removeEphemeralEffect()
		resource()
		setResourcePercentage()
		resourcePositive()
		damageTakenSince()
		statPositive()
		stat()
		statusProperty()
		activeUniqueStatusEffectSummary()
		inflictedHitsSince()
		resourceMax()
		setStatusProperty()
		setPersistentEffects()
		resetAllResources()
		addEphemeralEffects()
		overConsumeResource()
		modifyResource()
		addEphemeralEffect()
		getPersistentEffects()
		resetResource()
		consumeResource()
		clearPersistentEffects()
		modifyResourcePercentage()
		clearEphemeralEffects()
		resourceNames()
		addPersistentEffect()
		resourceLocked()
		clearAllPersistentEffects()
		inflictedDamageSince()
		isResource()
		setResource()
		giveResource()
	}
	xpcall()
	getmetatable()
	utf8 = {
		len()
		codepoint()
		offset()
		codes()
		charpattern = "[
[23:05:09.063] [Warn] 	select()
	rawequal()
	rawset()
	string = {
		gmatch()
		char()
		sub()
		unpack()
		upper()
		lower()
		find()
		rep()
		dump()
		len()
		reverse()
		packsize()
		pack()
		byte()
		match()
		format()
		gsub()
	}
	require()
	pairs()
	next()
	jobject()
	math = {
		pi = 3.1415926535898
		rad()
		max()
		sqrt()
		random()
		floor()
		log()
		acos()
		fmod()
		mininteger = -9223372036854775808
		type()
		huge = inf
		randomseed()
		deg()
		exp()
		maxinteger = 9223372036854775807
		cos()
		min()
		tointeger()
		modf()
		asin()
		tan()
		atan()
		abs()
		sin()
		ult()
		ceil()
	}
	print()
	pcall()
	type()
	init()
	setmetatable()
	jresize()
	ic = {
		checkStack()
		itemAmount()
		stripColor()
		quickstack()
		itemConfig()
		amountEquipped()
		sortFunc()
		lock()
		giveBack()
		renameThis()
		sort()
		searchBox()
		sort_relative()
		clientVersion = 1
		renameButton()
		searchButton()
		getQuality()
	}
	player = {
		equippedTech()
		altHandItem()
		giveEssentialItem()
		consumeTaggedItem()
		setUniverseFlag()
		species()
		itemsWithTag()
		worldId()
		warp()
		completeMission()
		inventoryTags()
		upgradeShip()
		hasQuest()
		consumeItem()
		gender()
		primaryHandItem()
		essentialItem()
		equippedItem()
		setIntroComplete()
		playTime()
		enabledTechs()
		recordEvent()
		playCinematic()
		introComplete()
		hasCompletedQuest()
		makeTechAvailable()
		consumeItemWithParameter()
		startQuest()
		hasItemWithParameter()
		getItemWithParameter()
		lounge()
		enableTech()
		equipTech()
		enableMission()
		removeEssentialItem()
		isLounging()
		availableTechs()
		primaryHandItemTags()
		makeTechUnavailable()
		confirm()
		serverUuid()
		addBookmark()
		altHandItemTags()
		cleanupItems()
		radioMessage()
		setEquippedItem()
		ownShipWorldId()
		hasItem()
		canStartQuest()
		giveBlueprint()
		hasCountOfItem()
		shipUpgrades()
		giveItem()
	}
	config = {
		getParameter()
	}
	self = {
	}
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	world = {
		spawnItem()
		entityPosition()
		entityHealth()
		damageTileArea()
		day()
		placeMaterial()
		entityDescription()
		containerPutItemsAt()
		entityVelocity()
		damageTiles()
		entityHandItem()
		objectAt()
		setProperty()
		containerItemApply()
		containerClose()
		distance()
		findUniqueEntity()
		gravity()
		rectTileCollision()
		entitySpecies()
		platformerPathStart()
		containerOpen()
		containerTakeAll()
		breathable()
		npcType()
		containerAddItems()
		dayLength()
		loungeableOccupied()
		placeObject()
		isTileProtected()
		destroyLiquid()
		debugLine()
		spawnLiquid()
		entityCanDamage()
		containerItemsCanFit()
		xwrap()
		entityUniqueId()
		itemDropQuery()
		lightLevel()
		placeMod()
		spawnNpc()
		spawnTreasure()
		time()
		underground()
		spawnVehicle()
		spawnMonster()
		timeOfDay()
		findPlatformerPath()
		debugPoly()
		containerTakeNumItemsAt()
		isMonster()
		farmableStage()
		polyCollision()
		objectLineQuery()
		entityHasCountOfItem()
		entityHandItemDescriptor()
		tileIsOccupied()
		resolvePolyCollision()
		pointCollision()
		callScriptedEntity()
		collisionBlocksAlongLine()
		containerStackItems()
		objectSpaces()
		containerConsume()
		spawnStagehand()
		spawnProjectile()
		stagehandType()
		entityQuery()
		lineTileCollision()
		containerSwapItemsNoCombine()
		liquidAlongLine()
		playerQuery()
		objectQuery()
		entityGender()
		rectCollision()
		containerItemAt()
		polyContains()
		containerTakeAt()
		magnitude()
		mod()
		containerSwapItems()
		isNpc()
		lineCollision()
		getObjectParameter()
		debugPoint()
		pointTileCollision()
		containerItemsFitWhere()
		containerAvailable()
		getProperty()
		containerItems()
		threatLevel()
		entityType()
		sendEntityMessage()
		material()
		liquidAt()
		containerSize()
		debugText()
		monsterType()
		entityMoney()
		nearestTo()
		npcLineQuery()
		entityPortrait()
		entityName()
		entityDamageTeam()
		containerConsumeAt()
		entityAggressive()
		windLevel()
		monsterQuery()
		entityExists()
		loungeableQuery()
		npcQuery()
		entityLineQuery()
	}
	root = {
		createBiome()
		imageSpaces()
		createItem()
		loadVersionedJson()
		createTreasure()
		getMatchingTenants()
		monsterSkillParameter()
		getConfiguration()
		npcVariant()
		itemHasTag()
		imageSize()
		projectileGravityMultiplier()
		nonEmptyRegion()
		evalFunction2()
		projectileConfig()
		materialMiningSound()
		generateName()
		isTreasurePool()
		hasTech()
		behaviorModule()
		itemConfig()
		treeStemDirectory()
		evalFunction()
		techConfig()
		npcConfig()
		setConfigurationPath()
		getConfigurationPath()
		materialHealth()
		materialFootstepSound()
		monsterMovementSettings()
		materialPath()
		setConfiguration()
		monsterPortrait()
		itemType()
		questConfig()
		recipesForItem()
		assetJson()
		treeFoliageDirectory()
		techType()
		liquidStatusEffects()
		makeCurrentVersionedJson()
		itemTags()
		tenantConfig()
		npcPortrait()
	}
	jsize()
	status = {
		setResourceLocked()
		resourcePercentage()
		addPersistentEffects()
		removeEphemeralEffect()
		resource()
		setResourcePercentage()
		resourcePositive()
		damageTakenSince()
		statPositive()
		stat()
		statusProperty()
		activeUniqueStatusEffectSummary()
		inflictedHitsSince()
		resourceMax()
		setStatusProperty()
		setPersistentEffects()
		resetAllResources()
		addEphemeralEffects()
		overConsumeResource()
		modifyResource()
		addEphemeralEffect()
		getPersistentEffects()
		resetResource()
		consumeResource()
		clearPersistentEffects()
		modifyResourcePercentage()
		clearEphemeralEffects()
		resourceNames()
		addPersistentEffect()
		resourceLocked()
		clearAllPersistentEffects()
		inflictedDamageSince()
		isResource()
		setResource()
		giveResource()
	}
	xpcall()
	getmetatable()
	utf8 = {
		len()
		codepoint()
		offset()
		codes()
		charpattern = "[
[23:05:10.098] [Warn] 	select()
	rawequal()
	rawset()
	string = {
		gmatch()
		char()
		sub()
		unpack()
		upper()
		lower()
		find()
		rep()
		dump()
		len()
		reverse()
		packsize()
		pack()
		byte()
		match()
		format()
		gsub()
	}
	require()
	pairs()
	next()
	jobject()
	math = {
		pi = 3.1415926535898
		rad()
		max()
		sqrt()
		random()
		floor()
		log()
		acos()
		fmod()
		mininteger = -9223372036854775808
		type()
		huge = inf
		randomseed()
		deg()
		exp()
		maxinteger = 9223372036854775807
		cos()
		min()
		tointeger()
		modf()
		asin()
		tan()
		atan()
		abs()
		sin()
		ult()
		ceil()
	}
	print()
	pcall()
	type()
	init()
	setmetatable()
	jresize()
	ic = {
		checkStack()
		itemAmount()
		stripColor()
		quickstack()
		itemConfig()
		amountEquipped()
		sortFunc()
		lock()
		giveBack()
		renameThis()
		sort()
		searchBox()
		sort_relative()
		clientVersion = 1
		renameButton()
		searchButton()
		getQuality()
	}
	player = {
		equippedTech()
		altHandItem()
		giveEssentialItem()
		consumeTaggedItem()
		setUniverseFlag()
		species()
		itemsWithTag()
		worldId()
		warp()
		completeMission()
		inventoryTags()
		upgradeShip()
		hasQuest()
		consumeItem()
		gender()
		primaryHandItem()
		essentialItem()
		equippedItem()
		setIntroComplete()
		playTime()
		enabledTechs()
		recordEvent()
		playCinematic()
		introComplete()
		hasCompletedQuest()
		makeTechAvailable()
		consumeItemWithParameter()
		startQuest()
		hasItemWithParameter()
		getItemWithParameter()
		lounge()
		enableTech()
		equipTech()
		enableMission()
		removeEssentialItem()
		isLounging()
		availableTechs()
		primaryHandItemTags()
		makeTechUnavailable()
		confirm()
		serverUuid()
		addBookmark()
		altHandItemTags()
		cleanupItems()
		radioMessage()
		setEquippedItem()
		ownShipWorldId()
		hasItem()
		canStartQuest()
		giveBlueprint()
		hasCountOfItem()
		shipUpgrades()
		giveItem()
	}
	config = {
		getParameter()
	}
	self = {
	}
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	world = {
		spawnItem()
		entityPosition()
		entityHealth()
		damageTileArea()
		day()
		placeMaterial()
		entityDescription()
		containerPutItemsAt()
		entityVelocity()
		damageTiles()
		entityHandItem()
		objectAt()
		setProperty()
		containerItemApply()
		containerClose()
		distance()
		findUniqueEntity()
		gravity()
		rectTileCollision()
		entitySpecies()
		platformerPathStart()
		containerOpen()
		containerTakeAll()
		breathable()
		npcType()
		containerAddItems()
		dayLength()
		loungeableOccupied()
		placeObject()
		isTileProtected()
		destroyLiquid()
		debugLine()
		spawnLiquid()
		entityCanDamage()
		containerItemsCanFit()
		xwrap()
		entityUniqueId()
		itemDropQuery()
		lightLevel()
		placeMod()
		spawnNpc()
		spawnTreasure()
		time()
		underground()
		spawnVehicle()
		spawnMonster()
		timeOfDay()
		findPlatformerPath()
		debugPoly()
		containerTakeNumItemsAt()
		isMonster()
		farmableStage()
		polyCollision()
		objectLineQuery()
		entityHasCountOfItem()
		entityHandItemDescriptor()
		tileIsOccupied()
		resolvePolyCollision()
		pointCollision()
		callScriptedEntity()
		collisionBlocksAlongLine()
		containerStackItems()
		objectSpaces()
		containerConsume()
		spawnStagehand()
		spawnProjectile()
		stagehandType()
		entityQuery()
		lineTileCollision()
		containerSwapItemsNoCombine()
		liquidAlongLine()
		playerQuery()
		objectQuery()
		entityGender()
		rectCollision()
		containerItemAt()
		polyContains()
		containerTakeAt()
		magnitude()
		mod()
		containerSwapItems()
		isNpc()
		lineCollision()
		getObjectParameter()
		debugPoint()
		pointTileCollision()
		containerItemsFitWhere()
		containerAvailable()
		getProperty()
		containerItems()
		threatLevel()
		entityType()
		sendEntityMessage()
		material()
		liquidAt()
		containerSize()
		debugText()
		monsterType()
		entityMoney()
		nearestTo()
		npcLineQuery()
		entityPortrait()
		entityName()
		entityDamageTeam()
		containerConsumeAt()
		entityAggressive()
		windLevel()
		monsterQuery()
		entityExists()
		loungeableQuery()
		npcQuery()
		entityLineQuery()
	}
	root = {
		createBiome()
		imageSpaces()
		createItem()
		loadVersionedJson()
		createTreasure()
		getMatchingTenants()
		monsterSkillParameter()
		getConfiguration()
		npcVariant()
		itemHasTag()
		imageSize()
		projectileGravityMultiplier()
		nonEmptyRegion()
		evalFunction2()
		projectileConfig()
		materialMiningSound()
		generateName()
		isTreasurePool()
		hasTech()
		behaviorModule()
		itemConfig()
		treeStemDirectory()
		evalFunction()
		techConfig()
		npcConfig()
		setConfigurationPath()
		getConfigurationPath()
		materialHealth()
		materialFootstepSound()
		monsterMovementSettings()
		materialPath()
		setConfiguration()
		monsterPortrait()
		itemType()
		questConfig()
		recipesForItem()
		assetJson()
		treeFoliageDirectory()
		techType()
		liquidStatusEffects()
		makeCurrentVersionedJson()
		itemTags()
		tenantConfig()
		npcPortrait()
	}
	jsize()
	status = {
		setResourceLocked()
		resourcePercentage()
		addPersistentEffects()
		removeEphemeralEffect()
		resource()
		setResourcePercentage()
		resourcePositive()
		damageTakenSince()
		statPositive()
		stat()
		statusProperty()
		activeUniqueStatusEffectSummary()
		inflictedHitsSince()
		resourceMax()
		setStatusProperty()
		setPersistentEffects()
		resetAllResources()
		addEphemeralEffects()
		overConsumeResource()
		modifyResource()
		addEphemeralEffect()
		getPersistentEffects()
		resetResource()
		consumeResource()
		clearPersistentEffects()
		modifyResourcePercentage()
		clearEphemeralEffects()
		resourceNames()
		addPersistentEffect()
		resourceLocked()
		clearAllPersistentEffects()
		inflictedDamageSince()
		isResource()
		setResource()
		giveResource()
	}
	xpcall()
	getmetatable()
	utf8 = {
		len()
		codepoint()
		offset()
		codes()
		charpattern = "[
[23:05:11.547] [Warn] 	select()
	rawequal()
	rawset()
	string = {
		gmatch()
		char()
		sub()
		unpack()
		upper()
		lower()
		find()
		rep()
		dump()
		len()
		reverse()
		packsize()
		pack()
		byte()
		match()
		format()
		gsub()
	}
	require()
	pairs()
	next()
	jobject()
	math = {
		pi = 3.1415926535898
		rad()
		max()
		sqrt()
		random()
		floor()
		log()
		acos()
		fmod()
		mininteger = -9223372036854775808
		type()
		huge = inf
		randomseed()
		deg()
		exp()
		maxinteger = 9223372036854775807
		cos()
		min()
		tointeger()
		modf()
		asin()
		tan()
		atan()
		abs()
		sin()
		ult()
		ceil()
	}
	print()
	pcall()
	type()
	init()
	setmetatable()
	jresize()
	ic = {
		checkStack()
		itemAmount()
		stripColor()
		quickstack()
		itemConfig()
		amountEquipped()
		sortFunc()
		lock()
		giveBack()
		renameThis()
		sort()
		searchBox()
		sort_relative()
		clientVersion = 1
		renameButton()
		searchButton()
		getQuality()
	}
	player = {
		equippedTech()
		altHandItem()
		giveEssentialItem()
		consumeTaggedItem()
		setUniverseFlag()
		species()
		itemsWithTag()
		worldId()
		warp()
		completeMission()
		inventoryTags()
		upgradeShip()
		hasQuest()
		consumeItem()
		gender()
		primaryHandItem()
		essentialItem()
		equippedItem()
		setIntroComplete()
		playTime()
		enabledTechs()
		recordEvent()
		playCinematic()
		introComplete()
		hasCompletedQuest()
		makeTechAvailable()
		consumeItemWithParameter()
		startQuest()
		hasItemWithParameter()
		getItemWithParameter()
		lounge()
		enableTech()
		equipTech()
		enableMission()
		removeEssentialItem()
		isLounging()
		availableTechs()
		primaryHandItemTags()
		makeTechUnavailable()
		confirm()
		serverUuid()
		addBookmark()
		altHandItemTags()
		cleanupItems()
		radioMessage()
		setEquippedItem()
		ownShipWorldId()
		hasItem()
		canStartQuest()
		giveBlueprint()
		hasCountOfItem()
		shipUpgrades()
		giveItem()
	}
	config = {
		getParameter()
	}
	self = {
	}
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	world = {
		spawnItem()
		entityPosition()
		entityHealth()
		damageTileArea()
		day()
		placeMaterial()
		entityDescription()
		containerPutItemsAt()
		entityVelocity()
		damageTiles()
		entityHandItem()
		objectAt()
		setProperty()
		containerItemApply()
		containerClose()
		distance()
		findUniqueEntity()
		gravity()
		rectTileCollision()
		entitySpecies()
		platformerPathStart()
		containerOpen()
		containerTakeAll()
		breathable()
		npcType()
		containerAddItems()
		dayLength()
		loungeableOccupied()
		placeObject()
		isTileProtected()
		destroyLiquid()
		debugLine()
		spawnLiquid()
		entityCanDamage()
		containerItemsCanFit()
		xwrap()
		entityUniqueId()
		itemDropQuery()
		lightLevel()
		placeMod()
		spawnNpc()
		spawnTreasure()
		time()
		underground()
		spawnVehicle()
		spawnMonster()
		timeOfDay()
		findPlatformerPath()
		debugPoly()
		containerTakeNumItemsAt()
		isMonster()
		farmableStage()
		polyCollision()
		objectLineQuery()
		entityHasCountOfItem()
		entityHandItemDescriptor()
		tileIsOccupied()
		resolvePolyCollision()
		pointCollision()
		callScriptedEntity()
		collisionBlocksAlongLine()
		containerStackItems()
		objectSpaces()
		containerConsume()
		spawnStagehand()
		spawnProjectile()
		stagehandType()
		entityQuery()
		lineTileCollision()
		containerSwapItemsNoCombine()
		liquidAlongLine()
		playerQuery()
		objectQuery()
		entityGender()
		rectCollision()
		containerItemAt()
		polyContains()
		containerTakeAt()
		magnitude()
		mod()
		containerSwapItems()
		isNpc()
		lineCollision()
		getObjectParameter()
		debugPoint()
		pointTileCollision()
		containerItemsFitWhere()
		containerAvailable()
		getProperty()
		containerItems()
		threatLevel()
		entityType()
		sendEntityMessage()
		material()
		liquidAt()
		containerSize()
		debugText()
		monsterType()
		entityMoney()
		nearestTo()
		npcLineQuery()
		entityPortrait()
		entityName()
		entityDamageTeam()
		containerConsumeAt()
		entityAggressive()
		windLevel()
		monsterQuery()
		entityExists()
		loungeableQuery()
		npcQuery()
		entityLineQuery()
	}
	root = {
		createBiome()
		imageSpaces()
		createItem()
		loadVersionedJson()
		createTreasure()
		getMatchingTenants()
		monsterSkillParameter()
		getConfiguration()
		npcVariant()
		itemHasTag()
		imageSize()
		projectileGravityMultiplier()
		nonEmptyRegion()
		evalFunction2()
		projectileConfig()
		materialMiningSound()
		generateName()
		isTreasurePool()
		hasTech()
		behaviorModule()
		itemConfig()
		treeStemDirectory()
		evalFunction()
		techConfig()
		npcConfig()
		setConfigurationPath()
		getConfigurationPath()
		materialHealth()
		materialFootstepSound()
		monsterMovementSettings()
		materialPath()
		setConfiguration()
		monsterPortrait()
		itemType()
		questConfig()
		recipesForItem()
		assetJson()
		treeFoliageDirectory()
		techType()
		liquidStatusEffects()
		makeCurrentVersionedJson()
		itemTags()
		tenantConfig()
		npcPortrait()
	}
	jsize()
	status = {
		setResourceLocked()
		resourcePercentage()
		addPersistentEffects()
		removeEphemeralEffect()
		resource()
		setResourcePercentage()
		resourcePositive()
		damageTakenSince()
		statPositive()
		stat()
		statusProperty()
		activeUniqueStatusEffectSummary()
		inflictedHitsSince()
		resourceMax()
		setStatusProperty()
		setPersistentEffects()
		resetAllResources()
		addEphemeralEffects()
		overConsumeResource()
		modifyResource()
		addEphemeralEffect()
		getPersistentEffects()
		resetResource()
		consumeResource()
		clearPersistentEffects()
		modifyResourcePercentage()
		clearEphemeralEffects()
		resourceNames()
		addPersistentEffect()
		resourceLocked()
		clearAllPersistentEffects()
		inflictedDamageSince()
		isResource()
		setResource()
		giveResource()
	}
	xpcall()
	getmetatable()
	utf8 = {
		len()
		codepoint()
		offset()
		codes()
		charpattern = "[
[23:06:48.033] [Warn] 	select()
	rawequal()
	rawset()
	string = {
		gmatch()
		char()
		sub()
		unpack()
		upper()
		lower()
		find()
		rep()
		dump()
		len()
		reverse()
		packsize()
		pack()
		byte()
		match()
		format()
		gsub()
	}
	require()
	pairs()
	next()
	jobject()
	math = {
		pi = 3.1415926535898
		rad()
		max()
		sqrt()
		random()
		floor()
		log()
		acos()
		fmod()
		mininteger = -9223372036854775808
		type()
		huge = inf
		randomseed()
		deg()
		exp()
		maxinteger = 9223372036854775807
		cos()
		min()
		tointeger()
		modf()
		asin()
		tan()
		atan()
		abs()
		sin()
		ult()
		ceil()
	}
	print()
	pcall()
	type()
	init()
	setmetatable()
	jresize()
	ic = {
		checkStack()
		itemAmount()
		stripColor()
		quickstack()
		itemConfig()
		amountEquipped()
		sortFunc()
		lock()
		giveBack()
		renameThis()
		sort()
		searchBox()
		sort_relative()
		clientVersion = 1
		renameButton()
		searchButton()
		getQuality()
	}
	player = {
		equippedTech()
		altHandItem()
		giveEssentialItem()
		consumeTaggedItem()
		setUniverseFlag()
		species()
		itemsWithTag()
		worldId()
		warp()
		completeMission()
		inventoryTags()
		upgradeShip()
		hasQuest()
		consumeItem()
		gender()
		primaryHandItem()
		essentialItem()
		equippedItem()
		setIntroComplete()
		playTime()
		enabledTechs()
		recordEvent()
		playCinematic()
		introComplete()
		hasCompletedQuest()
		makeTechAvailable()
		consumeItemWithParameter()
		startQuest()
		hasItemWithParameter()
		getItemWithParameter()
		lounge()
		enableTech()
		equipTech()
		enableMission()
		removeEssentialItem()
		isLounging()
		availableTechs()
		primaryHandItemTags()
		makeTechUnavailable()
		confirm()
		serverUuid()
		addBookmark()
		altHandItemTags()
		cleanupItems()
		radioMessage()
		setEquippedItem()
		ownShipWorldId()
		hasItem()
		canStartQuest()
		giveBlueprint()
		hasCountOfItem()
		shipUpgrades()
		giveItem()
	}
	config = {
		getParameter()
	}
	self = {
	}
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	world = {
		spawnItem()
		entityPosition()
		entityHealth()
		damageTileArea()
		day()
		placeMaterial()
		entityDescription()
		containerPutItemsAt()
		entityVelocity()
		damageTiles()
		entityHandItem()
		objectAt()
		setProperty()
		containerItemApply()
		containerClose()
		distance()
		findUniqueEntity()
		gravity()
		rectTileCollision()
		entitySpecies()
		platformerPathStart()
		containerOpen()
		containerTakeAll()
		breathable()
		npcType()
		containerAddItems()
		dayLength()
		loungeableOccupied()
		placeObject()
		isTileProtected()
		destroyLiquid()
		debugLine()
		spawnLiquid()
		entityCanDamage()
		containerItemsCanFit()
		xwrap()
		entityUniqueId()
		itemDropQuery()
		lightLevel()
		placeMod()
		spawnNpc()
		spawnTreasure()
		time()
		underground()
		spawnVehicle()
		spawnMonster()
		timeOfDay()
		findPlatformerPath()
		debugPoly()
		containerTakeNumItemsAt()
		isMonster()
		farmableStage()
		polyCollision()
		objectLineQuery()
		entityHasCountOfItem()
		entityHandItemDescriptor()
		tileIsOccupied()
		resolvePolyCollision()
		pointCollision()
		callScriptedEntity()
		collisionBlocksAlongLine()
		containerStackItems()
		objectSpaces()
		containerConsume()
		spawnStagehand()
		spawnProjectile()
		stagehandType()
		entityQuery()
		lineTileCollision()
		containerSwapItemsNoCombine()
		liquidAlongLine()
		playerQuery()
		objectQuery()
		entityGender()
		rectCollision()
		containerItemAt()
		polyContains()
		containerTakeAt()
		magnitude()
		mod()
		containerSwapItems()
		isNpc()
		lineCollision()
		getObjectParameter()
		debugPoint()
		pointTileCollision()
		containerItemsFitWhere()
		containerAvailable()
		getProperty()
		containerItems()
		threatLevel()
		entityType()
		sendEntityMessage()
		material()
		liquidAt()
		containerSize()
		debugText()
		monsterType()
		entityMoney()
		nearestTo()
		npcLineQuery()
		entityPortrait()
		entityName()
		entityDamageTeam()
		containerConsumeAt()
		entityAggressive()
		windLevel()
		monsterQuery()
		entityExists()
		loungeableQuery()
		npcQuery()
		entityLineQuery()
	}
	root = {
		createBiome()
		imageSpaces()
		createItem()
		loadVersionedJson()
		createTreasure()
		getMatchingTenants()
		monsterSkillParameter()
		getConfiguration()
		npcVariant()
		itemHasTag()
		imageSize()
		projectileGravityMultiplier()
		nonEmptyRegion()
		evalFunction2()
		projectileConfig()
		materialMiningSound()
		generateName()
		isTreasurePool()
		hasTech()
		behaviorModule()
		itemConfig()
		treeStemDirectory()
		evalFunction()
		techConfig()
		npcConfig()
		setConfigurationPath()
		getConfigurationPath()
		materialHealth()
		materialFootstepSound()
		monsterMovementSettings()
		materialPath()
		setConfiguration()
		monsterPortrait()
		itemType()
		questConfig()
		recipesForItem()
		assetJson()
		treeFoliageDirectory()
		techType()
		liquidStatusEffects()
		makeCurrentVersionedJson()
		itemTags()
		tenantConfig()
		npcPortrait()
	}
	jsize()
	status = {
		setResourceLocked()
		resourcePercentage()
		addPersistentEffects()
		removeEphemeralEffect()
		resource()
		setResourcePercentage()
		resourcePositive()
		damageTakenSince()
		statPositive()
		stat()
		statusProperty()
		activeUniqueStatusEffectSummary()
		inflictedHitsSince()
		resourceMax()
		setStatusProperty()
		setPersistentEffects()
		resetAllResources()
		addEphemeralEffects()
		overConsumeResource()
		modifyResource()
		addEphemeralEffect()
		getPersistentEffects()
		resetResource()
		consumeResource()
		clearPersistentEffects()
		modifyResourcePercentage()
		clearEphemeralEffects()
		resourceNames()
		addPersistentEffect()
		resourceLocked()
		clearAllPersistentEffects()
		inflictedDamageSince()
		isResource()
		setResource()
		giveResource()
	}
	xpcall()
	getmetatable()
	utf8 = {
		len()
		codepoint()
		offset()
		codes()
		charpattern = "[
[23:06:55.837] [Warn] 	select()
	rawequal()
	rawset()
	string = {
		gmatch()
		char()
		sub()
		unpack()
		upper()
		lower()
		find()
		rep()
		dump()
		len()
		reverse()
		packsize()
		pack()
		byte()
		match()
		format()
		gsub()
	}
	require()
	pairs()
	next()
	jobject()
	math = {
		pi = 3.1415926535898
		rad()
		max()
		sqrt()
		random()
		floor()
		log()
		acos()
		fmod()
		mininteger = -9223372036854775808
		type()
		huge = inf
		randomseed()
		deg()
		exp()
		maxinteger = 9223372036854775807
		cos()
		min()
		tointeger()
		modf()
		asin()
		tan()
		atan()
		abs()
		sin()
		ult()
		ceil()
	}
	print()
	pcall()
	type()
	init()
	setmetatable()
	jresize()
	ic = {
		checkStack()
		itemAmount()
		stripColor()
		quickstack()
		itemConfig()
		amountEquipped()
		sortFunc()
		lock()
		giveBack()
		renameThis()
		sort()
		searchBox()
		sort_relative()
		clientVersion = 1
		renameButton()
		searchButton()
		getQuality()
	}
	player = {
		equippedTech()
		altHandItem()
		giveEssentialItem()
		consumeTaggedItem()
		setUniverseFlag()
		species()
		itemsWithTag()
		worldId()
		warp()
		completeMission()
		inventoryTags()
		upgradeShip()
		hasQuest()
		consumeItem()
		gender()
		primaryHandItem()
		essentialItem()
		equippedItem()
		setIntroComplete()
		playTime()
		enabledTechs()
		recordEvent()
		playCinematic()
		introComplete()
		hasCompletedQuest()
		makeTechAvailable()
		consumeItemWithParameter()
		startQuest()
		hasItemWithParameter()
		getItemWithParameter()
		lounge()
		enableTech()
		equipTech()
		enableMission()
		removeEssentialItem()
		isLounging()
		availableTechs()
		primaryHandItemTags()
		makeTechUnavailable()
		confirm()
		serverUuid()
		addBookmark()
		altHandItemTags()
		cleanupItems()
		radioMessage()
		setEquippedItem()
		ownShipWorldId()
		hasItem()
		canStartQuest()
		giveBlueprint()
		hasCountOfItem()
		shipUpgrades()
		giveItem()
	}
	config = {
		getParameter()
	}
	self = {
	}
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	world = {
		spawnItem()
		entityPosition()
		entityHealth()
		damageTileArea()
		day()
		placeMaterial()
		entityDescription()
		containerPutItemsAt()
		entityVelocity()
		damageTiles()
		entityHandItem()
		objectAt()
		setProperty()
		containerItemApply()
		containerClose()
		distance()
		findUniqueEntity()
		gravity()
		rectTileCollision()
		entitySpecies()
		platformerPathStart()
		containerOpen()
		containerTakeAll()
		breathable()
		npcType()
		containerAddItems()
		dayLength()
		loungeableOccupied()
		placeObject()
		isTileProtected()
		destroyLiquid()
		debugLine()
		spawnLiquid()
		entityCanDamage()
		containerItemsCanFit()
		xwrap()
		entityUniqueId()
		itemDropQuery()
		lightLevel()
		placeMod()
		spawnNpc()
		spawnTreasure()
		time()
		underground()
		spawnVehicle()
		spawnMonster()
		timeOfDay()
		findPlatformerPath()
		debugPoly()
		containerTakeNumItemsAt()
		isMonster()
		farmableStage()
		polyCollision()
		objectLineQuery()
		entityHasCountOfItem()
		entityHandItemDescriptor()
		tileIsOccupied()
		resolvePolyCollision()
		pointCollision()
		callScriptedEntity()
		collisionBlocksAlongLine()
		containerStackItems()
		objectSpaces()
		containerConsume()
		spawnStagehand()
		spawnProjectile()
		stagehandType()
		entityQuery()
		lineTileCollision()
		containerSwapItemsNoCombine()
		liquidAlongLine()
		playerQuery()
		objectQuery()
		entityGender()
		rectCollision()
		containerItemAt()
		polyContains()
		containerTakeAt()
		magnitude()
		mod()
		containerSwapItems()
		isNpc()
		lineCollision()
		getObjectParameter()
		debugPoint()
		pointTileCollision()
		containerItemsFitWhere()
		containerAvailable()
		getProperty()
		containerItems()
		threatLevel()
		entityType()
		sendEntityMessage()
		material()
		liquidAt()
		containerSize()
		debugText()
		monsterType()
		entityMoney()
		nearestTo()
		npcLineQuery()
		entityPortrait()
		entityName()
		entityDamageTeam()
		containerConsumeAt()
		entityAggressive()
		windLevel()
		monsterQuery()
		entityExists()
		loungeableQuery()
		npcQuery()
		entityLineQuery()
	}
	root = {
		createBiome()
		imageSpaces()
		createItem()
		loadVersionedJson()
		createTreasure()
		getMatchingTenants()
		monsterSkillParameter()
		getConfiguration()
		npcVariant()
		itemHasTag()
		imageSize()
		projectileGravityMultiplier()
		nonEmptyRegion()
		evalFunction2()
		projectileConfig()
		materialMiningSound()
		generateName()
		isTreasurePool()
		hasTech()
		behaviorModule()
		itemConfig()
		treeStemDirectory()
		evalFunction()
		techConfig()
		npcConfig()
		setConfigurationPath()
		getConfigurationPath()
		materialHealth()
		materialFootstepSound()
		monsterMovementSettings()
		materialPath()
		setConfiguration()
		monsterPortrait()
		itemType()
		questConfig()
		recipesForItem()
		assetJson()
		treeFoliageDirectory()
		techType()
		liquidStatusEffects()
		makeCurrentVersionedJson()
		itemTags()
		tenantConfig()
		npcPortrait()
	}
	jsize()
	status = {
		setResourceLocked()
		resourcePercentage()
		addPersistentEffects()
		removeEphemeralEffect()
		resource()
		setResourcePercentage()
		resourcePositive()
		damageTakenSince()
		statPositive()
		stat()
		statusProperty()
		activeUniqueStatusEffectSummary()
		inflictedHitsSince()
		resourceMax()
		setStatusProperty()
		setPersistentEffects()
		resetAllResources()
		addEphemeralEffects()
		overConsumeResource()
		modifyResource()
		addEphemeralEffect()
		getPersistentEffects()
		resetResource()
		consumeResource()
		clearPersistentEffects()
		modifyResourcePercentage()
		clearEphemeralEffects()
		resourceNames()
		addPersistentEffect()
		resourceLocked()
		clearAllPersistentEffects()
		inflictedDamageSince()
		isResource()
		setResource()
		giveResource()
	}
	xpcall()
	getmetatable()
	utf8 = {
		len()
		codepoint()
		offset()
		codes()
		charpattern = "[
[23:06:56.896] [Warn] 	select()
	rawequal()
	rawset()
	string = {
		gmatch()
		char()
		sub()
		unpack()
		upper()
		lower()
		find()
		rep()
		dump()
		len()
		reverse()
		packsize()
		pack()
		byte()
		match()
		format()
		gsub()
	}
	require()
	pairs()
	next()
	jobject()
	math = {
		pi = 3.1415926535898
		rad()
		max()
		sqrt()
		random()
		floor()
		log()
		acos()
		fmod()
		mininteger = -9223372036854775808
		type()
		huge = inf
		randomseed()
		deg()
		exp()
		maxinteger = 9223372036854775807
		cos()
		min()
		tointeger()
		modf()
		asin()
		tan()
		atan()
		abs()
		sin()
		ult()
		ceil()
	}
	print()
	pcall()
	type()
	init()
	setmetatable()
	jresize()
	ic = {
		checkStack()
		itemAmount()
		stripColor()
		quickstack()
		itemConfig()
		amountEquipped()
		sortFunc()
		lock()
		giveBack()
		renameThis()
		sort()
		searchBox()
		sort_relative()
		clientVersion = 1
		renameButton()
		searchButton()
		getQuality()
	}
	player = {
		equippedTech()
		altHandItem()
		giveEssentialItem()
		consumeTaggedItem()
		setUniverseFlag()
		species()
		itemsWithTag()
		worldId()
		warp()
		completeMission()
		inventoryTags()
		upgradeShip()
		hasQuest()
		consumeItem()
		gender()
		primaryHandItem()
		essentialItem()
		equippedItem()
		setIntroComplete()
		playTime()
		enabledTechs()
		recordEvent()
		playCinematic()
		introComplete()
		hasCompletedQuest()
		makeTechAvailable()
		consumeItemWithParameter()
		startQuest()
		hasItemWithParameter()
		getItemWithParameter()
		lounge()
		enableTech()
		equipTech()
		enableMission()
		removeEssentialItem()
		isLounging()
		availableTechs()
		primaryHandItemTags()
		makeTechUnavailable()
		confirm()
		serverUuid()
		addBookmark()
		altHandItemTags()
		cleanupItems()
		radioMessage()
		setEquippedItem()
		ownShipWorldId()
		hasItem()
		canStartQuest()
		giveBlueprint()
		hasCountOfItem()
		shipUpgrades()
		giveItem()
	}
	config = {
		getParameter()
	}
	self = {
	}
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	world = {
		spawnItem()
		entityPosition()
		entityHealth()
		damageTileArea()
		day()
		placeMaterial()
		entityDescription()
		containerPutItemsAt()
		entityVelocity()
		damageTiles()
		entityHandItem()
		objectAt()
		setProperty()
		containerItemApply()
		containerClose()
		distance()
		findUniqueEntity()
		gravity()
		rectTileCollision()
		entitySpecies()
		platformerPathStart()
		containerOpen()
		containerTakeAll()
		breathable()
		npcType()
		containerAddItems()
		dayLength()
		loungeableOccupied()
		placeObject()
		isTileProtected()
		destroyLiquid()
		debugLine()
		spawnLiquid()
		entityCanDamage()
		containerItemsCanFit()
		xwrap()
		entityUniqueId()
		itemDropQuery()
		lightLevel()
		placeMod()
		spawnNpc()
		spawnTreasure()
		time()
		underground()
		spawnVehicle()
		spawnMonster()
		timeOfDay()
		findPlatformerPath()
		debugPoly()
		containerTakeNumItemsAt()
		isMonster()
		farmableStage()
		polyCollision()
		objectLineQuery()
		entityHasCountOfItem()
		entityHandItemDescriptor()
		tileIsOccupied()
		resolvePolyCollision()
		pointCollision()
		callScriptedEntity()
		collisionBlocksAlongLine()
		containerStackItems()
		objectSpaces()
		containerConsume()
		spawnStagehand()
		spawnProjectile()
		stagehandType()
		entityQuery()
		lineTileCollision()
		containerSwapItemsNoCombine()
		liquidAlongLine()
		playerQuery()
		objectQuery()
		entityGender()
		rectCollision()
		containerItemAt()
		polyContains()
		containerTakeAt()
		magnitude()
		mod()
		containerSwapItems()
		isNpc()
		lineCollision()
		getObjectParameter()
		debugPoint()
		pointTileCollision()
		containerItemsFitWhere()
		containerAvailable()
		getProperty()
		containerItems()
		threatLevel()
		entityType()
		sendEntityMessage()
		material()
		liquidAt()
		containerSize()
		debugText()
		monsterType()
		entityMoney()
		nearestTo()
		npcLineQuery()
		entityPortrait()
		entityName()
		entityDamageTeam()
		containerConsumeAt()
		entityAggressive()
		windLevel()
		monsterQuery()
		entityExists()
		loungeableQuery()
		npcQuery()
		entityLineQuery()
	}
	root = {
		createBiome()
		imageSpaces()
		createItem()
		loadVersionedJson()
		createTreasure()
		getMatchingTenants()
		monsterSkillParameter()
		getConfiguration()
		npcVariant()
		itemHasTag()
		imageSize()
		projectileGravityMultiplier()
		nonEmptyRegion()
		evalFunction2()
		projectileConfig()
		materialMiningSound()
		generateName()
		isTreasurePool()
		hasTech()
		behaviorModule()
		itemConfig()
		treeStemDirectory()
		evalFunction()
		techConfig()
		npcConfig()
		setConfigurationPath()
		getConfigurationPath()
		materialHealth()
		materialFootstepSound()
		monsterMovementSettings()
		materialPath()
		setConfiguration()
		monsterPortrait()
		itemType()
		questConfig()
		recipesForItem()
		assetJson()
		treeFoliageDirectory()
		techType()
		liquidStatusEffects()
		makeCurrentVersionedJson()
		itemTags()
		tenantConfig()
		npcPortrait()
	}
	jsize()
	status = {
		setResourceLocked()
		resourcePercentage()
		addPersistentEffects()
		removeEphemeralEffect()
		resource()
		setResourcePercentage()
		resourcePositive()
		damageTakenSince()
		statPositive()
		stat()
		statusProperty()
		activeUniqueStatusEffectSummary()
		inflictedHitsSince()
		resourceMax()
		setStatusProperty()
		setPersistentEffects()
		resetAllResources()
		addEphemeralEffects()
		overConsumeResource()
		modifyResource()
		addEphemeralEffect()
		getPersistentEffects()
		resetResource()
		consumeResource()
		clearPersistentEffects()
		modifyResourcePercentage()
		clearEphemeralEffects()
		resourceNames()
		addPersistentEffect()
		resourceLocked()
		clearAllPersistentEffects()
		inflictedDamageSince()
		isResource()
		setResource()
		giveResource()
	}
	xpcall()
	getmetatable()
	utf8 = {
		len()
		codepoint()
		offset()
		codes()
		charpattern = "[
[23:06:58.146] [Warn] 	select()
	rawequal()
	rawset()
	string = {
		gmatch()
		char()
		sub()
		unpack()
		upper()
		lower()
		find()
		rep()
		dump()
		len()
		reverse()
		packsize()
		pack()
		byte()
		match()
		format()
		gsub()
	}
	require()
	pairs()
	next()
	jobject()
	math = {
		pi = 3.1415926535898
		rad()
		max()
		sqrt()
		random()
		floor()
		log()
		acos()
		fmod()
		mininteger = -9223372036854775808
		type()
		huge = inf
		randomseed()
		deg()
		exp()
		maxinteger = 9223372036854775807
		cos()
		min()
		tointeger()
		modf()
		asin()
		tan()
		atan()
		abs()
		sin()
		ult()
		ceil()
	}
	print()
	pcall()
	type()
	init()
	setmetatable()
	jresize()
	ic = {
		checkStack()
		itemAmount()
		stripColor()
		quickstack()
		itemConfig()
		amountEquipped()
		sortFunc()
		lock()
		giveBack()
		renameThis()
		sort()
		searchBox()
		sort_relative()
		clientVersion = 1
		renameButton()
		searchButton()
		getQuality()
	}
	player = {
		equippedTech()
		altHandItem()
		giveEssentialItem()
		consumeTaggedItem()
		setUniverseFlag()
		species()
		itemsWithTag()
		worldId()
		warp()
		completeMission()
		inventoryTags()
		upgradeShip()
		hasQuest()
		consumeItem()
		gender()
		primaryHandItem()
		essentialItem()
		equippedItem()
		setIntroComplete()
		playTime()
		enabledTechs()
		recordEvent()
		playCinematic()
		introComplete()
		hasCompletedQuest()
		makeTechAvailable()
		consumeItemWithParameter()
		startQuest()
		hasItemWithParameter()
		getItemWithParameter()
		lounge()
		enableTech()
		equipTech()
		enableMission()
		removeEssentialItem()
		isLounging()
		availableTechs()
		primaryHandItemTags()
		makeTechUnavailable()
		confirm()
		serverUuid()
		addBookmark()
		altHandItemTags()
		cleanupItems()
		radioMessage()
		setEquippedItem()
		ownShipWorldId()
		hasItem()
		canStartQuest()
		giveBlueprint()
		hasCountOfItem()
		shipUpgrades()
		giveItem()
	}
	config = {
		getParameter()
	}
	self = {
	}
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	world = {
		spawnItem()
		entityPosition()
		entityHealth()
		damageTileArea()
		day()
		placeMaterial()
		entityDescription()
		containerPutItemsAt()
		entityVelocity()
		damageTiles()
		entityHandItem()
		objectAt()
		setProperty()
		containerItemApply()
		containerClose()
		distance()
		findUniqueEntity()
		gravity()
		rectTileCollision()
		entitySpecies()
		platformerPathStart()
		containerOpen()
		containerTakeAll()
		breathable()
		npcType()
		containerAddItems()
		dayLength()
		loungeableOccupied()
		placeObject()
		isTileProtected()
		destroyLiquid()
		debugLine()
		spawnLiquid()
		entityCanDamage()
		containerItemsCanFit()
		xwrap()
		entityUniqueId()
		itemDropQuery()
		lightLevel()
		placeMod()
		spawnNpc()
		spawnTreasure()
		time()
		underground()
		spawnVehicle()
		spawnMonster()
		timeOfDay()
		findPlatformerPath()
		debugPoly()
		containerTakeNumItemsAt()
		isMonster()
		farmableStage()
		polyCollision()
		objectLineQuery()
		entityHasCountOfItem()
		entityHandItemDescriptor()
		tileIsOccupied()
		resolvePolyCollision()
		pointCollision()
		callScriptedEntity()
		collisionBlocksAlongLine()
		containerStackItems()
		objectSpaces()
		containerConsume()
		spawnStagehand()
		spawnProjectile()
		stagehandType()
		entityQuery()
		lineTileCollision()
		containerSwapItemsNoCombine()
		liquidAlongLine()
		playerQuery()
		objectQuery()
		entityGender()
		rectCollision()
		containerItemAt()
		polyContains()
		containerTakeAt()
		magnitude()
		mod()
		containerSwapItems()
		isNpc()
		lineCollision()
		getObjectParameter()
		debugPoint()
		pointTileCollision()
		containerItemsFitWhere()
		containerAvailable()
		getProperty()
		containerItems()
		threatLevel()
		entityType()
		sendEntityMessage()
		material()
		liquidAt()
		containerSize()
		debugText()
		monsterType()
		entityMoney()
		nearestTo()
		npcLineQuery()
		entityPortrait()
		entityName()
		entityDamageTeam()
		containerConsumeAt()
		entityAggressive()
		windLevel()
		monsterQuery()
		entityExists()
		loungeableQuery()
		npcQuery()
		entityLineQuery()
	}
	root = {
		createBiome()
		imageSpaces()
		createItem()
		loadVersionedJson()
		createTreasure()
		getMatchingTenants()
		monsterSkillParameter()
		getConfiguration()
		npcVariant()
		itemHasTag()
		imageSize()
		projectileGravityMultiplier()
		nonEmptyRegion()
		evalFunction2()
		projectileConfig()
		materialMiningSound()
		generateName()
		isTreasurePool()
		hasTech()
		behaviorModule()
		itemConfig()
		treeStemDirectory()
		evalFunction()
		techConfig()
		npcConfig()
		setConfigurationPath()
		getConfigurationPath()
		materialHealth()
		materialFootstepSound()
		monsterMovementSettings()
		materialPath()
		setConfiguration()
		monsterPortrait()
		itemType()
		questConfig()
		recipesForItem()
		assetJson()
		treeFoliageDirectory()
		techType()
		liquidStatusEffects()
		makeCurrentVersionedJson()
		itemTags()
		tenantConfig()
		npcPortrait()
	}
	jsize()
	status = {
		setResourceLocked()
		resourcePercentage()
		addPersistentEffects()
		removeEphemeralEffect()
		resource()
		setResourcePercentage()
		resourcePositive()
		damageTakenSince()
		statPositive()
		stat()
		statusProperty()
		activeUniqueStatusEffectSummary()
		inflictedHitsSince()
		resourceMax()
		setStatusProperty()
		setPersistentEffects()
		resetAllResources()
		addEphemeralEffects()
		overConsumeResource()
		modifyResource()
		addEphemeralEffect()
		getPersistentEffects()
		resetResource()
		consumeResource()
		clearPersistentEffects()
		modifyResourcePercentage()
		clearEphemeralEffects()
		resourceNames()
		addPersistentEffect()
		resourceLocked()
		clearAllPersistentEffects()
		inflictedDamageSince()
		isResource()
		setResource()
		giveResource()
	}
	xpcall()
	getmetatable()
	utf8 = {
		len()
		codepoint()
		offset()
		codes()
		charpattern = "[
[23:06:59.264] [Warn] 	select()
	rawequal()
	rawset()
	string = {
		gmatch()
		char()
		sub()
		unpack()
		upper()
		lower()
		find()
		rep()
		dump()
		len()
		reverse()
		packsize()
		pack()
		byte()
		match()
		format()
		gsub()
	}
	require()
	pairs()
	next()
	jobject()
	math = {
		pi = 3.1415926535898
		rad()
		max()
		sqrt()
		random()
		floor()
		log()
		acos()
		fmod()
		mininteger = -9223372036854775808
		type()
		huge = inf
		randomseed()
		deg()
		exp()
		maxinteger = 9223372036854775807
		cos()
		min()
		tointeger()
		modf()
		asin()
		tan()
		atan()
		abs()
		sin()
		ult()
		ceil()
	}
	print()
	pcall()
	type()
	init()
	setmetatable()
	jresize()
	ic = {
		checkStack()
		itemAmount()
		stripColor()
		quickstack()
		itemConfig()
		amountEquipped()
		sortFunc()
		lock()
		giveBack()
		renameThis()
		sort()
		searchBox()
		sort_relative()
		clientVersion = 1
		renameButton()
		searchButton()
		getQuality()
	}
	player = {
		equippedTech()
		altHandItem()
		giveEssentialItem()
		consumeTaggedItem()
		setUniverseFlag()
		species()
		itemsWithTag()
		worldId()
		warp()
		completeMission()
		inventoryTags()
		upgradeShip()
		hasQuest()
		consumeItem()
		gender()
		primaryHandItem()
		essentialItem()
		equippedItem()
		setIntroComplete()
		playTime()
		enabledTechs()
		recordEvent()
		playCinematic()
		introComplete()
		hasCompletedQuest()
		makeTechAvailable()
		consumeItemWithParameter()
		startQuest()
		hasItemWithParameter()
		getItemWithParameter()
		lounge()
		enableTech()
		equipTech()
		enableMission()
		removeEssentialItem()
		isLounging()
		availableTechs()
		primaryHandItemTags()
		makeTechUnavailable()
		confirm()
		serverUuid()
		addBookmark()
		altHandItemTags()
		cleanupItems()
		radioMessage()
		setEquippedItem()
		ownShipWorldId()
		hasItem()
		canStartQuest()
		giveBlueprint()
		hasCountOfItem()
		shipUpgrades()
		giveItem()
	}
	config = {
		getParameter()
	}
	self = {
	}
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	world = {
		spawnItem()
		entityPosition()
		entityHealth()
		damageTileArea()
		day()
		placeMaterial()
		entityDescription()
		containerPutItemsAt()
		entityVelocity()
		damageTiles()
		entityHandItem()
		objectAt()
		setProperty()
		containerItemApply()
		containerClose()
		distance()
		findUniqueEntity()
		gravity()
		rectTileCollision()
		entitySpecies()
		platformerPathStart()
		containerOpen()
		containerTakeAll()
		breathable()
		npcType()
		containerAddItems()
		dayLength()
		loungeableOccupied()
		placeObject()
		isTileProtected()
		destroyLiquid()
		debugLine()
		spawnLiquid()
		entityCanDamage()
		containerItemsCanFit()
		xwrap()
		entityUniqueId()
		itemDropQuery()
		lightLevel()
		placeMod()
		spawnNpc()
		spawnTreasure()
		time()
		underground()
		spawnVehicle()
		spawnMonster()
		timeOfDay()
		findPlatformerPath()
		debugPoly()
		containerTakeNumItemsAt()
		isMonster()
		farmableStage()
		polyCollision()
		objectLineQuery()
		entityHasCountOfItem()
		entityHandItemDescriptor()
		tileIsOccupied()
		resolvePolyCollision()
		pointCollision()
		callScriptedEntity()
		collisionBlocksAlongLine()
		containerStackItems()
		objectSpaces()
		containerConsume()
		spawnStagehand()
		spawnProjectile()
		stagehandType()
		entityQuery()
		lineTileCollision()
		containerSwapItemsNoCombine()
		liquidAlongLine()
		playerQuery()
		objectQuery()
		entityGender()
		rectCollision()
		containerItemAt()
		polyContains()
		containerTakeAt()
		magnitude()
		mod()
		containerSwapItems()
		isNpc()
		lineCollision()
		getObjectParameter()
		debugPoint()
		pointTileCollision()
		containerItemsFitWhere()
		containerAvailable()
		getProperty()
		containerItems()
		threatLevel()
		entityType()
		sendEntityMessage()
		material()
		liquidAt()
		containerSize()
		debugText()
		monsterType()
		entityMoney()
		nearestTo()
		npcLineQuery()
		entityPortrait()
		entityName()
		entityDamageTeam()
		containerConsumeAt()
		entityAggressive()
		windLevel()
		monsterQuery()
		entityExists()
		loungeableQuery()
		npcQuery()
		entityLineQuery()
	}
	root = {
		createBiome()
		imageSpaces()
		createItem()
		loadVersionedJson()
		createTreasure()
		getMatchingTenants()
		monsterSkillParameter()
		getConfiguration()
		npcVariant()
		itemHasTag()
		imageSize()
		projectileGravityMultiplier()
		nonEmptyRegion()
		evalFunction2()
		projectileConfig()
		materialMiningSound()
		generateName()
		isTreasurePool()
		hasTech()
		behaviorModule()
		itemConfig()
		treeStemDirectory()
		evalFunction()
		techConfig()
		npcConfig()
		setConfigurationPath()
		getConfigurationPath()
		materialHealth()
		materialFootstepSound()
		monsterMovementSettings()
		materialPath()
		setConfiguration()
		monsterPortrait()
		itemType()
		questConfig()
		recipesForItem()
		assetJson()
		treeFoliageDirectory()
		techType()
		liquidStatusEffects()
		makeCurrentVersionedJson()
		itemTags()
		tenantConfig()
		npcPortrait()
	}
	jsize()
	status = {
		setResourceLocked()
		resourcePercentage()
		addPersistentEffects()
		removeEphemeralEffect()
		resource()
		setResourcePercentage()
		resourcePositive()
		damageTakenSince()
		statPositive()
		stat()
		statusProperty()
		activeUniqueStatusEffectSummary()
		inflictedHitsSince()
		resourceMax()
		setStatusProperty()
		setPersistentEffects()
		resetAllResources()
		addEphemeralEffects()
		overConsumeResource()
		modifyResource()
		addEphemeralEffect()
		getPersistentEffects()
		resetResource()
		consumeResource()
		clearPersistentEffects()
		modifyResourcePercentage()
		clearEphemeralEffects()
		resourceNames()
		addPersistentEffect()
		resourceLocked()
		clearAllPersistentEffects()
		inflictedDamageSince()
		isResource()
		setResource()
		giveResource()
	}
	xpcall()
	getmetatable()
	utf8 = {
		len()
		codepoint()
		offset()
		codes()
		charpattern = "[
[23:07:02.570] [Info] [IC] [Sort] Time elapsed: 0.012
[23:11:07.574] [Warn] 	select()
	rawequal()
	rawset()
	string = {
		gmatch()
		char()
		sub()
		unpack()
		upper()
		lower()
		find()
		rep()
		dump()
		len()
		reverse()
		packsize()
		pack()
		byte()
		match()
		format()
		gsub()
	}
	require()
	pairs()
	next()
	jobject()
	math = {
		pi = 3.1415926535898
		rad()
		max()
		sqrt()
		random()
		floor()
		log()
		acos()
		fmod()
		mininteger = -9223372036854775808
		type()
		huge = inf
		randomseed()
		deg()
		exp()
		maxinteger = 9223372036854775807
		cos()
		min()
		tointeger()
		modf()
		asin()
		tan()
		atan()
		abs()
		sin()
		ult()
		ceil()
	}
	print()
	pcall()
	type()
	init()
	setmetatable()
	jresize()
	ic = {
		checkStack()
		itemAmount()
		stripColor()
		quickstack()
		itemConfig()
		amountEquipped()
		sortFunc()
		lock()
		giveBack()
		renameThis()
		sort()
		searchBox()
		sort_relative()
		clientVersion = 1
		renameButton()
		searchButton()
		getQuality()
	}
	player = {
		equippedTech()
		altHandItem()
		giveEssentialItem()
		consumeTaggedItem()
		setUniverseFlag()
		species()
		itemsWithTag()
		worldId()
		warp()
		completeMission()
		inventoryTags()
		upgradeShip()
		hasQuest()
		consumeItem()
		gender()
		primaryHandItem()
		essentialItem()
		equippedItem()
		setIntroComplete()
		playTime()
		enabledTechs()
		recordEvent()
		playCinematic()
		introComplete()
		hasCompletedQuest()
		makeTechAvailable()
		consumeItemWithParameter()
		startQuest()
		hasItemWithParameter()
		getItemWithParameter()
		lounge()
		enableTech()
		equipTech()
		enableMission()
		removeEssentialItem()
		isLounging()
		availableTechs()
		primaryHandItemTags()
		makeTechUnavailable()
		confirm()
		serverUuid()
		addBookmark()
		altHandItemTags()
		cleanupItems()
		radioMessage()
		setEquippedItem()
		ownShipWorldId()
		hasItem()
		canStartQuest()
		giveBlueprint()
		hasCountOfItem()
		shipUpgrades()
		giveItem()
	}
	config = {
		getParameter()
	}
	self = {
	}
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	world = {
		spawnItem()
		entityPosition()
		entityHealth()
		damageTileArea()
		day()
		placeMaterial()
		entityDescription()
		containerPutItemsAt()
		entityVelocity()
		damageTiles()
		entityHandItem()
		objectAt()
		setProperty()
		containerItemApply()
		containerClose()
		distance()
		findUniqueEntity()
		gravity()
		rectTileCollision()
		entitySpecies()
		platformerPathStart()
		containerOpen()
		containerTakeAll()
		breathable()
		npcType()
		containerAddItems()
		dayLength()
		loungeableOccupied()
		placeObject()
		isTileProtected()
		destroyLiquid()
		debugLine()
		spawnLiquid()
		entityCanDamage()
		containerItemsCanFit()
		xwrap()
		entityUniqueId()
		itemDropQuery()
		lightLevel()
		placeMod()
		spawnNpc()
		spawnTreasure()
		time()
		underground()
		spawnVehicle()
		spawnMonster()
		timeOfDay()
		findPlatformerPath()
		debugPoly()
		containerTakeNumItemsAt()
		isMonster()
		farmableStage()
		polyCollision()
		objectLineQuery()
		entityHasCountOfItem()
		entityHandItemDescriptor()
		tileIsOccupied()
		resolvePolyCollision()
		pointCollision()
		callScriptedEntity()
		collisionBlocksAlongLine()
		containerStackItems()
		objectSpaces()
		containerConsume()
		spawnStagehand()
		spawnProjectile()
		stagehandType()
		entityQuery()
		lineTileCollision()
		containerSwapItemsNoCombine()
		liquidAlongLine()
		playerQuery()
		objectQuery()
		entityGender()
		rectCollision()
		containerItemAt()
		polyContains()
		containerTakeAt()
		magnitude()
		mod()
		containerSwapItems()
		isNpc()
		lineCollision()
		getObjectParameter()
		debugPoint()
		pointTileCollision()
		containerItemsFitWhere()
		containerAvailable()
		getProperty()
		containerItems()
		threatLevel()
		entityType()
		sendEntityMessage()
		material()
		liquidAt()
		containerSize()
		debugText()
		monsterType()
		entityMoney()
		nearestTo()
		npcLineQuery()
		entityPortrait()
		entityName()
		entityDamageTeam()
		containerConsumeAt()
		entityAggressive()
		windLevel()
		monsterQuery()
		entityExists()
		loungeableQuery()
		npcQuery()
		entityLineQuery()
	}
	root = {
		createBiome()
		imageSpaces()
		createItem()
		loadVersionedJson()
		createTreasure()
		getMatchingTenants()
		monsterSkillParameter()
		getConfiguration()
		npcVariant()
		itemHasTag()
		imageSize()
		projectileGravityMultiplier()
		nonEmptyRegion()
		evalFunction2()
		projectileConfig()
		materialMiningSound()
		generateName()
		isTreasurePool()
		hasTech()
		behaviorModule()
		itemConfig()
		treeStemDirectory()
		evalFunction()
		techConfig()
		npcConfig()
		setConfigurationPath()
		getConfigurationPath()
		materialHealth()
		materialFootstepSound()
		monsterMovementSettings()
		materialPath()
		setConfiguration()
		monsterPortrait()
		itemType()
		questConfig()
		recipesForItem()
		assetJson()
		treeFoliageDirectory()
		techType()
		liquidStatusEffects()
		makeCurrentVersionedJson()
		itemTags()
		tenantConfig()
		npcPortrait()
	}
	jsize()
	status = {
		setResourceLocked()
		resourcePercentage()
		addPersistentEffects()
		removeEphemeralEffect()
		resource()
		setResourcePercentage()
		resourcePositive()
		damageTakenSince()
		statPositive()
		stat()
		statusProperty()
		activeUniqueStatusEffectSummary()
		inflictedHitsSince()
		resourceMax()
		setStatusProperty()
		setPersistentEffects()
		resetAllResources()
		addEphemeralEffects()
		overConsumeResource()
		modifyResource()
		addEphemeralEffect()
		getPersistentEffects()
		resetResource()
		consumeResource()
		clearPersistentEffects()
		modifyResourcePercentage()
		clearEphemeralEffects()
		resourceNames()
		addPersistentEffect()
		resourceLocked()
		clearAllPersistentEffects()
		inflictedDamageSince()
		isResource()
		setResource()
		giveResource()
	}
	xpcall()
	getmetatable()
	utf8 = {
		len()
		codepoint()
		offset()
		codes()
		charpattern = "[
[23:11:38.754] [Warn] 	select()
	rawequal()
	rawset()
	string = {
		gmatch()
		char()
		sub()
		unpack()
		upper()
		lower()
		find()
		rep()
		dump()
		len()
		reverse()
		packsize()
		pack()
		byte()
		match()
		format()
		gsub()
	}
	require()
	pairs()
	next()
	jobject()
	math = {
		pi = 3.1415926535898
		rad()
		max()
		sqrt()
		random()
		floor()
		log()
		acos()
		fmod()
		mininteger = -9223372036854775808
		type()
		huge = inf
		randomseed()
		deg()
		exp()
		maxinteger = 9223372036854775807
		cos()
		min()
		tointeger()
		modf()
		asin()
		tan()
		atan()
		abs()
		sin()
		ult()
		ceil()
	}
	print()
	pcall()
	type()
	init()
	setmetatable()
	jresize()
	ic = {
		checkStack()
		itemAmount()
		stripColor()
		quickstack()
		itemConfig()
		amountEquipped()
		sortFunc()
		lock()
		giveBack()
		renameThis()
		sort()
		searchBox()
		sort_relative()
		clientVersion = 1
		renameButton()
		searchButton()
		getQuality()
	}
	player = {
		equippedTech()
		altHandItem()
		giveEssentialItem()
		consumeTaggedItem()
		setUniverseFlag()
		species()
		itemsWithTag()
		worldId()
		warp()
		completeMission()
		inventoryTags()
		upgradeShip()
		hasQuest()
		consumeItem()
		gender()
		primaryHandItem()
		essentialItem()
		equippedItem()
		setIntroComplete()
		playTime()
		enabledTechs()
		recordEvent()
		playCinematic()
		introComplete()
		hasCompletedQuest()
		makeTechAvailable()
		consumeItemWithParameter()
		startQuest()
		hasItemWithParameter()
		getItemWithParameter()
		lounge()
		enableTech()
		equipTech()
		enableMission()
		removeEssentialItem()
		isLounging()
		availableTechs()
		primaryHandItemTags()
		makeTechUnavailable()
		confirm()
		serverUuid()
		addBookmark()
		altHandItemTags()
		cleanupItems()
		radioMessage()
		setEquippedItem()
		ownShipWorldId()
		hasItem()
		canStartQuest()
		giveBlueprint()
		hasCountOfItem()
		shipUpgrades()
		giveItem()
	}
	config = {
		getParameter()
	}
	self = {
	}
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	world = {
		spawnItem()
		entityPosition()
		entityHealth()
		damageTileArea()
		day()
		placeMaterial()
		entityDescription()
		containerPutItemsAt()
		entityVelocity()
		damageTiles()
		entityHandItem()
		objectAt()
		setProperty()
		containerItemApply()
		containerClose()
		distance()
		findUniqueEntity()
		gravity()
		rectTileCollision()
		entitySpecies()
		platformerPathStart()
		containerOpen()
		containerTakeAll()
		breathable()
		npcType()
		containerAddItems()
		dayLength()
		loungeableOccupied()
		placeObject()
		isTileProtected()
		destroyLiquid()
		debugLine()
		spawnLiquid()
		entityCanDamage()
		containerItemsCanFit()
		xwrap()
		entityUniqueId()
		itemDropQuery()
		lightLevel()
		placeMod()
		spawnNpc()
		spawnTreasure()
		time()
		underground()
		spawnVehicle()
		spawnMonster()
		timeOfDay()
		findPlatformerPath()
		debugPoly()
		containerTakeNumItemsAt()
		isMonster()
		farmableStage()
		polyCollision()
		objectLineQuery()
		entityHasCountOfItem()
		entityHandItemDescriptor()
		tileIsOccupied()
		resolvePolyCollision()
		pointCollision()
		callScriptedEntity()
		collisionBlocksAlongLine()
		containerStackItems()
		objectSpaces()
		containerConsume()
		spawnStagehand()
		spawnProjectile()
		stagehandType()
		entityQuery()
		lineTileCollision()
		containerSwapItemsNoCombine()
		liquidAlongLine()
		playerQuery()
		objectQuery()
		entityGender()
		rectCollision()
		containerItemAt()
		polyContains()
		containerTakeAt()
		magnitude()
		mod()
		containerSwapItems()
		isNpc()
		lineCollision()
		getObjectParameter()
		debugPoint()
		pointTileCollision()
		containerItemsFitWhere()
		containerAvailable()
		getProperty()
		containerItems()
		threatLevel()
		entityType()
		sendEntityMessage()
		material()
		liquidAt()
		containerSize()
		debugText()
		monsterType()
		entityMoney()
		nearestTo()
		npcLineQuery()
		entityPortrait()
		entityName()
		entityDamageTeam()
		containerConsumeAt()
		entityAggressive()
		windLevel()
		monsterQuery()
		entityExists()
		loungeableQuery()
		npcQuery()
		entityLineQuery()
	}
	root = {
		createBiome()
		imageSpaces()
		createItem()
		loadVersionedJson()
		createTreasure()
		getMatchingTenants()
		monsterSkillParameter()
		getConfiguration()
		npcVariant()
		itemHasTag()
		imageSize()
		projectileGravityMultiplier()
		nonEmptyRegion()
		evalFunction2()
		projectileConfig()
		materialMiningSound()
		generateName()
		isTreasurePool()
		hasTech()
		behaviorModule()
		itemConfig()
		treeStemDirectory()
		evalFunction()
		techConfig()
		npcConfig()
		setConfigurationPath()
		getConfigurationPath()
		materialHealth()
		materialFootstepSound()
		monsterMovementSettings()
		materialPath()
		setConfiguration()
		monsterPortrait()
		itemType()
		questConfig()
		recipesForItem()
		assetJson()
		treeFoliageDirectory()
		techType()
		liquidStatusEffects()
		makeCurrentVersionedJson()
		itemTags()
		tenantConfig()
		npcPortrait()
	}
	jsize()
	status = {
		setResourceLocked()
		resourcePercentage()
		addPersistentEffects()
		removeEphemeralEffect()
		resource()
		setResourcePercentage()
		resourcePositive()
		damageTakenSince()
		statPositive()
		stat()
		statusProperty()
		activeUniqueStatusEffectSummary()
		inflictedHitsSince()
		resourceMax()
		setStatusProperty()
		setPersistentEffects()
		resetAllResources()
		addEphemeralEffects()
		overConsumeResource()
		modifyResource()
		addEphemeralEffect()
		getPersistentEffects()
		resetResource()
		consumeResource()
		clearPersistentEffects()
		modifyResourcePercentage()
		clearEphemeralEffects()
		resourceNames()
		addPersistentEffect()
		resourceLocked()
		clearAllPersistentEffects()
		inflictedDamageSince()
		isResource()
		setResource()
		giveResource()
	}
	xpcall()
	getmetatable()
	utf8 = {
		len()
		codepoint()
		offset()
		codes()
		charpattern = "[
[23:11:44.764] [Warn] 	select()
	rawequal()
	rawset()
	string = {
		gmatch()
		char()
		sub()
		unpack()
		upper()
		lower()
		find()
		rep()
		dump()
		len()
		reverse()
		packsize()
		pack()
		byte()
		match()
		format()
		gsub()
	}
	require()
	pairs()
	next()
	jobject()
	math = {
		pi = 3.1415926535898
		rad()
		max()
		sqrt()
		random()
		floor()
		log()
		acos()
		fmod()
		mininteger = -9223372036854775808
		type()
		huge = inf
		randomseed()
		deg()
		exp()
		maxinteger = 9223372036854775807
		cos()
		min()
		tointeger()
		modf()
		asin()
		tan()
		atan()
		abs()
		sin()
		ult()
		ceil()
	}
	print()
	pcall()
	type()
	init()
	setmetatable()
	jresize()
	ic = {
		checkStack()
		itemAmount()
		stripColor()
		quickstack()
		itemConfig()
		amountEquipped()
		sortFunc()
		lock()
		giveBack()
		renameThis()
		sort()
		searchBox()
		sort_relative()
		clientVersion = 1
		renameButton()
		searchButton()
		getQuality()
	}
	player = {
		equippedTech()
		altHandItem()
		giveEssentialItem()
		consumeTaggedItem()
		setUniverseFlag()
		species()
		itemsWithTag()
		worldId()
		warp()
		completeMission()
		inventoryTags()
		upgradeShip()
		hasQuest()
		consumeItem()
		gender()
		primaryHandItem()
		essentialItem()
		equippedItem()
		setIntroComplete()
		playTime()
		enabledTechs()
		recordEvent()
		playCinematic()
		introComplete()
		hasCompletedQuest()
		makeTechAvailable()
		consumeItemWithParameter()
		startQuest()
		hasItemWithParameter()
		getItemWithParameter()
		lounge()
		enableTech()
		equipTech()
		enableMission()
		removeEssentialItem()
		isLounging()
		availableTechs()
		primaryHandItemTags()
		makeTechUnavailable()
		confirm()
		serverUuid()
		addBookmark()
		altHandItemTags()
		cleanupItems()
		radioMessage()
		setEquippedItem()
		ownShipWorldId()
		hasItem()
		canStartQuest()
		giveBlueprint()
		hasCountOfItem()
		shipUpgrades()
		giveItem()
	}
	config = {
		getParameter()
	}
	self = {
	}
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	world = {
		spawnItem()
		entityPosition()
		entityHealth()
		damageTileArea()
		day()
		placeMaterial()
		entityDescription()
		containerPutItemsAt()
		entityVelocity()
		damageTiles()
		entityHandItem()
		objectAt()
		setProperty()
		containerItemApply()
		containerClose()
		distance()
		findUniqueEntity()
		gravity()
		rectTileCollision()
		entitySpecies()
		platformerPathStart()
		containerOpen()
		containerTakeAll()
		breathable()
		npcType()
		containerAddItems()
		dayLength()
		loungeableOccupied()
		placeObject()
		isTileProtected()
		destroyLiquid()
		debugLine()
		spawnLiquid()
		entityCanDamage()
		containerItemsCanFit()
		xwrap()
		entityUniqueId()
		itemDropQuery()
		lightLevel()
		placeMod()
		spawnNpc()
		spawnTreasure()
		time()
		underground()
		spawnVehicle()
		spawnMonster()
		timeOfDay()
		findPlatformerPath()
		debugPoly()
		containerTakeNumItemsAt()
		isMonster()
		farmableStage()
		polyCollision()
		objectLineQuery()
		entityHasCountOfItem()
		entityHandItemDescriptor()
		tileIsOccupied()
		resolvePolyCollision()
		pointCollision()
		callScriptedEntity()
		collisionBlocksAlongLine()
		containerStackItems()
		objectSpaces()
		containerConsume()
		spawnStagehand()
		spawnProjectile()
		stagehandType()
		entityQuery()
		lineTileCollision()
		containerSwapItemsNoCombine()
		liquidAlongLine()
		playerQuery()
		objectQuery()
		entityGender()
		rectCollision()
		containerItemAt()
		polyContains()
		containerTakeAt()
		magnitude()
		mod()
		containerSwapItems()
		isNpc()
		lineCollision()
		getObjectParameter()
		debugPoint()
		pointTileCollision()
		containerItemsFitWhere()
		containerAvailable()
		getProperty()
		containerItems()
		threatLevel()
		entityType()
		sendEntityMessage()
		material()
		liquidAt()
		containerSize()
		debugText()
		monsterType()
		entityMoney()
		nearestTo()
		npcLineQuery()
		entityPortrait()
		entityName()
		entityDamageTeam()
		containerConsumeAt()
		entityAggressive()
		windLevel()
		monsterQuery()
		entityExists()
		loungeableQuery()
		npcQuery()
		entityLineQuery()
	}
	root = {
		createBiome()
		imageSpaces()
		createItem()
		loadVersionedJson()
		createTreasure()
		getMatchingTenants()
		monsterSkillParameter()
		getConfiguration()
		npcVariant()
		itemHasTag()
		imageSize()
		projectileGravityMultiplier()
		nonEmptyRegion()
		evalFunction2()
		projectileConfig()
		materialMiningSound()
		generateName()
		isTreasurePool()
		hasTech()
		behaviorModule()
		itemConfig()
		treeStemDirectory()
		evalFunction()
		techConfig()
		npcConfig()
		setConfigurationPath()
		getConfigurationPath()
		materialHealth()
		materialFootstepSound()
		monsterMovementSettings()
		materialPath()
		setConfiguration()
		monsterPortrait()
		itemType()
		questConfig()
		recipesForItem()
		assetJson()
		treeFoliageDirectory()
		techType()
		liquidStatusEffects()
		makeCurrentVersionedJson()
		itemTags()
		tenantConfig()
		npcPortrait()
	}
	jsize()
	status = {
		setResourceLocked()
		resourcePercentage()
		addPersistentEffects()
		removeEphemeralEffect()
		resource()
		setResourcePercentage()
		resourcePositive()
		damageTakenSince()
		statPositive()
		stat()
		statusProperty()
		activeUniqueStatusEffectSummary()
		inflictedHitsSince()
		resourceMax()
		setStatusProperty()
		setPersistentEffects()
		resetAllResources()
		addEphemeralEffects()
		overConsumeResource()
		modifyResource()
		addEphemeralEffect()
		getPersistentEffects()
		resetResource()
		consumeResource()
		clearPersistentEffects()
		modifyResourcePercentage()
		clearEphemeralEffects()
		resourceNames()
		addPersistentEffect()
		resourceLocked()
		clearAllPersistentEffects()
		inflictedDamageSince()
		isResource()
		setResource()
		giveResource()
	}
	xpcall()
	getmetatable()
	utf8 = {
		len()
		codepoint()
		offset()
		codes()
		charpattern = "[
[23:11:45.950] [Warn] 	select()
	rawequal()
	rawset()
	string = {
		gmatch()
		char()
		sub()
		unpack()
		upper()
		lower()
		find()
		rep()
		dump()
		len()
		reverse()
		packsize()
		pack()
		byte()
		match()
		format()
		gsub()
	}
	require()
	pairs()
	next()
	jobject()
	math = {
		pi = 3.1415926535898
		rad()
		max()
		sqrt()
		random()
		floor()
		log()
		acos()
		fmod()
		mininteger = -9223372036854775808
		type()
		huge = inf
		randomseed()
		deg()
		exp()
		maxinteger = 9223372036854775807
		cos()
		min()
		tointeger()
		modf()
		asin()
		tan()
		atan()
		abs()
		sin()
		ult()
		ceil()
	}
	print()
	pcall()
	type()
	init()
	setmetatable()
	jresize()
	ic = {
		checkStack()
		itemAmount()
		stripColor()
		quickstack()
		itemConfig()
		amountEquipped()
		sortFunc()
		lock()
		giveBack()
		renameThis()
		sort()
		searchBox()
		sort_relative()
		clientVersion = 1
		renameButton()
		searchButton()
		getQuality()
	}
	player = {
		equippedTech()
		altHandItem()
		giveEssentialItem()
		consumeTaggedItem()
		setUniverseFlag()
		species()
		itemsWithTag()
		worldId()
		warp()
		completeMission()
		inventoryTags()
		upgradeShip()
		hasQuest()
		consumeItem()
		gender()
		primaryHandItem()
		essentialItem()
		equippedItem()
		setIntroComplete()
		playTime()
		enabledTechs()
		recordEvent()
		playCinematic()
		introComplete()
		hasCompletedQuest()
		makeTechAvailable()
		consumeItemWithParameter()
		startQuest()
		hasItemWithParameter()
		getItemWithParameter()
		lounge()
		enableTech()
		equipTech()
		enableMission()
		removeEssentialItem()
		isLounging()
		availableTechs()
		primaryHandItemTags()
		makeTechUnavailable()
		confirm()
		serverUuid()
		addBookmark()
		altHandItemTags()
		cleanupItems()
		radioMessage()
		setEquippedItem()
		ownShipWorldId()
		hasItem()
		canStartQuest()
		giveBlueprint()
		hasCountOfItem()
		shipUpgrades()
		giveItem()
	}
	config = {
		getParameter()
	}
	self = {
	}
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	world = {
		spawnItem()
		entityPosition()
		entityHealth()
		damageTileArea()
		day()
		placeMaterial()
		entityDescription()
		containerPutItemsAt()
		entityVelocity()
		damageTiles()
		entityHandItem()
		objectAt()
		setProperty()
		containerItemApply()
		containerClose()
		distance()
		findUniqueEntity()
		gravity()
		rectTileCollision()
		entitySpecies()
		platformerPathStart()
		containerOpen()
		containerTakeAll()
		breathable()
		npcType()
		containerAddItems()
		dayLength()
		loungeableOccupied()
		placeObject()
		isTileProtected()
		destroyLiquid()
		debugLine()
		spawnLiquid()
		entityCanDamage()
		containerItemsCanFit()
		xwrap()
		entityUniqueId()
		itemDropQuery()
		lightLevel()
		placeMod()
		spawnNpc()
		spawnTreasure()
		time()
		underground()
		spawnVehicle()
		spawnMonster()
		timeOfDay()
		findPlatformerPath()
		debugPoly()
		containerTakeNumItemsAt()
		isMonster()
		farmableStage()
		polyCollision()
		objectLineQuery()
		entityHasCountOfItem()
		entityHandItemDescriptor()
		tileIsOccupied()
		resolvePolyCollision()
		pointCollision()
		callScriptedEntity()
		collisionBlocksAlongLine()
		containerStackItems()
		objectSpaces()
		containerConsume()
		spawnStagehand()
		spawnProjectile()
		stagehandType()
		entityQuery()
		lineTileCollision()
		containerSwapItemsNoCombine()
		liquidAlongLine()
		playerQuery()
		objectQuery()
		entityGender()
		rectCollision()
		containerItemAt()
		polyContains()
		containerTakeAt()
		magnitude()
		mod()
		containerSwapItems()
		isNpc()
		lineCollision()
		getObjectParameter()
		debugPoint()
		pointTileCollision()
		containerItemsFitWhere()
		containerAvailable()
		getProperty()
		containerItems()
		threatLevel()
		entityType()
		sendEntityMessage()
		material()
		liquidAt()
		containerSize()
		debugText()
		monsterType()
		entityMoney()
		nearestTo()
		npcLineQuery()
		entityPortrait()
		entityName()
		entityDamageTeam()
		containerConsumeAt()
		entityAggressive()
		windLevel()
		monsterQuery()
		entityExists()
		loungeableQuery()
		npcQuery()
		entityLineQuery()
	}
	root = {
		createBiome()
		imageSpaces()
		createItem()
		loadVersionedJson()
		createTreasure()
		getMatchingTenants()
		monsterSkillParameter()
		getConfiguration()
		npcVariant()
		itemHasTag()
		imageSize()
		projectileGravityMultiplier()
		nonEmptyRegion()
		evalFunction2()
		projectileConfig()
		materialMiningSound()
		generateName()
		isTreasurePool()
		hasTech()
		behaviorModule()
		itemConfig()
		treeStemDirectory()
		evalFunction()
		techConfig()
		npcConfig()
		setConfigurationPath()
		getConfigurationPath()
		materialHealth()
		materialFootstepSound()
		monsterMovementSettings()
		materialPath()
		setConfiguration()
		monsterPortrait()
		itemType()
		questConfig()
		recipesForItem()
		assetJson()
		treeFoliageDirectory()
		techType()
		liquidStatusEffects()
		makeCurrentVersionedJson()
		itemTags()
		tenantConfig()
		npcPortrait()
	}
	jsize()
	status = {
		setResourceLocked()
		resourcePercentage()
		addPersistentEffects()
		removeEphemeralEffect()
		resource()
		setResourcePercentage()
		resourcePositive()
		damageTakenSince()
		statPositive()
		stat()
		statusProperty()
		activeUniqueStatusEffectSummary()
		inflictedHitsSince()
		resourceMax()
		setStatusProperty()
		setPersistentEffects()
		resetAllResources()
		addEphemeralEffects()
		overConsumeResource()
		modifyResource()
		addEphemeralEffect()
		getPersistentEffects()
		resetResource()
		consumeResource()
		clearPersistentEffects()
		modifyResourcePercentage()
		clearEphemeralEffects()
		resourceNames()
		addPersistentEffect()
		resourceLocked()
		clearAllPersistentEffects()
		inflictedDamageSince()
		isResource()
		setResource()
		giveResource()
	}
	xpcall()
	getmetatable()
	utf8 = {
		len()
		codepoint()
		offset()
		codes()
		charpattern = "[
[23:11:47.156] [Warn] 	select()
	rawequal()
	rawset()
	string = {
		gmatch()
		char()
		sub()
		unpack()
		upper()
		lower()
		find()
		rep()
		dump()
		len()
		reverse()
		packsize()
		pack()
		byte()
		match()
		format()
		gsub()
	}
	require()
	pairs()
	next()
	jobject()
	math = {
		pi = 3.1415926535898
		rad()
		max()
		sqrt()
		random()
		floor()
		log()
		acos()
		fmod()
		mininteger = -9223372036854775808
		type()
		huge = inf
		randomseed()
		deg()
		exp()
		maxinteger = 9223372036854775807
		cos()
		min()
		tointeger()
		modf()
		asin()
		tan()
		atan()
		abs()
		sin()
		ult()
		ceil()
	}
	print()
	pcall()
	type()
	init()
	setmetatable()
	jresize()
	ic = {
		checkStack()
		itemAmount()
		stripColor()
		quickstack()
		itemConfig()
		amountEquipped()
		sortFunc()
		lock()
		giveBack()
		renameThis()
		sort()
		searchBox()
		sort_relative()
		clientVersion = 1
		renameButton()
		searchButton()
		getQuality()
	}
	player = {
		equippedTech()
		altHandItem()
		giveEssentialItem()
		consumeTaggedItem()
		setUniverseFlag()
		species()
		itemsWithTag()
		worldId()
		warp()
		completeMission()
		inventoryTags()
		upgradeShip()
		hasQuest()
		consumeItem()
		gender()
		primaryHandItem()
		essentialItem()
		equippedItem()
		setIntroComplete()
		playTime()
		enabledTechs()
		recordEvent()
		playCinematic()
		introComplete()
		hasCompletedQuest()
		makeTechAvailable()
		consumeItemWithParameter()
		startQuest()
		hasItemWithParameter()
		getItemWithParameter()
		lounge()
		enableTech()
		equipTech()
		enableMission()
		removeEssentialItem()
		isLounging()
		availableTechs()
		primaryHandItemTags()
		makeTechUnavailable()
		confirm()
		serverUuid()
		addBookmark()
		altHandItemTags()
		cleanupItems()
		radioMessage()
		setEquippedItem()
		ownShipWorldId()
		hasItem()
		canStartQuest()
		giveBlueprint()
		hasCountOfItem()
		shipUpgrades()
		giveItem()
	}
	config = {
		getParameter()
	}
	self = {
	}
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	world = {
		spawnItem()
		entityPosition()
		entityHealth()
		damageTileArea()
		day()
		placeMaterial()
		entityDescription()
		containerPutItemsAt()
		entityVelocity()
		damageTiles()
		entityHandItem()
		objectAt()
		setProperty()
		containerItemApply()
		containerClose()
		distance()
		findUniqueEntity()
		gravity()
		rectTileCollision()
		entitySpecies()
		platformerPathStart()
		containerOpen()
		containerTakeAll()
		breathable()
		npcType()
		containerAddItems()
		dayLength()
		loungeableOccupied()
		placeObject()
		isTileProtected()
		destroyLiquid()
		debugLine()
		spawnLiquid()
		entityCanDamage()
		containerItemsCanFit()
		xwrap()
		entityUniqueId()
		itemDropQuery()
		lightLevel()
		placeMod()
		spawnNpc()
		spawnTreasure()
		time()
		underground()
		spawnVehicle()
		spawnMonster()
		timeOfDay()
		findPlatformerPath()
		debugPoly()
		containerTakeNumItemsAt()
		isMonster()
		farmableStage()
		polyCollision()
		objectLineQuery()
		entityHasCountOfItem()
		entityHandItemDescriptor()
		tileIsOccupied()
		resolvePolyCollision()
		pointCollision()
		callScriptedEntity()
		collisionBlocksAlongLine()
		containerStackItems()
		objectSpaces()
		containerConsume()
		spawnStagehand()
		spawnProjectile()
		stagehandType()
		entityQuery()
		lineTileCollision()
		containerSwapItemsNoCombine()
		liquidAlongLine()
		playerQuery()
		objectQuery()
		entityGender()
		rectCollision()
		containerItemAt()
		polyContains()
		containerTakeAt()
		magnitude()
		mod()
		containerSwapItems()
		isNpc()
		lineCollision()
		getObjectParameter()
		debugPoint()
		pointTileCollision()
		containerItemsFitWhere()
		containerAvailable()
		getProperty()
		containerItems()
		threatLevel()
		entityType()
		sendEntityMessage()
		material()
		liquidAt()
		containerSize()
		debugText()
		monsterType()
		entityMoney()
		nearestTo()
		npcLineQuery()
		entityPortrait()
		entityName()
		entityDamageTeam()
		containerConsumeAt()
		entityAggressive()
		windLevel()
		monsterQuery()
		entityExists()
		loungeableQuery()
		npcQuery()
		entityLineQuery()
	}
	root = {
		createBiome()
		imageSpaces()
		createItem()
		loadVersionedJson()
		createTreasure()
		getMatchingTenants()
		monsterSkillParameter()
		getConfiguration()
		npcVariant()
		itemHasTag()
		imageSize()
		projectileGravityMultiplier()
		nonEmptyRegion()
		evalFunction2()
		projectileConfig()
		materialMiningSound()
		generateName()
		isTreasurePool()
		hasTech()
		behaviorModule()
		itemConfig()
		treeStemDirectory()
		evalFunction()
		techConfig()
		npcConfig()
		setConfigurationPath()
		getConfigurationPath()
		materialHealth()
		materialFootstepSound()
		monsterMovementSettings()
		materialPath()
		setConfiguration()
		monsterPortrait()
		itemType()
		questConfig()
		recipesForItem()
		assetJson()
		treeFoliageDirectory()
		techType()
		liquidStatusEffects()
		makeCurrentVersionedJson()
		itemTags()
		tenantConfig()
		npcPortrait()
	}
	jsize()
	status = {
		setResourceLocked()
		resourcePercentage()
		addPersistentEffects()
		removeEphemeralEffect()
		resource()
		setResourcePercentage()
		resourcePositive()
		damageTakenSince()
		statPositive()
		stat()
		statusProperty()
		activeUniqueStatusEffectSummary()
		inflictedHitsSince()
		resourceMax()
		setStatusProperty()
		setPersistentEffects()
		resetAllResources()
		addEphemeralEffects()
		overConsumeResource()
		modifyResource()
		addEphemeralEffect()
		getPersistentEffects()
		resetResource()
		consumeResource()
		clearPersistentEffects()
		modifyResourcePercentage()
		clearEphemeralEffects()
		resourceNames()
		addPersistentEffect()
		resourceLocked()
		clearAllPersistentEffects()
		inflictedDamageSince()
		isResource()
		setResource()
		giveResource()
	}
	xpcall()
	getmetatable()
	utf8 = {
		len()
		codepoint()
		offset()
		codes()
		charpattern = "[
[23:11:49.486] [Warn] 	select()
	rawequal()
	rawset()
	string = {
		gmatch()
		char()
		sub()
		unpack()
		upper()
		lower()
		find()
		rep()
		dump()
		len()
		reverse()
		packsize()
		pack()
		byte()
		match()
		format()
		gsub()
	}
	require()
	pairs()
	next()
	jobject()
	math = {
		pi = 3.1415926535898
		rad()
		max()
		sqrt()
		random()
		floor()
		log()
		acos()
		fmod()
		mininteger = -9223372036854775808
		type()
		huge = inf
		randomseed()
		deg()
		exp()
		maxinteger = 9223372036854775807
		cos()
		min()
		tointeger()
		modf()
		asin()
		tan()
		atan()
		abs()
		sin()
		ult()
		ceil()
	}
	print()
	pcall()
	type()
	init()
	setmetatable()
	jresize()
	ic = {
		checkStack()
		itemAmount()
		stripColor()
		quickstack()
		itemConfig()
		amountEquipped()
		sortFunc()
		lock()
		giveBack()
		renameThis()
		sort()
		searchBox()
		sort_relative()
		clientVersion = 1
		renameButton()
		searchButton()
		getQuality()
	}
	player = {
		equippedTech()
		altHandItem()
		giveEssentialItem()
		consumeTaggedItem()
		setUniverseFlag()
		species()
		itemsWithTag()
		worldId()
		warp()
		completeMission()
		inventoryTags()
		upgradeShip()
		hasQuest()
		consumeItem()
		gender()
		primaryHandItem()
		essentialItem()
		equippedItem()
		setIntroComplete()
		playTime()
		enabledTechs()
		recordEvent()
		playCinematic()
		introComplete()
		hasCompletedQuest()
		makeTechAvailable()
		consumeItemWithParameter()
		startQuest()
		hasItemWithParameter()
		getItemWithParameter()
		lounge()
		enableTech()
		equipTech()
		enableMission()
		removeEssentialItem()
		isLounging()
		availableTechs()
		primaryHandItemTags()
		makeTechUnavailable()
		confirm()
		serverUuid()
		addBookmark()
		altHandItemTags()
		cleanupItems()
		radioMessage()
		setEquippedItem()
		ownShipWorldId()
		hasItem()
		canStartQuest()
		giveBlueprint()
		hasCountOfItem()
		shipUpgrades()
		giveItem()
	}
	config = {
		getParameter()
	}
	self = {
	}
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	world = {
		spawnItem()
		entityPosition()
		entityHealth()
		damageTileArea()
		day()
		placeMaterial()
		entityDescription()
		containerPutItemsAt()
		entityVelocity()
		damageTiles()
		entityHandItem()
		objectAt()
		setProperty()
		containerItemApply()
		containerClose()
		distance()
		findUniqueEntity()
		gravity()
		rectTileCollision()
		entitySpecies()
		platformerPathStart()
		containerOpen()
		containerTakeAll()
		breathable()
		npcType()
		containerAddItems()
		dayLength()
		loungeableOccupied()
		placeObject()
		isTileProtected()
		destroyLiquid()
		debugLine()
		spawnLiquid()
		entityCanDamage()
		containerItemsCanFit()
		xwrap()
		entityUniqueId()
		itemDropQuery()
		lightLevel()
		placeMod()
		spawnNpc()
		spawnTreasure()
		time()
		underground()
		spawnVehicle()
		spawnMonster()
		timeOfDay()
		findPlatformerPath()
		debugPoly()
		containerTakeNumItemsAt()
		isMonster()
		farmableStage()
		polyCollision()
		objectLineQuery()
		entityHasCountOfItem()
		entityHandItemDescriptor()
		tileIsOccupied()
		resolvePolyCollision()
		pointCollision()
		callScriptedEntity()
		collisionBlocksAlongLine()
		containerStackItems()
		objectSpaces()
		containerConsume()
		spawnStagehand()
		spawnProjectile()
		stagehandType()
		entityQuery()
		lineTileCollision()
		containerSwapItemsNoCombine()
		liquidAlongLine()
		playerQuery()
		objectQuery()
		entityGender()
		rectCollision()
		containerItemAt()
		polyContains()
		containerTakeAt()
		magnitude()
		mod()
		containerSwapItems()
		isNpc()
		lineCollision()
		getObjectParameter()
		debugPoint()
		pointTileCollision()
		containerItemsFitWhere()
		containerAvailable()
		getProperty()
		containerItems()
		threatLevel()
		entityType()
		sendEntityMessage()
		material()
		liquidAt()
		containerSize()
		debugText()
		monsterType()
		entityMoney()
		nearestTo()
		npcLineQuery()
		entityPortrait()
		entityName()
		entityDamageTeam()
		containerConsumeAt()
		entityAggressive()
		windLevel()
		monsterQuery()
		entityExists()
		loungeableQuery()
		npcQuery()
		entityLineQuery()
	}
	root = {
		createBiome()
		imageSpaces()
		createItem()
		loadVersionedJson()
		createTreasure()
		getMatchingTenants()
		monsterSkillParameter()
		getConfiguration()
		npcVariant()
		itemHasTag()
		imageSize()
		projectileGravityMultiplier()
		nonEmptyRegion()
		evalFunction2()
		projectileConfig()
		materialMiningSound()
		generateName()
		isTreasurePool()
		hasTech()
		behaviorModule()
		itemConfig()
		treeStemDirectory()
		evalFunction()
		techConfig()
		npcConfig()
		setConfigurationPath()
		getConfigurationPath()
		materialHealth()
		materialFootstepSound()
		monsterMovementSettings()
		materialPath()
		setConfiguration()
		monsterPortrait()
		itemType()
		questConfig()
		recipesForItem()
		assetJson()
		treeFoliageDirectory()
		techType()
		liquidStatusEffects()
		makeCurrentVersionedJson()
		itemTags()
		tenantConfig()
		npcPortrait()
	}
	jsize()
	status = {
		setResourceLocked()
		resourcePercentage()
		addPersistentEffects()
		removeEphemeralEffect()
		resource()
		setResourcePercentage()
		resourcePositive()
		damageTakenSince()
		statPositive()
		stat()
		statusProperty()
		activeUniqueStatusEffectSummary()
		inflictedHitsSince()
		resourceMax()
		setStatusProperty()
		setPersistentEffects()
		resetAllResources()
		addEphemeralEffects()
		overConsumeResource()
		modifyResource()
		addEphemeralEffect()
		getPersistentEffects()
		resetResource()
		consumeResource()
		clearPersistentEffects()
		modifyResourcePercentage()
		clearEphemeralEffects()
		resourceNames()
		addPersistentEffect()
		resourceLocked()
		clearAllPersistentEffects()
		inflictedDamageSince()
		isResource()
		setResource()
		giveResource()
	}
	xpcall()
	getmetatable()
	utf8 = {
		len()
		codepoint()
		offset()
		codes()
		charpattern = "[
[23:11:51.464] [Warn] 	select()
	rawequal()
	rawset()
	string = {
		gmatch()
		char()
		sub()
		unpack()
		upper()
		lower()
		find()
		rep()
		dump()
		len()
		reverse()
		packsize()
		pack()
		byte()
		match()
		format()
		gsub()
	}
	require()
	pairs()
	next()
	jobject()
	math = {
		pi = 3.1415926535898
		rad()
		max()
		sqrt()
		random()
		floor()
		log()
		acos()
		fmod()
		mininteger = -9223372036854775808
		type()
		huge = inf
		randomseed()
		deg()
		exp()
		maxinteger = 9223372036854775807
		cos()
		min()
		tointeger()
		modf()
		asin()
		tan()
		atan()
		abs()
		sin()
		ult()
		ceil()
	}
	print()
	pcall()
	type()
	init()
	setmetatable()
	jresize()
	ic = {
		checkStack()
		itemAmount()
		stripColor()
		quickstack()
		itemConfig()
		amountEquipped()
		sortFunc()
		lock()
		giveBack()
		renameThis()
		sort()
		searchBox()
		sort_relative()
		clientVersion = 1
		renameButton()
		searchButton()
		getQuality()
	}
	player = {
		equippedTech()
		altHandItem()
		giveEssentialItem()
		consumeTaggedItem()
		setUniverseFlag()
		species()
		itemsWithTag()
		worldId()
		warp()
		completeMission()
		inventoryTags()
		upgradeShip()
		hasQuest()
		consumeItem()
		gender()
		primaryHandItem()
		essentialItem()
		equippedItem()
		setIntroComplete()
		playTime()
		enabledTechs()
		recordEvent()
		playCinematic()
		introComplete()
		hasCompletedQuest()
		makeTechAvailable()
		consumeItemWithParameter()
		startQuest()
		hasItemWithParameter()
		getItemWithParameter()
		lounge()
		enableTech()
		equipTech()
		enableMission()
		removeEssentialItem()
		isLounging()
		availableTechs()
		primaryHandItemTags()
		makeTechUnavailable()
		confirm()
		serverUuid()
		addBookmark()
		altHandItemTags()
		cleanupItems()
		radioMessage()
		setEquippedItem()
		ownShipWorldId()
		hasItem()
		canStartQuest()
		giveBlueprint()
		hasCountOfItem()
		shipUpgrades()
		giveItem()
	}
	config = {
		getParameter()
	}
	self = {
	}
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	world = {
		spawnItem()
		entityPosition()
		entityHealth()
		damageTileArea()
		day()
		placeMaterial()
		entityDescription()
		containerPutItemsAt()
		entityVelocity()
		damageTiles()
		entityHandItem()
		objectAt()
		setProperty()
		containerItemApply()
		containerClose()
		distance()
		findUniqueEntity()
		gravity()
		rectTileCollision()
		entitySpecies()
		platformerPathStart()
		containerOpen()
		containerTakeAll()
		breathable()
		npcType()
		containerAddItems()
		dayLength()
		loungeableOccupied()
		placeObject()
		isTileProtected()
		destroyLiquid()
		debugLine()
		spawnLiquid()
		entityCanDamage()
		containerItemsCanFit()
		xwrap()
		entityUniqueId()
		itemDropQuery()
		lightLevel()
		placeMod()
		spawnNpc()
		spawnTreasure()
		time()
		underground()
		spawnVehicle()
		spawnMonster()
		timeOfDay()
		findPlatformerPath()
		debugPoly()
		containerTakeNumItemsAt()
		isMonster()
		farmableStage()
		polyCollision()
		objectLineQuery()
		entityHasCountOfItem()
		entityHandItemDescriptor()
		tileIsOccupied()
		resolvePolyCollision()
		pointCollision()
		callScriptedEntity()
		collisionBlocksAlongLine()
		containerStackItems()
		objectSpaces()
		containerConsume()
		spawnStagehand()
		spawnProjectile()
		stagehandType()
		entityQuery()
		lineTileCollision()
		containerSwapItemsNoCombine()
		liquidAlongLine()
		playerQuery()
		objectQuery()
		entityGender()
		rectCollision()
		containerItemAt()
		polyContains()
		containerTakeAt()
		magnitude()
		mod()
		containerSwapItems()
		isNpc()
		lineCollision()
		getObjectParameter()
		debugPoint()
		pointTileCollision()
		containerItemsFitWhere()
		containerAvailable()
		getProperty()
		containerItems()
		threatLevel()
		entityType()
		sendEntityMessage()
		material()
		liquidAt()
		containerSize()
		debugText()
		monsterType()
		entityMoney()
		nearestTo()
		npcLineQuery()
		entityPortrait()
		entityName()
		entityDamageTeam()
		containerConsumeAt()
		entityAggressive()
		windLevel()
		monsterQuery()
		entityExists()
		loungeableQuery()
		npcQuery()
		entityLineQuery()
	}
	root = {
		createBiome()
		imageSpaces()
		createItem()
		loadVersionedJson()
		createTreasure()
		getMatchingTenants()
		monsterSkillParameter()
		getConfiguration()
		npcVariant()
		itemHasTag()
		imageSize()
		projectileGravityMultiplier()
		nonEmptyRegion()
		evalFunction2()
		projectileConfig()
		materialMiningSound()
		generateName()
		isTreasurePool()
		hasTech()
		behaviorModule()
		itemConfig()
		treeStemDirectory()
		evalFunction()
		techConfig()
		npcConfig()
		setConfigurationPath()
		getConfigurationPath()
		materialHealth()
		materialFootstepSound()
		monsterMovementSettings()
		materialPath()
		setConfiguration()
		monsterPortrait()
		itemType()
		questConfig()
		recipesForItem()
		assetJson()
		treeFoliageDirectory()
		techType()
		liquidStatusEffects()
		makeCurrentVersionedJson()
		itemTags()
		tenantConfig()
		npcPortrait()
	}
	jsize()
	status = {
		setResourceLocked()
		resourcePercentage()
		addPersistentEffects()
		removeEphemeralEffect()
		resource()
		setResourcePercentage()
		resourcePositive()
		damageTakenSince()
		statPositive()
		stat()
		statusProperty()
		activeUniqueStatusEffectSummary()
		inflictedHitsSince()
		resourceMax()
		setStatusProperty()
		setPersistentEffects()
		resetAllResources()
		addEphemeralEffects()
		overConsumeResource()
		modifyResource()
		addEphemeralEffect()
		getPersistentEffects()
		resetResource()
		consumeResource()
		clearPersistentEffects()
		modifyResourcePercentage()
		clearEphemeralEffects()
		resourceNames()
		addPersistentEffect()
		resourceLocked()
		clearAllPersistentEffects()
		inflictedDamageSince()
		isResource()
		setResource()
		giveResource()
	}
	xpcall()
	getmetatable()
	utf8 = {
		len()
		codepoint()
		offset()
		codes()
		charpattern = "[
[23:11:55.964] [Warn] 	select()
	rawequal()
	rawset()
	string = {
		gmatch()
		char()
		sub()
		unpack()
		upper()
		lower()
		find()
		rep()
		dump()
		len()
		reverse()
		packsize()
		pack()
		byte()
		match()
		format()
		gsub()
	}
	require()
	pairs()
	next()
	jobject()
	math = {
		pi = 3.1415926535898
		rad()
		max()
		sqrt()
		random()
		floor()
		log()
		acos()
		fmod()
		mininteger = -9223372036854775808
		type()
		huge = inf
		randomseed()
		deg()
		exp()
		maxinteger = 9223372036854775807
		cos()
		min()
		tointeger()
		modf()
		asin()
		tan()
		atan()
		abs()
		sin()
		ult()
		ceil()
	}
	print()
	pcall()
	type()
	init()
	setmetatable()
	jresize()
	ic = {
		checkStack()
		itemAmount()
		stripColor()
		quickstack()
		itemConfig()
		amountEquipped()
		sortFunc()
		lock()
		giveBack()
		renameThis()
		sort()
		searchBox()
		sort_relative()
		clientVersion = 1
		renameButton()
		searchButton()
		getQuality()
	}
	player = {
		equippedTech()
		altHandItem()
		giveEssentialItem()
		consumeTaggedItem()
		setUniverseFlag()
		species()
		itemsWithTag()
		worldId()
		warp()
		completeMission()
		inventoryTags()
		upgradeShip()
		hasQuest()
		consumeItem()
		gender()
		primaryHandItem()
		essentialItem()
		equippedItem()
		setIntroComplete()
		playTime()
		enabledTechs()
		recordEvent()
		playCinematic()
		introComplete()
		hasCompletedQuest()
		makeTechAvailable()
		consumeItemWithParameter()
		startQuest()
		hasItemWithParameter()
		getItemWithParameter()
		lounge()
		enableTech()
		equipTech()
		enableMission()
		removeEssentialItem()
		isLounging()
		availableTechs()
		primaryHandItemTags()
		makeTechUnavailable()
		confirm()
		serverUuid()
		addBookmark()
		altHandItemTags()
		cleanupItems()
		radioMessage()
		setEquippedItem()
		ownShipWorldId()
		hasItem()
		canStartQuest()
		giveBlueprint()
		hasCountOfItem()
		shipUpgrades()
		giveItem()
	}
	config = {
		getParameter()
	}
	self = {
	}
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	world = {
		spawnItem()
		entityPosition()
		entityHealth()
		damageTileArea()
		day()
		placeMaterial()
		entityDescription()
		containerPutItemsAt()
		entityVelocity()
		damageTiles()
		entityHandItem()
		objectAt()
		setProperty()
		containerItemApply()
		containerClose()
		distance()
		findUniqueEntity()
		gravity()
		rectTileCollision()
		entitySpecies()
		platformerPathStart()
		containerOpen()
		containerTakeAll()
		breathable()
		npcType()
		containerAddItems()
		dayLength()
		loungeableOccupied()
		placeObject()
		isTileProtected()
		destroyLiquid()
		debugLine()
		spawnLiquid()
		entityCanDamage()
		containerItemsCanFit()
		xwrap()
		entityUniqueId()
		itemDropQuery()
		lightLevel()
		placeMod()
		spawnNpc()
		spawnTreasure()
		time()
		underground()
		spawnVehicle()
		spawnMonster()
		timeOfDay()
		findPlatformerPath()
		debugPoly()
		containerTakeNumItemsAt()
		isMonster()
		farmableStage()
		polyCollision()
		objectLineQuery()
		entityHasCountOfItem()
		entityHandItemDescriptor()
		tileIsOccupied()
		resolvePolyCollision()
		pointCollision()
		callScriptedEntity()
		collisionBlocksAlongLine()
		containerStackItems()
		objectSpaces()
		containerConsume()
		spawnStagehand()
		spawnProjectile()
		stagehandType()
		entityQuery()
		lineTileCollision()
		containerSwapItemsNoCombine()
		liquidAlongLine()
		playerQuery()
		objectQuery()
		entityGender()
		rectCollision()
		containerItemAt()
		polyContains()
		containerTakeAt()
		magnitude()
		mod()
		containerSwapItems()
		isNpc()
		lineCollision()
		getObjectParameter()
		debugPoint()
		pointTileCollision()
		containerItemsFitWhere()
		containerAvailable()
		getProperty()
		containerItems()
		threatLevel()
		entityType()
		sendEntityMessage()
		material()
		liquidAt()
		containerSize()
		debugText()
		monsterType()
		entityMoney()
		nearestTo()
		npcLineQuery()
		entityPortrait()
		entityName()
		entityDamageTeam()
		containerConsumeAt()
		entityAggressive()
		windLevel()
		monsterQuery()
		entityExists()
		loungeableQuery()
		npcQuery()
		entityLineQuery()
	}
	root = {
		createBiome()
		imageSpaces()
		createItem()
		loadVersionedJson()
		createTreasure()
		getMatchingTenants()
		monsterSkillParameter()
		getConfiguration()
		npcVariant()
		itemHasTag()
		imageSize()
		projectileGravityMultiplier()
		nonEmptyRegion()
		evalFunction2()
		projectileConfig()
		materialMiningSound()
		generateName()
		isTreasurePool()
		hasTech()
		behaviorModule()
		itemConfig()
		treeStemDirectory()
		evalFunction()
		techConfig()
		npcConfig()
		setConfigurationPath()
		getConfigurationPath()
		materialHealth()
		materialFootstepSound()
		monsterMovementSettings()
		materialPath()
		setConfiguration()
		monsterPortrait()
		itemType()
		questConfig()
		recipesForItem()
		assetJson()
		treeFoliageDirectory()
		techType()
		liquidStatusEffects()
		makeCurrentVersionedJson()
		itemTags()
		tenantConfig()
		npcPortrait()
	}
	jsize()
	status = {
		setResourceLocked()
		resourcePercentage()
		addPersistentEffects()
		removeEphemeralEffect()
		resource()
		setResourcePercentage()
		resourcePositive()
		damageTakenSince()
		statPositive()
		stat()
		statusProperty()
		activeUniqueStatusEffectSummary()
		inflictedHitsSince()
		resourceMax()
		setStatusProperty()
		setPersistentEffects()
		resetAllResources()
		addEphemeralEffects()
		overConsumeResource()
		modifyResource()
		addEphemeralEffect()
		getPersistentEffects()
		resetResource()
		consumeResource()
		clearPersistentEffects()
		modifyResourcePercentage()
		clearEphemeralEffects()
		resourceNames()
		addPersistentEffect()
		resourceLocked()
		clearAllPersistentEffects()
		inflictedDamageSince()
		isResource()
		setResource()
		giveResource()
	}
	xpcall()
	getmetatable()
	utf8 = {
		len()
		codepoint()
		offset()
		codes()
		charpattern = "[
[23:11:57.502] [Warn] 	select()
	rawequal()
	rawset()
	string = {
		gmatch()
		char()
		sub()
		unpack()
		upper()
		lower()
		find()
		rep()
		dump()
		len()
		reverse()
		packsize()
		pack()
		byte()
		match()
		format()
		gsub()
	}
	require()
	pairs()
	next()
	jobject()
	math = {
		pi = 3.1415926535898
		rad()
		max()
		sqrt()
		random()
		floor()
		log()
		acos()
		fmod()
		mininteger = -9223372036854775808
		type()
		huge = inf
		randomseed()
		deg()
		exp()
		maxinteger = 9223372036854775807
		cos()
		min()
		tointeger()
		modf()
		asin()
		tan()
		atan()
		abs()
		sin()
		ult()
		ceil()
	}
	print()
	pcall()
	type()
	init()
	setmetatable()
	jresize()
	ic = {
		checkStack()
		itemAmount()
		stripColor()
		quickstack()
		itemConfig()
		amountEquipped()
		sortFunc()
		lock()
		giveBack()
		renameThis()
		sort()
		searchBox()
		sort_relative()
		clientVersion = 1
		renameButton()
		searchButton()
		getQuality()
	}
	player = {
		equippedTech()
		altHandItem()
		giveEssentialItem()
		consumeTaggedItem()
		setUniverseFlag()
		species()
		itemsWithTag()
		worldId()
		warp()
		completeMission()
		inventoryTags()
		upgradeShip()
		hasQuest()
		consumeItem()
		gender()
		primaryHandItem()
		essentialItem()
		equippedItem()
		setIntroComplete()
		playTime()
		enabledTechs()
		recordEvent()
		playCinematic()
		introComplete()
		hasCompletedQuest()
		makeTechAvailable()
		consumeItemWithParameter()
		startQuest()
		hasItemWithParameter()
		getItemWithParameter()
		lounge()
		enableTech()
		equipTech()
		enableMission()
		removeEssentialItem()
		isLounging()
		availableTechs()
		primaryHandItemTags()
		makeTechUnavailable()
		confirm()
		serverUuid()
		addBookmark()
		altHandItemTags()
		cleanupItems()
		radioMessage()
		setEquippedItem()
		ownShipWorldId()
		hasItem()
		canStartQuest()
		giveBlueprint()
		hasCountOfItem()
		shipUpgrades()
		giveItem()
	}
	config = {
		getParameter()
	}
	self = {
	}
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	world = {
		spawnItem()
		entityPosition()
		entityHealth()
		damageTileArea()
		day()
		placeMaterial()
		entityDescription()
		containerPutItemsAt()
		entityVelocity()
		damageTiles()
		entityHandItem()
		objectAt()
		setProperty()
		containerItemApply()
		containerClose()
		distance()
		findUniqueEntity()
		gravity()
		rectTileCollision()
		entitySpecies()
		platformerPathStart()
		containerOpen()
		containerTakeAll()
		breathable()
		npcType()
		containerAddItems()
		dayLength()
		loungeableOccupied()
		placeObject()
		isTileProtected()
		destroyLiquid()
		debugLine()
		spawnLiquid()
		entityCanDamage()
		containerItemsCanFit()
		xwrap()
		entityUniqueId()
		itemDropQuery()
		lightLevel()
		placeMod()
		spawnNpc()
		spawnTreasure()
		time()
		underground()
		spawnVehicle()
		spawnMonster()
		timeOfDay()
		findPlatformerPath()
		debugPoly()
		containerTakeNumItemsAt()
		isMonster()
		farmableStage()
		polyCollision()
		objectLineQuery()
		entityHasCountOfItem()
		entityHandItemDescriptor()
		tileIsOccupied()
		resolvePolyCollision()
		pointCollision()
		callScriptedEntity()
		collisionBlocksAlongLine()
		containerStackItems()
		objectSpaces()
		containerConsume()
		spawnStagehand()
		spawnProjectile()
		stagehandType()
		entityQuery()
		lineTileCollision()
		containerSwapItemsNoCombine()
		liquidAlongLine()
		playerQuery()
		objectQuery()
		entityGender()
		rectCollision()
		containerItemAt()
		polyContains()
		containerTakeAt()
		magnitude()
		mod()
		containerSwapItems()
		isNpc()
		lineCollision()
		getObjectParameter()
		debugPoint()
		pointTileCollision()
		containerItemsFitWhere()
		containerAvailable()
		getProperty()
		containerItems()
		threatLevel()
		entityType()
		sendEntityMessage()
		material()
		liquidAt()
		containerSize()
		debugText()
		monsterType()
		entityMoney()
		nearestTo()
		npcLineQuery()
		entityPortrait()
		entityName()
		entityDamageTeam()
		containerConsumeAt()
		entityAggressive()
		windLevel()
		monsterQuery()
		entityExists()
		loungeableQuery()
		npcQuery()
		entityLineQuery()
	}
	root = {
		createBiome()
		imageSpaces()
		createItem()
		loadVersionedJson()
		createTreasure()
		getMatchingTenants()
		monsterSkillParameter()
		getConfiguration()
		npcVariant()
		itemHasTag()
		imageSize()
		projectileGravityMultiplier()
		nonEmptyRegion()
		evalFunction2()
		projectileConfig()
		materialMiningSound()
		generateName()
		isTreasurePool()
		hasTech()
		behaviorModule()
		itemConfig()
		treeStemDirectory()
		evalFunction()
		techConfig()
		npcConfig()
		setConfigurationPath()
		getConfigurationPath()
		materialHealth()
		materialFootstepSound()
		monsterMovementSettings()
		materialPath()
		setConfiguration()
		monsterPortrait()
		itemType()
		questConfig()
		recipesForItem()
		assetJson()
		treeFoliageDirectory()
		techType()
		liquidStatusEffects()
		makeCurrentVersionedJson()
		itemTags()
		tenantConfig()
		npcPortrait()
	}
	jsize()
	status = {
		setResourceLocked()
		resourcePercentage()
		addPersistentEffects()
		removeEphemeralEffect()
		resource()
		setResourcePercentage()
		resourcePositive()
		damageTakenSince()
		statPositive()
		stat()
		statusProperty()
		activeUniqueStatusEffectSummary()
		inflictedHitsSince()
		resourceMax()
		setStatusProperty()
		setPersistentEffects()
		resetAllResources()
		addEphemeralEffects()
		overConsumeResource()
		modifyResource()
		addEphemeralEffect()
		getPersistentEffects()
		resetResource()
		consumeResource()
		clearPersistentEffects()
		modifyResourcePercentage()
		clearEphemeralEffects()
		resourceNames()
		addPersistentEffect()
		resourceLocked()
		clearAllPersistentEffects()
		inflictedDamageSince()
		isResource()
		setResource()
		giveResource()
	}
	xpcall()
	getmetatable()
	utf8 = {
		len()
		codepoint()
		offset()
		codes()
		charpattern = "[
[23:12:09.631] [Warn] 	select()
	rawequal()
	rawset()
	string = {
		gmatch()
		char()
		sub()
		unpack()
		upper()
		lower()
		find()
		rep()
		dump()
		len()
		reverse()
		packsize()
		pack()
		byte()
		match()
		format()
		gsub()
	}
	require()
	pairs()
	next()
	jobject()
	math = {
		pi = 3.1415926535898
		rad()
		max()
		sqrt()
		random()
		floor()
		log()
		acos()
		fmod()
		mininteger = -9223372036854775808
		type()
		huge = inf
		randomseed()
		deg()
		exp()
		maxinteger = 9223372036854775807
		cos()
		min()
		tointeger()
		modf()
		asin()
		tan()
		atan()
		abs()
		sin()
		ult()
		ceil()
	}
	print()
	pcall()
	type()
	init()
	setmetatable()
	jresize()
	ic = {
		checkStack()
		itemAmount()
		stripColor()
		quickstack()
		itemConfig()
		amountEquipped()
		sortFunc()
		lock()
		giveBack()
		renameThis()
		sort()
		searchBox()
		sort_relative()
		clientVersion = 1
		renameButton()
		searchButton()
		getQuality()
	}
	player = {
		equippedTech()
		altHandItem()
		giveEssentialItem()
		consumeTaggedItem()
		setUniverseFlag()
		species()
		itemsWithTag()
		worldId()
		warp()
		completeMission()
		inventoryTags()
		upgradeShip()
		hasQuest()
		consumeItem()
		gender()
		primaryHandItem()
		essentialItem()
		equippedItem()
		setIntroComplete()
		playTime()
		enabledTechs()
		recordEvent()
		playCinematic()
		introComplete()
		hasCompletedQuest()
		makeTechAvailable()
		consumeItemWithParameter()
		startQuest()
		hasItemWithParameter()
		getItemWithParameter()
		lounge()
		enableTech()
		equipTech()
		enableMission()
		removeEssentialItem()
		isLounging()
		availableTechs()
		primaryHandItemTags()
		makeTechUnavailable()
		confirm()
		serverUuid()
		addBookmark()
		altHandItemTags()
		cleanupItems()
		radioMessage()
		setEquippedItem()
		ownShipWorldId()
		hasItem()
		canStartQuest()
		giveBlueprint()
		hasCountOfItem()
		shipUpgrades()
		giveItem()
	}
	config = {
		getParameter()
	}
	self = {
	}
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	world = {
		spawnItem()
		entityPosition()
		entityHealth()
		damageTileArea()
		day()
		placeMaterial()
		entityDescription()
		containerPutItemsAt()
		entityVelocity()
		damageTiles()
		entityHandItem()
		objectAt()
		setProperty()
		containerItemApply()
		containerClose()
		distance()
		findUniqueEntity()
		gravity()
		rectTileCollision()
		entitySpecies()
		platformerPathStart()
		containerOpen()
		containerTakeAll()
		breathable()
		npcType()
		containerAddItems()
		dayLength()
		loungeableOccupied()
		placeObject()
		isTileProtected()
		destroyLiquid()
		debugLine()
		spawnLiquid()
		entityCanDamage()
		containerItemsCanFit()
		xwrap()
		entityUniqueId()
		itemDropQuery()
		lightLevel()
		placeMod()
		spawnNpc()
		spawnTreasure()
		time()
		underground()
		spawnVehicle()
		spawnMonster()
		timeOfDay()
		findPlatformerPath()
		debugPoly()
		containerTakeNumItemsAt()
		isMonster()
		farmableStage()
		polyCollision()
		objectLineQuery()
		entityHasCountOfItem()
		entityHandItemDescriptor()
		tileIsOccupied()
		resolvePolyCollision()
		pointCollision()
		callScriptedEntity()
		collisionBlocksAlongLine()
		containerStackItems()
		objectSpaces()
		containerConsume()
		spawnStagehand()
		spawnProjectile()
		stagehandType()
		entityQuery()
		lineTileCollision()
		containerSwapItemsNoCombine()
		liquidAlongLine()
		playerQuery()
		objectQuery()
		entityGender()
		rectCollision()
		containerItemAt()
		polyContains()
		containerTakeAt()
		magnitude()
		mod()
		containerSwapItems()
		isNpc()
		lineCollision()
		getObjectParameter()
		debugPoint()
		pointTileCollision()
		containerItemsFitWhere()
		containerAvailable()
		getProperty()
		containerItems()
		threatLevel()
		entityType()
		sendEntityMessage()
		material()
		liquidAt()
		containerSize()
		debugText()
		monsterType()
		entityMoney()
		nearestTo()
		npcLineQuery()
		entityPortrait()
		entityName()
		entityDamageTeam()
		containerConsumeAt()
		entityAggressive()
		windLevel()
		monsterQuery()
		entityExists()
		loungeableQuery()
		npcQuery()
		entityLineQuery()
	}
	root = {
		createBiome()
		imageSpaces()
		createItem()
		loadVersionedJson()
		createTreasure()
		getMatchingTenants()
		monsterSkillParameter()
		getConfiguration()
		npcVariant()
		itemHasTag()
		imageSize()
		projectileGravityMultiplier()
		nonEmptyRegion()
		evalFunction2()
		projectileConfig()
		materialMiningSound()
		generateName()
		isTreasurePool()
		hasTech()
		behaviorModule()
		itemConfig()
		treeStemDirectory()
		evalFunction()
		techConfig()
		npcConfig()
		setConfigurationPath()
		getConfigurationPath()
		materialHealth()
		materialFootstepSound()
		monsterMovementSettings()
		materialPath()
		setConfiguration()
		monsterPortrait()
		itemType()
		questConfig()
		recipesForItem()
		assetJson()
		treeFoliageDirectory()
		techType()
		liquidStatusEffects()
		makeCurrentVersionedJson()
		itemTags()
		tenantConfig()
		npcPortrait()
	}
	jsize()
	status = {
		setResourceLocked()
		resourcePercentage()
		addPersistentEffects()
		removeEphemeralEffect()
		resource()
		setResourcePercentage()
		resourcePositive()
		damageTakenSince()
		statPositive()
		stat()
		statusProperty()
		activeUniqueStatusEffectSummary()
		inflictedHitsSince()
		resourceMax()
		setStatusProperty()
		setPersistentEffects()
		resetAllResources()
		addEphemeralEffects()
		overConsumeResource()
		modifyResource()
		addEphemeralEffect()
		getPersistentEffects()
		resetResource()
		consumeResource()
		clearPersistentEffects()
		modifyResourcePercentage()
		clearEphemeralEffects()
		resourceNames()
		addPersistentEffect()
		resourceLocked()
		clearAllPersistentEffects()
		inflictedDamageSince()
		isResource()
		setResource()
		giveResource()
	}
	xpcall()
	getmetatable()
	utf8 = {
		len()
		codepoint()
		offset()
		codes()
		charpattern = "[
[23:12:45.880] [Warn] 	select()
	rawequal()
	rawset()
	string = {
		gmatch()
		char()
		sub()
		unpack()
		upper()
		lower()
		find()
		rep()
		dump()
		len()
		reverse()
		packsize()
		pack()
		byte()
		match()
		format()
		gsub()
	}
	require()
	pairs()
	next()
	jobject()
	math = {
		pi = 3.1415926535898
		rad()
		max()
		sqrt()
		random()
		floor()
		log()
		acos()
		fmod()
		mininteger = -9223372036854775808
		type()
		huge = inf
		randomseed()
		deg()
		exp()
		maxinteger = 9223372036854775807
		cos()
		min()
		tointeger()
		modf()
		asin()
		tan()
		atan()
		abs()
		sin()
		ult()
		ceil()
	}
	print()
	pcall()
	type()
	init()
	setmetatable()
	jresize()
	ic = {
		checkStack()
		itemAmount()
		stripColor()
		quickstack()
		itemConfig()
		amountEquipped()
		sortFunc()
		lock()
		giveBack()
		renameThis()
		sort()
		searchBox()
		sort_relative()
		clientVersion = 1
		renameButton()
		searchButton()
		getQuality()
	}
	player = {
		equippedTech()
		altHandItem()
		giveEssentialItem()
		consumeTaggedItem()
		setUniverseFlag()
		species()
		itemsWithTag()
		worldId()
		warp()
		completeMission()
		inventoryTags()
		upgradeShip()
		hasQuest()
		consumeItem()
		gender()
		primaryHandItem()
		essentialItem()
		equippedItem()
		setIntroComplete()
		playTime()
		enabledTechs()
		recordEvent()
		playCinematic()
		introComplete()
		hasCompletedQuest()
		makeTechAvailable()
		consumeItemWithParameter()
		startQuest()
		hasItemWithParameter()
		getItemWithParameter()
		lounge()
		enableTech()
		equipTech()
		enableMission()
		removeEssentialItem()
		isLounging()
		availableTechs()
		primaryHandItemTags()
		makeTechUnavailable()
		confirm()
		serverUuid()
		addBookmark()
		altHandItemTags()
		cleanupItems()
		radioMessage()
		setEquippedItem()
		ownShipWorldId()
		hasItem()
		canStartQuest()
		giveBlueprint()
		hasCountOfItem()
		shipUpgrades()
		giveItem()
	}
	config = {
		getParameter()
	}
	self = {
	}
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	world = {
		spawnItem()
		entityPosition()
		entityHealth()
		damageTileArea()
		day()
		placeMaterial()
		entityDescription()
		containerPutItemsAt()
		entityVelocity()
		damageTiles()
		entityHandItem()
		objectAt()
		setProperty()
		containerItemApply()
		containerClose()
		distance()
		findUniqueEntity()
		gravity()
		rectTileCollision()
		entitySpecies()
		platformerPathStart()
		containerOpen()
		containerTakeAll()
		breathable()
		npcType()
		containerAddItems()
		dayLength()
		loungeableOccupied()
		placeObject()
		isTileProtected()
		destroyLiquid()
		debugLine()
		spawnLiquid()
		entityCanDamage()
		containerItemsCanFit()
		xwrap()
		entityUniqueId()
		itemDropQuery()
		lightLevel()
		placeMod()
		spawnNpc()
		spawnTreasure()
		time()
		underground()
		spawnVehicle()
		spawnMonster()
		timeOfDay()
		findPlatformerPath()
		debugPoly()
		containerTakeNumItemsAt()
		isMonster()
		farmableStage()
		polyCollision()
		objectLineQuery()
		entityHasCountOfItem()
		entityHandItemDescriptor()
		tileIsOccupied()
		resolvePolyCollision()
		pointCollision()
		callScriptedEntity()
		collisionBlocksAlongLine()
		containerStackItems()
		objectSpaces()
		containerConsume()
		spawnStagehand()
		spawnProjectile()
		stagehandType()
		entityQuery()
		lineTileCollision()
		containerSwapItemsNoCombine()
		liquidAlongLine()
		playerQuery()
		objectQuery()
		entityGender()
		rectCollision()
		containerItemAt()
		polyContains()
		containerTakeAt()
		magnitude()
		mod()
		containerSwapItems()
		isNpc()
		lineCollision()
		getObjectParameter()
		debugPoint()
		pointTileCollision()
		containerItemsFitWhere()
		containerAvailable()
		getProperty()
		containerItems()
		threatLevel()
		entityType()
		sendEntityMessage()
		material()
		liquidAt()
		containerSize()
		debugText()
		monsterType()
		entityMoney()
		nearestTo()
		npcLineQuery()
		entityPortrait()
		entityName()
		entityDamageTeam()
		containerConsumeAt()
		entityAggressive()
		windLevel()
		monsterQuery()
		entityExists()
		loungeableQuery()
		npcQuery()
		entityLineQuery()
	}
	root = {
		createBiome()
		imageSpaces()
		createItem()
		loadVersionedJson()
		createTreasure()
		getMatchingTenants()
		monsterSkillParameter()
		getConfiguration()
		npcVariant()
		itemHasTag()
		imageSize()
		projectileGravityMultiplier()
		nonEmptyRegion()
		evalFunction2()
		projectileConfig()
		materialMiningSound()
		generateName()
		isTreasurePool()
		hasTech()
		behaviorModule()
		itemConfig()
		treeStemDirectory()
		evalFunction()
		techConfig()
		npcConfig()
		setConfigurationPath()
		getConfigurationPath()
		materialHealth()
		materialFootstepSound()
		monsterMovementSettings()
		materialPath()
		setConfiguration()
		monsterPortrait()
		itemType()
		questConfig()
		recipesForItem()
		assetJson()
		treeFoliageDirectory()
		techType()
		liquidStatusEffects()
		makeCurrentVersionedJson()
		itemTags()
		tenantConfig()
		npcPortrait()
	}
	jsize()
	status = {
		setResourceLocked()
		resourcePercentage()
		addPersistentEffects()
		removeEphemeralEffect()
		resource()
		setResourcePercentage()
		resourcePositive()
		damageTakenSince()
		statPositive()
		stat()
		statusProperty()
		activeUniqueStatusEffectSummary()
		inflictedHitsSince()
		resourceMax()
		setStatusProperty()
		setPersistentEffects()
		resetAllResources()
		addEphemeralEffects()
		overConsumeResource()
		modifyResource()
		addEphemeralEffect()
		getPersistentEffects()
		resetResource()
		consumeResource()
		clearPersistentEffects()
		modifyResourcePercentage()
		clearEphemeralEffects()
		resourceNames()
		addPersistentEffect()
		resourceLocked()
		clearAllPersistentEffects()
		inflictedDamageSince()
		isResource()
		setResource()
		giveResource()
	}
	xpcall()
	getmetatable()
	utf8 = {
		len()
		codepoint()
		offset()
		codes()
		charpattern = "[
[23:12:47.349] [Warn] 	select()
	rawequal()
	rawset()
	string = {
		gmatch()
		char()
		sub()
		unpack()
		upper()
		lower()
		find()
		rep()
		dump()
		len()
		reverse()
		packsize()
		pack()
		byte()
		match()
		format()
		gsub()
	}
	require()
	pairs()
	next()
	jobject()
	math = {
		pi = 3.1415926535898
		rad()
		max()
		sqrt()
		random()
		floor()
		log()
		acos()
		fmod()
		mininteger = -9223372036854775808
		type()
		huge = inf
		randomseed()
		deg()
		exp()
		maxinteger = 9223372036854775807
		cos()
		min()
		tointeger()
		modf()
		asin()
		tan()
		atan()
		abs()
		sin()
		ult()
		ceil()
	}
	print()
	pcall()
	type()
	init()
	setmetatable()
	jresize()
	ic = {
		checkStack()
		itemAmount()
		stripColor()
		quickstack()
		itemConfig()
		amountEquipped()
		sortFunc()
		lock()
		giveBack()
		renameThis()
		sort()
		searchBox()
		sort_relative()
		clientVersion = 1
		renameButton()
		searchButton()
		getQuality()
	}
	player = {
		equippedTech()
		altHandItem()
		giveEssentialItem()
		consumeTaggedItem()
		setUniverseFlag()
		species()
		itemsWithTag()
		worldId()
		warp()
		completeMission()
		inventoryTags()
		upgradeShip()
		hasQuest()
		consumeItem()
		gender()
		primaryHandItem()
		essentialItem()
		equippedItem()
		setIntroComplete()
		playTime()
		enabledTechs()
		recordEvent()
		playCinematic()
		introComplete()
		hasCompletedQuest()
		makeTechAvailable()
		consumeItemWithParameter()
		startQuest()
		hasItemWithParameter()
		getItemWithParameter()
		lounge()
		enableTech()
		equipTech()
		enableMission()
		removeEssentialItem()
		isLounging()
		availableTechs()
		primaryHandItemTags()
		makeTechUnavailable()
		confirm()
		serverUuid()
		addBookmark()
		altHandItemTags()
		cleanupItems()
		radioMessage()
		setEquippedItem()
		ownShipWorldId()
		hasItem()
		canStartQuest()
		giveBlueprint()
		hasCountOfItem()
		shipUpgrades()
		giveItem()
	}
	config = {
		getParameter()
	}
	self = {
	}
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	world = {
		spawnItem()
		entityPosition()
		entityHealth()
		damageTileArea()
		day()
		placeMaterial()
		entityDescription()
		containerPutItemsAt()
		entityVelocity()
		damageTiles()
		entityHandItem()
		objectAt()
		setProperty()
		containerItemApply()
		containerClose()
		distance()
		findUniqueEntity()
		gravity()
		rectTileCollision()
		entitySpecies()
		platformerPathStart()
		containerOpen()
		containerTakeAll()
		breathable()
		npcType()
		containerAddItems()
		dayLength()
		loungeableOccupied()
		placeObject()
		isTileProtected()
		destroyLiquid()
		debugLine()
		spawnLiquid()
		entityCanDamage()
		containerItemsCanFit()
		xwrap()
		entityUniqueId()
		itemDropQuery()
		lightLevel()
		placeMod()
		spawnNpc()
		spawnTreasure()
		time()
		underground()
		spawnVehicle()
		spawnMonster()
		timeOfDay()
		findPlatformerPath()
		debugPoly()
		containerTakeNumItemsAt()
		isMonster()
		farmableStage()
		polyCollision()
		objectLineQuery()
		entityHasCountOfItem()
		entityHandItemDescriptor()
		tileIsOccupied()
		resolvePolyCollision()
		pointCollision()
		callScriptedEntity()
		collisionBlocksAlongLine()
		containerStackItems()
		objectSpaces()
		containerConsume()
		spawnStagehand()
		spawnProjectile()
		stagehandType()
		entityQuery()
		lineTileCollision()
		containerSwapItemsNoCombine()
		liquidAlongLine()
		playerQuery()
		objectQuery()
		entityGender()
		rectCollision()
		containerItemAt()
		polyContains()
		containerTakeAt()
		magnitude()
		mod()
		containerSwapItems()
		isNpc()
		lineCollision()
		getObjectParameter()
		debugPoint()
		pointTileCollision()
		containerItemsFitWhere()
		containerAvailable()
		getProperty()
		containerItems()
		threatLevel()
		entityType()
		sendEntityMessage()
		material()
		liquidAt()
		containerSize()
		debugText()
		monsterType()
		entityMoney()
		nearestTo()
		npcLineQuery()
		entityPortrait()
		entityName()
		entityDamageTeam()
		containerConsumeAt()
		entityAggressive()
		windLevel()
		monsterQuery()
		entityExists()
		loungeableQuery()
		npcQuery()
		entityLineQuery()
	}
	root = {
		createBiome()
		imageSpaces()
		createItem()
		loadVersionedJson()
		createTreasure()
		getMatchingTenants()
		monsterSkillParameter()
		getConfiguration()
		npcVariant()
		itemHasTag()
		imageSize()
		projectileGravityMultiplier()
		nonEmptyRegion()
		evalFunction2()
		projectileConfig()
		materialMiningSound()
		generateName()
		isTreasurePool()
		hasTech()
		behaviorModule()
		itemConfig()
		treeStemDirectory()
		evalFunction()
		techConfig()
		npcConfig()
		setConfigurationPath()
		getConfigurationPath()
		materialHealth()
		materialFootstepSound()
		monsterMovementSettings()
		materialPath()
		setConfiguration()
		monsterPortrait()
		itemType()
		questConfig()
		recipesForItem()
		assetJson()
		treeFoliageDirectory()
		techType()
		liquidStatusEffects()
		makeCurrentVersionedJson()
		itemTags()
		tenantConfig()
		npcPortrait()
	}
	jsize()
	status = {
		setResourceLocked()
		resourcePercentage()
		addPersistentEffects()
		removeEphemeralEffect()
		resource()
		setResourcePercentage()
		resourcePositive()
		damageTakenSince()
		statPositive()
		stat()
		statusProperty()
		activeUniqueStatusEffectSummary()
		inflictedHitsSince()
		resourceMax()
		setStatusProperty()
		setPersistentEffects()
		resetAllResources()
		addEphemeralEffects()
		overConsumeResource()
		modifyResource()
		addEphemeralEffect()
		getPersistentEffects()
		resetResource()
		consumeResource()
		clearPersistentEffects()
		modifyResourcePercentage()
		clearEphemeralEffects()
		resourceNames()
		addPersistentEffect()
		resourceLocked()
		clearAllPersistentEffects()
		inflictedDamageSince()
		isResource()
		setResource()
		giveResource()
	}
	xpcall()
	getmetatable()
	utf8 = {
		len()
		codepoint()
		offset()
		codes()
		charpattern = "[
[23:12:48.422] [Warn] 	select()
	rawequal()
	rawset()
	string = {
		gmatch()
		char()
		sub()
		unpack()
		upper()
		lower()
		find()
		rep()
		dump()
		len()
		reverse()
		packsize()
		pack()
		byte()
		match()
		format()
		gsub()
	}
	require()
	pairs()
	next()
	jobject()
	math = {
		pi = 3.1415926535898
		rad()
		max()
		sqrt()
		random()
		floor()
		log()
		acos()
		fmod()
		mininteger = -9223372036854775808
		type()
		huge = inf
		randomseed()
		deg()
		exp()
		maxinteger = 9223372036854775807
		cos()
		min()
		tointeger()
		modf()
		asin()
		tan()
		atan()
		abs()
		sin()
		ult()
		ceil()
	}
	print()
	pcall()
	type()
	init()
	setmetatable()
	jresize()
	ic = {
		checkStack()
		itemAmount()
		stripColor()
		quickstack()
		itemConfig()
		amountEquipped()
		sortFunc()
		lock()
		giveBack()
		renameThis()
		sort()
		searchBox()
		sort_relative()
		clientVersion = 1
		renameButton()
		searchButton()
		getQuality()
	}
	player = {
		equippedTech()
		altHandItem()
		giveEssentialItem()
		consumeTaggedItem()
		setUniverseFlag()
		species()
		itemsWithTag()
		worldId()
		warp()
		completeMission()
		inventoryTags()
		upgradeShip()
		hasQuest()
		consumeItem()
		gender()
		primaryHandItem()
		essentialItem()
		equippedItem()
		setIntroComplete()
		playTime()
		enabledTechs()
		recordEvent()
		playCinematic()
		introComplete()
		hasCompletedQuest()
		makeTechAvailable()
		consumeItemWithParameter()
		startQuest()
		hasItemWithParameter()
		getItemWithParameter()
		lounge()
		enableTech()
		equipTech()
		enableMission()
		removeEssentialItem()
		isLounging()
		availableTechs()
		primaryHandItemTags()
		makeTechUnavailable()
		confirm()
		serverUuid()
		addBookmark()
		altHandItemTags()
		cleanupItems()
		radioMessage()
		setEquippedItem()
		ownShipWorldId()
		hasItem()
		canStartQuest()
		giveBlueprint()
		hasCountOfItem()
		shipUpgrades()
		giveItem()
	}
	config = {
		getParameter()
	}
	self = {
	}
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	world = {
		spawnItem()
		entityPosition()
		entityHealth()
		damageTileArea()
		day()
		placeMaterial()
		entityDescription()
		containerPutItemsAt()
		entityVelocity()
		damageTiles()
		entityHandItem()
		objectAt()
		setProperty()
		containerItemApply()
		containerClose()
		distance()
		findUniqueEntity()
		gravity()
		rectTileCollision()
		entitySpecies()
		platformerPathStart()
		containerOpen()
		containerTakeAll()
		breathable()
		npcType()
		containerAddItems()
		dayLength()
		loungeableOccupied()
		placeObject()
		isTileProtected()
		destroyLiquid()
		debugLine()
		spawnLiquid()
		entityCanDamage()
		containerItemsCanFit()
		xwrap()
		entityUniqueId()
		itemDropQuery()
		lightLevel()
		placeMod()
		spawnNpc()
		spawnTreasure()
		time()
		underground()
		spawnVehicle()
		spawnMonster()
		timeOfDay()
		findPlatformerPath()
		debugPoly()
		containerTakeNumItemsAt()
		isMonster()
		farmableStage()
		polyCollision()
		objectLineQuery()
		entityHasCountOfItem()
		entityHandItemDescriptor()
		tileIsOccupied()
		resolvePolyCollision()
		pointCollision()
		callScriptedEntity()
		collisionBlocksAlongLine()
		containerStackItems()
		objectSpaces()
		containerConsume()
		spawnStagehand()
		spawnProjectile()
		stagehandType()
		entityQuery()
		lineTileCollision()
		containerSwapItemsNoCombine()
		liquidAlongLine()
		playerQuery()
		objectQuery()
		entityGender()
		rectCollision()
		containerItemAt()
		polyContains()
		containerTakeAt()
		magnitude()
		mod()
		containerSwapItems()
		isNpc()
		lineCollision()
		getObjectParameter()
		debugPoint()
		pointTileCollision()
		containerItemsFitWhere()
		containerAvailable()
		getProperty()
		containerItems()
		threatLevel()
		entityType()
		sendEntityMessage()
		material()
		liquidAt()
		containerSize()
		debugText()
		monsterType()
		entityMoney()
		nearestTo()
		npcLineQuery()
		entityPortrait()
		entityName()
		entityDamageTeam()
		containerConsumeAt()
		entityAggressive()
		windLevel()
		monsterQuery()
		entityExists()
		loungeableQuery()
		npcQuery()
		entityLineQuery()
	}
	root = {
		createBiome()
		imageSpaces()
		createItem()
		loadVersionedJson()
		createTreasure()
		getMatchingTenants()
		monsterSkillParameter()
		getConfiguration()
		npcVariant()
		itemHasTag()
		imageSize()
		projectileGravityMultiplier()
		nonEmptyRegion()
		evalFunction2()
		projectileConfig()
		materialMiningSound()
		generateName()
		isTreasurePool()
		hasTech()
		behaviorModule()
		itemConfig()
		treeStemDirectory()
		evalFunction()
		techConfig()
		npcConfig()
		setConfigurationPath()
		getConfigurationPath()
		materialHealth()
		materialFootstepSound()
		monsterMovementSettings()
		materialPath()
		setConfiguration()
		monsterPortrait()
		itemType()
		questConfig()
		recipesForItem()
		assetJson()
		treeFoliageDirectory()
		techType()
		liquidStatusEffects()
		makeCurrentVersionedJson()
		itemTags()
		tenantConfig()
		npcPortrait()
	}
	jsize()
	status = {
		setResourceLocked()
		resourcePercentage()
		addPersistentEffects()
		removeEphemeralEffect()
		resource()
		setResourcePercentage()
		resourcePositive()
		damageTakenSince()
		statPositive()
		stat()
		statusProperty()
		activeUniqueStatusEffectSummary()
		inflictedHitsSince()
		resourceMax()
		setStatusProperty()
		setPersistentEffects()
		resetAllResources()
		addEphemeralEffects()
		overConsumeResource()
		modifyResource()
		addEphemeralEffect()
		getPersistentEffects()
		resetResource()
		consumeResource()
		clearPersistentEffects()
		modifyResourcePercentage()
		clearEphemeralEffects()
		resourceNames()
		addPersistentEffect()
		resourceLocked()
		clearAllPersistentEffects()
		inflictedDamageSince()
		isResource()
		setResource()
		giveResource()
	}
	xpcall()
	getmetatable()
	utf8 = {
		len()
		codepoint()
		offset()
		codes()
		charpattern = "[
[23:12:49.755] [Warn] 	select()
	rawequal()
	rawset()
	string = {
		gmatch()
		char()
		sub()
		unpack()
		upper()
		lower()
		find()
		rep()
		dump()
		len()
		reverse()
		packsize()
		pack()
		byte()
		match()
		format()
		gsub()
	}
	require()
	pairs()
	next()
	jobject()
	math = {
		pi = 3.1415926535898
		rad()
		max()
		sqrt()
		random()
		floor()
		log()
		acos()
		fmod()
		mininteger = -9223372036854775808
		type()
		huge = inf
		randomseed()
		deg()
		exp()
		maxinteger = 9223372036854775807
		cos()
		min()
		tointeger()
		modf()
		asin()
		tan()
		atan()
		abs()
		sin()
		ult()
		ceil()
	}
	print()
	pcall()
	type()
	init()
	setmetatable()
	jresize()
	ic = {
		checkStack()
		itemAmount()
		stripColor()
		quickstack()
		itemConfig()
		amountEquipped()
		sortFunc()
		lock()
		giveBack()
		renameThis()
		sort()
		searchBox()
		sort_relative()
		clientVersion = 1
		renameButton()
		searchButton()
		getQuality()
	}
	player = {
		equippedTech()
		altHandItem()
		giveEssentialItem()
		consumeTaggedItem()
		setUniverseFlag()
		species()
		itemsWithTag()
		worldId()
		warp()
		completeMission()
		inventoryTags()
		upgradeShip()
		hasQuest()
		consumeItem()
		gender()
		primaryHandItem()
		essentialItem()
		equippedItem()
		setIntroComplete()
		playTime()
		enabledTechs()
		recordEvent()
		playCinematic()
		introComplete()
		hasCompletedQuest()
		makeTechAvailable()
		consumeItemWithParameter()
		startQuest()
		hasItemWithParameter()
		getItemWithParameter()
		lounge()
		enableTech()
		equipTech()
		enableMission()
		removeEssentialItem()
		isLounging()
		availableTechs()
		primaryHandItemTags()
		makeTechUnavailable()
		confirm()
		serverUuid()
		addBookmark()
		altHandItemTags()
		cleanupItems()
		radioMessage()
		setEquippedItem()
		ownShipWorldId()
		hasItem()
		canStartQuest()
		giveBlueprint()
		hasCountOfItem()
		shipUpgrades()
		giveItem()
	}
	config = {
		getParameter()
	}
	self = {
	}
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	world = {
		spawnItem()
		entityPosition()
		entityHealth()
		damageTileArea()
		day()
		placeMaterial()
		entityDescription()
		containerPutItemsAt()
		entityVelocity()
		damageTiles()
		entityHandItem()
		objectAt()
		setProperty()
		containerItemApply()
		containerClose()
		distance()
		findUniqueEntity()
		gravity()
		rectTileCollision()
		entitySpecies()
		platformerPathStart()
		containerOpen()
		containerTakeAll()
		breathable()
		npcType()
		containerAddItems()
		dayLength()
		loungeableOccupied()
		placeObject()
		isTileProtected()
		destroyLiquid()
		debugLine()
		spawnLiquid()
		entityCanDamage()
		containerItemsCanFit()
		xwrap()
		entityUniqueId()
		itemDropQuery()
		lightLevel()
		placeMod()
		spawnNpc()
		spawnTreasure()
		time()
		underground()
		spawnVehicle()
		spawnMonster()
		timeOfDay()
		findPlatformerPath()
		debugPoly()
		containerTakeNumItemsAt()
		isMonster()
		farmableStage()
		polyCollision()
		objectLineQuery()
		entityHasCountOfItem()
		entityHandItemDescriptor()
		tileIsOccupied()
		resolvePolyCollision()
		pointCollision()
		callScriptedEntity()
		collisionBlocksAlongLine()
		containerStackItems()
		objectSpaces()
		containerConsume()
		spawnStagehand()
		spawnProjectile()
		stagehandType()
		entityQuery()
		lineTileCollision()
		containerSwapItemsNoCombine()
		liquidAlongLine()
		playerQuery()
		objectQuery()
		entityGender()
		rectCollision()
		containerItemAt()
		polyContains()
		containerTakeAt()
		magnitude()
		mod()
		containerSwapItems()
		isNpc()
		lineCollision()
		getObjectParameter()
		debugPoint()
		pointTileCollision()
		containerItemsFitWhere()
		containerAvailable()
		getProperty()
		containerItems()
		threatLevel()
		entityType()
		sendEntityMessage()
		material()
		liquidAt()
		containerSize()
		debugText()
		monsterType()
		entityMoney()
		nearestTo()
		npcLineQuery()
		entityPortrait()
		entityName()
		entityDamageTeam()
		containerConsumeAt()
		entityAggressive()
		windLevel()
		monsterQuery()
		entityExists()
		loungeableQuery()
		npcQuery()
		entityLineQuery()
	}
	root = {
		createBiome()
		imageSpaces()
		createItem()
		loadVersionedJson()
		createTreasure()
		getMatchingTenants()
		monsterSkillParameter()
		getConfiguration()
		npcVariant()
		itemHasTag()
		imageSize()
		projectileGravityMultiplier()
		nonEmptyRegion()
		evalFunction2()
		projectileConfig()
		materialMiningSound()
		generateName()
		isTreasurePool()
		hasTech()
		behaviorModule()
		itemConfig()
		treeStemDirectory()
		evalFunction()
		techConfig()
		npcConfig()
		setConfigurationPath()
		getConfigurationPath()
		materialHealth()
		materialFootstepSound()
		monsterMovementSettings()
		materialPath()
		setConfiguration()
		monsterPortrait()
		itemType()
		questConfig()
		recipesForItem()
		assetJson()
		treeFoliageDirectory()
		techType()
		liquidStatusEffects()
		makeCurrentVersionedJson()
		itemTags()
		tenantConfig()
		npcPortrait()
	}
	jsize()
	status = {
		setResourceLocked()
		resourcePercentage()
		addPersistentEffects()
		removeEphemeralEffect()
		resource()
		setResourcePercentage()
		resourcePositive()
		damageTakenSince()
		statPositive()
		stat()
		statusProperty()
		activeUniqueStatusEffectSummary()
		inflictedHitsSince()
		resourceMax()
		setStatusProperty()
		setPersistentEffects()
		resetAllResources()
		addEphemeralEffects()
		overConsumeResource()
		modifyResource()
		addEphemeralEffect()
		getPersistentEffects()
		resetResource()
		consumeResource()
		clearPersistentEffects()
		modifyResourcePercentage()
		clearEphemeralEffects()
		resourceNames()
		addPersistentEffect()
		resourceLocked()
		clearAllPersistentEffects()
		inflictedDamageSince()
		isResource()
		setResource()
		giveResource()
	}
	xpcall()
	getmetatable()
	utf8 = {
		len()
		codepoint()
		offset()
		codes()
		charpattern = "[
[23:12:53.110] [Warn] 	select()
	rawequal()
	rawset()
	string = {
		gmatch()
		char()
		sub()
		unpack()
		upper()
		lower()
		find()
		rep()
		dump()
		len()
		reverse()
		packsize()
		pack()
		byte()
		match()
		format()
		gsub()
	}
	require()
	pairs()
	next()
	jobject()
	math = {
		pi = 3.1415926535898
		rad()
		max()
		sqrt()
		random()
		floor()
		log()
		acos()
		fmod()
		mininteger = -9223372036854775808
		type()
		huge = inf
		randomseed()
		deg()
		exp()
		maxinteger = 9223372036854775807
		cos()
		min()
		tointeger()
		modf()
		asin()
		tan()
		atan()
		abs()
		sin()
		ult()
		ceil()
	}
	print()
	pcall()
	type()
	init()
	setmetatable()
	jresize()
	ic = {
		checkStack()
		itemAmount()
		stripColor()
		quickstack()
		itemConfig()
		amountEquipped()
		sortFunc()
		lock()
		giveBack()
		renameThis()
		sort()
		searchBox()
		sort_relative()
		clientVersion = 1
		renameButton()
		searchButton()
		getQuality()
	}
	player = {
		equippedTech()
		altHandItem()
		giveEssentialItem()
		consumeTaggedItem()
		setUniverseFlag()
		species()
		itemsWithTag()
		worldId()
		warp()
		completeMission()
		inventoryTags()
		upgradeShip()
		hasQuest()
		consumeItem()
		gender()
		primaryHandItem()
		essentialItem()
		equippedItem()
		setIntroComplete()
		playTime()
		enabledTechs()
		recordEvent()
		playCinematic()
		introComplete()
		hasCompletedQuest()
		makeTechAvailable()
		consumeItemWithParameter()
		startQuest()
		hasItemWithParameter()
		getItemWithParameter()
		lounge()
		enableTech()
		equipTech()
		enableMission()
		removeEssentialItem()
		isLounging()
		availableTechs()
		primaryHandItemTags()
		makeTechUnavailable()
		confirm()
		serverUuid()
		addBookmark()
		altHandItemTags()
		cleanupItems()
		radioMessage()
		setEquippedItem()
		ownShipWorldId()
		hasItem()
		canStartQuest()
		giveBlueprint()
		hasCountOfItem()
		shipUpgrades()
		giveItem()
	}
	config = {
		getParameter()
	}
	self = {
	}
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	world = {
		spawnItem()
		entityPosition()
		entityHealth()
		damageTileArea()
		day()
		placeMaterial()
		entityDescription()
		containerPutItemsAt()
		entityVelocity()
		damageTiles()
		entityHandItem()
		objectAt()
		setProperty()
		containerItemApply()
		containerClose()
		distance()
		findUniqueEntity()
		gravity()
		rectTileCollision()
		entitySpecies()
		platformerPathStart()
		containerOpen()
		containerTakeAll()
		breathable()
		npcType()
		containerAddItems()
		dayLength()
		loungeableOccupied()
		placeObject()
		isTileProtected()
		destroyLiquid()
		debugLine()
		spawnLiquid()
		entityCanDamage()
		containerItemsCanFit()
		xwrap()
		entityUniqueId()
		itemDropQuery()
		lightLevel()
		placeMod()
		spawnNpc()
		spawnTreasure()
		time()
		underground()
		spawnVehicle()
		spawnMonster()
		timeOfDay()
		findPlatformerPath()
		debugPoly()
		containerTakeNumItemsAt()
		isMonster()
		farmableStage()
		polyCollision()
		objectLineQuery()
		entityHasCountOfItem()
		entityHandItemDescriptor()
		tileIsOccupied()
		resolvePolyCollision()
		pointCollision()
		callScriptedEntity()
		collisionBlocksAlongLine()
		containerStackItems()
		objectSpaces()
		containerConsume()
		spawnStagehand()
		spawnProjectile()
		stagehandType()
		entityQuery()
		lineTileCollision()
		containerSwapItemsNoCombine()
		liquidAlongLine()
		playerQuery()
		objectQuery()
		entityGender()
		rectCollision()
		containerItemAt()
		polyContains()
		containerTakeAt()
		magnitude()
		mod()
		containerSwapItems()
		isNpc()
		lineCollision()
		getObjectParameter()
		debugPoint()
		pointTileCollision()
		containerItemsFitWhere()
		containerAvailable()
		getProperty()
		containerItems()
		threatLevel()
		entityType()
		sendEntityMessage()
		material()
		liquidAt()
		containerSize()
		debugText()
		monsterType()
		entityMoney()
		nearestTo()
		npcLineQuery()
		entityPortrait()
		entityName()
		entityDamageTeam()
		containerConsumeAt()
		entityAggressive()
		windLevel()
		monsterQuery()
		entityExists()
		loungeableQuery()
		npcQuery()
		entityLineQuery()
	}
	root = {
		createBiome()
		imageSpaces()
		createItem()
		loadVersionedJson()
		createTreasure()
		getMatchingTenants()
		monsterSkillParameter()
		getConfiguration()
		npcVariant()
		itemHasTag()
		imageSize()
		projectileGravityMultiplier()
		nonEmptyRegion()
		evalFunction2()
		projectileConfig()
		materialMiningSound()
		generateName()
		isTreasurePool()
		hasTech()
		behaviorModule()
		itemConfig()
		treeStemDirectory()
		evalFunction()
		techConfig()
		npcConfig()
		setConfigurationPath()
		getConfigurationPath()
		materialHealth()
		materialFootstepSound()
		monsterMovementSettings()
		materialPath()
		setConfiguration()
		monsterPortrait()
		itemType()
		questConfig()
		recipesForItem()
		assetJson()
		treeFoliageDirectory()
		techType()
		liquidStatusEffects()
		makeCurrentVersionedJson()
		itemTags()
		tenantConfig()
		npcPortrait()
	}
	jsize()
	status = {
		setResourceLocked()
		resourcePercentage()
		addPersistentEffects()
		removeEphemeralEffect()
		resource()
		setResourcePercentage()
		resourcePositive()
		damageTakenSince()
		statPositive()
		stat()
		statusProperty()
		activeUniqueStatusEffectSummary()
		inflictedHitsSince()
		resourceMax()
		setStatusProperty()
		setPersistentEffects()
		resetAllResources()
		addEphemeralEffects()
		overConsumeResource()
		modifyResource()
		addEphemeralEffect()
		getPersistentEffects()
		resetResource()
		consumeResource()
		clearPersistentEffects()
		modifyResourcePercentage()
		clearEphemeralEffects()
		resourceNames()
		addPersistentEffect()
		resourceLocked()
		clearAllPersistentEffects()
		inflictedDamageSince()
		isResource()
		setResource()
		giveResource()
	}
	xpcall()
	getmetatable()
	utf8 = {
		len()
		codepoint()
		offset()
		codes()
		charpattern = "[
[23:12:55.097] [Warn] 	select()
	rawequal()
	rawset()
	string = {
		gmatch()
		char()
		sub()
		unpack()
		upper()
		lower()
		find()
		rep()
		dump()
		len()
		reverse()
		packsize()
		pack()
		byte()
		match()
		format()
		gsub()
	}
	require()
	pairs()
	next()
	jobject()
	math = {
		pi = 3.1415926535898
		rad()
		max()
		sqrt()
		random()
		floor()
		log()
		acos()
		fmod()
		mininteger = -9223372036854775808
		type()
		huge = inf
		randomseed()
		deg()
		exp()
		maxinteger = 9223372036854775807
		cos()
		min()
		tointeger()
		modf()
		asin()
		tan()
		atan()
		abs()
		sin()
		ult()
		ceil()
	}
	print()
	pcall()
	type()
	init()
	setmetatable()
	jresize()
	ic = {
		checkStack()
		itemAmount()
		stripColor()
		quickstack()
		itemConfig()
		amountEquipped()
		sortFunc()
		lock()
		giveBack()
		renameThis()
		sort()
		searchBox()
		sort_relative()
		clientVersion = 1
		renameButton()
		searchButton()
		getQuality()
	}
	player = {
		equippedTech()
		altHandItem()
		giveEssentialItem()
		consumeTaggedItem()
		setUniverseFlag()
		species()
		itemsWithTag()
		worldId()
		warp()
		completeMission()
		inventoryTags()
		upgradeShip()
		hasQuest()
		consumeItem()
		gender()
		primaryHandItem()
		essentialItem()
		equippedItem()
		setIntroComplete()
		playTime()
		enabledTechs()
		recordEvent()
		playCinematic()
		introComplete()
		hasCompletedQuest()
		makeTechAvailable()
		consumeItemWithParameter()
		startQuest()
		hasItemWithParameter()
		getItemWithParameter()
		lounge()
		enableTech()
		equipTech()
		enableMission()
		removeEssentialItem()
		isLounging()
		availableTechs()
		primaryHandItemTags()
		makeTechUnavailable()
		confirm()
		serverUuid()
		addBookmark()
		altHandItemTags()
		cleanupItems()
		radioMessage()
		setEquippedItem()
		ownShipWorldId()
		hasItem()
		canStartQuest()
		giveBlueprint()
		hasCountOfItem()
		shipUpgrades()
		giveItem()
	}
	config = {
		getParameter()
	}
	self = {
	}
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	world = {
		spawnItem()
		entityPosition()
		entityHealth()
		damageTileArea()
		day()
		placeMaterial()
		entityDescription()
		containerPutItemsAt()
		entityVelocity()
		damageTiles()
		entityHandItem()
		objectAt()
		setProperty()
		containerItemApply()
		containerClose()
		distance()
		findUniqueEntity()
		gravity()
		rectTileCollision()
		entitySpecies()
		platformerPathStart()
		containerOpen()
		containerTakeAll()
		breathable()
		npcType()
		containerAddItems()
		dayLength()
		loungeableOccupied()
		placeObject()
		isTileProtected()
		destroyLiquid()
		debugLine()
		spawnLiquid()
		entityCanDamage()
		containerItemsCanFit()
		xwrap()
		entityUniqueId()
		itemDropQuery()
		lightLevel()
		placeMod()
		spawnNpc()
		spawnTreasure()
		time()
		underground()
		spawnVehicle()
		spawnMonster()
		timeOfDay()
		findPlatformerPath()
		debugPoly()
		containerTakeNumItemsAt()
		isMonster()
		farmableStage()
		polyCollision()
		objectLineQuery()
		entityHasCountOfItem()
		entityHandItemDescriptor()
		tileIsOccupied()
		resolvePolyCollision()
		pointCollision()
		callScriptedEntity()
		collisionBlocksAlongLine()
		containerStackItems()
		objectSpaces()
		containerConsume()
		spawnStagehand()
		spawnProjectile()
		stagehandType()
		entityQuery()
		lineTileCollision()
		containerSwapItemsNoCombine()
		liquidAlongLine()
		playerQuery()
		objectQuery()
		entityGender()
		rectCollision()
		containerItemAt()
		polyContains()
		containerTakeAt()
		magnitude()
		mod()
		containerSwapItems()
		isNpc()
		lineCollision()
		getObjectParameter()
		debugPoint()
		pointTileCollision()
		containerItemsFitWhere()
		containerAvailable()
		getProperty()
		containerItems()
		threatLevel()
		entityType()
		sendEntityMessage()
		material()
		liquidAt()
		containerSize()
		debugText()
		monsterType()
		entityMoney()
		nearestTo()
		npcLineQuery()
		entityPortrait()
		entityName()
		entityDamageTeam()
		containerConsumeAt()
		entityAggressive()
		windLevel()
		monsterQuery()
		entityExists()
		loungeableQuery()
		npcQuery()
		entityLineQuery()
	}
	root = {
		createBiome()
		imageSpaces()
		createItem()
		loadVersionedJson()
		createTreasure()
		getMatchingTenants()
		monsterSkillParameter()
		getConfiguration()
		npcVariant()
		itemHasTag()
		imageSize()
		projectileGravityMultiplier()
		nonEmptyRegion()
		evalFunction2()
		projectileConfig()
		materialMiningSound()
		generateName()
		isTreasurePool()
		hasTech()
		behaviorModule()
		itemConfig()
		treeStemDirectory()
		evalFunction()
		techConfig()
		npcConfig()
		setConfigurationPath()
		getConfigurationPath()
		materialHealth()
		materialFootstepSound()
		monsterMovementSettings()
		materialPath()
		setConfiguration()
		monsterPortrait()
		itemType()
		questConfig()
		recipesForItem()
		assetJson()
		treeFoliageDirectory()
		techType()
		liquidStatusEffects()
		makeCurrentVersionedJson()
		itemTags()
		tenantConfig()
		npcPortrait()
	}
	jsize()
	status = {
		setResourceLocked()
		resourcePercentage()
		addPersistentEffects()
		removeEphemeralEffect()
		resource()
		setResourcePercentage()
		resourcePositive()
		damageTakenSince()
		statPositive()
		stat()
		statusProperty()
		activeUniqueStatusEffectSummary()
		inflictedHitsSince()
		resourceMax()
		setStatusProperty()
		setPersistentEffects()
		resetAllResources()
		addEphemeralEffects()
		overConsumeResource()
		modifyResource()
		addEphemeralEffect()
		getPersistentEffects()
		resetResource()
		consumeResource()
		clearPersistentEffects()
		modifyResourcePercentage()
		clearEphemeralEffects()
		resourceNames()
		addPersistentEffect()
		resourceLocked()
		clearAllPersistentEffects()
		inflictedDamageSince()
		isResource()
		setResource()
		giveResource()
	}
	xpcall()
	getmetatable()
	utf8 = {
		len()
		codepoint()
		offset()
		codes()
		charpattern = "[
[23:12:56.584] [Warn] 	select()
	rawequal()
	rawset()
	string = {
		gmatch()
		char()
		sub()
		unpack()
		upper()
		lower()
		find()
		rep()
		dump()
		len()
		reverse()
		packsize()
		pack()
		byte()
		match()
		format()
		gsub()
	}
	require()
	pairs()
	next()
	jobject()
	math = {
		pi = 3.1415926535898
		rad()
		max()
		sqrt()
		random()
		floor()
		log()
		acos()
		fmod()
		mininteger = -9223372036854775808
		type()
		huge = inf
		randomseed()
		deg()
		exp()
		maxinteger = 9223372036854775807
		cos()
		min()
		tointeger()
		modf()
		asin()
		tan()
		atan()
		abs()
		sin()
		ult()
		ceil()
	}
	print()
	pcall()
	type()
	init()
	setmetatable()
	jresize()
	ic = {
		checkStack()
		itemAmount()
		stripColor()
		quickstack()
		itemConfig()
		amountEquipped()
		sortFunc()
		lock()
		giveBack()
		renameThis()
		sort()
		searchBox()
		sort_relative()
		clientVersion = 1
		renameButton()
		searchButton()
		getQuality()
	}
	player = {
		equippedTech()
		altHandItem()
		giveEssentialItem()
		consumeTaggedItem()
		setUniverseFlag()
		species()
		itemsWithTag()
		worldId()
		warp()
		completeMission()
		inventoryTags()
		upgradeShip()
		hasQuest()
		consumeItem()
		gender()
		primaryHandItem()
		essentialItem()
		equippedItem()
		setIntroComplete()
		playTime()
		enabledTechs()
		recordEvent()
		playCinematic()
		introComplete()
		hasCompletedQuest()
		makeTechAvailable()
		consumeItemWithParameter()
		startQuest()
		hasItemWithParameter()
		getItemWithParameter()
		lounge()
		enableTech()
		equipTech()
		enableMission()
		removeEssentialItem()
		isLounging()
		availableTechs()
		primaryHandItemTags()
		makeTechUnavailable()
		confirm()
		serverUuid()
		addBookmark()
		altHandItemTags()
		cleanupItems()
		radioMessage()
		setEquippedItem()
		ownShipWorldId()
		hasItem()
		canStartQuest()
		giveBlueprint()
		hasCountOfItem()
		shipUpgrades()
		giveItem()
	}
	config = {
		getParameter()
	}
	self = {
	}
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	world = {
		spawnItem()
		entityPosition()
		entityHealth()
		damageTileArea()
		day()
		placeMaterial()
		entityDescription()
		containerPutItemsAt()
		entityVelocity()
		damageTiles()
		entityHandItem()
		objectAt()
		setProperty()
		containerItemApply()
		containerClose()
		distance()
		findUniqueEntity()
		gravity()
		rectTileCollision()
		entitySpecies()
		platformerPathStart()
		containerOpen()
		containerTakeAll()
		breathable()
		npcType()
		containerAddItems()
		dayLength()
		loungeableOccupied()
		placeObject()
		isTileProtected()
		destroyLiquid()
		debugLine()
		spawnLiquid()
		entityCanDamage()
		containerItemsCanFit()
		xwrap()
		entityUniqueId()
		itemDropQuery()
		lightLevel()
		placeMod()
		spawnNpc()
		spawnTreasure()
		time()
		underground()
		spawnVehicle()
		spawnMonster()
		timeOfDay()
		findPlatformerPath()
		debugPoly()
		containerTakeNumItemsAt()
		isMonster()
		farmableStage()
		polyCollision()
		objectLineQuery()
		entityHasCountOfItem()
		entityHandItemDescriptor()
		tileIsOccupied()
		resolvePolyCollision()
		pointCollision()
		callScriptedEntity()
		collisionBlocksAlongLine()
		containerStackItems()
		objectSpaces()
		containerConsume()
		spawnStagehand()
		spawnProjectile()
		stagehandType()
		entityQuery()
		lineTileCollision()
		containerSwapItemsNoCombine()
		liquidAlongLine()
		playerQuery()
		objectQuery()
		entityGender()
		rectCollision()
		containerItemAt()
		polyContains()
		containerTakeAt()
		magnitude()
		mod()
		containerSwapItems()
		isNpc()
		lineCollision()
		getObjectParameter()
		debugPoint()
		pointTileCollision()
		containerItemsFitWhere()
		containerAvailable()
		getProperty()
		containerItems()
		threatLevel()
		entityType()
		sendEntityMessage()
		material()
		liquidAt()
		containerSize()
		debugText()
		monsterType()
		entityMoney()
		nearestTo()
		npcLineQuery()
		entityPortrait()
		entityName()
		entityDamageTeam()
		containerConsumeAt()
		entityAggressive()
		windLevel()
		monsterQuery()
		entityExists()
		loungeableQuery()
		npcQuery()
		entityLineQuery()
	}
	root = {
		createBiome()
		imageSpaces()
		createItem()
		loadVersionedJson()
		createTreasure()
		getMatchingTenants()
		monsterSkillParameter()
		getConfiguration()
		npcVariant()
		itemHasTag()
		imageSize()
		projectileGravityMultiplier()
		nonEmptyRegion()
		evalFunction2()
		projectileConfig()
		materialMiningSound()
		generateName()
		isTreasurePool()
		hasTech()
		behaviorModule()
		itemConfig()
		treeStemDirectory()
		evalFunction()
		techConfig()
		npcConfig()
		setConfigurationPath()
		getConfigurationPath()
		materialHealth()
		materialFootstepSound()
		monsterMovementSettings()
		materialPath()
		setConfiguration()
		monsterPortrait()
		itemType()
		questConfig()
		recipesForItem()
		assetJson()
		treeFoliageDirectory()
		techType()
		liquidStatusEffects()
		makeCurrentVersionedJson()
		itemTags()
		tenantConfig()
		npcPortrait()
	}
	jsize()
	status = {
		setResourceLocked()
		resourcePercentage()
		addPersistentEffects()
		removeEphemeralEffect()
		resource()
		setResourcePercentage()
		resourcePositive()
		damageTakenSince()
		statPositive()
		stat()
		statusProperty()
		activeUniqueStatusEffectSummary()
		inflictedHitsSince()
		resourceMax()
		setStatusProperty()
		setPersistentEffects()
		resetAllResources()
		addEphemeralEffects()
		overConsumeResource()
		modifyResource()
		addEphemeralEffect()
		getPersistentEffects()
		resetResource()
		consumeResource()
		clearPersistentEffects()
		modifyResourcePercentage()
		clearEphemeralEffects()
		resourceNames()
		addPersistentEffect()
		resourceLocked()
		clearAllPersistentEffects()
		inflictedDamageSince()
		isResource()
		setResource()
		giveResource()
	}
	xpcall()
	getmetatable()
	utf8 = {
		len()
		codepoint()
		offset()
		codes()
		charpattern = "[
[23:12:58.753] [Warn] 	select()
	rawequal()
	rawset()
	string = {
		gmatch()
		char()
		sub()
		unpack()
		upper()
		lower()
		find()
		rep()
		dump()
		len()
		reverse()
		packsize()
		pack()
		byte()
		match()
		format()
		gsub()
	}
	require()
	pairs()
	next()
	jobject()
	math = {
		pi = 3.1415926535898
		rad()
		max()
		sqrt()
		random()
		floor()
		log()
		acos()
		fmod()
		mininteger = -9223372036854775808
		type()
		huge = inf
		randomseed()
		deg()
		exp()
		maxinteger = 9223372036854775807
		cos()
		min()
		tointeger()
		modf()
		asin()
		tan()
		atan()
		abs()
		sin()
		ult()
		ceil()
	}
	print()
	pcall()
	type()
	init()
	setmetatable()
	jresize()
	ic = {
		checkStack()
		itemAmount()
		stripColor()
		quickstack()
		itemConfig()
		amountEquipped()
		sortFunc()
		lock()
		giveBack()
		renameThis()
		sort()
		searchBox()
		sort_relative()
		clientVersion = 1
		renameButton()
		searchButton()
		getQuality()
	}
	player = {
		equippedTech()
		altHandItem()
		giveEssentialItem()
		consumeTaggedItem()
		setUniverseFlag()
		species()
		itemsWithTag()
		worldId()
		warp()
		completeMission()
		inventoryTags()
		upgradeShip()
		hasQuest()
		consumeItem()
		gender()
		primaryHandItem()
		essentialItem()
		equippedItem()
		setIntroComplete()
		playTime()
		enabledTechs()
		recordEvent()
		playCinematic()
		introComplete()
		hasCompletedQuest()
		makeTechAvailable()
		consumeItemWithParameter()
		startQuest()
		hasItemWithParameter()
		getItemWithParameter()
		lounge()
		enableTech()
		equipTech()
		enableMission()
		removeEssentialItem()
		isLounging()
		availableTechs()
		primaryHandItemTags()
		makeTechUnavailable()
		confirm()
		serverUuid()
		addBookmark()
		altHandItemTags()
		cleanupItems()
		radioMessage()
		setEquippedItem()
		ownShipWorldId()
		hasItem()
		canStartQuest()
		giveBlueprint()
		hasCountOfItem()
		shipUpgrades()
		giveItem()
	}
	config = {
		getParameter()
	}
	self = {
	}
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	world = {
		spawnItem()
		entityPosition()
		entityHealth()
		damageTileArea()
		day()
		placeMaterial()
		entityDescription()
		containerPutItemsAt()
		entityVelocity()
		damageTiles()
		entityHandItem()
		objectAt()
		setProperty()
		containerItemApply()
		containerClose()
		distance()
		findUniqueEntity()
		gravity()
		rectTileCollision()
		entitySpecies()
		platformerPathStart()
		containerOpen()
		containerTakeAll()
		breathable()
		npcType()
		containerAddItems()
		dayLength()
		loungeableOccupied()
		placeObject()
		isTileProtected()
		destroyLiquid()
		debugLine()
		spawnLiquid()
		entityCanDamage()
		containerItemsCanFit()
		xwrap()
		entityUniqueId()
		itemDropQuery()
		lightLevel()
		placeMod()
		spawnNpc()
		spawnTreasure()
		time()
		underground()
		spawnVehicle()
		spawnMonster()
		timeOfDay()
		findPlatformerPath()
		debugPoly()
		containerTakeNumItemsAt()
		isMonster()
		farmableStage()
		polyCollision()
		objectLineQuery()
		entityHasCountOfItem()
		entityHandItemDescriptor()
		tileIsOccupied()
		resolvePolyCollision()
		pointCollision()
		callScriptedEntity()
		collisionBlocksAlongLine()
		containerStackItems()
		objectSpaces()
		containerConsume()
		spawnStagehand()
		spawnProjectile()
		stagehandType()
		entityQuery()
		lineTileCollision()
		containerSwapItemsNoCombine()
		liquidAlongLine()
		playerQuery()
		objectQuery()
		entityGender()
		rectCollision()
		containerItemAt()
		polyContains()
		containerTakeAt()
		magnitude()
		mod()
		containerSwapItems()
		isNpc()
		lineCollision()
		getObjectParameter()
		debugPoint()
		pointTileCollision()
		containerItemsFitWhere()
		containerAvailable()
		getProperty()
		containerItems()
		threatLevel()
		entityType()
		sendEntityMessage()
		material()
		liquidAt()
		containerSize()
		debugText()
		monsterType()
		entityMoney()
		nearestTo()
		npcLineQuery()
		entityPortrait()
		entityName()
		entityDamageTeam()
		containerConsumeAt()
		entityAggressive()
		windLevel()
		monsterQuery()
		entityExists()
		loungeableQuery()
		npcQuery()
		entityLineQuery()
	}
	root = {
		createBiome()
		imageSpaces()
		createItem()
		loadVersionedJson()
		createTreasure()
		getMatchingTenants()
		monsterSkillParameter()
		getConfiguration()
		npcVariant()
		itemHasTag()
		imageSize()
		projectileGravityMultiplier()
		nonEmptyRegion()
		evalFunction2()
		projectileConfig()
		materialMiningSound()
		generateName()
		isTreasurePool()
		hasTech()
		behaviorModule()
		itemConfig()
		treeStemDirectory()
		evalFunction()
		techConfig()
		npcConfig()
		setConfigurationPath()
		getConfigurationPath()
		materialHealth()
		materialFootstepSound()
		monsterMovementSettings()
		materialPath()
		setConfiguration()
		monsterPortrait()
		itemType()
		questConfig()
		recipesForItem()
		assetJson()
		treeFoliageDirectory()
		techType()
		liquidStatusEffects()
		makeCurrentVersionedJson()
		itemTags()
		tenantConfig()
		npcPortrait()
	}
	jsize()
	status = {
		setResourceLocked()
		resourcePercentage()
		addPersistentEffects()
		removeEphemeralEffect()
		resource()
		setResourcePercentage()
		resourcePositive()
		damageTakenSince()
		statPositive()
		stat()
		statusProperty()
		activeUniqueStatusEffectSummary()
		inflictedHitsSince()
		resourceMax()
		setStatusProperty()
		setPersistentEffects()
		resetAllResources()
		addEphemeralEffects()
		overConsumeResource()
		modifyResource()
		addEphemeralEffect()
		getPersistentEffects()
		resetResource()
		consumeResource()
		clearPersistentEffects()
		modifyResourcePercentage()
		clearEphemeralEffects()
		resourceNames()
		addPersistentEffect()
		resourceLocked()
		clearAllPersistentEffects()
		inflictedDamageSince()
		isResource()
		setResource()
		giveResource()
	}
	xpcall()
	getmetatable()
	utf8 = {
		len()
		codepoint()
		offset()
		codes()
		charpattern = "[
[23:13:01.883] [Warn] 	select()
	rawequal()
	rawset()
	string = {
		gmatch()
		char()
		sub()
		unpack()
		upper()
		lower()
		find()
		rep()
		dump()
		len()
		reverse()
		packsize()
		pack()
		byte()
		match()
		format()
		gsub()
	}
	require()
	pairs()
	next()
	jobject()
	math = {
		pi = 3.1415926535898
		rad()
		max()
		sqrt()
		random()
		floor()
		log()
		acos()
		fmod()
		mininteger = -9223372036854775808
		type()
		huge = inf
		randomseed()
		deg()
		exp()
		maxinteger = 9223372036854775807
		cos()
		min()
		tointeger()
		modf()
		asin()
		tan()
		atan()
		abs()
		sin()
		ult()
		ceil()
	}
	print()
	pcall()
	type()
	init()
	setmetatable()
	jresize()
	ic = {
		checkStack()
		itemAmount()
		stripColor()
		quickstack()
		itemConfig()
		amountEquipped()
		sortFunc()
		lock()
		giveBack()
		renameThis()
		sort()
		searchBox()
		sort_relative()
		clientVersion = 1
		renameButton()
		searchButton()
		getQuality()
	}
	player = {
		equippedTech()
		altHandItem()
		giveEssentialItem()
		consumeTaggedItem()
		setUniverseFlag()
		species()
		itemsWithTag()
		worldId()
		warp()
		completeMission()
		inventoryTags()
		upgradeShip()
		hasQuest()
		consumeItem()
		gender()
		primaryHandItem()
		essentialItem()
		equippedItem()
		setIntroComplete()
		playTime()
		enabledTechs()
		recordEvent()
		playCinematic()
		introComplete()
		hasCompletedQuest()
		makeTechAvailable()
		consumeItemWithParameter()
		startQuest()
		hasItemWithParameter()
		getItemWithParameter()
		lounge()
		enableTech()
		equipTech()
		enableMission()
		removeEssentialItem()
		isLounging()
		availableTechs()
		primaryHandItemTags()
		makeTechUnavailable()
		confirm()
		serverUuid()
		addBookmark()
		altHandItemTags()
		cleanupItems()
		radioMessage()
		setEquippedItem()
		ownShipWorldId()
		hasItem()
		canStartQuest()
		giveBlueprint()
		hasCountOfItem()
		shipUpgrades()
		giveItem()
	}
	config = {
		getParameter()
	}
	self = {
	}
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	world = {
		spawnItem()
		entityPosition()
		entityHealth()
		damageTileArea()
		day()
		placeMaterial()
		entityDescription()
		containerPutItemsAt()
		entityVelocity()
		damageTiles()
		entityHandItem()
		objectAt()
		setProperty()
		containerItemApply()
		containerClose()
		distance()
		findUniqueEntity()
		gravity()
		rectTileCollision()
		entitySpecies()
		platformerPathStart()
		containerOpen()
		containerTakeAll()
		breathable()
		npcType()
		containerAddItems()
		dayLength()
		loungeableOccupied()
		placeObject()
		isTileProtected()
		destroyLiquid()
		debugLine()
		spawnLiquid()
		entityCanDamage()
		containerItemsCanFit()
		xwrap()
		entityUniqueId()
		itemDropQuery()
		lightLevel()
		placeMod()
		spawnNpc()
		spawnTreasure()
		time()
		underground()
		spawnVehicle()
		spawnMonster()
		timeOfDay()
		findPlatformerPath()
		debugPoly()
		containerTakeNumItemsAt()
		isMonster()
		farmableStage()
		polyCollision()
		objectLineQuery()
		entityHasCountOfItem()
		entityHandItemDescriptor()
		tileIsOccupied()
		resolvePolyCollision()
		pointCollision()
		callScriptedEntity()
		collisionBlocksAlongLine()
		containerStackItems()
		objectSpaces()
		containerConsume()
		spawnStagehand()
		spawnProjectile()
		stagehandType()
		entityQuery()
		lineTileCollision()
		containerSwapItemsNoCombine()
		liquidAlongLine()
		playerQuery()
		objectQuery()
		entityGender()
		rectCollision()
		containerItemAt()
		polyContains()
		containerTakeAt()
		magnitude()
		mod()
		containerSwapItems()
		isNpc()
		lineCollision()
		getObjectParameter()
		debugPoint()
		pointTileCollision()
		containerItemsFitWhere()
		containerAvailable()
		getProperty()
		containerItems()
		threatLevel()
		entityType()
		sendEntityMessage()
		material()
		liquidAt()
		containerSize()
		debugText()
		monsterType()
		entityMoney()
		nearestTo()
		npcLineQuery()
		entityPortrait()
		entityName()
		entityDamageTeam()
		containerConsumeAt()
		entityAggressive()
		windLevel()
		monsterQuery()
		entityExists()
		loungeableQuery()
		npcQuery()
		entityLineQuery()
	}
	root = {
		createBiome()
		imageSpaces()
		createItem()
		loadVersionedJson()
		createTreasure()
		getMatchingTenants()
		monsterSkillParameter()
		getConfiguration()
		npcVariant()
		itemHasTag()
		imageSize()
		projectileGravityMultiplier()
		nonEmptyRegion()
		evalFunction2()
		projectileConfig()
		materialMiningSound()
		generateName()
		isTreasurePool()
		hasTech()
		behaviorModule()
		itemConfig()
		treeStemDirectory()
		evalFunction()
		techConfig()
		npcConfig()
		setConfigurationPath()
		getConfigurationPath()
		materialHealth()
		materialFootstepSound()
		monsterMovementSettings()
		materialPath()
		setConfiguration()
		monsterPortrait()
		itemType()
		questConfig()
		recipesForItem()
		assetJson()
		treeFoliageDirectory()
		techType()
		liquidStatusEffects()
		makeCurrentVersionedJson()
		itemTags()
		tenantConfig()
		npcPortrait()
	}
	jsize()
	status = {
		setResourceLocked()
		resourcePercentage()
		addPersistentEffects()
		removeEphemeralEffect()
		resource()
		setResourcePercentage()
		resourcePositive()
		damageTakenSince()
		statPositive()
		stat()
		statusProperty()
		activeUniqueStatusEffectSummary()
		inflictedHitsSince()
		resourceMax()
		setStatusProperty()
		setPersistentEffects()
		resetAllResources()
		addEphemeralEffects()
		overConsumeResource()
		modifyResource()
		addEphemeralEffect()
		getPersistentEffects()
		resetResource()
		consumeResource()
		clearPersistentEffects()
		modifyResourcePercentage()
		clearEphemeralEffects()
		resourceNames()
		addPersistentEffect()
		resourceLocked()
		clearAllPersistentEffects()
		inflictedDamageSince()
		isResource()
		setResource()
		giveResource()
	}
	xpcall()
	getmetatable()
	utf8 = {
		len()
		codepoint()
		offset()
		codes()
		charpattern = "[
[23:13:07.901] [Warn] 	select()
	rawequal()
	rawset()
	string = {
		gmatch()
		char()
		sub()
		unpack()
		upper()
		lower()
		find()
		rep()
		dump()
		len()
		reverse()
		packsize()
		pack()
		byte()
		match()
		format()
		gsub()
	}
	require()
	pairs()
	next()
	jobject()
	math = {
		pi = 3.1415926535898
		rad()
		max()
		sqrt()
		random()
		floor()
		log()
		acos()
		fmod()
		mininteger = -9223372036854775808
		type()
		huge = inf
		randomseed()
		deg()
		exp()
		maxinteger = 9223372036854775807
		cos()
		min()
		tointeger()
		modf()
		asin()
		tan()
		atan()
		abs()
		sin()
		ult()
		ceil()
	}
	print()
	pcall()
	type()
	init()
	setmetatable()
	jresize()
	ic = {
		checkStack()
		itemAmount()
		stripColor()
		quickstack()
		itemConfig()
		amountEquipped()
		sortFunc()
		lock()
		giveBack()
		renameThis()
		sort()
		searchBox()
		sort_relative()
		clientVersion = 1
		renameButton()
		searchButton()
		getQuality()
	}
	player = {
		equippedTech()
		altHandItem()
		giveEssentialItem()
		consumeTaggedItem()
		setUniverseFlag()
		species()
		itemsWithTag()
		worldId()
		warp()
		completeMission()
		inventoryTags()
		upgradeShip()
		hasQuest()
		consumeItem()
		gender()
		primaryHandItem()
		essentialItem()
		equippedItem()
		setIntroComplete()
		playTime()
		enabledTechs()
		recordEvent()
		playCinematic()
		introComplete()
		hasCompletedQuest()
		makeTechAvailable()
		consumeItemWithParameter()
		startQuest()
		hasItemWithParameter()
		getItemWithParameter()
		lounge()
		enableTech()
		equipTech()
		enableMission()
		removeEssentialItem()
		isLounging()
		availableTechs()
		primaryHandItemTags()
		makeTechUnavailable()
		confirm()
		serverUuid()
		addBookmark()
		altHandItemTags()
		cleanupItems()
		radioMessage()
		setEquippedItem()
		ownShipWorldId()
		hasItem()
		canStartQuest()
		giveBlueprint()
		hasCountOfItem()
		shipUpgrades()
		giveItem()
	}
	config = {
		getParameter()
	}
	self = {
	}
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	world = {
		spawnItem()
		entityPosition()
		entityHealth()
		damageTileArea()
		day()
		placeMaterial()
		entityDescription()
		containerPutItemsAt()
		entityVelocity()
		damageTiles()
		entityHandItem()
		objectAt()
		setProperty()
		containerItemApply()
		containerClose()
		distance()
		findUniqueEntity()
		gravity()
		rectTileCollision()
		entitySpecies()
		platformerPathStart()
		containerOpen()
		containerTakeAll()
		breathable()
		npcType()
		containerAddItems()
		dayLength()
		loungeableOccupied()
		placeObject()
		isTileProtected()
		destroyLiquid()
		debugLine()
		spawnLiquid()
		entityCanDamage()
		containerItemsCanFit()
		xwrap()
		entityUniqueId()
		itemDropQuery()
		lightLevel()
		placeMod()
		spawnNpc()
		spawnTreasure()
		time()
		underground()
		spawnVehicle()
		spawnMonster()
		timeOfDay()
		findPlatformerPath()
		debugPoly()
		containerTakeNumItemsAt()
		isMonster()
		farmableStage()
		polyCollision()
		objectLineQuery()
		entityHasCountOfItem()
		entityHandItemDescriptor()
		tileIsOccupied()
		resolvePolyCollision()
		pointCollision()
		callScriptedEntity()
		collisionBlocksAlongLine()
		containerStackItems()
		objectSpaces()
		containerConsume()
		spawnStagehand()
		spawnProjectile()
		stagehandType()
		entityQuery()
		lineTileCollision()
		containerSwapItemsNoCombine()
		liquidAlongLine()
		playerQuery()
		objectQuery()
		entityGender()
		rectCollision()
		containerItemAt()
		polyContains()
		containerTakeAt()
		magnitude()
		mod()
		containerSwapItems()
		isNpc()
		lineCollision()
		getObjectParameter()
		debugPoint()
		pointTileCollision()
		containerItemsFitWhere()
		containerAvailable()
		getProperty()
		containerItems()
		threatLevel()
		entityType()
		sendEntityMessage()
		material()
		liquidAt()
		containerSize()
		debugText()
		monsterType()
		entityMoney()
		nearestTo()
		npcLineQuery()
		entityPortrait()
		entityName()
		entityDamageTeam()
		containerConsumeAt()
		entityAggressive()
		windLevel()
		monsterQuery()
		entityExists()
		loungeableQuery()
		npcQuery()
		entityLineQuery()
	}
	root = {
		createBiome()
		imageSpaces()
		createItem()
		loadVersionedJson()
		createTreasure()
		getMatchingTenants()
		monsterSkillParameter()
		getConfiguration()
		npcVariant()
		itemHasTag()
		imageSize()
		projectileGravityMultiplier()
		nonEmptyRegion()
		evalFunction2()
		projectileConfig()
		materialMiningSound()
		generateName()
		isTreasurePool()
		hasTech()
		behaviorModule()
		itemConfig()
		treeStemDirectory()
		evalFunction()
		techConfig()
		npcConfig()
		setConfigurationPath()
		getConfigurationPath()
		materialHealth()
		materialFootstepSound()
		monsterMovementSettings()
		materialPath()
		setConfiguration()
		monsterPortrait()
		itemType()
		questConfig()
		recipesForItem()
		assetJson()
		treeFoliageDirectory()
		techType()
		liquidStatusEffects()
		makeCurrentVersionedJson()
		itemTags()
		tenantConfig()
		npcPortrait()
	}
	jsize()
	status = {
		setResourceLocked()
		resourcePercentage()
		addPersistentEffects()
		removeEphemeralEffect()
		resource()
		setResourcePercentage()
		resourcePositive()
		damageTakenSince()
		statPositive()
		stat()
		statusProperty()
		activeUniqueStatusEffectSummary()
		inflictedHitsSince()
		resourceMax()
		setStatusProperty()
		setPersistentEffects()
		resetAllResources()
		addEphemeralEffects()
		overConsumeResource()
		modifyResource()
		addEphemeralEffect()
		getPersistentEffects()
		resetResource()
		consumeResource()
		clearPersistentEffects()
		modifyResourcePercentage()
		clearEphemeralEffects()
		resourceNames()
		addPersistentEffect()
		resourceLocked()
		clearAllPersistentEffects()
		inflictedDamageSince()
		isResource()
		setResource()
		giveResource()
	}
	xpcall()
	getmetatable()
	utf8 = {
		len()
		codepoint()
		offset()
		codes()
		charpattern = "[
[23:13:08.868] [Warn] 	select()
	rawequal()
	rawset()
	string = {
		gmatch()
		char()
		sub()
		unpack()
		upper()
		lower()
		find()
		rep()
		dump()
		len()
		reverse()
		packsize()
		pack()
		byte()
		match()
		format()
		gsub()
	}
	require()
	pairs()
	next()
	jobject()
	math = {
		pi = 3.1415926535898
		rad()
		max()
		sqrt()
		random()
		floor()
		log()
		acos()
		fmod()
		mininteger = -9223372036854775808
		type()
		huge = inf
		randomseed()
		deg()
		exp()
		maxinteger = 9223372036854775807
		cos()
		min()
		tointeger()
		modf()
		asin()
		tan()
		atan()
		abs()
		sin()
		ult()
		ceil()
	}
	print()
	pcall()
	type()
	init()
	setmetatable()
	jresize()
	ic = {
		checkStack()
		itemAmount()
		stripColor()
		quickstack()
		itemConfig()
		amountEquipped()
		sortFunc()
		lock()
		giveBack()
		renameThis()
		sort()
		searchBox()
		sort_relative()
		clientVersion = 1
		renameButton()
		searchButton()
		getQuality()
	}
	player = {
		equippedTech()
		altHandItem()
		giveEssentialItem()
		consumeTaggedItem()
		setUniverseFlag()
		species()
		itemsWithTag()
		worldId()
		warp()
		completeMission()
		inventoryTags()
		upgradeShip()
		hasQuest()
		consumeItem()
		gender()
		primaryHandItem()
		essentialItem()
		equippedItem()
		setIntroComplete()
		playTime()
		enabledTechs()
		recordEvent()
		playCinematic()
		introComplete()
		hasCompletedQuest()
		makeTechAvailable()
		consumeItemWithParameter()
		startQuest()
		hasItemWithParameter()
		getItemWithParameter()
		lounge()
		enableTech()
		equipTech()
		enableMission()
		removeEssentialItem()
		isLounging()
		availableTechs()
		primaryHandItemTags()
		makeTechUnavailable()
		confirm()
		serverUuid()
		addBookmark()
		altHandItemTags()
		cleanupItems()
		radioMessage()
		setEquippedItem()
		ownShipWorldId()
		hasItem()
		canStartQuest()
		giveBlueprint()
		hasCountOfItem()
		shipUpgrades()
		giveItem()
	}
	config = {
		getParameter()
	}
	self = {
	}
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	world = {
		spawnItem()
		entityPosition()
		entityHealth()
		damageTileArea()
		day()
		placeMaterial()
		entityDescription()
		containerPutItemsAt()
		entityVelocity()
		damageTiles()
		entityHandItem()
		objectAt()
		setProperty()
		containerItemApply()
		containerClose()
		distance()
		findUniqueEntity()
		gravity()
		rectTileCollision()
		entitySpecies()
		platformerPathStart()
		containerOpen()
		containerTakeAll()
		breathable()
		npcType()
		containerAddItems()
		dayLength()
		loungeableOccupied()
		placeObject()
		isTileProtected()
		destroyLiquid()
		debugLine()
		spawnLiquid()
		entityCanDamage()
		containerItemsCanFit()
		xwrap()
		entityUniqueId()
		itemDropQuery()
		lightLevel()
		placeMod()
		spawnNpc()
		spawnTreasure()
		time()
		underground()
		spawnVehicle()
		spawnMonster()
		timeOfDay()
		findPlatformerPath()
		debugPoly()
		containerTakeNumItemsAt()
		isMonster()
		farmableStage()
		polyCollision()
		objectLineQuery()
		entityHasCountOfItem()
		entityHandItemDescriptor()
		tileIsOccupied()
		resolvePolyCollision()
		pointCollision()
		callScriptedEntity()
		collisionBlocksAlongLine()
		containerStackItems()
		objectSpaces()
		containerConsume()
		spawnStagehand()
		spawnProjectile()
		stagehandType()
		entityQuery()
		lineTileCollision()
		containerSwapItemsNoCombine()
		liquidAlongLine()
		playerQuery()
		objectQuery()
		entityGender()
		rectCollision()
		containerItemAt()
		polyContains()
		containerTakeAt()
		magnitude()
		mod()
		containerSwapItems()
		isNpc()
		lineCollision()
		getObjectParameter()
		debugPoint()
		pointTileCollision()
		containerItemsFitWhere()
		containerAvailable()
		getProperty()
		containerItems()
		threatLevel()
		entityType()
		sendEntityMessage()
		material()
		liquidAt()
		containerSize()
		debugText()
		monsterType()
		entityMoney()
		nearestTo()
		npcLineQuery()
		entityPortrait()
		entityName()
		entityDamageTeam()
		containerConsumeAt()
		entityAggressive()
		windLevel()
		monsterQuery()
		entityExists()
		loungeableQuery()
		npcQuery()
		entityLineQuery()
	}
	root = {
		createBiome()
		imageSpaces()
		createItem()
		loadVersionedJson()
		createTreasure()
		getMatchingTenants()
		monsterSkillParameter()
		getConfiguration()
		npcVariant()
		itemHasTag()
		imageSize()
		projectileGravityMultiplier()
		nonEmptyRegion()
		evalFunction2()
		projectileConfig()
		materialMiningSound()
		generateName()
		isTreasurePool()
		hasTech()
		behaviorModule()
		itemConfig()
		treeStemDirectory()
		evalFunction()
		techConfig()
		npcConfig()
		setConfigurationPath()
		getConfigurationPath()
		materialHealth()
		materialFootstepSound()
		monsterMovementSettings()
		materialPath()
		setConfiguration()
		monsterPortrait()
		itemType()
		questConfig()
		recipesForItem()
		assetJson()
		treeFoliageDirectory()
		techType()
		liquidStatusEffects()
		makeCurrentVersionedJson()
		itemTags()
		tenantConfig()
		npcPortrait()
	}
	jsize()
	status = {
		setResourceLocked()
		resourcePercentage()
		addPersistentEffects()
		removeEphemeralEffect()
		resource()
		setResourcePercentage()
		resourcePositive()
		damageTakenSince()
		statPositive()
		stat()
		statusProperty()
		activeUniqueStatusEffectSummary()
		inflictedHitsSince()
		resourceMax()
		setStatusProperty()
		setPersistentEffects()
		resetAllResources()
		addEphemeralEffects()
		overConsumeResource()
		modifyResource()
		addEphemeralEffect()
		getPersistentEffects()
		resetResource()
		consumeResource()
		clearPersistentEffects()
		modifyResourcePercentage()
		clearEphemeralEffects()
		resourceNames()
		addPersistentEffect()
		resourceLocked()
		clearAllPersistentEffects()
		inflictedDamageSince()
		isResource()
		setResource()
		giveResource()
	}
	xpcall()
	getmetatable()
	utf8 = {
		len()
		codepoint()
		offset()
		codes()
		charpattern = "[
[23:13:09.812] [Warn] 	select()
	rawequal()
	rawset()
	string = {
		gmatch()
		char()
		sub()
		unpack()
		upper()
		lower()
		find()
		rep()
		dump()
		len()
		reverse()
		packsize()
		pack()
		byte()
		match()
		format()
		gsub()
	}
	require()
	pairs()
	next()
	jobject()
	math = {
		pi = 3.1415926535898
		rad()
		max()
		sqrt()
		random()
		floor()
		log()
		acos()
		fmod()
		mininteger = -9223372036854775808
		type()
		huge = inf
		randomseed()
		deg()
		exp()
		maxinteger = 9223372036854775807
		cos()
		min()
		tointeger()
		modf()
		asin()
		tan()
		atan()
		abs()
		sin()
		ult()
		ceil()
	}
	print()
	pcall()
	type()
	init()
	setmetatable()
	jresize()
	ic = {
		checkStack()
		itemAmount()
		stripColor()
		quickstack()
		itemConfig()
		amountEquipped()
		sortFunc()
		lock()
		giveBack()
		renameThis()
		sort()
		searchBox()
		sort_relative()
		clientVersion = 1
		renameButton()
		searchButton()
		getQuality()
	}
	player = {
		equippedTech()
		altHandItem()
		giveEssentialItem()
		consumeTaggedItem()
		setUniverseFlag()
		species()
		itemsWithTag()
		worldId()
		warp()
		completeMission()
		inventoryTags()
		upgradeShip()
		hasQuest()
		consumeItem()
		gender()
		primaryHandItem()
		essentialItem()
		equippedItem()
		setIntroComplete()
		playTime()
		enabledTechs()
		recordEvent()
		playCinematic()
		introComplete()
		hasCompletedQuest()
		makeTechAvailable()
		consumeItemWithParameter()
		startQuest()
		hasItemWithParameter()
		getItemWithParameter()
		lounge()
		enableTech()
		equipTech()
		enableMission()
		removeEssentialItem()
		isLounging()
		availableTechs()
		primaryHandItemTags()
		makeTechUnavailable()
		confirm()
		serverUuid()
		addBookmark()
		altHandItemTags()
		cleanupItems()
		radioMessage()
		setEquippedItem()
		ownShipWorldId()
		hasItem()
		canStartQuest()
		giveBlueprint()
		hasCountOfItem()
		shipUpgrades()
		giveItem()
	}
	config = {
		getParameter()
	}
	self = {
	}
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	world = {
		spawnItem()
		entityPosition()
		entityHealth()
		damageTileArea()
		day()
		placeMaterial()
		entityDescription()
		containerPutItemsAt()
		entityVelocity()
		damageTiles()
		entityHandItem()
		objectAt()
		setProperty()
		containerItemApply()
		containerClose()
		distance()
		findUniqueEntity()
		gravity()
		rectTileCollision()
		entitySpecies()
		platformerPathStart()
		containerOpen()
		containerTakeAll()
		breathable()
		npcType()
		containerAddItems()
		dayLength()
		loungeableOccupied()
		placeObject()
		isTileProtected()
		destroyLiquid()
		debugLine()
		spawnLiquid()
		entityCanDamage()
		containerItemsCanFit()
		xwrap()
		entityUniqueId()
		itemDropQuery()
		lightLevel()
		placeMod()
		spawnNpc()
		spawnTreasure()
		time()
		underground()
		spawnVehicle()
		spawnMonster()
		timeOfDay()
		findPlatformerPath()
		debugPoly()
		containerTakeNumItemsAt()
		isMonster()
		farmableStage()
		polyCollision()
		objectLineQuery()
		entityHasCountOfItem()
		entityHandItemDescriptor()
		tileIsOccupied()
		resolvePolyCollision()
		pointCollision()
		callScriptedEntity()
		collisionBlocksAlongLine()
		containerStackItems()
		objectSpaces()
		containerConsume()
		spawnStagehand()
		spawnProjectile()
		stagehandType()
		entityQuery()
		lineTileCollision()
		containerSwapItemsNoCombine()
		liquidAlongLine()
		playerQuery()
		objectQuery()
		entityGender()
		rectCollision()
		containerItemAt()
		polyContains()
		containerTakeAt()
		magnitude()
		mod()
		containerSwapItems()
		isNpc()
		lineCollision()
		getObjectParameter()
		debugPoint()
		pointTileCollision()
		containerItemsFitWhere()
		containerAvailable()
		getProperty()
		containerItems()
		threatLevel()
		entityType()
		sendEntityMessage()
		material()
		liquidAt()
		containerSize()
		debugText()
		monsterType()
		entityMoney()
		nearestTo()
		npcLineQuery()
		entityPortrait()
		entityName()
		entityDamageTeam()
		containerConsumeAt()
		entityAggressive()
		windLevel()
		monsterQuery()
		entityExists()
		loungeableQuery()
		npcQuery()
		entityLineQuery()
	}
	root = {
		createBiome()
		imageSpaces()
		createItem()
		loadVersionedJson()
		createTreasure()
		getMatchingTenants()
		monsterSkillParameter()
		getConfiguration()
		npcVariant()
		itemHasTag()
		imageSize()
		projectileGravityMultiplier()
		nonEmptyRegion()
		evalFunction2()
		projectileConfig()
		materialMiningSound()
		generateName()
		isTreasurePool()
		hasTech()
		behaviorModule()
		itemConfig()
		treeStemDirectory()
		evalFunction()
		techConfig()
		npcConfig()
		setConfigurationPath()
		getConfigurationPath()
		materialHealth()
		materialFootstepSound()
		monsterMovementSettings()
		materialPath()
		setConfiguration()
		monsterPortrait()
		itemType()
		questConfig()
		recipesForItem()
		assetJson()
		treeFoliageDirectory()
		techType()
		liquidStatusEffects()
		makeCurrentVersionedJson()
		itemTags()
		tenantConfig()
		npcPortrait()
	}
	jsize()
	status = {
		setResourceLocked()
		resourcePercentage()
		addPersistentEffects()
		removeEphemeralEffect()
		resource()
		setResourcePercentage()
		resourcePositive()
		damageTakenSince()
		statPositive()
		stat()
		statusProperty()
		activeUniqueStatusEffectSummary()
		inflictedHitsSince()
		resourceMax()
		setStatusProperty()
		setPersistentEffects()
		resetAllResources()
		addEphemeralEffects()
		overConsumeResource()
		modifyResource()
		addEphemeralEffect()
		getPersistentEffects()
		resetResource()
		consumeResource()
		clearPersistentEffects()
		modifyResourcePercentage()
		clearEphemeralEffects()
		resourceNames()
		addPersistentEffect()
		resourceLocked()
		clearAllPersistentEffects()
		inflictedDamageSince()
		isResource()
		setResource()
		giveResource()
	}
	xpcall()
	getmetatable()
	utf8 = {
		len()
		codepoint()
		offset()
		codes()
		charpattern = "[
[23:13:11.179] [Warn] 	select()
	rawequal()
	rawset()
	string = {
		gmatch()
		char()
		sub()
		unpack()
		upper()
		lower()
		find()
		rep()
		dump()
		len()
		reverse()
		packsize()
		pack()
		byte()
		match()
		format()
		gsub()
	}
	require()
	pairs()
	next()
	jobject()
	math = {
		pi = 3.1415926535898
		rad()
		max()
		sqrt()
		random()
		floor()
		log()
		acos()
		fmod()
		mininteger = -9223372036854775808
		type()
		huge = inf
		randomseed()
		deg()
		exp()
		maxinteger = 9223372036854775807
		cos()
		min()
		tointeger()
		modf()
		asin()
		tan()
		atan()
		abs()
		sin()
		ult()
		ceil()
	}
	print()
	pcall()
	type()
	init()
	setmetatable()
	jresize()
	ic = {
		checkStack()
		itemAmount()
		stripColor()
		quickstack()
		itemConfig()
		amountEquipped()
		sortFunc()
		lock()
		giveBack()
		renameThis()
		sort()
		searchBox()
		sort_relative()
		clientVersion = 1
		renameButton()
		searchButton()
		getQuality()
	}
	player = {
		equippedTech()
		altHandItem()
		giveEssentialItem()
		consumeTaggedItem()
		setUniverseFlag()
		species()
		itemsWithTag()
		worldId()
		warp()
		completeMission()
		inventoryTags()
		upgradeShip()
		hasQuest()
		consumeItem()
		gender()
		primaryHandItem()
		essentialItem()
		equippedItem()
		setIntroComplete()
		playTime()
		enabledTechs()
		recordEvent()
		playCinematic()
		introComplete()
		hasCompletedQuest()
		makeTechAvailable()
		consumeItemWithParameter()
		startQuest()
		hasItemWithParameter()
		getItemWithParameter()
		lounge()
		enableTech()
		equipTech()
		enableMission()
		removeEssentialItem()
		isLounging()
		availableTechs()
		primaryHandItemTags()
		makeTechUnavailable()
		confirm()
		serverUuid()
		addBookmark()
		altHandItemTags()
		cleanupItems()
		radioMessage()
		setEquippedItem()
		ownShipWorldId()
		hasItem()
		canStartQuest()
		giveBlueprint()
		hasCountOfItem()
		shipUpgrades()
		giveItem()
	}
	config = {
		getParameter()
	}
	self = {
	}
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	world = {
		spawnItem()
		entityPosition()
		entityHealth()
		damageTileArea()
		day()
		placeMaterial()
		entityDescription()
		containerPutItemsAt()
		entityVelocity()
		damageTiles()
		entityHandItem()
		objectAt()
		setProperty()
		containerItemApply()
		containerClose()
		distance()
		findUniqueEntity()
		gravity()
		rectTileCollision()
		entitySpecies()
		platformerPathStart()
		containerOpen()
		containerTakeAll()
		breathable()
		npcType()
		containerAddItems()
		dayLength()
		loungeableOccupied()
		placeObject()
		isTileProtected()
		destroyLiquid()
		debugLine()
		spawnLiquid()
		entityCanDamage()
		containerItemsCanFit()
		xwrap()
		entityUniqueId()
		itemDropQuery()
		lightLevel()
		placeMod()
		spawnNpc()
		spawnTreasure()
		time()
		underground()
		spawnVehicle()
		spawnMonster()
		timeOfDay()
		findPlatformerPath()
		debugPoly()
		containerTakeNumItemsAt()
		isMonster()
		farmableStage()
		polyCollision()
		objectLineQuery()
		entityHasCountOfItem()
		entityHandItemDescriptor()
		tileIsOccupied()
		resolvePolyCollision()
		pointCollision()
		callScriptedEntity()
		collisionBlocksAlongLine()
		containerStackItems()
		objectSpaces()
		containerConsume()
		spawnStagehand()
		spawnProjectile()
		stagehandType()
		entityQuery()
		lineTileCollision()
		containerSwapItemsNoCombine()
		liquidAlongLine()
		playerQuery()
		objectQuery()
		entityGender()
		rectCollision()
		containerItemAt()
		polyContains()
		containerTakeAt()
		magnitude()
		mod()
		containerSwapItems()
		isNpc()
		lineCollision()
		getObjectParameter()
		debugPoint()
		pointTileCollision()
		containerItemsFitWhere()
		containerAvailable()
		getProperty()
		containerItems()
		threatLevel()
		entityType()
		sendEntityMessage()
		material()
		liquidAt()
		containerSize()
		debugText()
		monsterType()
		entityMoney()
		nearestTo()
		npcLineQuery()
		entityPortrait()
		entityName()
		entityDamageTeam()
		containerConsumeAt()
		entityAggressive()
		windLevel()
		monsterQuery()
		entityExists()
		loungeableQuery()
		npcQuery()
		entityLineQuery()
	}
	root = {
		createBiome()
		imageSpaces()
		createItem()
		loadVersionedJson()
		createTreasure()
		getMatchingTenants()
		monsterSkillParameter()
		getConfiguration()
		npcVariant()
		itemHasTag()
		imageSize()
		projectileGravityMultiplier()
		nonEmptyRegion()
		evalFunction2()
		projectileConfig()
		materialMiningSound()
		generateName()
		isTreasurePool()
		hasTech()
		behaviorModule()
		itemConfig()
		treeStemDirectory()
		evalFunction()
		techConfig()
		npcConfig()
		setConfigurationPath()
		getConfigurationPath()
		materialHealth()
		materialFootstepSound()
		monsterMovementSettings()
		materialPath()
		setConfiguration()
		monsterPortrait()
		itemType()
		questConfig()
		recipesForItem()
		assetJson()
		treeFoliageDirectory()
		techType()
		liquidStatusEffects()
		makeCurrentVersionedJson()
		itemTags()
		tenantConfig()
		npcPortrait()
	}
	jsize()
	status = {
		setResourceLocked()
		resourcePercentage()
		addPersistentEffects()
		removeEphemeralEffect()
		resource()
		setResourcePercentage()
		resourcePositive()
		damageTakenSince()
		statPositive()
		stat()
		statusProperty()
		activeUniqueStatusEffectSummary()
		inflictedHitsSince()
		resourceMax()
		setStatusProperty()
		setPersistentEffects()
		resetAllResources()
		addEphemeralEffects()
		overConsumeResource()
		modifyResource()
		addEphemeralEffect()
		getPersistentEffects()
		resetResource()
		consumeResource()
		clearPersistentEffects()
		modifyResourcePercentage()
		clearEphemeralEffects()
		resourceNames()
		addPersistentEffect()
		resourceLocked()
		clearAllPersistentEffects()
		inflictedDamageSince()
		isResource()
		setResource()
		giveResource()
	}
	xpcall()
	getmetatable()
	utf8 = {
		len()
		codepoint()
		offset()
		codes()
		charpattern = "[
[23:13:12.186] [Warn] 	select()
	rawequal()
	rawset()
	string = {
		gmatch()
		char()
		sub()
		unpack()
		upper()
		lower()
		find()
		rep()
		dump()
		len()
		reverse()
		packsize()
		pack()
		byte()
		match()
		format()
		gsub()
	}
	require()
	pairs()
	next()
	jobject()
	math = {
		pi = 3.1415926535898
		rad()
		max()
		sqrt()
		random()
		floor()
		log()
		acos()
		fmod()
		mininteger = -9223372036854775808
		type()
		huge = inf
		randomseed()
		deg()
		exp()
		maxinteger = 9223372036854775807
		cos()
		min()
		tointeger()
		modf()
		asin()
		tan()
		atan()
		abs()
		sin()
		ult()
		ceil()
	}
	print()
	pcall()
	type()
	init()
	setmetatable()
	jresize()
	ic = {
		checkStack()
		itemAmount()
		stripColor()
		quickstack()
		itemConfig()
		amountEquipped()
		sortFunc()
		lock()
		giveBack()
		renameThis()
		sort()
		searchBox()
		sort_relative()
		clientVersion = 1
		renameButton()
		searchButton()
		getQuality()
	}
	player = {
		equippedTech()
		altHandItem()
		giveEssentialItem()
		consumeTaggedItem()
		setUniverseFlag()
		species()
		itemsWithTag()
		worldId()
		warp()
		completeMission()
		inventoryTags()
		upgradeShip()
		hasQuest()
		consumeItem()
		gender()
		primaryHandItem()
		essentialItem()
		equippedItem()
		setIntroComplete()
		playTime()
		enabledTechs()
		recordEvent()
		playCinematic()
		introComplete()
		hasCompletedQuest()
		makeTechAvailable()
		consumeItemWithParameter()
		startQuest()
		hasItemWithParameter()
		getItemWithParameter()
		lounge()
		enableTech()
		equipTech()
		enableMission()
		removeEssentialItem()
		isLounging()
		availableTechs()
		primaryHandItemTags()
		makeTechUnavailable()
		confirm()
		serverUuid()
		addBookmark()
		altHandItemTags()
		cleanupItems()
		radioMessage()
		setEquippedItem()
		ownShipWorldId()
		hasItem()
		canStartQuest()
		giveBlueprint()
		hasCountOfItem()
		shipUpgrades()
		giveItem()
	}
	config = {
		getParameter()
	}
	self = {
	}
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	world = {
		spawnItem()
		entityPosition()
		entityHealth()
		damageTileArea()
		day()
		placeMaterial()
		entityDescription()
		containerPutItemsAt()
		entityVelocity()
		damageTiles()
		entityHandItem()
		objectAt()
		setProperty()
		containerItemApply()
		containerClose()
		distance()
		findUniqueEntity()
		gravity()
		rectTileCollision()
		entitySpecies()
		platformerPathStart()
		containerOpen()
		containerTakeAll()
		breathable()
		npcType()
		containerAddItems()
		dayLength()
		loungeableOccupied()
		placeObject()
		isTileProtected()
		destroyLiquid()
		debugLine()
		spawnLiquid()
		entityCanDamage()
		containerItemsCanFit()
		xwrap()
		entityUniqueId()
		itemDropQuery()
		lightLevel()
		placeMod()
		spawnNpc()
		spawnTreasure()
		time()
		underground()
		spawnVehicle()
		spawnMonster()
		timeOfDay()
		findPlatformerPath()
		debugPoly()
		containerTakeNumItemsAt()
		isMonster()
		farmableStage()
		polyCollision()
		objectLineQuery()
		entityHasCountOfItem()
		entityHandItemDescriptor()
		tileIsOccupied()
		resolvePolyCollision()
		pointCollision()
		callScriptedEntity()
		collisionBlocksAlongLine()
		containerStackItems()
		objectSpaces()
		containerConsume()
		spawnStagehand()
		spawnProjectile()
		stagehandType()
		entityQuery()
		lineTileCollision()
		containerSwapItemsNoCombine()
		liquidAlongLine()
		playerQuery()
		objectQuery()
		entityGender()
		rectCollision()
		containerItemAt()
		polyContains()
		containerTakeAt()
		magnitude()
		mod()
		containerSwapItems()
		isNpc()
		lineCollision()
		getObjectParameter()
		debugPoint()
		pointTileCollision()
		containerItemsFitWhere()
		containerAvailable()
		getProperty()
		containerItems()
		threatLevel()
		entityType()
		sendEntityMessage()
		material()
		liquidAt()
		containerSize()
		debugText()
		monsterType()
		entityMoney()
		nearestTo()
		npcLineQuery()
		entityPortrait()
		entityName()
		entityDamageTeam()
		containerConsumeAt()
		entityAggressive()
		windLevel()
		monsterQuery()
		entityExists()
		loungeableQuery()
		npcQuery()
		entityLineQuery()
	}
	root = {
		createBiome()
		imageSpaces()
		createItem()
		loadVersionedJson()
		createTreasure()
		getMatchingTenants()
		monsterSkillParameter()
		getConfiguration()
		npcVariant()
		itemHasTag()
		imageSize()
		projectileGravityMultiplier()
		nonEmptyRegion()
		evalFunction2()
		projectileConfig()
		materialMiningSound()
		generateName()
		isTreasurePool()
		hasTech()
		behaviorModule()
		itemConfig()
		treeStemDirectory()
		evalFunction()
		techConfig()
		npcConfig()
		setConfigurationPath()
		getConfigurationPath()
		materialHealth()
		materialFootstepSound()
		monsterMovementSettings()
		materialPath()
		setConfiguration()
		monsterPortrait()
		itemType()
		questConfig()
		recipesForItem()
		assetJson()
		treeFoliageDirectory()
		techType()
		liquidStatusEffects()
		makeCurrentVersionedJson()
		itemTags()
		tenantConfig()
		npcPortrait()
	}
	jsize()
	status = {
		setResourceLocked()
		resourcePercentage()
		addPersistentEffects()
		removeEphemeralEffect()
		resource()
		setResourcePercentage()
		resourcePositive()
		damageTakenSince()
		statPositive()
		stat()
		statusProperty()
		activeUniqueStatusEffectSummary()
		inflictedHitsSince()
		resourceMax()
		setStatusProperty()
		setPersistentEffects()
		resetAllResources()
		addEphemeralEffects()
		overConsumeResource()
		modifyResource()
		addEphemeralEffect()
		getPersistentEffects()
		resetResource()
		consumeResource()
		clearPersistentEffects()
		modifyResourcePercentage()
		clearEphemeralEffects()
		resourceNames()
		addPersistentEffect()
		resourceLocked()
		clearAllPersistentEffects()
		inflictedDamageSince()
		isResource()
		setResource()
		giveResource()
	}
	xpcall()
	getmetatable()
	utf8 = {
		len()
		codepoint()
		offset()
		codes()
		charpattern = "[
[23:13:20.516] [Warn] 	select()
	rawequal()
	rawset()
	string = {
		gmatch()
		char()
		sub()
		unpack()
		upper()
		lower()
		find()
		rep()
		dump()
		len()
		reverse()
		packsize()
		pack()
		byte()
		match()
		format()
		gsub()
	}
	require()
	pairs()
	next()
	jobject()
	math = {
		pi = 3.1415926535898
		rad()
		max()
		sqrt()
		random()
		floor()
		log()
		acos()
		fmod()
		mininteger = -9223372036854775808
		type()
		huge = inf
		randomseed()
		deg()
		exp()
		maxinteger = 9223372036854775807
		cos()
		min()
		tointeger()
		modf()
		asin()
		tan()
		atan()
		abs()
		sin()
		ult()
		ceil()
	}
	print()
	pcall()
	type()
	init()
	setmetatable()
	jresize()
	ic = {
		checkStack()
		itemAmount()
		stripColor()
		quickstack()
		itemConfig()
		amountEquipped()
		sortFunc()
		lock()
		giveBack()
		renameThis()
		sort()
		searchBox()
		sort_relative()
		clientVersion = 1
		renameButton()
		searchButton()
		getQuality()
	}
	player = {
		equippedTech()
		altHandItem()
		giveEssentialItem()
		consumeTaggedItem()
		setUniverseFlag()
		species()
		itemsWithTag()
		worldId()
		warp()
		completeMission()
		inventoryTags()
		upgradeShip()
		hasQuest()
		consumeItem()
		gender()
		primaryHandItem()
		essentialItem()
		equippedItem()
		setIntroComplete()
		playTime()
		enabledTechs()
		recordEvent()
		playCinematic()
		introComplete()
		hasCompletedQuest()
		makeTechAvailable()
		consumeItemWithParameter()
		startQuest()
		hasItemWithParameter()
		getItemWithParameter()
		lounge()
		enableTech()
		equipTech()
		enableMission()
		removeEssentialItem()
		isLounging()
		availableTechs()
		primaryHandItemTags()
		makeTechUnavailable()
		confirm()
		serverUuid()
		addBookmark()
		altHandItemTags()
		cleanupItems()
		radioMessage()
		setEquippedItem()
		ownShipWorldId()
		hasItem()
		canStartQuest()
		giveBlueprint()
		hasCountOfItem()
		shipUpgrades()
		giveItem()
	}
	config = {
		getParameter()
	}
	self = {
	}
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	world = {
		spawnItem()
		entityPosition()
		entityHealth()
		damageTileArea()
		day()
		placeMaterial()
		entityDescription()
		containerPutItemsAt()
		entityVelocity()
		damageTiles()
		entityHandItem()
		objectAt()
		setProperty()
		containerItemApply()
		containerClose()
		distance()
		findUniqueEntity()
		gravity()
		rectTileCollision()
		entitySpecies()
		platformerPathStart()
		containerOpen()
		containerTakeAll()
		breathable()
		npcType()
		containerAddItems()
		dayLength()
		loungeableOccupied()
		placeObject()
		isTileProtected()
		destroyLiquid()
		debugLine()
		spawnLiquid()
		entityCanDamage()
		containerItemsCanFit()
		xwrap()
		entityUniqueId()
		itemDropQuery()
		lightLevel()
		placeMod()
		spawnNpc()
		spawnTreasure()
		time()
		underground()
		spawnVehicle()
		spawnMonster()
		timeOfDay()
		findPlatformerPath()
		debugPoly()
		containerTakeNumItemsAt()
		isMonster()
		farmableStage()
		polyCollision()
		objectLineQuery()
		entityHasCountOfItem()
		entityHandItemDescriptor()
		tileIsOccupied()
		resolvePolyCollision()
		pointCollision()
		callScriptedEntity()
		collisionBlocksAlongLine()
		containerStackItems()
		objectSpaces()
		containerConsume()
		spawnStagehand()
		spawnProjectile()
		stagehandType()
		entityQuery()
		lineTileCollision()
		containerSwapItemsNoCombine()
		liquidAlongLine()
		playerQuery()
		objectQuery()
		entityGender()
		rectCollision()
		containerItemAt()
		polyContains()
		containerTakeAt()
		magnitude()
		mod()
		containerSwapItems()
		isNpc()
		lineCollision()
		getObjectParameter()
		debugPoint()
		pointTileCollision()
		containerItemsFitWhere()
		containerAvailable()
		getProperty()
		containerItems()
		threatLevel()
		entityType()
		sendEntityMessage()
		material()
		liquidAt()
		containerSize()
		debugText()
		monsterType()
		entityMoney()
		nearestTo()
		npcLineQuery()
		entityPortrait()
		entityName()
		entityDamageTeam()
		containerConsumeAt()
		entityAggressive()
		windLevel()
		monsterQuery()
		entityExists()
		loungeableQuery()
		npcQuery()
		entityLineQuery()
	}
	root = {
		createBiome()
		imageSpaces()
		createItem()
		loadVersionedJson()
		createTreasure()
		getMatchingTenants()
		monsterSkillParameter()
		getConfiguration()
		npcVariant()
		itemHasTag()
		imageSize()
		projectileGravityMultiplier()
		nonEmptyRegion()
		evalFunction2()
		projectileConfig()
		materialMiningSound()
		generateName()
		isTreasurePool()
		hasTech()
		behaviorModule()
		itemConfig()
		treeStemDirectory()
		evalFunction()
		techConfig()
		npcConfig()
		setConfigurationPath()
		getConfigurationPath()
		materialHealth()
		materialFootstepSound()
		monsterMovementSettings()
		materialPath()
		setConfiguration()
		monsterPortrait()
		itemType()
		questConfig()
		recipesForItem()
		assetJson()
		treeFoliageDirectory()
		techType()
		liquidStatusEffects()
		makeCurrentVersionedJson()
		itemTags()
		tenantConfig()
		npcPortrait()
	}
	jsize()
	status = {
		setResourceLocked()
		resourcePercentage()
		addPersistentEffects()
		removeEphemeralEffect()
		resource()
		setResourcePercentage()
		resourcePositive()
		damageTakenSince()
		statPositive()
		stat()
		statusProperty()
		activeUniqueStatusEffectSummary()
		inflictedHitsSince()
		resourceMax()
		setStatusProperty()
		setPersistentEffects()
		resetAllResources()
		addEphemeralEffects()
		overConsumeResource()
		modifyResource()
		addEphemeralEffect()
		getPersistentEffects()
		resetResource()
		consumeResource()
		clearPersistentEffects()
		modifyResourcePercentage()
		clearEphemeralEffects()
		resourceNames()
		addPersistentEffect()
		resourceLocked()
		clearAllPersistentEffects()
		inflictedDamageSince()
		isResource()
		setResource()
		giveResource()
	}
	xpcall()
	getmetatable()
	utf8 = {
		len()
		codepoint()
		offset()
		codes()
		charpattern = "[
[23:13:38.204] [Warn] 	select()
	rawequal()
	rawset()
	string = {
		gmatch()
		char()
		sub()
		unpack()
		upper()
		lower()
		find()
		rep()
		dump()
		len()
		reverse()
		packsize()
		pack()
		byte()
		match()
		format()
		gsub()
	}
	require()
	pairs()
	next()
	jobject()
	math = {
		pi = 3.1415926535898
		rad()
		max()
		sqrt()
		random()
		floor()
		log()
		acos()
		fmod()
		mininteger = -9223372036854775808
		type()
		huge = inf
		randomseed()
		deg()
		exp()
		maxinteger = 9223372036854775807
		cos()
		min()
		tointeger()
		modf()
		asin()
		tan()
		atan()
		abs()
		sin()
		ult()
		ceil()
	}
	print()
	pcall()
	type()
	init()
	setmetatable()
	jresize()
	ic = {
		checkStack()
		itemAmount()
		stripColor()
		quickstack()
		itemConfig()
		amountEquipped()
		sortFunc()
		lock()
		giveBack()
		renameThis()
		sort()
		searchBox()
		sort_relative()
		clientVersion = 1
		renameButton()
		searchButton()
		getQuality()
	}
	player = {
		equippedTech()
		altHandItem()
		giveEssentialItem()
		consumeTaggedItem()
		setUniverseFlag()
		species()
		itemsWithTag()
		worldId()
		warp()
		completeMission()
		inventoryTags()
		upgradeShip()
		hasQuest()
		consumeItem()
		gender()
		primaryHandItem()
		essentialItem()
		equippedItem()
		setIntroComplete()
		playTime()
		enabledTechs()
		recordEvent()
		playCinematic()
		introComplete()
		hasCompletedQuest()
		makeTechAvailable()
		consumeItemWithParameter()
		startQuest()
		hasItemWithParameter()
		getItemWithParameter()
		lounge()
		enableTech()
		equipTech()
		enableMission()
		removeEssentialItem()
		isLounging()
		availableTechs()
		primaryHandItemTags()
		makeTechUnavailable()
		confirm()
		serverUuid()
		addBookmark()
		altHandItemTags()
		cleanupItems()
		radioMessage()
		setEquippedItem()
		ownShipWorldId()
		hasItem()
		canStartQuest()
		giveBlueprint()
		hasCountOfItem()
		shipUpgrades()
		giveItem()
	}
	config = {
		getParameter()
	}
	self = {
	}
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	world = {
		spawnItem()
		entityPosition()
		entityHealth()
		damageTileArea()
		day()
		placeMaterial()
		entityDescription()
		containerPutItemsAt()
		entityVelocity()
		damageTiles()
		entityHandItem()
		objectAt()
		setProperty()
		containerItemApply()
		containerClose()
		distance()
		findUniqueEntity()
		gravity()
		rectTileCollision()
		entitySpecies()
		platformerPathStart()
		containerOpen()
		containerTakeAll()
		breathable()
		npcType()
		containerAddItems()
		dayLength()
		loungeableOccupied()
		placeObject()
		isTileProtected()
		destroyLiquid()
		debugLine()
		spawnLiquid()
		entityCanDamage()
		containerItemsCanFit()
		xwrap()
		entityUniqueId()
		itemDropQuery()
		lightLevel()
		placeMod()
		spawnNpc()
		spawnTreasure()
		time()
		underground()
		spawnVehicle()
		spawnMonster()
		timeOfDay()
		findPlatformerPath()
		debugPoly()
		containerTakeNumItemsAt()
		isMonster()
		farmableStage()
		polyCollision()
		objectLineQuery()
		entityHasCountOfItem()
		entityHandItemDescriptor()
		tileIsOccupied()
		resolvePolyCollision()
		pointCollision()
		callScriptedEntity()
		collisionBlocksAlongLine()
		containerStackItems()
		objectSpaces()
		containerConsume()
		spawnStagehand()
		spawnProjectile()
		stagehandType()
		entityQuery()
		lineTileCollision()
		containerSwapItemsNoCombine()
		liquidAlongLine()
		playerQuery()
		objectQuery()
		entityGender()
		rectCollision()
		containerItemAt()
		polyContains()
		containerTakeAt()
		magnitude()
		mod()
		containerSwapItems()
		isNpc()
		lineCollision()
		getObjectParameter()
		debugPoint()
		pointTileCollision()
		containerItemsFitWhere()
		containerAvailable()
		getProperty()
		containerItems()
		threatLevel()
		entityType()
		sendEntityMessage()
		material()
		liquidAt()
		containerSize()
		debugText()
		monsterType()
		entityMoney()
		nearestTo()
		npcLineQuery()
		entityPortrait()
		entityName()
		entityDamageTeam()
		containerConsumeAt()
		entityAggressive()
		windLevel()
		monsterQuery()
		entityExists()
		loungeableQuery()
		npcQuery()
		entityLineQuery()
	}
	root = {
		createBiome()
		imageSpaces()
		createItem()
		loadVersionedJson()
		createTreasure()
		getMatchingTenants()
		monsterSkillParameter()
		getConfiguration()
		npcVariant()
		itemHasTag()
		imageSize()
		projectileGravityMultiplier()
		nonEmptyRegion()
		evalFunction2()
		projectileConfig()
		materialMiningSound()
		generateName()
		isTreasurePool()
		hasTech()
		behaviorModule()
		itemConfig()
		treeStemDirectory()
		evalFunction()
		techConfig()
		npcConfig()
		setConfigurationPath()
		getConfigurationPath()
		materialHealth()
		materialFootstepSound()
		monsterMovementSettings()
		materialPath()
		setConfiguration()
		monsterPortrait()
		itemType()
		questConfig()
		recipesForItem()
		assetJson()
		treeFoliageDirectory()
		techType()
		liquidStatusEffects()
		makeCurrentVersionedJson()
		itemTags()
		tenantConfig()
		npcPortrait()
	}
	jsize()
	status = {
		setResourceLocked()
		resourcePercentage()
		addPersistentEffects()
		removeEphemeralEffect()
		resource()
		setResourcePercentage()
		resourcePositive()
		damageTakenSince()
		statPositive()
		stat()
		statusProperty()
		activeUniqueStatusEffectSummary()
		inflictedHitsSince()
		resourceMax()
		setStatusProperty()
		setPersistentEffects()
		resetAllResources()
		addEphemeralEffects()
		overConsumeResource()
		modifyResource()
		addEphemeralEffect()
		getPersistentEffects()
		resetResource()
		consumeResource()
		clearPersistentEffects()
		modifyResourcePercentage()
		clearEphemeralEffects()
		resourceNames()
		addPersistentEffect()
		resourceLocked()
		clearAllPersistentEffects()
		inflictedDamageSince()
		isResource()
		setResource()
		giveResource()
	}
	xpcall()
	getmetatable()
	utf8 = {
		len()
		codepoint()
		offset()
		codes()
		charpattern = "[
[23:13:39.300] [Warn] 	select()
	rawequal()
	rawset()
	string = {
		gmatch()
		char()
		sub()
		unpack()
		upper()
		lower()
		find()
		rep()
		dump()
		len()
		reverse()
		packsize()
		pack()
		byte()
		match()
		format()
		gsub()
	}
	require()
	pairs()
	next()
	jobject()
	math = {
		pi = 3.1415926535898
		rad()
		max()
		sqrt()
		random()
		floor()
		log()
		acos()
		fmod()
		mininteger = -9223372036854775808
		type()
		huge = inf
		randomseed()
		deg()
		exp()
		maxinteger = 9223372036854775807
		cos()
		min()
		tointeger()
		modf()
		asin()
		tan()
		atan()
		abs()
		sin()
		ult()
		ceil()
	}
	print()
	pcall()
	type()
	init()
	setmetatable()
	jresize()
	ic = {
		checkStack()
		itemAmount()
		stripColor()
		quickstack()
		itemConfig()
		amountEquipped()
		sortFunc()
		lock()
		giveBack()
		renameThis()
		sort()
		searchBox()
		sort_relative()
		clientVersion = 1
		renameButton()
		searchButton()
		getQuality()
	}
	player = {
		equippedTech()
		altHandItem()
		giveEssentialItem()
		consumeTaggedItem()
		setUniverseFlag()
		species()
		itemsWithTag()
		worldId()
		warp()
		completeMission()
		inventoryTags()
		upgradeShip()
		hasQuest()
		consumeItem()
		gender()
		primaryHandItem()
		essentialItem()
		equippedItem()
		setIntroComplete()
		playTime()
		enabledTechs()
		recordEvent()
		playCinematic()
		introComplete()
		hasCompletedQuest()
		makeTechAvailable()
		consumeItemWithParameter()
		startQuest()
		hasItemWithParameter()
		getItemWithParameter()
		lounge()
		enableTech()
		equipTech()
		enableMission()
		removeEssentialItem()
		isLounging()
		availableTechs()
		primaryHandItemTags()
		makeTechUnavailable()
		confirm()
		serverUuid()
		addBookmark()
		altHandItemTags()
		cleanupItems()
		radioMessage()
		setEquippedItem()
		ownShipWorldId()
		hasItem()
		canStartQuest()
		giveBlueprint()
		hasCountOfItem()
		shipUpgrades()
		giveItem()
	}
	config = {
		getParameter()
	}
	self = {
	}
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	world = {
		spawnItem()
		entityPosition()
		entityHealth()
		damageTileArea()
		day()
		placeMaterial()
		entityDescription()
		containerPutItemsAt()
		entityVelocity()
		damageTiles()
		entityHandItem()
		objectAt()
		setProperty()
		containerItemApply()
		containerClose()
		distance()
		findUniqueEntity()
		gravity()
		rectTileCollision()
		entitySpecies()
		platformerPathStart()
		containerOpen()
		containerTakeAll()
		breathable()
		npcType()
		containerAddItems()
		dayLength()
		loungeableOccupied()
		placeObject()
		isTileProtected()
		destroyLiquid()
		debugLine()
		spawnLiquid()
		entityCanDamage()
		containerItemsCanFit()
		xwrap()
		entityUniqueId()
		itemDropQuery()
		lightLevel()
		placeMod()
		spawnNpc()
		spawnTreasure()
		time()
		underground()
		spawnVehicle()
		spawnMonster()
		timeOfDay()
		findPlatformerPath()
		debugPoly()
		containerTakeNumItemsAt()
		isMonster()
		farmableStage()
		polyCollision()
		objectLineQuery()
		entityHasCountOfItem()
		entityHandItemDescriptor()
		tileIsOccupied()
		resolvePolyCollision()
		pointCollision()
		callScriptedEntity()
		collisionBlocksAlongLine()
		containerStackItems()
		objectSpaces()
		containerConsume()
		spawnStagehand()
		spawnProjectile()
		stagehandType()
		entityQuery()
		lineTileCollision()
		containerSwapItemsNoCombine()
		liquidAlongLine()
		playerQuery()
		objectQuery()
		entityGender()
		rectCollision()
		containerItemAt()
		polyContains()
		containerTakeAt()
		magnitude()
		mod()
		containerSwapItems()
		isNpc()
		lineCollision()
		getObjectParameter()
		debugPoint()
		pointTileCollision()
		containerItemsFitWhere()
		containerAvailable()
		getProperty()
		containerItems()
		threatLevel()
		entityType()
		sendEntityMessage()
		material()
		liquidAt()
		containerSize()
		debugText()
		monsterType()
		entityMoney()
		nearestTo()
		npcLineQuery()
		entityPortrait()
		entityName()
		entityDamageTeam()
		containerConsumeAt()
		entityAggressive()
		windLevel()
		monsterQuery()
		entityExists()
		loungeableQuery()
		npcQuery()
		entityLineQuery()
	}
	root = {
		createBiome()
		imageSpaces()
		createItem()
		loadVersionedJson()
		createTreasure()
		getMatchingTenants()
		monsterSkillParameter()
		getConfiguration()
		npcVariant()
		itemHasTag()
		imageSize()
		projectileGravityMultiplier()
		nonEmptyRegion()
		evalFunction2()
		projectileConfig()
		materialMiningSound()
		generateName()
		isTreasurePool()
		hasTech()
		behaviorModule()
		itemConfig()
		treeStemDirectory()
		evalFunction()
		techConfig()
		npcConfig()
		setConfigurationPath()
		getConfigurationPath()
		materialHealth()
		materialFootstepSound()
		monsterMovementSettings()
		materialPath()
		setConfiguration()
		monsterPortrait()
		itemType()
		questConfig()
		recipesForItem()
		assetJson()
		treeFoliageDirectory()
		techType()
		liquidStatusEffects()
		makeCurrentVersionedJson()
		itemTags()
		tenantConfig()
		npcPortrait()
	}
	jsize()
	status = {
		setResourceLocked()
		resourcePercentage()
		addPersistentEffects()
		removeEphemeralEffect()
		resource()
		setResourcePercentage()
		resourcePositive()
		damageTakenSince()
		statPositive()
		stat()
		statusProperty()
		activeUniqueStatusEffectSummary()
		inflictedHitsSince()
		resourceMax()
		setStatusProperty()
		setPersistentEffects()
		resetAllResources()
		addEphemeralEffects()
		overConsumeResource()
		modifyResource()
		addEphemeralEffect()
		getPersistentEffects()
		resetResource()
		consumeResource()
		clearPersistentEffects()
		modifyResourcePercentage()
		clearEphemeralEffects()
		resourceNames()
		addPersistentEffect()
		resourceLocked()
		clearAllPersistentEffects()
		inflictedDamageSince()
		isResource()
		setResource()
		giveResource()
	}
	xpcall()
	getmetatable()
	utf8 = {
		len()
		codepoint()
		offset()
		codes()
		charpattern = "[
[23:13:40.415] [Warn] 	select()
	rawequal()
	rawset()
	string = {
		gmatch()
		char()
		sub()
		unpack()
		upper()
		lower()
		find()
		rep()
		dump()
		len()
		reverse()
		packsize()
		pack()
		byte()
		match()
		format()
		gsub()
	}
	require()
	pairs()
	next()
	jobject()
	math = {
		pi = 3.1415926535898
		rad()
		max()
		sqrt()
		random()
		floor()
		log()
		acos()
		fmod()
		mininteger = -9223372036854775808
		type()
		huge = inf
		randomseed()
		deg()
		exp()
		maxinteger = 9223372036854775807
		cos()
		min()
		tointeger()
		modf()
		asin()
		tan()
		atan()
		abs()
		sin()
		ult()
		ceil()
	}
	print()
	pcall()
	type()
	init()
	setmetatable()
	jresize()
	ic = {
		checkStack()
		itemAmount()
		stripColor()
		quickstack()
		itemConfig()
		amountEquipped()
		sortFunc()
		lock()
		giveBack()
		renameThis()
		sort()
		searchBox()
		sort_relative()
		clientVersion = 1
		renameButton()
		searchButton()
		getQuality()
	}
	player = {
		equippedTech()
		altHandItem()
		giveEssentialItem()
		consumeTaggedItem()
		setUniverseFlag()
		species()
		itemsWithTag()
		worldId()
		warp()
		completeMission()
		inventoryTags()
		upgradeShip()
		hasQuest()
		consumeItem()
		gender()
		primaryHandItem()
		essentialItem()
		equippedItem()
		setIntroComplete()
		playTime()
		enabledTechs()
		recordEvent()
		playCinematic()
		introComplete()
		hasCompletedQuest()
		makeTechAvailable()
		consumeItemWithParameter()
		startQuest()
		hasItemWithParameter()
		getItemWithParameter()
		lounge()
		enableTech()
		equipTech()
		enableMission()
		removeEssentialItem()
		isLounging()
		availableTechs()
		primaryHandItemTags()
		makeTechUnavailable()
		confirm()
		serverUuid()
		addBookmark()
		altHandItemTags()
		cleanupItems()
		radioMessage()
		setEquippedItem()
		ownShipWorldId()
		hasItem()
		canStartQuest()
		giveBlueprint()
		hasCountOfItem()
		shipUpgrades()
		giveItem()
	}
	config = {
		getParameter()
	}
	self = {
	}
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	world = {
		spawnItem()
		entityPosition()
		entityHealth()
		damageTileArea()
		day()
		placeMaterial()
		entityDescription()
		containerPutItemsAt()
		entityVelocity()
		damageTiles()
		entityHandItem()
		objectAt()
		setProperty()
		containerItemApply()
		containerClose()
		distance()
		findUniqueEntity()
		gravity()
		rectTileCollision()
		entitySpecies()
		platformerPathStart()
		containerOpen()
		containerTakeAll()
		breathable()
		npcType()
		containerAddItems()
		dayLength()
		loungeableOccupied()
		placeObject()
		isTileProtected()
		destroyLiquid()
		debugLine()
		spawnLiquid()
		entityCanDamage()
		containerItemsCanFit()
		xwrap()
		entityUniqueId()
		itemDropQuery()
		lightLevel()
		placeMod()
		spawnNpc()
		spawnTreasure()
		time()
		underground()
		spawnVehicle()
		spawnMonster()
		timeOfDay()
		findPlatformerPath()
		debugPoly()
		containerTakeNumItemsAt()
		isMonster()
		farmableStage()
		polyCollision()
		objectLineQuery()
		entityHasCountOfItem()
		entityHandItemDescriptor()
		tileIsOccupied()
		resolvePolyCollision()
		pointCollision()
		callScriptedEntity()
		collisionBlocksAlongLine()
		containerStackItems()
		objectSpaces()
		containerConsume()
		spawnStagehand()
		spawnProjectile()
		stagehandType()
		entityQuery()
		lineTileCollision()
		containerSwapItemsNoCombine()
		liquidAlongLine()
		playerQuery()
		objectQuery()
		entityGender()
		rectCollision()
		containerItemAt()
		polyContains()
		containerTakeAt()
		magnitude()
		mod()
		containerSwapItems()
		isNpc()
		lineCollision()
		getObjectParameter()
		debugPoint()
		pointTileCollision()
		containerItemsFitWhere()
		containerAvailable()
		getProperty()
		containerItems()
		threatLevel()
		entityType()
		sendEntityMessage()
		material()
		liquidAt()
		containerSize()
		debugText()
		monsterType()
		entityMoney()
		nearestTo()
		npcLineQuery()
		entityPortrait()
		entityName()
		entityDamageTeam()
		containerConsumeAt()
		entityAggressive()
		windLevel()
		monsterQuery()
		entityExists()
		loungeableQuery()
		npcQuery()
		entityLineQuery()
	}
	root = {
		createBiome()
		imageSpaces()
		createItem()
		loadVersionedJson()
		createTreasure()
		getMatchingTenants()
		monsterSkillParameter()
		getConfiguration()
		npcVariant()
		itemHasTag()
		imageSize()
		projectileGravityMultiplier()
		nonEmptyRegion()
		evalFunction2()
		projectileConfig()
		materialMiningSound()
		generateName()
		isTreasurePool()
		hasTech()
		behaviorModule()
		itemConfig()
		treeStemDirectory()
		evalFunction()
		techConfig()
		npcConfig()
		setConfigurationPath()
		getConfigurationPath()
		materialHealth()
		materialFootstepSound()
		monsterMovementSettings()
		materialPath()
		setConfiguration()
		monsterPortrait()
		itemType()
		questConfig()
		recipesForItem()
		assetJson()
		treeFoliageDirectory()
		techType()
		liquidStatusEffects()
		makeCurrentVersionedJson()
		itemTags()
		tenantConfig()
		npcPortrait()
	}
	jsize()
	status = {
		setResourceLocked()
		resourcePercentage()
		addPersistentEffects()
		removeEphemeralEffect()
		resource()
		setResourcePercentage()
		resourcePositive()
		damageTakenSince()
		statPositive()
		stat()
		statusProperty()
		activeUniqueStatusEffectSummary()
		inflictedHitsSince()
		resourceMax()
		setStatusProperty()
		setPersistentEffects()
		resetAllResources()
		addEphemeralEffects()
		overConsumeResource()
		modifyResource()
		addEphemeralEffect()
		getPersistentEffects()
		resetResource()
		consumeResource()
		clearPersistentEffects()
		modifyResourcePercentage()
		clearEphemeralEffects()
		resourceNames()
		addPersistentEffect()
		resourceLocked()
		clearAllPersistentEffects()
		inflictedDamageSince()
		isResource()
		setResource()
		giveResource()
	}
	xpcall()
	getmetatable()
	utf8 = {
		len()
		codepoint()
		offset()
		codes()
		charpattern = "[
[23:13:41.565] [Warn] 	select()
	rawequal()
	rawset()
	string = {
		gmatch()
		char()
		sub()
		unpack()
		upper()
		lower()
		find()
		rep()
		dump()
		len()
		reverse()
		packsize()
		pack()
		byte()
		match()
		format()
		gsub()
	}
	require()
	pairs()
	next()
	jobject()
	math = {
		pi = 3.1415926535898
		rad()
		max()
		sqrt()
		random()
		floor()
		log()
		acos()
		fmod()
		mininteger = -9223372036854775808
		type()
		huge = inf
		randomseed()
		deg()
		exp()
		maxinteger = 9223372036854775807
		cos()
		min()
		tointeger()
		modf()
		asin()
		tan()
		atan()
		abs()
		sin()
		ult()
		ceil()
	}
	print()
	pcall()
	type()
	init()
	setmetatable()
	jresize()
	ic = {
		checkStack()
		itemAmount()
		stripColor()
		quickstack()
		itemConfig()
		amountEquipped()
		sortFunc()
		lock()
		giveBack()
		renameThis()
		sort()
		searchBox()
		sort_relative()
		clientVersion = 1
		renameButton()
		searchButton()
		getQuality()
	}
	player = {
		equippedTech()
		altHandItem()
		giveEssentialItem()
		consumeTaggedItem()
		setUniverseFlag()
		species()
		itemsWithTag()
		worldId()
		warp()
		completeMission()
		inventoryTags()
		upgradeShip()
		hasQuest()
		consumeItem()
		gender()
		primaryHandItem()
		essentialItem()
		equippedItem()
		setIntroComplete()
		playTime()
		enabledTechs()
		recordEvent()
		playCinematic()
		introComplete()
		hasCompletedQuest()
		makeTechAvailable()
		consumeItemWithParameter()
		startQuest()
		hasItemWithParameter()
		getItemWithParameter()
		lounge()
		enableTech()
		equipTech()
		enableMission()
		removeEssentialItem()
		isLounging()
		availableTechs()
		primaryHandItemTags()
		makeTechUnavailable()
		confirm()
		serverUuid()
		addBookmark()
		altHandItemTags()
		cleanupItems()
		radioMessage()
		setEquippedItem()
		ownShipWorldId()
		hasItem()
		canStartQuest()
		giveBlueprint()
		hasCountOfItem()
		shipUpgrades()
		giveItem()
	}
	config = {
		getParameter()
	}
	self = {
	}
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	world = {
		spawnItem()
		entityPosition()
		entityHealth()
		damageTileArea()
		day()
		placeMaterial()
		entityDescription()
		containerPutItemsAt()
		entityVelocity()
		damageTiles()
		entityHandItem()
		objectAt()
		setProperty()
		containerItemApply()
		containerClose()
		distance()
		findUniqueEntity()
		gravity()
		rectTileCollision()
		entitySpecies()
		platformerPathStart()
		containerOpen()
		containerTakeAll()
		breathable()
		npcType()
		containerAddItems()
		dayLength()
		loungeableOccupied()
		placeObject()
		isTileProtected()
		destroyLiquid()
		debugLine()
		spawnLiquid()
		entityCanDamage()
		containerItemsCanFit()
		xwrap()
		entityUniqueId()
		itemDropQuery()
		lightLevel()
		placeMod()
		spawnNpc()
		spawnTreasure()
		time()
		underground()
		spawnVehicle()
		spawnMonster()
		timeOfDay()
		findPlatformerPath()
		debugPoly()
		containerTakeNumItemsAt()
		isMonster()
		farmableStage()
		polyCollision()
		objectLineQuery()
		entityHasCountOfItem()
		entityHandItemDescriptor()
		tileIsOccupied()
		resolvePolyCollision()
		pointCollision()
		callScriptedEntity()
		collisionBlocksAlongLine()
		containerStackItems()
		objectSpaces()
		containerConsume()
		spawnStagehand()
		spawnProjectile()
		stagehandType()
		entityQuery()
		lineTileCollision()
		containerSwapItemsNoCombine()
		liquidAlongLine()
		playerQuery()
		objectQuery()
		entityGender()
		rectCollision()
		containerItemAt()
		polyContains()
		containerTakeAt()
		magnitude()
		mod()
		containerSwapItems()
		isNpc()
		lineCollision()
		getObjectParameter()
		debugPoint()
		pointTileCollision()
		containerItemsFitWhere()
		containerAvailable()
		getProperty()
		containerItems()
		threatLevel()
		entityType()
		sendEntityMessage()
		material()
		liquidAt()
		containerSize()
		debugText()
		monsterType()
		entityMoney()
		nearestTo()
		npcLineQuery()
		entityPortrait()
		entityName()
		entityDamageTeam()
		containerConsumeAt()
		entityAggressive()
		windLevel()
		monsterQuery()
		entityExists()
		loungeableQuery()
		npcQuery()
		entityLineQuery()
	}
	root = {
		createBiome()
		imageSpaces()
		createItem()
		loadVersionedJson()
		createTreasure()
		getMatchingTenants()
		monsterSkillParameter()
		getConfiguration()
		npcVariant()
		itemHasTag()
		imageSize()
		projectileGravityMultiplier()
		nonEmptyRegion()
		evalFunction2()
		projectileConfig()
		materialMiningSound()
		generateName()
		isTreasurePool()
		hasTech()
		behaviorModule()
		itemConfig()
		treeStemDirectory()
		evalFunction()
		techConfig()
		npcConfig()
		setConfigurationPath()
		getConfigurationPath()
		materialHealth()
		materialFootstepSound()
		monsterMovementSettings()
		materialPath()
		setConfiguration()
		monsterPortrait()
		itemType()
		questConfig()
		recipesForItem()
		assetJson()
		treeFoliageDirectory()
		techType()
		liquidStatusEffects()
		makeCurrentVersionedJson()
		itemTags()
		tenantConfig()
		npcPortrait()
	}
	jsize()
	status = {
		setResourceLocked()
		resourcePercentage()
		addPersistentEffects()
		removeEphemeralEffect()
		resource()
		setResourcePercentage()
		resourcePositive()
		damageTakenSince()
		statPositive()
		stat()
		statusProperty()
		activeUniqueStatusEffectSummary()
		inflictedHitsSince()
		resourceMax()
		setStatusProperty()
		setPersistentEffects()
		resetAllResources()
		addEphemeralEffects()
		overConsumeResource()
		modifyResource()
		addEphemeralEffect()
		getPersistentEffects()
		resetResource()
		consumeResource()
		clearPersistentEffects()
		modifyResourcePercentage()
		clearEphemeralEffects()
		resourceNames()
		addPersistentEffect()
		resourceLocked()
		clearAllPersistentEffects()
		inflictedDamageSince()
		isResource()
		setResource()
		giveResource()
	}
	xpcall()
	getmetatable()
	utf8 = {
		len()
		codepoint()
		offset()
		codes()
		charpattern = "[
[23:13:45.880] [Warn] 	select()
	rawequal()
	rawset()
	string = {
		gmatch()
		char()
		sub()
		unpack()
		upper()
		lower()
		find()
		rep()
		dump()
		len()
		reverse()
		packsize()
		pack()
		byte()
		match()
		format()
		gsub()
	}
	require()
	pairs()
	next()
	jobject()
	math = {
		pi = 3.1415926535898
		rad()
		max()
		sqrt()
		random()
		floor()
		log()
		acos()
		fmod()
		mininteger = -9223372036854775808
		type()
		huge = inf
		randomseed()
		deg()
		exp()
		maxinteger = 9223372036854775807
		cos()
		min()
		tointeger()
		modf()
		asin()
		tan()
		atan()
		abs()
		sin()
		ult()
		ceil()
	}
	print()
	pcall()
	type()
	init()
	setmetatable()
	jresize()
	ic = {
		checkStack()
		itemAmount()
		stripColor()
		quickstack()
		itemConfig()
		amountEquipped()
		sortFunc()
		lock()
		giveBack()
		renameThis()
		sort()
		searchBox()
		sort_relative()
		clientVersion = 1
		renameButton()
		searchButton()
		getQuality()
	}
	player = {
		equippedTech()
		altHandItem()
		giveEssentialItem()
		consumeTaggedItem()
		setUniverseFlag()
		species()
		itemsWithTag()
		worldId()
		warp()
		completeMission()
		inventoryTags()
		upgradeShip()
		hasQuest()
		consumeItem()
		gender()
		primaryHandItem()
		essentialItem()
		equippedItem()
		setIntroComplete()
		playTime()
		enabledTechs()
		recordEvent()
		playCinematic()
		introComplete()
		hasCompletedQuest()
		makeTechAvailable()
		consumeItemWithParameter()
		startQuest()
		hasItemWithParameter()
		getItemWithParameter()
		lounge()
		enableTech()
		equipTech()
		enableMission()
		removeEssentialItem()
		isLounging()
		availableTechs()
		primaryHandItemTags()
		makeTechUnavailable()
		confirm()
		serverUuid()
		addBookmark()
		altHandItemTags()
		cleanupItems()
		radioMessage()
		setEquippedItem()
		ownShipWorldId()
		hasItem()
		canStartQuest()
		giveBlueprint()
		hasCountOfItem()
		shipUpgrades()
		giveItem()
	}
	config = {
		getParameter()
	}
	self = {
	}
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	world = {
		spawnItem()
		entityPosition()
		entityHealth()
		damageTileArea()
		day()
		placeMaterial()
		entityDescription()
		containerPutItemsAt()
		entityVelocity()
		damageTiles()
		entityHandItem()
		objectAt()
		setProperty()
		containerItemApply()
		containerClose()
		distance()
		findUniqueEntity()
		gravity()
		rectTileCollision()
		entitySpecies()
		platformerPathStart()
		containerOpen()
		containerTakeAll()
		breathable()
		npcType()
		containerAddItems()
		dayLength()
		loungeableOccupied()
		placeObject()
		isTileProtected()
		destroyLiquid()
		debugLine()
		spawnLiquid()
		entityCanDamage()
		containerItemsCanFit()
		xwrap()
		entityUniqueId()
		itemDropQuery()
		lightLevel()
		placeMod()
		spawnNpc()
		spawnTreasure()
		time()
		underground()
		spawnVehicle()
		spawnMonster()
		timeOfDay()
		findPlatformerPath()
		debugPoly()
		containerTakeNumItemsAt()
		isMonster()
		farmableStage()
		polyCollision()
		objectLineQuery()
		entityHasCountOfItem()
		entityHandItemDescriptor()
		tileIsOccupied()
		resolvePolyCollision()
		pointCollision()
		callScriptedEntity()
		collisionBlocksAlongLine()
		containerStackItems()
		objectSpaces()
		containerConsume()
		spawnStagehand()
		spawnProjectile()
		stagehandType()
		entityQuery()
		lineTileCollision()
		containerSwapItemsNoCombine()
		liquidAlongLine()
		playerQuery()
		objectQuery()
		entityGender()
		rectCollision()
		containerItemAt()
		polyContains()
		containerTakeAt()
		magnitude()
		mod()
		containerSwapItems()
		isNpc()
		lineCollision()
		getObjectParameter()
		debugPoint()
		pointTileCollision()
		containerItemsFitWhere()
		containerAvailable()
		getProperty()
		containerItems()
		threatLevel()
		entityType()
		sendEntityMessage()
		material()
		liquidAt()
		containerSize()
		debugText()
		monsterType()
		entityMoney()
		nearestTo()
		npcLineQuery()
		entityPortrait()
		entityName()
		entityDamageTeam()
		containerConsumeAt()
		entityAggressive()
		windLevel()
		monsterQuery()
		entityExists()
		loungeableQuery()
		npcQuery()
		entityLineQuery()
	}
	root = {
		createBiome()
		imageSpaces()
		createItem()
		loadVersionedJson()
		createTreasure()
		getMatchingTenants()
		monsterSkillParameter()
		getConfiguration()
		npcVariant()
		itemHasTag()
		imageSize()
		projectileGravityMultiplier()
		nonEmptyRegion()
		evalFunction2()
		projectileConfig()
		materialMiningSound()
		generateName()
		isTreasurePool()
		hasTech()
		behaviorModule()
		itemConfig()
		treeStemDirectory()
		evalFunction()
		techConfig()
		npcConfig()
		setConfigurationPath()
		getConfigurationPath()
		materialHealth()
		materialFootstepSound()
		monsterMovementSettings()
		materialPath()
		setConfiguration()
		monsterPortrait()
		itemType()
		questConfig()
		recipesForItem()
		assetJson()
		treeFoliageDirectory()
		techType()
		liquidStatusEffects()
		makeCurrentVersionedJson()
		itemTags()
		tenantConfig()
		npcPortrait()
	}
	jsize()
	status = {
		setResourceLocked()
		resourcePercentage()
		addPersistentEffects()
		removeEphemeralEffect()
		resource()
		setResourcePercentage()
		resourcePositive()
		damageTakenSince()
		statPositive()
		stat()
		statusProperty()
		activeUniqueStatusEffectSummary()
		inflictedHitsSince()
		resourceMax()
		setStatusProperty()
		setPersistentEffects()
		resetAllResources()
		addEphemeralEffects()
		overConsumeResource()
		modifyResource()
		addEphemeralEffect()
		getPersistentEffects()
		resetResource()
		consumeResource()
		clearPersistentEffects()
		modifyResourcePercentage()
		clearEphemeralEffects()
		resourceNames()
		addPersistentEffect()
		resourceLocked()
		clearAllPersistentEffects()
		inflictedDamageSince()
		isResource()
		setResource()
		giveResource()
	}
	xpcall()
	getmetatable()
	utf8 = {
		len()
		codepoint()
		offset()
		codes()
		charpattern = "[
[23:13:46.680] [Warn] 	select()
	rawequal()
	rawset()
	string = {
		gmatch()
		char()
		sub()
		unpack()
		upper()
		lower()
		find()
		rep()
		dump()
		len()
		reverse()
		packsize()
		pack()
		byte()
		match()
		format()
		gsub()
	}
	require()
	pairs()
	next()
	jobject()
	math = {
		pi = 3.1415926535898
		rad()
		max()
		sqrt()
		random()
		floor()
		log()
		acos()
		fmod()
		mininteger = -9223372036854775808
		type()
		huge = inf
		randomseed()
		deg()
		exp()
		maxinteger = 9223372036854775807
		cos()
		min()
		tointeger()
		modf()
		asin()
		tan()
		atan()
		abs()
		sin()
		ult()
		ceil()
	}
	print()
	pcall()
	type()
	init()
	setmetatable()
	jresize()
	ic = {
		checkStack()
		itemAmount()
		stripColor()
		quickstack()
		itemConfig()
		amountEquipped()
		sortFunc()
		lock()
		giveBack()
		renameThis()
		sort()
		searchBox()
		sort_relative()
		clientVersion = 1
		renameButton()
		searchButton()
		getQuality()
	}
	player = {
		equippedTech()
		altHandItem()
		giveEssentialItem()
		consumeTaggedItem()
		setUniverseFlag()
		species()
		itemsWithTag()
		worldId()
		warp()
		completeMission()
		inventoryTags()
		upgradeShip()
		hasQuest()
		consumeItem()
		gender()
		primaryHandItem()
		essentialItem()
		equippedItem()
		setIntroComplete()
		playTime()
		enabledTechs()
		recordEvent()
		playCinematic()
		introComplete()
		hasCompletedQuest()
		makeTechAvailable()
		consumeItemWithParameter()
		startQuest()
		hasItemWithParameter()
		getItemWithParameter()
		lounge()
		enableTech()
		equipTech()
		enableMission()
		removeEssentialItem()
		isLounging()
		availableTechs()
		primaryHandItemTags()
		makeTechUnavailable()
		confirm()
		serverUuid()
		addBookmark()
		altHandItemTags()
		cleanupItems()
		radioMessage()
		setEquippedItem()
		ownShipWorldId()
		hasItem()
		canStartQuest()
		giveBlueprint()
		hasCountOfItem()
		shipUpgrades()
		giveItem()
	}
	config = {
		getParameter()
	}
	self = {
	}
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	world = {
		spawnItem()
		entityPosition()
		entityHealth()
		damageTileArea()
		day()
		placeMaterial()
		entityDescription()
		containerPutItemsAt()
		entityVelocity()
		damageTiles()
		entityHandItem()
		objectAt()
		setProperty()
		containerItemApply()
		containerClose()
		distance()
		findUniqueEntity()
		gravity()
		rectTileCollision()
		entitySpecies()
		platformerPathStart()
		containerOpen()
		containerTakeAll()
		breathable()
		npcType()
		containerAddItems()
		dayLength()
		loungeableOccupied()
		placeObject()
		isTileProtected()
		destroyLiquid()
		debugLine()
		spawnLiquid()
		entityCanDamage()
		containerItemsCanFit()
		xwrap()
		entityUniqueId()
		itemDropQuery()
		lightLevel()
		placeMod()
		spawnNpc()
		spawnTreasure()
		time()
		underground()
		spawnVehicle()
		spawnMonster()
		timeOfDay()
		findPlatformerPath()
		debugPoly()
		containerTakeNumItemsAt()
		isMonster()
		farmableStage()
		polyCollision()
		objectLineQuery()
		entityHasCountOfItem()
		entityHandItemDescriptor()
		tileIsOccupied()
		resolvePolyCollision()
		pointCollision()
		callScriptedEntity()
		collisionBlocksAlongLine()
		containerStackItems()
		objectSpaces()
		containerConsume()
		spawnStagehand()
		spawnProjectile()
		stagehandType()
		entityQuery()
		lineTileCollision()
		containerSwapItemsNoCombine()
		liquidAlongLine()
		playerQuery()
		objectQuery()
		entityGender()
		rectCollision()
		containerItemAt()
		polyContains()
		containerTakeAt()
		magnitude()
		mod()
		containerSwapItems()
		isNpc()
		lineCollision()
		getObjectParameter()
		debugPoint()
		pointTileCollision()
		containerItemsFitWhere()
		containerAvailable()
		getProperty()
		containerItems()
		threatLevel()
		entityType()
		sendEntityMessage()
		material()
		liquidAt()
		containerSize()
		debugText()
		monsterType()
		entityMoney()
		nearestTo()
		npcLineQuery()
		entityPortrait()
		entityName()
		entityDamageTeam()
		containerConsumeAt()
		entityAggressive()
		windLevel()
		monsterQuery()
		entityExists()
		loungeableQuery()
		npcQuery()
		entityLineQuery()
	}
	root = {
		createBiome()
		imageSpaces()
		createItem()
		loadVersionedJson()
		createTreasure()
		getMatchingTenants()
		monsterSkillParameter()
		getConfiguration()
		npcVariant()
		itemHasTag()
		imageSize()
		projectileGravityMultiplier()
		nonEmptyRegion()
		evalFunction2()
		projectileConfig()
		materialMiningSound()
		generateName()
		isTreasurePool()
		hasTech()
		behaviorModule()
		itemConfig()
		treeStemDirectory()
		evalFunction()
		techConfig()
		npcConfig()
		setConfigurationPath()
		getConfigurationPath()
		materialHealth()
		materialFootstepSound()
		monsterMovementSettings()
		materialPath()
		setConfiguration()
		monsterPortrait()
		itemType()
		questConfig()
		recipesForItem()
		assetJson()
		treeFoliageDirectory()
		techType()
		liquidStatusEffects()
		makeCurrentVersionedJson()
		itemTags()
		tenantConfig()
		npcPortrait()
	}
	jsize()
	status = {
		setResourceLocked()
		resourcePercentage()
		addPersistentEffects()
		removeEphemeralEffect()
		resource()
		setResourcePercentage()
		resourcePositive()
		damageTakenSince()
		statPositive()
		stat()
		statusProperty()
		activeUniqueStatusEffectSummary()
		inflictedHitsSince()
		resourceMax()
		setStatusProperty()
		setPersistentEffects()
		resetAllResources()
		addEphemeralEffects()
		overConsumeResource()
		modifyResource()
		addEphemeralEffect()
		getPersistentEffects()
		resetResource()
		consumeResource()
		clearPersistentEffects()
		modifyResourcePercentage()
		clearEphemeralEffects()
		resourceNames()
		addPersistentEffect()
		resourceLocked()
		clearAllPersistentEffects()
		inflictedDamageSince()
		isResource()
		setResource()
		giveResource()
	}
	xpcall()
	getmetatable()
	utf8 = {
		len()
		codepoint()
		offset()
		codes()
		charpattern = "[
[23:14:03.812] [Warn] 	select()
	rawequal()
	rawset()
	string = {
		gmatch()
		char()
		sub()
		unpack()
		upper()
		lower()
		find()
		rep()
		dump()
		len()
		reverse()
		packsize()
		pack()
		byte()
		match()
		format()
		gsub()
	}
	require()
	pairs()
	next()
	jobject()
	math = {
		pi = 3.1415926535898
		rad()
		max()
		sqrt()
		random()
		floor()
		log()
		acos()
		fmod()
		mininteger = -9223372036854775808
		type()
		huge = inf
		randomseed()
		deg()
		exp()
		maxinteger = 9223372036854775807
		cos()
		min()
		tointeger()
		modf()
		asin()
		tan()
		atan()
		abs()
		sin()
		ult()
		ceil()
	}
	print()
	pcall()
	type()
	init()
	setmetatable()
	jresize()
	ic = {
		checkStack()
		itemAmount()
		stripColor()
		quickstack()
		itemConfig()
		amountEquipped()
		sortFunc()
		lock()
		giveBack()
		renameThis()
		sort()
		searchBox()
		sort_relative()
		clientVersion = 1
		renameButton()
		searchButton()
		getQuality()
	}
	player = {
		equippedTech()
		altHandItem()
		giveEssentialItem()
		consumeTaggedItem()
		setUniverseFlag()
		species()
		itemsWithTag()
		worldId()
		warp()
		completeMission()
		inventoryTags()
		upgradeShip()
		hasQuest()
		consumeItem()
		gender()
		primaryHandItem()
		essentialItem()
		equippedItem()
		setIntroComplete()
		playTime()
		enabledTechs()
		recordEvent()
		playCinematic()
		introComplete()
		hasCompletedQuest()
		makeTechAvailable()
		consumeItemWithParameter()
		startQuest()
		hasItemWithParameter()
		getItemWithParameter()
		lounge()
		enableTech()
		equipTech()
		enableMission()
		removeEssentialItem()
		isLounging()
		availableTechs()
		primaryHandItemTags()
		makeTechUnavailable()
		confirm()
		serverUuid()
		addBookmark()
		altHandItemTags()
		cleanupItems()
		radioMessage()
		setEquippedItem()
		ownShipWorldId()
		hasItem()
		canStartQuest()
		giveBlueprint()
		hasCountOfItem()
		shipUpgrades()
		giveItem()
	}
	config = {
		getParameter()
	}
	self = {
	}
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	world = {
		spawnItem()
		entityPosition()
		entityHealth()
		damageTileArea()
		day()
		placeMaterial()
		entityDescription()
		containerPutItemsAt()
		entityVelocity()
		damageTiles()
		entityHandItem()
		objectAt()
		setProperty()
		containerItemApply()
		containerClose()
		distance()
		findUniqueEntity()
		gravity()
		rectTileCollision()
		entitySpecies()
		platformerPathStart()
		containerOpen()
		containerTakeAll()
		breathable()
		npcType()
		containerAddItems()
		dayLength()
		loungeableOccupied()
		placeObject()
		isTileProtected()
		destroyLiquid()
		debugLine()
		spawnLiquid()
		entityCanDamage()
		containerItemsCanFit()
		xwrap()
		entityUniqueId()
		itemDropQuery()
		lightLevel()
		placeMod()
		spawnNpc()
		spawnTreasure()
		time()
		underground()
		spawnVehicle()
		spawnMonster()
		timeOfDay()
		findPlatformerPath()
		debugPoly()
		containerTakeNumItemsAt()
		isMonster()
		farmableStage()
		polyCollision()
		objectLineQuery()
		entityHasCountOfItem()
		entityHandItemDescriptor()
		tileIsOccupied()
		resolvePolyCollision()
		pointCollision()
		callScriptedEntity()
		collisionBlocksAlongLine()
		containerStackItems()
		objectSpaces()
		containerConsume()
		spawnStagehand()
		spawnProjectile()
		stagehandType()
		entityQuery()
		lineTileCollision()
		containerSwapItemsNoCombine()
		liquidAlongLine()
		playerQuery()
		objectQuery()
		entityGender()
		rectCollision()
		containerItemAt()
		polyContains()
		containerTakeAt()
		magnitude()
		mod()
		containerSwapItems()
		isNpc()
		lineCollision()
		getObjectParameter()
		debugPoint()
		pointTileCollision()
		containerItemsFitWhere()
		containerAvailable()
		getProperty()
		containerItems()
		threatLevel()
		entityType()
		sendEntityMessage()
		material()
		liquidAt()
		containerSize()
		debugText()
		monsterType()
		entityMoney()
		nearestTo()
		npcLineQuery()
		entityPortrait()
		entityName()
		entityDamageTeam()
		containerConsumeAt()
		entityAggressive()
		windLevel()
		monsterQuery()
		entityExists()
		loungeableQuery()
		npcQuery()
		entityLineQuery()
	}
	root = {
		createBiome()
		imageSpaces()
		createItem()
		loadVersionedJson()
		createTreasure()
		getMatchingTenants()
		monsterSkillParameter()
		getConfiguration()
		npcVariant()
		itemHasTag()
		imageSize()
		projectileGravityMultiplier()
		nonEmptyRegion()
		evalFunction2()
		projectileConfig()
		materialMiningSound()
		generateName()
		isTreasurePool()
		hasTech()
		behaviorModule()
		itemConfig()
		treeStemDirectory()
		evalFunction()
		techConfig()
		npcConfig()
		setConfigurationPath()
		getConfigurationPath()
		materialHealth()
		materialFootstepSound()
		monsterMovementSettings()
		materialPath()
		setConfiguration()
		monsterPortrait()
		itemType()
		questConfig()
		recipesForItem()
		assetJson()
		treeFoliageDirectory()
		techType()
		liquidStatusEffects()
		makeCurrentVersionedJson()
		itemTags()
		tenantConfig()
		npcPortrait()
	}
	jsize()
	status = {
		setResourceLocked()
		resourcePercentage()
		addPersistentEffects()
		removeEphemeralEffect()
		resource()
		setResourcePercentage()
		resourcePositive()
		damageTakenSince()
		statPositive()
		stat()
		statusProperty()
		activeUniqueStatusEffectSummary()
		inflictedHitsSince()
		resourceMax()
		setStatusProperty()
		setPersistentEffects()
		resetAllResources()
		addEphemeralEffects()
		overConsumeResource()
		modifyResource()
		addEphemeralEffect()
		getPersistentEffects()
		resetResource()
		consumeResource()
		clearPersistentEffects()
		modifyResourcePercentage()
		clearEphemeralEffects()
		resourceNames()
		addPersistentEffect()
		resourceLocked()
		clearAllPersistentEffects()
		inflictedDamageSince()
		isResource()
		setResource()
		giveResource()
	}
	xpcall()
	getmetatable()
	utf8 = {
		len()
		codepoint()
		offset()
		codes()
		charpattern = "[
[23:21:27.883] [Warn] 	select()
	rawequal()
	rawset()
	string = {
		gmatch()
		char()
		sub()
		unpack()
		upper()
		lower()
		find()
		rep()
		dump()
		len()
		reverse()
		packsize()
		pack()
		byte()
		match()
		format()
		gsub()
	}
	require()
	pairs()
	next()
	jobject()
	math = {
		pi = 3.1415926535898
		rad()
		max()
		sqrt()
		random()
		floor()
		log()
		acos()
		fmod()
		mininteger = -9223372036854775808
		type()
		huge = inf
		randomseed()
		deg()
		exp()
		maxinteger = 9223372036854775807
		cos()
		min()
		tointeger()
		modf()
		asin()
		tan()
		atan()
		abs()
		sin()
		ult()
		ceil()
	}
	print()
	pcall()
	type()
	init()
	setmetatable()
	jresize()
	ic = {
		checkStack()
		itemAmount()
		stripColor()
		quickstack()
		itemConfig()
		amountEquipped()
		sortFunc()
		lock()
		giveBack()
		renameThis()
		sort()
		searchBox()
		sort_relative()
		clientVersion = 1
		renameButton()
		searchButton()
		getQuality()
	}
	player = {
		equippedTech()
		altHandItem()
		giveEssentialItem()
		consumeTaggedItem()
		setUniverseFlag()
		species()
		itemsWithTag()
		worldId()
		warp()
		completeMission()
		inventoryTags()
		upgradeShip()
		hasQuest()
		consumeItem()
		gender()
		primaryHandItem()
		essentialItem()
		equippedItem()
		setIntroComplete()
		playTime()
		enabledTechs()
		recordEvent()
		playCinematic()
		introComplete()
		hasCompletedQuest()
		makeTechAvailable()
		consumeItemWithParameter()
		startQuest()
		hasItemWithParameter()
		getItemWithParameter()
		lounge()
		enableTech()
		equipTech()
		enableMission()
		removeEssentialItem()
		isLounging()
		availableTechs()
		primaryHandItemTags()
		makeTechUnavailable()
		confirm()
		serverUuid()
		addBookmark()
		altHandItemTags()
		cleanupItems()
		radioMessage()
		setEquippedItem()
		ownShipWorldId()
		hasItem()
		canStartQuest()
		giveBlueprint()
		hasCountOfItem()
		shipUpgrades()
		giveItem()
	}
	config = {
		getParameter()
	}
	self = {
	}
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	world = {
		spawnItem()
		entityPosition()
		entityHealth()
		damageTileArea()
		day()
		placeMaterial()
		entityDescription()
		containerPutItemsAt()
		entityVelocity()
		damageTiles()
		entityHandItem()
		objectAt()
		setProperty()
		containerItemApply()
		containerClose()
		distance()
		findUniqueEntity()
		gravity()
		rectTileCollision()
		entitySpecies()
		platformerPathStart()
		containerOpen()
		containerTakeAll()
		breathable()
		npcType()
		containerAddItems()
		dayLength()
		loungeableOccupied()
		placeObject()
		isTileProtected()
		destroyLiquid()
		debugLine()
		spawnLiquid()
		entityCanDamage()
		containerItemsCanFit()
		xwrap()
		entityUniqueId()
		itemDropQuery()
		lightLevel()
		placeMod()
		spawnNpc()
		spawnTreasure()
		time()
		underground()
		spawnVehicle()
		spawnMonster()
		timeOfDay()
		findPlatformerPath()
		debugPoly()
		containerTakeNumItemsAt()
		isMonster()
		farmableStage()
		polyCollision()
		objectLineQuery()
		entityHasCountOfItem()
		entityHandItemDescriptor()
		tileIsOccupied()
		resolvePolyCollision()
		pointCollision()
		callScriptedEntity()
		collisionBlocksAlongLine()
		containerStackItems()
		objectSpaces()
		containerConsume()
		spawnStagehand()
		spawnProjectile()
		stagehandType()
		entityQuery()
		lineTileCollision()
		containerSwapItemsNoCombine()
		liquidAlongLine()
		playerQuery()
		objectQuery()
		entityGender()
		rectCollision()
		containerItemAt()
		polyContains()
		containerTakeAt()
		magnitude()
		mod()
		containerSwapItems()
		isNpc()
		lineCollision()
		getObjectParameter()
		debugPoint()
		pointTileCollision()
		containerItemsFitWhere()
		containerAvailable()
		getProperty()
		containerItems()
		threatLevel()
		entityType()
		sendEntityMessage()
		material()
		liquidAt()
		containerSize()
		debugText()
		monsterType()
		entityMoney()
		nearestTo()
		npcLineQuery()
		entityPortrait()
		entityName()
		entityDamageTeam()
		containerConsumeAt()
		entityAggressive()
		windLevel()
		monsterQuery()
		entityExists()
		loungeableQuery()
		npcQuery()
		entityLineQuery()
	}
	root = {
		createBiome()
		imageSpaces()
		createItem()
		loadVersionedJson()
		createTreasure()
		getMatchingTenants()
		monsterSkillParameter()
		getConfiguration()
		npcVariant()
		itemHasTag()
		imageSize()
		projectileGravityMultiplier()
		nonEmptyRegion()
		evalFunction2()
		projectileConfig()
		materialMiningSound()
		generateName()
		isTreasurePool()
		hasTech()
		behaviorModule()
		itemConfig()
		treeStemDirectory()
		evalFunction()
		techConfig()
		npcConfig()
		setConfigurationPath()
		getConfigurationPath()
		materialHealth()
		materialFootstepSound()
		monsterMovementSettings()
		materialPath()
		setConfiguration()
		monsterPortrait()
		itemType()
		questConfig()
		recipesForItem()
		assetJson()
		treeFoliageDirectory()
		techType()
		liquidStatusEffects()
		makeCurrentVersionedJson()
		itemTags()
		tenantConfig()
		npcPortrait()
	}
	jsize()
	status = {
		setResourceLocked()
		resourcePercentage()
		addPersistentEffects()
		removeEphemeralEffect()
		resource()
		setResourcePercentage()
		resourcePositive()
		damageTakenSince()
		statPositive()
		stat()
		statusProperty()
		activeUniqueStatusEffectSummary()
		inflictedHitsSince()
		resourceMax()
		setStatusProperty()
		setPersistentEffects()
		resetAllResources()
		addEphemeralEffects()
		overConsumeResource()
		modifyResource()
		addEphemeralEffect()
		getPersistentEffects()
		resetResource()
		consumeResource()
		clearPersistentEffects()
		modifyResourcePercentage()
		clearEphemeralEffects()
		resourceNames()
		addPersistentEffect()
		resourceLocked()
		clearAllPersistentEffects()
		inflictedDamageSince()
		isResource()
		setResource()
		giveResource()
	}
	xpcall()
	getmetatable()
	utf8 = {
		len()
		codepoint()
		offset()
		codes()
		charpattern = "[
[23:24:08.036] [Warn] 	select()
	rawequal()
	rawset()
	string = {
		gmatch()
		char()
		sub()
		unpack()
		upper()
		lower()
		find()
		rep()
		dump()
		len()
		reverse()
		packsize()
		pack()
		byte()
		match()
		format()
		gsub()
	}
	require()
	pairs()
	next()
	jobject()
	math = {
		pi = 3.1415926535898
		rad()
		max()
		sqrt()
		random()
		floor()
		log()
		acos()
		fmod()
		mininteger = -9223372036854775808
		type()
		huge = inf
		randomseed()
		deg()
		exp()
		maxinteger = 9223372036854775807
		cos()
		min()
		tointeger()
		modf()
		asin()
		tan()
		atan()
		abs()
		sin()
		ult()
		ceil()
	}
	print()
	pcall()
	type()
	init()
	setmetatable()
	jresize()
	ic = {
		checkStack()
		itemAmount()
		stripColor()
		quickstack()
		itemConfig()
		amountEquipped()
		sortFunc()
		lock()
		giveBack()
		renameThis()
		sort()
		searchBox()
		sort_relative()
		clientVersion = 1
		renameButton()
		searchButton()
		getQuality()
	}
	player = {
		equippedTech()
		altHandItem()
		giveEssentialItem()
		consumeTaggedItem()
		setUniverseFlag()
		species()
		itemsWithTag()
		worldId()
		warp()
		completeMission()
		inventoryTags()
		upgradeShip()
		hasQuest()
		consumeItem()
		gender()
		primaryHandItem()
		essentialItem()
		equippedItem()
		setIntroComplete()
		playTime()
		enabledTechs()
		recordEvent()
		playCinematic()
		introComplete()
		hasCompletedQuest()
		makeTechAvailable()
		consumeItemWithParameter()
		startQuest()
		hasItemWithParameter()
		getItemWithParameter()
		lounge()
		enableTech()
		equipTech()
		enableMission()
		removeEssentialItem()
		isLounging()
		availableTechs()
		primaryHandItemTags()
		makeTechUnavailable()
		confirm()
		serverUuid()
		addBookmark()
		altHandItemTags()
		cleanupItems()
		radioMessage()
		setEquippedItem()
		ownShipWorldId()
		hasItem()
		canStartQuest()
		giveBlueprint()
		hasCountOfItem()
		shipUpgrades()
		giveItem()
	}
	config = {
		getParameter()
	}
	self = {
	}
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	world = {
		spawnItem()
		entityPosition()
		entityHealth()
		damageTileArea()
		day()
		placeMaterial()
		entityDescription()
		containerPutItemsAt()
		entityVelocity()
		damageTiles()
		entityHandItem()
		objectAt()
		setProperty()
		containerItemApply()
		containerClose()
		distance()
		findUniqueEntity()
		gravity()
		rectTileCollision()
		entitySpecies()
		platformerPathStart()
		containerOpen()
		containerTakeAll()
		breathable()
		npcType()
		containerAddItems()
		dayLength()
		loungeableOccupied()
		placeObject()
		isTileProtected()
		destroyLiquid()
		debugLine()
		spawnLiquid()
		entityCanDamage()
		containerItemsCanFit()
		xwrap()
		entityUniqueId()
		itemDropQuery()
		lightLevel()
		placeMod()
		spawnNpc()
		spawnTreasure()
		time()
		underground()
		spawnVehicle()
		spawnMonster()
		timeOfDay()
		findPlatformerPath()
		debugPoly()
		containerTakeNumItemsAt()
		isMonster()
		farmableStage()
		polyCollision()
		objectLineQuery()
		entityHasCountOfItem()
		entityHandItemDescriptor()
		tileIsOccupied()
		resolvePolyCollision()
		pointCollision()
		callScriptedEntity()
		collisionBlocksAlongLine()
		containerStackItems()
		objectSpaces()
		containerConsume()
		spawnStagehand()
		spawnProjectile()
		stagehandType()
		entityQuery()
		lineTileCollision()
		containerSwapItemsNoCombine()
		liquidAlongLine()
		playerQuery()
		objectQuery()
		entityGender()
		rectCollision()
		containerItemAt()
		polyContains()
		containerTakeAt()
		magnitude()
		mod()
		containerSwapItems()
		isNpc()
		lineCollision()
		getObjectParameter()
		debugPoint()
		pointTileCollision()
		containerItemsFitWhere()
		containerAvailable()
		getProperty()
		containerItems()
		threatLevel()
		entityType()
		sendEntityMessage()
		material()
		liquidAt()
		containerSize()
		debugText()
		monsterType()
		entityMoney()
		nearestTo()
		npcLineQuery()
		entityPortrait()
		entityName()
		entityDamageTeam()
		containerConsumeAt()
		entityAggressive()
		windLevel()
		monsterQuery()
		entityExists()
		loungeableQuery()
		npcQuery()
		entityLineQuery()
	}
	root = {
		createBiome()
		imageSpaces()
		createItem()
		loadVersionedJson()
		createTreasure()
		getMatchingTenants()
		monsterSkillParameter()
		getConfiguration()
		npcVariant()
		itemHasTag()
		imageSize()
		projectileGravityMultiplier()
		nonEmptyRegion()
		evalFunction2()
		projectileConfig()
		materialMiningSound()
		generateName()
		isTreasurePool()
		hasTech()
		behaviorModule()
		itemConfig()
		treeStemDirectory()
		evalFunction()
		techConfig()
		npcConfig()
		setConfigurationPath()
		getConfigurationPath()
		materialHealth()
		materialFootstepSound()
		monsterMovementSettings()
		materialPath()
		setConfiguration()
		monsterPortrait()
		itemType()
		questConfig()
		recipesForItem()
		assetJson()
		treeFoliageDirectory()
		techType()
		liquidStatusEffects()
		makeCurrentVersionedJson()
		itemTags()
		tenantConfig()
		npcPortrait()
	}
	jsize()
	status = {
		setResourceLocked()
		resourcePercentage()
		addPersistentEffects()
		removeEphemeralEffect()
		resource()
		setResourcePercentage()
		resourcePositive()
		damageTakenSince()
		statPositive()
		stat()
		statusProperty()
		activeUniqueStatusEffectSummary()
		inflictedHitsSince()
		resourceMax()
		setStatusProperty()
		setPersistentEffects()
		resetAllResources()
		addEphemeralEffects()
		overConsumeResource()
		modifyResource()
		addEphemeralEffect()
		getPersistentEffects()
		resetResource()
		consumeResource()
		clearPersistentEffects()
		modifyResourcePercentage()
		clearEphemeralEffects()
		resourceNames()
		addPersistentEffect()
		resourceLocked()
		clearAllPersistentEffects()
		inflictedDamageSince()
		isResource()
		setResource()
		giveResource()
	}
	xpcall()
	getmetatable()
	utf8 = {
		len()
		codepoint()
		offset()
		codes()
		charpattern = "[
[23:24:16.850] [Warn] 	select()
	rawequal()
	rawset()
	string = {
		gmatch()
		char()
		sub()
		unpack()
		upper()
		lower()
		find()
		rep()
		dump()
		len()
		reverse()
		packsize()
		pack()
		byte()
		match()
		format()
		gsub()
	}
	require()
	pairs()
	next()
	jobject()
	math = {
		pi = 3.1415926535898
		rad()
		max()
		sqrt()
		random()
		floor()
		log()
		acos()
		fmod()
		mininteger = -9223372036854775808
		type()
		huge = inf
		randomseed()
		deg()
		exp()
		maxinteger = 9223372036854775807
		cos()
		min()
		tointeger()
		modf()
		asin()
		tan()
		atan()
		abs()
		sin()
		ult()
		ceil()
	}
	print()
	pcall()
	type()
	init()
	setmetatable()
	jresize()
	ic = {
		checkStack()
		itemAmount()
		stripColor()
		quickstack()
		itemConfig()
		amountEquipped()
		sortFunc()
		lock()
		giveBack()
		renameThis()
		sort()
		searchBox()
		sort_relative()
		clientVersion = 1
		renameButton()
		searchButton()
		getQuality()
	}
	player = {
		equippedTech()
		altHandItem()
		giveEssentialItem()
		consumeTaggedItem()
		setUniverseFlag()
		species()
		itemsWithTag()
		worldId()
		warp()
		completeMission()
		inventoryTags()
		upgradeShip()
		hasQuest()
		consumeItem()
		gender()
		primaryHandItem()
		essentialItem()
		equippedItem()
		setIntroComplete()
		playTime()
		enabledTechs()
		recordEvent()
		playCinematic()
		introComplete()
		hasCompletedQuest()
		makeTechAvailable()
		consumeItemWithParameter()
		startQuest()
		hasItemWithParameter()
		getItemWithParameter()
		lounge()
		enableTech()
		equipTech()
		enableMission()
		removeEssentialItem()
		isLounging()
		availableTechs()
		primaryHandItemTags()
		makeTechUnavailable()
		confirm()
		serverUuid()
		addBookmark()
		altHandItemTags()
		cleanupItems()
		radioMessage()
		setEquippedItem()
		ownShipWorldId()
		hasItem()
		canStartQuest()
		giveBlueprint()
		hasCountOfItem()
		shipUpgrades()
		giveItem()
	}
	config = {
		getParameter()
	}
	self = {
	}
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	world = {
		spawnItem()
		entityPosition()
		entityHealth()
		damageTileArea()
		day()
		placeMaterial()
		entityDescription()
		containerPutItemsAt()
		entityVelocity()
		damageTiles()
		entityHandItem()
		objectAt()
		setProperty()
		containerItemApply()
		containerClose()
		distance()
		findUniqueEntity()
		gravity()
		rectTileCollision()
		entitySpecies()
		platformerPathStart()
		containerOpen()
		containerTakeAll()
		breathable()
		npcType()
		containerAddItems()
		dayLength()
		loungeableOccupied()
		placeObject()
		isTileProtected()
		destroyLiquid()
		debugLine()
		spawnLiquid()
		entityCanDamage()
		containerItemsCanFit()
		xwrap()
		entityUniqueId()
		itemDropQuery()
		lightLevel()
		placeMod()
		spawnNpc()
		spawnTreasure()
		time()
		underground()
		spawnVehicle()
		spawnMonster()
		timeOfDay()
		findPlatformerPath()
		debugPoly()
		containerTakeNumItemsAt()
		isMonster()
		farmableStage()
		polyCollision()
		objectLineQuery()
		entityHasCountOfItem()
		entityHandItemDescriptor()
		tileIsOccupied()
		resolvePolyCollision()
		pointCollision()
		callScriptedEntity()
		collisionBlocksAlongLine()
		containerStackItems()
		objectSpaces()
		containerConsume()
		spawnStagehand()
		spawnProjectile()
		stagehandType()
		entityQuery()
		lineTileCollision()
		containerSwapItemsNoCombine()
		liquidAlongLine()
		playerQuery()
		objectQuery()
		entityGender()
		rectCollision()
		containerItemAt()
		polyContains()
		containerTakeAt()
		magnitude()
		mod()
		containerSwapItems()
		isNpc()
		lineCollision()
		getObjectParameter()
		debugPoint()
		pointTileCollision()
		containerItemsFitWhere()
		containerAvailable()
		getProperty()
		containerItems()
		threatLevel()
		entityType()
		sendEntityMessage()
		material()
		liquidAt()
		containerSize()
		debugText()
		monsterType()
		entityMoney()
		nearestTo()
		npcLineQuery()
		entityPortrait()
		entityName()
		entityDamageTeam()
		containerConsumeAt()
		entityAggressive()
		windLevel()
		monsterQuery()
		entityExists()
		loungeableQuery()
		npcQuery()
		entityLineQuery()
	}
	root = {
		createBiome()
		imageSpaces()
		createItem()
		loadVersionedJson()
		createTreasure()
		getMatchingTenants()
		monsterSkillParameter()
		getConfiguration()
		npcVariant()
		itemHasTag()
		imageSize()
		projectileGravityMultiplier()
		nonEmptyRegion()
		evalFunction2()
		projectileConfig()
		materialMiningSound()
		generateName()
		isTreasurePool()
		hasTech()
		behaviorModule()
		itemConfig()
		treeStemDirectory()
		evalFunction()
		techConfig()
		npcConfig()
		setConfigurationPath()
		getConfigurationPath()
		materialHealth()
		materialFootstepSound()
		monsterMovementSettings()
		materialPath()
		setConfiguration()
		monsterPortrait()
		itemType()
		questConfig()
		recipesForItem()
		assetJson()
		treeFoliageDirectory()
		techType()
		liquidStatusEffects()
		makeCurrentVersionedJson()
		itemTags()
		tenantConfig()
		npcPortrait()
	}
	jsize()
	status = {
		setResourceLocked()
		resourcePercentage()
		addPersistentEffects()
		removeEphemeralEffect()
		resource()
		setResourcePercentage()
		resourcePositive()
		damageTakenSince()
		statPositive()
		stat()
		statusProperty()
		activeUniqueStatusEffectSummary()
		inflictedHitsSince()
		resourceMax()
		setStatusProperty()
		setPersistentEffects()
		resetAllResources()
		addEphemeralEffects()
		overConsumeResource()
		modifyResource()
		addEphemeralEffect()
		getPersistentEffects()
		resetResource()
		consumeResource()
		clearPersistentEffects()
		modifyResourcePercentage()
		clearEphemeralEffects()
		resourceNames()
		addPersistentEffect()
		resourceLocked()
		clearAllPersistentEffects()
		inflictedDamageSince()
		isResource()
		setResource()
		giveResource()
	}
	xpcall()
	getmetatable()
	utf8 = {
		len()
		codepoint()
		offset()
		codes()
		charpattern = "[
[23:24:18.198] [Warn] 	select()
	rawequal()
	rawset()
	string = {
		gmatch()
		char()
		sub()
		unpack()
		upper()
		lower()
		find()
		rep()
		dump()
		len()
		reverse()
		packsize()
		pack()
		byte()
		match()
		format()
		gsub()
	}
	require()
	pairs()
	next()
	jobject()
	math = {
		pi = 3.1415926535898
		rad()
		max()
		sqrt()
		random()
		floor()
		log()
		acos()
		fmod()
		mininteger = -9223372036854775808
		type()
		huge = inf
		randomseed()
		deg()
		exp()
		maxinteger = 9223372036854775807
		cos()
		min()
		tointeger()
		modf()
		asin()
		tan()
		atan()
		abs()
		sin()
		ult()
		ceil()
	}
	print()
	pcall()
	type()
	init()
	setmetatable()
	jresize()
	ic = {
		checkStack()
		itemAmount()
		stripColor()
		quickstack()
		itemConfig()
		amountEquipped()
		sortFunc()
		lock()
		giveBack()
		renameThis()
		sort()
		searchBox()
		sort_relative()
		clientVersion = 1
		renameButton()
		searchButton()
		getQuality()
	}
	player = {
		equippedTech()
		altHandItem()
		giveEssentialItem()
		consumeTaggedItem()
		setUniverseFlag()
		species()
		itemsWithTag()
		worldId()
		warp()
		completeMission()
		inventoryTags()
		upgradeShip()
		hasQuest()
		consumeItem()
		gender()
		primaryHandItem()
		essentialItem()
		equippedItem()
		setIntroComplete()
		playTime()
		enabledTechs()
		recordEvent()
		playCinematic()
		introComplete()
		hasCompletedQuest()
		makeTechAvailable()
		consumeItemWithParameter()
		startQuest()
		hasItemWithParameter()
		getItemWithParameter()
		lounge()
		enableTech()
		equipTech()
		enableMission()
		removeEssentialItem()
		isLounging()
		availableTechs()
		primaryHandItemTags()
		makeTechUnavailable()
		confirm()
		serverUuid()
		addBookmark()
		altHandItemTags()
		cleanupItems()
		radioMessage()
		setEquippedItem()
		ownShipWorldId()
		hasItem()
		canStartQuest()
		giveBlueprint()
		hasCountOfItem()
		shipUpgrades()
		giveItem()
	}
	config = {
		getParameter()
	}
	self = {
	}
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	world = {
		spawnItem()
		entityPosition()
		entityHealth()
		damageTileArea()
		day()
		placeMaterial()
		entityDescription()
		containerPutItemsAt()
		entityVelocity()
		damageTiles()
		entityHandItem()
		objectAt()
		setProperty()
		containerItemApply()
		containerClose()
		distance()
		findUniqueEntity()
		gravity()
		rectTileCollision()
		entitySpecies()
		platformerPathStart()
		containerOpen()
		containerTakeAll()
		breathable()
		npcType()
		containerAddItems()
		dayLength()
		loungeableOccupied()
		placeObject()
		isTileProtected()
		destroyLiquid()
		debugLine()
		spawnLiquid()
		entityCanDamage()
		containerItemsCanFit()
		xwrap()
		entityUniqueId()
		itemDropQuery()
		lightLevel()
		placeMod()
		spawnNpc()
		spawnTreasure()
		time()
		underground()
		spawnVehicle()
		spawnMonster()
		timeOfDay()
		findPlatformerPath()
		debugPoly()
		containerTakeNumItemsAt()
		isMonster()
		farmableStage()
		polyCollision()
		objectLineQuery()
		entityHasCountOfItem()
		entityHandItemDescriptor()
		tileIsOccupied()
		resolvePolyCollision()
		pointCollision()
		callScriptedEntity()
		collisionBlocksAlongLine()
		containerStackItems()
		objectSpaces()
		containerConsume()
		spawnStagehand()
		spawnProjectile()
		stagehandType()
		entityQuery()
		lineTileCollision()
		containerSwapItemsNoCombine()
		liquidAlongLine()
		playerQuery()
		objectQuery()
		entityGender()
		rectCollision()
		containerItemAt()
		polyContains()
		containerTakeAt()
		magnitude()
		mod()
		containerSwapItems()
		isNpc()
		lineCollision()
		getObjectParameter()
		debugPoint()
		pointTileCollision()
		containerItemsFitWhere()
		containerAvailable()
		getProperty()
		containerItems()
		threatLevel()
		entityType()
		sendEntityMessage()
		material()
		liquidAt()
		containerSize()
		debugText()
		monsterType()
		entityMoney()
		nearestTo()
		npcLineQuery()
		entityPortrait()
		entityName()
		entityDamageTeam()
		containerConsumeAt()
		entityAggressive()
		windLevel()
		monsterQuery()
		entityExists()
		loungeableQuery()
		npcQuery()
		entityLineQuery()
	}
	root = {
		createBiome()
		imageSpaces()
		createItem()
		loadVersionedJson()
		createTreasure()
		getMatchingTenants()
		monsterSkillParameter()
		getConfiguration()
		npcVariant()
		itemHasTag()
		imageSize()
		projectileGravityMultiplier()
		nonEmptyRegion()
		evalFunction2()
		projectileConfig()
		materialMiningSound()
		generateName()
		isTreasurePool()
		hasTech()
		behaviorModule()
		itemConfig()
		treeStemDirectory()
		evalFunction()
		techConfig()
		npcConfig()
		setConfigurationPath()
		getConfigurationPath()
		materialHealth()
		materialFootstepSound()
		monsterMovementSettings()
		materialPath()
		setConfiguration()
		monsterPortrait()
		itemType()
		questConfig()
		recipesForItem()
		assetJson()
		treeFoliageDirectory()
		techType()
		liquidStatusEffects()
		makeCurrentVersionedJson()
		itemTags()
		tenantConfig()
		npcPortrait()
	}
	jsize()
	status = {
		setResourceLocked()
		resourcePercentage()
		addPersistentEffects()
		removeEphemeralEffect()
		resource()
		setResourcePercentage()
		resourcePositive()
		damageTakenSince()
		statPositive()
		stat()
		statusProperty()
		activeUniqueStatusEffectSummary()
		inflictedHitsSince()
		resourceMax()
		setStatusProperty()
		setPersistentEffects()
		resetAllResources()
		addEphemeralEffects()
		overConsumeResource()
		modifyResource()
		addEphemeralEffect()
		getPersistentEffects()
		resetResource()
		consumeResource()
		clearPersistentEffects()
		modifyResourcePercentage()
		clearEphemeralEffects()
		resourceNames()
		addPersistentEffect()
		resourceLocked()
		clearAllPersistentEffects()
		inflictedDamageSince()
		isResource()
		setResource()
		giveResource()
	}
	xpcall()
	getmetatable()
	utf8 = {
		len()
		codepoint()
		offset()
		codes()
		charpattern = "[
[23:25:32.506] [Warn] 	select()
	rawequal()
	rawset()
	string = {
		gmatch()
		char()
		sub()
		unpack()
		upper()
		lower()
		find()
		rep()
		dump()
		len()
		reverse()
		packsize()
		pack()
		byte()
		match()
		format()
		gsub()
	}
	require()
	pairs()
	next()
	jobject()
	math = {
		pi = 3.1415926535898
		rad()
		max()
		sqrt()
		random()
		floor()
		log()
		acos()
		fmod()
		mininteger = -9223372036854775808
		type()
		huge = inf
		randomseed()
		deg()
		exp()
		maxinteger = 9223372036854775807
		cos()
		min()
		tointeger()
		modf()
		asin()
		tan()
		atan()
		abs()
		sin()
		ult()
		ceil()
	}
	print()
	pcall()
	type()
	init()
	setmetatable()
	jresize()
	ic = {
		checkStack()
		itemAmount()
		stripColor()
		quickstack()
		itemConfig()
		amountEquipped()
		sortFunc()
		lock()
		giveBack()
		renameThis()
		sort()
		searchBox()
		sort_relative()
		clientVersion = 1
		renameButton()
		searchButton()
		getQuality()
	}
	player = {
		equippedTech()
		altHandItem()
		giveEssentialItem()
		consumeTaggedItem()
		setUniverseFlag()
		species()
		itemsWithTag()
		worldId()
		warp()
		completeMission()
		inventoryTags()
		upgradeShip()
		hasQuest()
		consumeItem()
		gender()
		primaryHandItem()
		essentialItem()
		equippedItem()
		setIntroComplete()
		playTime()
		enabledTechs()
		recordEvent()
		playCinematic()
		introComplete()
		hasCompletedQuest()
		makeTechAvailable()
		consumeItemWithParameter()
		startQuest()
		hasItemWithParameter()
		getItemWithParameter()
		lounge()
		enableTech()
		equipTech()
		enableMission()
		removeEssentialItem()
		isLounging()
		availableTechs()
		primaryHandItemTags()
		makeTechUnavailable()
		confirm()
		serverUuid()
		addBookmark()
		altHandItemTags()
		cleanupItems()
		radioMessage()
		setEquippedItem()
		ownShipWorldId()
		hasItem()
		canStartQuest()
		giveBlueprint()
		hasCountOfItem()
		shipUpgrades()
		giveItem()
	}
	config = {
		getParameter()
	}
	self = {
	}
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	world = {
		spawnItem()
		entityPosition()
		entityHealth()
		damageTileArea()
		day()
		placeMaterial()
		entityDescription()
		containerPutItemsAt()
		entityVelocity()
		damageTiles()
		entityHandItem()
		objectAt()
		setProperty()
		containerItemApply()
		containerClose()
		distance()
		findUniqueEntity()
		gravity()
		rectTileCollision()
		entitySpecies()
		platformerPathStart()
		containerOpen()
		containerTakeAll()
		breathable()
		npcType()
		containerAddItems()
		dayLength()
		loungeableOccupied()
		placeObject()
		isTileProtected()
		destroyLiquid()
		debugLine()
		spawnLiquid()
		entityCanDamage()
		containerItemsCanFit()
		xwrap()
		entityUniqueId()
		itemDropQuery()
		lightLevel()
		placeMod()
		spawnNpc()
		spawnTreasure()
		time()
		underground()
		spawnVehicle()
		spawnMonster()
		timeOfDay()
		findPlatformerPath()
		debugPoly()
		containerTakeNumItemsAt()
		isMonster()
		farmableStage()
		polyCollision()
		objectLineQuery()
		entityHasCountOfItem()
		entityHandItemDescriptor()
		tileIsOccupied()
		resolvePolyCollision()
		pointCollision()
		callScriptedEntity()
		collisionBlocksAlongLine()
		containerStackItems()
		objectSpaces()
		containerConsume()
		spawnStagehand()
		spawnProjectile()
		stagehandType()
		entityQuery()
		lineTileCollision()
		containerSwapItemsNoCombine()
		liquidAlongLine()
		playerQuery()
		objectQuery()
		entityGender()
		rectCollision()
		containerItemAt()
		polyContains()
		containerTakeAt()
		magnitude()
		mod()
		containerSwapItems()
		isNpc()
		lineCollision()
		getObjectParameter()
		debugPoint()
		pointTileCollision()
		containerItemsFitWhere()
		containerAvailable()
		getProperty()
		containerItems()
		threatLevel()
		entityType()
		sendEntityMessage()
		material()
		liquidAt()
		containerSize()
		debugText()
		monsterType()
		entityMoney()
		nearestTo()
		npcLineQuery()
		entityPortrait()
		entityName()
		entityDamageTeam()
		containerConsumeAt()
		entityAggressive()
		windLevel()
		monsterQuery()
		entityExists()
		loungeableQuery()
		npcQuery()
		entityLineQuery()
	}
	root = {
		createBiome()
		imageSpaces()
		createItem()
		loadVersionedJson()
		createTreasure()
		getMatchingTenants()
		monsterSkillParameter()
		getConfiguration()
		npcVariant()
		itemHasTag()
		imageSize()
		projectileGravityMultiplier()
		nonEmptyRegion()
		evalFunction2()
		projectileConfig()
		materialMiningSound()
		generateName()
		isTreasurePool()
		hasTech()
		behaviorModule()
		itemConfig()
		treeStemDirectory()
		evalFunction()
		techConfig()
		npcConfig()
		setConfigurationPath()
		getConfigurationPath()
		materialHealth()
		materialFootstepSound()
		monsterMovementSettings()
		materialPath()
		setConfiguration()
		monsterPortrait()
		itemType()
		questConfig()
		recipesForItem()
		assetJson()
		treeFoliageDirectory()
		techType()
		liquidStatusEffects()
		makeCurrentVersionedJson()
		itemTags()
		tenantConfig()
		npcPortrait()
	}
	jsize()
	status = {
		setResourceLocked()
		resourcePercentage()
		addPersistentEffects()
		removeEphemeralEffect()
		resource()
		setResourcePercentage()
		resourcePositive()
		damageTakenSince()
		statPositive()
		stat()
		statusProperty()
		activeUniqueStatusEffectSummary()
		inflictedHitsSince()
		resourceMax()
		setStatusProperty()
		setPersistentEffects()
		resetAllResources()
		addEphemeralEffects()
		overConsumeResource()
		modifyResource()
		addEphemeralEffect()
		getPersistentEffects()
		resetResource()
		consumeResource()
		clearPersistentEffects()
		modifyResourcePercentage()
		clearEphemeralEffects()
		resourceNames()
		addPersistentEffect()
		resourceLocked()
		clearAllPersistentEffects()
		inflictedDamageSince()
		isResource()
		setResource()
		giveResource()
	}
	xpcall()
	getmetatable()
	utf8 = {
		len()
		codepoint()
		offset()
		codes()
		charpattern = "[
[23:25:40.550] [Info] [IC] [Sort] Time elapsed: 0.011
[23:28:47.998] [Warn] 	select()
	rawequal()
	rawset()
	string = {
		gmatch()
		char()
		sub()
		unpack()
		upper()
		lower()
		find()
		rep()
		dump()
		len()
		reverse()
		packsize()
		pack()
		byte()
		match()
		format()
		gsub()
	}
	require()
	pairs()
	next()
	jobject()
	math = {
		pi = 3.1415926535898
		rad()
		max()
		sqrt()
		random()
		floor()
		log()
		acos()
		fmod()
		mininteger = -9223372036854775808
		type()
		huge = inf
		randomseed()
		deg()
		exp()
		maxinteger = 9223372036854775807
		cos()
		min()
		tointeger()
		modf()
		asin()
		tan()
		atan()
		abs()
		sin()
		ult()
		ceil()
	}
	print()
	pcall()
	type()
	init()
	setmetatable()
	jresize()
	ic = {
		checkStack()
		itemAmount()
		stripColor()
		quickstack()
		itemConfig()
		amountEquipped()
		sortFunc()
		lock()
		giveBack()
		renameThis()
		sort()
		searchBox()
		sort_relative()
		clientVersion = 1
		renameButton()
		searchButton()
		getQuality()
	}
	player = {
		equippedTech()
		altHandItem()
		giveEssentialItem()
		consumeTaggedItem()
		setUniverseFlag()
		species()
		itemsWithTag()
		worldId()
		warp()
		completeMission()
		inventoryTags()
		upgradeShip()
		hasQuest()
		consumeItem()
		gender()
		primaryHandItem()
		essentialItem()
		equippedItem()
		setIntroComplete()
		playTime()
		enabledTechs()
		recordEvent()
		playCinematic()
		introComplete()
		hasCompletedQuest()
		makeTechAvailable()
		consumeItemWithParameter()
		startQuest()
		hasItemWithParameter()
		getItemWithParameter()
		lounge()
		enableTech()
		equipTech()
		enableMission()
		removeEssentialItem()
		isLounging()
		availableTechs()
		primaryHandItemTags()
		makeTechUnavailable()
		confirm()
		serverUuid()
		addBookmark()
		altHandItemTags()
		cleanupItems()
		radioMessage()
		setEquippedItem()
		ownShipWorldId()
		hasItem()
		canStartQuest()
		giveBlueprint()
		hasCountOfItem()
		shipUpgrades()
		giveItem()
	}
	config = {
		getParameter()
	}
	self = {
	}
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	world = {
		spawnItem()
		entityPosition()
		entityHealth()
		damageTileArea()
		day()
		placeMaterial()
		entityDescription()
		containerPutItemsAt()
		entityVelocity()
		damageTiles()
		entityHandItem()
		objectAt()
		setProperty()
		containerItemApply()
		containerClose()
		distance()
		findUniqueEntity()
		gravity()
		rectTileCollision()
		entitySpecies()
		platformerPathStart()
		containerOpen()
		containerTakeAll()
		breathable()
		npcType()
		containerAddItems()
		dayLength()
		loungeableOccupied()
		placeObject()
		isTileProtected()
		destroyLiquid()
		debugLine()
		spawnLiquid()
		entityCanDamage()
		containerItemsCanFit()
		xwrap()
		entityUniqueId()
		itemDropQuery()
		lightLevel()
		placeMod()
		spawnNpc()
		spawnTreasure()
		time()
		underground()
		spawnVehicle()
		spawnMonster()
		timeOfDay()
		findPlatformerPath()
		debugPoly()
		containerTakeNumItemsAt()
		isMonster()
		farmableStage()
		polyCollision()
		objectLineQuery()
		entityHasCountOfItem()
		entityHandItemDescriptor()
		tileIsOccupied()
		resolvePolyCollision()
		pointCollision()
		callScriptedEntity()
		collisionBlocksAlongLine()
		containerStackItems()
		objectSpaces()
		containerConsume()
		spawnStagehand()
		spawnProjectile()
		stagehandType()
		entityQuery()
		lineTileCollision()
		containerSwapItemsNoCombine()
		liquidAlongLine()
		playerQuery()
		objectQuery()
		entityGender()
		rectCollision()
		containerItemAt()
		polyContains()
		containerTakeAt()
		magnitude()
		mod()
		containerSwapItems()
		isNpc()
		lineCollision()
		getObjectParameter()
		debugPoint()
		pointTileCollision()
		containerItemsFitWhere()
		containerAvailable()
		getProperty()
		containerItems()
		threatLevel()
		entityType()
		sendEntityMessage()
		material()
		liquidAt()
		containerSize()
		debugText()
		monsterType()
		entityMoney()
		nearestTo()
		npcLineQuery()
		entityPortrait()
		entityName()
		entityDamageTeam()
		containerConsumeAt()
		entityAggressive()
		windLevel()
		monsterQuery()
		entityExists()
		loungeableQuery()
		npcQuery()
		entityLineQuery()
	}
	root = {
		createBiome()
		imageSpaces()
		createItem()
		loadVersionedJson()
		createTreasure()
		getMatchingTenants()
		monsterSkillParameter()
		getConfiguration()
		npcVariant()
		itemHasTag()
		imageSize()
		projectileGravityMultiplier()
		nonEmptyRegion()
		evalFunction2()
		projectileConfig()
		materialMiningSound()
		generateName()
		isTreasurePool()
		hasTech()
		behaviorModule()
		itemConfig()
		treeStemDirectory()
		evalFunction()
		techConfig()
		npcConfig()
		setConfigurationPath()
		getConfigurationPath()
		materialHealth()
		materialFootstepSound()
		monsterMovementSettings()
		materialPath()
		setConfiguration()
		monsterPortrait()
		itemType()
		questConfig()
		recipesForItem()
		assetJson()
		treeFoliageDirectory()
		techType()
		liquidStatusEffects()
		makeCurrentVersionedJson()
		itemTags()
		tenantConfig()
		npcPortrait()
	}
	jsize()
	status = {
		setResourceLocked()
		resourcePercentage()
		addPersistentEffects()
		removeEphemeralEffect()
		resource()
		setResourcePercentage()
		resourcePositive()
		damageTakenSince()
		statPositive()
		stat()
		statusProperty()
		activeUniqueStatusEffectSummary()
		inflictedHitsSince()
		resourceMax()
		setStatusProperty()
		setPersistentEffects()
		resetAllResources()
		addEphemeralEffects()
		overConsumeResource()
		modifyResource()
		addEphemeralEffect()
		getPersistentEffects()
		resetResource()
		consumeResource()
		clearPersistentEffects()
		modifyResourcePercentage()
		clearEphemeralEffects()
		resourceNames()
		addPersistentEffect()
		resourceLocked()
		clearAllPersistentEffects()
		inflictedDamageSince()
		isResource()
		setResource()
		giveResource()
	}
	xpcall()
	getmetatable()
	utf8 = {
		len()
		codepoint()
		offset()
		codes()
		charpattern = "[
[23:30:10.375] [Warn] 	select()
	rawequal()
	rawset()
	string = {
		gmatch()
		char()
		sub()
		unpack()
		upper()
		lower()
		find()
		rep()
		dump()
		len()
		reverse()
		packsize()
		pack()
		byte()
		match()
		format()
		gsub()
	}
	require()
	pairs()
	next()
	jobject()
	math = {
		pi = 3.1415926535898
		rad()
		max()
		sqrt()
		random()
		floor()
		log()
		acos()
		fmod()
		mininteger = -9223372036854775808
		type()
		huge = inf
		randomseed()
		deg()
		exp()
		maxinteger = 9223372036854775807
		cos()
		min()
		tointeger()
		modf()
		asin()
		tan()
		atan()
		abs()
		sin()
		ult()
		ceil()
	}
	print()
	pcall()
	type()
	init()
	setmetatable()
	jresize()
	ic = {
		checkStack()
		itemAmount()
		stripColor()
		quickstack()
		itemConfig()
		amountEquipped()
		sortFunc()
		lock()
		giveBack()
		renameThis()
		sort()
		searchBox()
		sort_relative()
		clientVersion = 1
		renameButton()
		searchButton()
		getQuality()
	}
	player = {
		equippedTech()
		altHandItem()
		giveEssentialItem()
		consumeTaggedItem()
		setUniverseFlag()
		species()
		itemsWithTag()
		worldId()
		warp()
		completeMission()
		inventoryTags()
		upgradeShip()
		hasQuest()
		consumeItem()
		gender()
		primaryHandItem()
		essentialItem()
		equippedItem()
		setIntroComplete()
		playTime()
		enabledTechs()
		recordEvent()
		playCinematic()
		introComplete()
		hasCompletedQuest()
		makeTechAvailable()
		consumeItemWithParameter()
		startQuest()
		hasItemWithParameter()
		getItemWithParameter()
		lounge()
		enableTech()
		equipTech()
		enableMission()
		removeEssentialItem()
		isLounging()
		availableTechs()
		primaryHandItemTags()
		makeTechUnavailable()
		confirm()
		serverUuid()
		addBookmark()
		altHandItemTags()
		cleanupItems()
		radioMessage()
		setEquippedItem()
		ownShipWorldId()
		hasItem()
		canStartQuest()
		giveBlueprint()
		hasCountOfItem()
		shipUpgrades()
		giveItem()
	}
	config = {
		getParameter()
	}
	self = {
	}
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	world = {
		spawnItem()
		entityPosition()
		entityHealth()
		damageTileArea()
		day()
		placeMaterial()
		entityDescription()
		containerPutItemsAt()
		entityVelocity()
		damageTiles()
		entityHandItem()
		objectAt()
		setProperty()
		containerItemApply()
		containerClose()
		distance()
		findUniqueEntity()
		gravity()
		rectTileCollision()
		entitySpecies()
		platformerPathStart()
		containerOpen()
		containerTakeAll()
		breathable()
		npcType()
		containerAddItems()
		dayLength()
		loungeableOccupied()
		placeObject()
		isTileProtected()
		destroyLiquid()
		debugLine()
		spawnLiquid()
		entityCanDamage()
		containerItemsCanFit()
		xwrap()
		entityUniqueId()
		itemDropQuery()
		lightLevel()
		placeMod()
		spawnNpc()
		spawnTreasure()
		time()
		underground()
		spawnVehicle()
		spawnMonster()
		timeOfDay()
		findPlatformerPath()
		debugPoly()
		containerTakeNumItemsAt()
		isMonster()
		farmableStage()
		polyCollision()
		objectLineQuery()
		entityHasCountOfItem()
		entityHandItemDescriptor()
		tileIsOccupied()
		resolvePolyCollision()
		pointCollision()
		callScriptedEntity()
		collisionBlocksAlongLine()
		containerStackItems()
		objectSpaces()
		containerConsume()
		spawnStagehand()
		spawnProjectile()
		stagehandType()
		entityQuery()
		lineTileCollision()
		containerSwapItemsNoCombine()
		liquidAlongLine()
		playerQuery()
		objectQuery()
		entityGender()
		rectCollision()
		containerItemAt()
		polyContains()
		containerTakeAt()
		magnitude()
		mod()
		containerSwapItems()
		isNpc()
		lineCollision()
		getObjectParameter()
		debugPoint()
		pointTileCollision()
		containerItemsFitWhere()
		containerAvailable()
		getProperty()
		containerItems()
		threatLevel()
		entityType()
		sendEntityMessage()
		material()
		liquidAt()
		containerSize()
		debugText()
		monsterType()
		entityMoney()
		nearestTo()
		npcLineQuery()
		entityPortrait()
		entityName()
		entityDamageTeam()
		containerConsumeAt()
		entityAggressive()
		windLevel()
		monsterQuery()
		entityExists()
		loungeableQuery()
		npcQuery()
		entityLineQuery()
	}
	root = {
		createBiome()
		imageSpaces()
		createItem()
		loadVersionedJson()
		createTreasure()
		getMatchingTenants()
		monsterSkillParameter()
		getConfiguration()
		npcVariant()
		itemHasTag()
		imageSize()
		projectileGravityMultiplier()
		nonEmptyRegion()
		evalFunction2()
		projectileConfig()
		materialMiningSound()
		generateName()
		isTreasurePool()
		hasTech()
		behaviorModule()
		itemConfig()
		treeStemDirectory()
		evalFunction()
		techConfig()
		npcConfig()
		setConfigurationPath()
		getConfigurationPath()
		materialHealth()
		materialFootstepSound()
		monsterMovementSettings()
		materialPath()
		setConfiguration()
		monsterPortrait()
		itemType()
		questConfig()
		recipesForItem()
		assetJson()
		treeFoliageDirectory()
		techType()
		liquidStatusEffects()
		makeCurrentVersionedJson()
		itemTags()
		tenantConfig()
		npcPortrait()
	}
	jsize()
	status = {
		setResourceLocked()
		resourcePercentage()
		addPersistentEffects()
		removeEphemeralEffect()
		resource()
		setResourcePercentage()
		resourcePositive()
		damageTakenSince()
		statPositive()
		stat()
		statusProperty()
		activeUniqueStatusEffectSummary()
		inflictedHitsSince()
		resourceMax()
		setStatusProperty()
		setPersistentEffects()
		resetAllResources()
		addEphemeralEffects()
		overConsumeResource()
		modifyResource()
		addEphemeralEffect()
		getPersistentEffects()
		resetResource()
		consumeResource()
		clearPersistentEffects()
		modifyResourcePercentage()
		clearEphemeralEffects()
		resourceNames()
		addPersistentEffect()
		resourceLocked()
		clearAllPersistentEffects()
		inflictedDamageSince()
		isResource()
		setResource()
		giveResource()
	}
	xpcall()
	getmetatable()
	utf8 = {
		len()
		codepoint()
		offset()
		codes()
		charpattern = "[
[23:30:12.149] [Warn] 	select()
	rawequal()
	rawset()
	string = {
		gmatch()
		char()
		sub()
		unpack()
		upper()
		lower()
		find()
		rep()
		dump()
		len()
		reverse()
		packsize()
		pack()
		byte()
		match()
		format()
		gsub()
	}
	require()
	pairs()
	next()
	jobject()
	math = {
		pi = 3.1415926535898
		rad()
		max()
		sqrt()
		random()
		floor()
		log()
		acos()
		fmod()
		mininteger = -9223372036854775808
		type()
		huge = inf
		randomseed()
		deg()
		exp()
		maxinteger = 9223372036854775807
		cos()
		min()
		tointeger()
		modf()
		asin()
		tan()
		atan()
		abs()
		sin()
		ult()
		ceil()
	}
	print()
	pcall()
	type()
	init()
	setmetatable()
	jresize()
	ic = {
		checkStack()
		itemAmount()
		stripColor()
		quickstack()
		itemConfig()
		amountEquipped()
		sortFunc()
		lock()
		giveBack()
		renameThis()
		sort()
		searchBox()
		sort_relative()
		clientVersion = 1
		renameButton()
		searchButton()
		getQuality()
	}
	player = {
		equippedTech()
		altHandItem()
		giveEssentialItem()
		consumeTaggedItem()
		setUniverseFlag()
		species()
		itemsWithTag()
		worldId()
		warp()
		completeMission()
		inventoryTags()
		upgradeShip()
		hasQuest()
		consumeItem()
		gender()
		primaryHandItem()
		essentialItem()
		equippedItem()
		setIntroComplete()
		playTime()
		enabledTechs()
		recordEvent()
		playCinematic()
		introComplete()
		hasCompletedQuest()
		makeTechAvailable()
		consumeItemWithParameter()
		startQuest()
		hasItemWithParameter()
		getItemWithParameter()
		lounge()
		enableTech()
		equipTech()
		enableMission()
		removeEssentialItem()
		isLounging()
		availableTechs()
		primaryHandItemTags()
		makeTechUnavailable()
		confirm()
		serverUuid()
		addBookmark()
		altHandItemTags()
		cleanupItems()
		radioMessage()
		setEquippedItem()
		ownShipWorldId()
		hasItem()
		canStartQuest()
		giveBlueprint()
		hasCountOfItem()
		shipUpgrades()
		giveItem()
	}
	config = {
		getParameter()
	}
	self = {
	}
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	world = {
		spawnItem()
		entityPosition()
		entityHealth()
		damageTileArea()
		day()
		placeMaterial()
		entityDescription()
		containerPutItemsAt()
		entityVelocity()
		damageTiles()
		entityHandItem()
		objectAt()
		setProperty()
		containerItemApply()
		containerClose()
		distance()
		findUniqueEntity()
		gravity()
		rectTileCollision()
		entitySpecies()
		platformerPathStart()
		containerOpen()
		containerTakeAll()
		breathable()
		npcType()
		containerAddItems()
		dayLength()
		loungeableOccupied()
		placeObject()
		isTileProtected()
		destroyLiquid()
		debugLine()
		spawnLiquid()
		entityCanDamage()
		containerItemsCanFit()
		xwrap()
		entityUniqueId()
		itemDropQuery()
		lightLevel()
		placeMod()
		spawnNpc()
		spawnTreasure()
		time()
		underground()
		spawnVehicle()
		spawnMonster()
		timeOfDay()
		findPlatformerPath()
		debugPoly()
		containerTakeNumItemsAt()
		isMonster()
		farmableStage()
		polyCollision()
		objectLineQuery()
		entityHasCountOfItem()
		entityHandItemDescriptor()
		tileIsOccupied()
		resolvePolyCollision()
		pointCollision()
		callScriptedEntity()
		collisionBlocksAlongLine()
		containerStackItems()
		objectSpaces()
		containerConsume()
		spawnStagehand()
		spawnProjectile()
		stagehandType()
		entityQuery()
		lineTileCollision()
		containerSwapItemsNoCombine()
		liquidAlongLine()
		playerQuery()
		objectQuery()
		entityGender()
		rectCollision()
		containerItemAt()
		polyContains()
		containerTakeAt()
		magnitude()
		mod()
		containerSwapItems()
		isNpc()
		lineCollision()
		getObjectParameter()
		debugPoint()
		pointTileCollision()
		containerItemsFitWhere()
		containerAvailable()
		getProperty()
		containerItems()
		threatLevel()
		entityType()
		sendEntityMessage()
		material()
		liquidAt()
		containerSize()
		debugText()
		monsterType()
		entityMoney()
		nearestTo()
		npcLineQuery()
		entityPortrait()
		entityName()
		entityDamageTeam()
		containerConsumeAt()
		entityAggressive()
		windLevel()
		monsterQuery()
		entityExists()
		loungeableQuery()
		npcQuery()
		entityLineQuery()
	}
	root = {
		createBiome()
		imageSpaces()
		createItem()
		loadVersionedJson()
		createTreasure()
		getMatchingTenants()
		monsterSkillParameter()
		getConfiguration()
		npcVariant()
		itemHasTag()
		imageSize()
		projectileGravityMultiplier()
		nonEmptyRegion()
		evalFunction2()
		projectileConfig()
		materialMiningSound()
		generateName()
		isTreasurePool()
		hasTech()
		behaviorModule()
		itemConfig()
		treeStemDirectory()
		evalFunction()
		techConfig()
		npcConfig()
		setConfigurationPath()
		getConfigurationPath()
		materialHealth()
		materialFootstepSound()
		monsterMovementSettings()
		materialPath()
		setConfiguration()
		monsterPortrait()
		itemType()
		questConfig()
		recipesForItem()
		assetJson()
		treeFoliageDirectory()
		techType()
		liquidStatusEffects()
		makeCurrentVersionedJson()
		itemTags()
		tenantConfig()
		npcPortrait()
	}
	jsize()
	status = {
		setResourceLocked()
		resourcePercentage()
		addPersistentEffects()
		removeEphemeralEffect()
		resource()
		setResourcePercentage()
		resourcePositive()
		damageTakenSince()
		statPositive()
		stat()
		statusProperty()
		activeUniqueStatusEffectSummary()
		inflictedHitsSince()
		resourceMax()
		setStatusProperty()
		setPersistentEffects()
		resetAllResources()
		addEphemeralEffects()
		overConsumeResource()
		modifyResource()
		addEphemeralEffect()
		getPersistentEffects()
		resetResource()
		consumeResource()
		clearPersistentEffects()
		modifyResourcePercentage()
		clearEphemeralEffects()
		resourceNames()
		addPersistentEffect()
		resourceLocked()
		clearAllPersistentEffects()
		inflictedDamageSince()
		isResource()
		setResource()
		giveResource()
	}
	xpcall()
	getmetatable()
	utf8 = {
		len()
		codepoint()
		offset()
		codes()
		charpattern = "[
[23:30:14.014] [Warn] 	select()
	rawequal()
	rawset()
	string = {
		gmatch()
		char()
		sub()
		unpack()
		upper()
		lower()
		find()
		rep()
		dump()
		len()
		reverse()
		packsize()
		pack()
		byte()
		match()
		format()
		gsub()
	}
	require()
	pairs()
	next()
	jobject()
	math = {
		pi = 3.1415926535898
		rad()
		max()
		sqrt()
		random()
		floor()
		log()
		acos()
		fmod()
		mininteger = -9223372036854775808
		type()
		huge = inf
		randomseed()
		deg()
		exp()
		maxinteger = 9223372036854775807
		cos()
		min()
		tointeger()
		modf()
		asin()
		tan()
		atan()
		abs()
		sin()
		ult()
		ceil()
	}
	print()
	pcall()
	type()
	init()
	setmetatable()
	jresize()
	ic = {
		checkStack()
		itemAmount()
		stripColor()
		quickstack()
		itemConfig()
		amountEquipped()
		sortFunc()
		lock()
		giveBack()
		renameThis()
		sort()
		searchBox()
		sort_relative()
		clientVersion = 1
		renameButton()
		searchButton()
		getQuality()
	}
	player = {
		equippedTech()
		altHandItem()
		giveEssentialItem()
		consumeTaggedItem()
		setUniverseFlag()
		species()
		itemsWithTag()
		worldId()
		warp()
		completeMission()
		inventoryTags()
		upgradeShip()
		hasQuest()
		consumeItem()
		gender()
		primaryHandItem()
		essentialItem()
		equippedItem()
		setIntroComplete()
		playTime()
		enabledTechs()
		recordEvent()
		playCinematic()
		introComplete()
		hasCompletedQuest()
		makeTechAvailable()
		consumeItemWithParameter()
		startQuest()
		hasItemWithParameter()
		getItemWithParameter()
		lounge()
		enableTech()
		equipTech()
		enableMission()
		removeEssentialItem()
		isLounging()
		availableTechs()
		primaryHandItemTags()
		makeTechUnavailable()
		confirm()
		serverUuid()
		addBookmark()
		altHandItemTags()
		cleanupItems()
		radioMessage()
		setEquippedItem()
		ownShipWorldId()
		hasItem()
		canStartQuest()
		giveBlueprint()
		hasCountOfItem()
		shipUpgrades()
		giveItem()
	}
	config = {
		getParameter()
	}
	self = {
	}
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	world = {
		spawnItem()
		entityPosition()
		entityHealth()
		damageTileArea()
		day()
		placeMaterial()
		entityDescription()
		containerPutItemsAt()
		entityVelocity()
		damageTiles()
		entityHandItem()
		objectAt()
		setProperty()
		containerItemApply()
		containerClose()
		distance()
		findUniqueEntity()
		gravity()
		rectTileCollision()
		entitySpecies()
		platformerPathStart()
		containerOpen()
		containerTakeAll()
		breathable()
		npcType()
		containerAddItems()
		dayLength()
		loungeableOccupied()
		placeObject()
		isTileProtected()
		destroyLiquid()
		debugLine()
		spawnLiquid()
		entityCanDamage()
		containerItemsCanFit()
		xwrap()
		entityUniqueId()
		itemDropQuery()
		lightLevel()
		placeMod()
		spawnNpc()
		spawnTreasure()
		time()
		underground()
		spawnVehicle()
		spawnMonster()
		timeOfDay()
		findPlatformerPath()
		debugPoly()
		containerTakeNumItemsAt()
		isMonster()
		farmableStage()
		polyCollision()
		objectLineQuery()
		entityHasCountOfItem()
		entityHandItemDescriptor()
		tileIsOccupied()
		resolvePolyCollision()
		pointCollision()
		callScriptedEntity()
		collisionBlocksAlongLine()
		containerStackItems()
		objectSpaces()
		containerConsume()
		spawnStagehand()
		spawnProjectile()
		stagehandType()
		entityQuery()
		lineTileCollision()
		containerSwapItemsNoCombine()
		liquidAlongLine()
		playerQuery()
		objectQuery()
		entityGender()
		rectCollision()
		containerItemAt()
		polyContains()
		containerTakeAt()
		magnitude()
		mod()
		containerSwapItems()
		isNpc()
		lineCollision()
		getObjectParameter()
		debugPoint()
		pointTileCollision()
		containerItemsFitWhere()
		containerAvailable()
		getProperty()
		containerItems()
		threatLevel()
		entityType()
		sendEntityMessage()
		material()
		liquidAt()
		containerSize()
		debugText()
		monsterType()
		entityMoney()
		nearestTo()
		npcLineQuery()
		entityPortrait()
		entityName()
		entityDamageTeam()
		containerConsumeAt()
		entityAggressive()
		windLevel()
		monsterQuery()
		entityExists()
		loungeableQuery()
		npcQuery()
		entityLineQuery()
	}
	root = {
		createBiome()
		imageSpaces()
		createItem()
		loadVersionedJson()
		createTreasure()
		getMatchingTenants()
		monsterSkillParameter()
		getConfiguration()
		npcVariant()
		itemHasTag()
		imageSize()
		projectileGravityMultiplier()
		nonEmptyRegion()
		evalFunction2()
		projectileConfig()
		materialMiningSound()
		generateName()
		isTreasurePool()
		hasTech()
		behaviorModule()
		itemConfig()
		treeStemDirectory()
		evalFunction()
		techConfig()
		npcConfig()
		setConfigurationPath()
		getConfigurationPath()
		materialHealth()
		materialFootstepSound()
		monsterMovementSettings()
		materialPath()
		setConfiguration()
		monsterPortrait()
		itemType()
		questConfig()
		recipesForItem()
		assetJson()
		treeFoliageDirectory()
		techType()
		liquidStatusEffects()
		makeCurrentVersionedJson()
		itemTags()
		tenantConfig()
		npcPortrait()
	}
	jsize()
	status = {
		setResourceLocked()
		resourcePercentage()
		addPersistentEffects()
		removeEphemeralEffect()
		resource()
		setResourcePercentage()
		resourcePositive()
		damageTakenSince()
		statPositive()
		stat()
		statusProperty()
		activeUniqueStatusEffectSummary()
		inflictedHitsSince()
		resourceMax()
		setStatusProperty()
		setPersistentEffects()
		resetAllResources()
		addEphemeralEffects()
		overConsumeResource()
		modifyResource()
		addEphemeralEffect()
		getPersistentEffects()
		resetResource()
		consumeResource()
		clearPersistentEffects()
		modifyResourcePercentage()
		clearEphemeralEffects()
		resourceNames()
		addPersistentEffect()
		resourceLocked()
		clearAllPersistentEffects()
		inflictedDamageSince()
		isResource()
		setResource()
		giveResource()
	}
	xpcall()
	getmetatable()
	utf8 = {
		len()
		codepoint()
		offset()
		codes()
		charpattern = "[
[23:30:15.715] [Warn] 	select()
	rawequal()
	rawset()
	string = {
		gmatch()
		char()
		sub()
		unpack()
		upper()
		lower()
		find()
		rep()
		dump()
		len()
		reverse()
		packsize()
		pack()
		byte()
		match()
		format()
		gsub()
	}
	require()
	pairs()
	next()
	jobject()
	math = {
		pi = 3.1415926535898
		rad()
		max()
		sqrt()
		random()
		floor()
		log()
		acos()
		fmod()
		mininteger = -9223372036854775808
		type()
		huge = inf
		randomseed()
		deg()
		exp()
		maxinteger = 9223372036854775807
		cos()
		min()
		tointeger()
		modf()
		asin()
		tan()
		atan()
		abs()
		sin()
		ult()
		ceil()
	}
	print()
	pcall()
	type()
	init()
	setmetatable()
	jresize()
	ic = {
		checkStack()
		itemAmount()
		stripColor()
		quickstack()
		itemConfig()
		amountEquipped()
		sortFunc()
		lock()
		giveBack()
		renameThis()
		sort()
		searchBox()
		sort_relative()
		clientVersion = 1
		renameButton()
		searchButton()
		getQuality()
	}
	player = {
		equippedTech()
		altHandItem()
		giveEssentialItem()
		consumeTaggedItem()
		setUniverseFlag()
		species()
		itemsWithTag()
		worldId()
		warp()
		completeMission()
		inventoryTags()
		upgradeShip()
		hasQuest()
		consumeItem()
		gender()
		primaryHandItem()
		essentialItem()
		equippedItem()
		setIntroComplete()
		playTime()
		enabledTechs()
		recordEvent()
		playCinematic()
		introComplete()
		hasCompletedQuest()
		makeTechAvailable()
		consumeItemWithParameter()
		startQuest()
		hasItemWithParameter()
		getItemWithParameter()
		lounge()
		enableTech()
		equipTech()
		enableMission()
		removeEssentialItem()
		isLounging()
		availableTechs()
		primaryHandItemTags()
		makeTechUnavailable()
		confirm()
		serverUuid()
		addBookmark()
		altHandItemTags()
		cleanupItems()
		radioMessage()
		setEquippedItem()
		ownShipWorldId()
		hasItem()
		canStartQuest()
		giveBlueprint()
		hasCountOfItem()
		shipUpgrades()
		giveItem()
	}
	config = {
		getParameter()
	}
	self = {
	}
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	world = {
		spawnItem()
		entityPosition()
		entityHealth()
		damageTileArea()
		day()
		placeMaterial()
		entityDescription()
		containerPutItemsAt()
		entityVelocity()
		damageTiles()
		entityHandItem()
		objectAt()
		setProperty()
		containerItemApply()
		containerClose()
		distance()
		findUniqueEntity()
		gravity()
		rectTileCollision()
		entitySpecies()
		platformerPathStart()
		containerOpen()
		containerTakeAll()
		breathable()
		npcType()
		containerAddItems()
		dayLength()
		loungeableOccupied()
		placeObject()
		isTileProtected()
		destroyLiquid()
		debugLine()
		spawnLiquid()
		entityCanDamage()
		containerItemsCanFit()
		xwrap()
		entityUniqueId()
		itemDropQuery()
		lightLevel()
		placeMod()
		spawnNpc()
		spawnTreasure()
		time()
		underground()
		spawnVehicle()
		spawnMonster()
		timeOfDay()
		findPlatformerPath()
		debugPoly()
		containerTakeNumItemsAt()
		isMonster()
		farmableStage()
		polyCollision()
		objectLineQuery()
		entityHasCountOfItem()
		entityHandItemDescriptor()
		tileIsOccupied()
		resolvePolyCollision()
		pointCollision()
		callScriptedEntity()
		collisionBlocksAlongLine()
		containerStackItems()
		objectSpaces()
		containerConsume()
		spawnStagehand()
		spawnProjectile()
		stagehandType()
		entityQuery()
		lineTileCollision()
		containerSwapItemsNoCombine()
		liquidAlongLine()
		playerQuery()
		objectQuery()
		entityGender()
		rectCollision()
		containerItemAt()
		polyContains()
		containerTakeAt()
		magnitude()
		mod()
		containerSwapItems()
		isNpc()
		lineCollision()
		getObjectParameter()
		debugPoint()
		pointTileCollision()
		containerItemsFitWhere()
		containerAvailable()
		getProperty()
		containerItems()
		threatLevel()
		entityType()
		sendEntityMessage()
		material()
		liquidAt()
		containerSize()
		debugText()
		monsterType()
		entityMoney()
		nearestTo()
		npcLineQuery()
		entityPortrait()
		entityName()
		entityDamageTeam()
		containerConsumeAt()
		entityAggressive()
		windLevel()
		monsterQuery()
		entityExists()
		loungeableQuery()
		npcQuery()
		entityLineQuery()
	}
	root = {
		createBiome()
		imageSpaces()
		createItem()
		loadVersionedJson()
		createTreasure()
		getMatchingTenants()
		monsterSkillParameter()
		getConfiguration()
		npcVariant()
		itemHasTag()
		imageSize()
		projectileGravityMultiplier()
		nonEmptyRegion()
		evalFunction2()
		projectileConfig()
		materialMiningSound()
		generateName()
		isTreasurePool()
		hasTech()
		behaviorModule()
		itemConfig()
		treeStemDirectory()
		evalFunction()
		techConfig()
		npcConfig()
		setConfigurationPath()
		getConfigurationPath()
		materialHealth()
		materialFootstepSound()
		monsterMovementSettings()
		materialPath()
		setConfiguration()
		monsterPortrait()
		itemType()
		questConfig()
		recipesForItem()
		assetJson()
		treeFoliageDirectory()
		techType()
		liquidStatusEffects()
		makeCurrentVersionedJson()
		itemTags()
		tenantConfig()
		npcPortrait()
	}
	jsize()
	status = {
		setResourceLocked()
		resourcePercentage()
		addPersistentEffects()
		removeEphemeralEffect()
		resource()
		setResourcePercentage()
		resourcePositive()
		damageTakenSince()
		statPositive()
		stat()
		statusProperty()
		activeUniqueStatusEffectSummary()
		inflictedHitsSince()
		resourceMax()
		setStatusProperty()
		setPersistentEffects()
		resetAllResources()
		addEphemeralEffects()
		overConsumeResource()
		modifyResource()
		addEphemeralEffect()
		getPersistentEffects()
		resetResource()
		consumeResource()
		clearPersistentEffects()
		modifyResourcePercentage()
		clearEphemeralEffects()
		resourceNames()
		addPersistentEffect()
		resourceLocked()
		clearAllPersistentEffects()
		inflictedDamageSince()
		isResource()
		setResource()
		giveResource()
	}
	xpcall()
	getmetatable()
	utf8 = {
		len()
		codepoint()
		offset()
		codes()
		charpattern = "[
[23:30:42.950] [Warn] 	select()
	rawequal()
	rawset()
	string = {
		gmatch()
		char()
		sub()
		unpack()
		upper()
		lower()
		find()
		rep()
		dump()
		len()
		reverse()
		packsize()
		pack()
		byte()
		match()
		format()
		gsub()
	}
	require()
	pairs()
	next()
	jobject()
	math = {
		pi = 3.1415926535898
		rad()
		max()
		sqrt()
		random()
		floor()
		log()
		acos()
		fmod()
		mininteger = -9223372036854775808
		type()
		huge = inf
		randomseed()
		deg()
		exp()
		maxinteger = 9223372036854775807
		cos()
		min()
		tointeger()
		modf()
		asin()
		tan()
		atan()
		abs()
		sin()
		ult()
		ceil()
	}
	print()
	pcall()
	type()
	init()
	setmetatable()
	jresize()
	ic = {
		checkStack()
		itemAmount()
		stripColor()
		quickstack()
		itemConfig()
		amountEquipped()
		sortFunc()
		lock()
		giveBack()
		renameThis()
		sort()
		searchBox()
		sort_relative()
		clientVersion = 1
		renameButton()
		searchButton()
		getQuality()
	}
	player = {
		equippedTech()
		altHandItem()
		giveEssentialItem()
		consumeTaggedItem()
		setUniverseFlag()
		species()
		itemsWithTag()
		worldId()
		warp()
		completeMission()
		inventoryTags()
		upgradeShip()
		hasQuest()
		consumeItem()
		gender()
		primaryHandItem()
		essentialItem()
		equippedItem()
		setIntroComplete()
		playTime()
		enabledTechs()
		recordEvent()
		playCinematic()
		introComplete()
		hasCompletedQuest()
		makeTechAvailable()
		consumeItemWithParameter()
		startQuest()
		hasItemWithParameter()
		getItemWithParameter()
		lounge()
		enableTech()
		equipTech()
		enableMission()
		removeEssentialItem()
		isLounging()
		availableTechs()
		primaryHandItemTags()
		makeTechUnavailable()
		confirm()
		serverUuid()
		addBookmark()
		altHandItemTags()
		cleanupItems()
		radioMessage()
		setEquippedItem()
		ownShipWorldId()
		hasItem()
		canStartQuest()
		giveBlueprint()
		hasCountOfItem()
		shipUpgrades()
		giveItem()
	}
	config = {
		getParameter()
	}
	self = {
	}
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	world = {
		spawnItem()
		entityPosition()
		entityHealth()
		damageTileArea()
		day()
		placeMaterial()
		entityDescription()
		containerPutItemsAt()
		entityVelocity()
		damageTiles()
		entityHandItem()
		objectAt()
		setProperty()
		containerItemApply()
		containerClose()
		distance()
		findUniqueEntity()
		gravity()
		rectTileCollision()
		entitySpecies()
		platformerPathStart()
		containerOpen()
		containerTakeAll()
		breathable()
		npcType()
		containerAddItems()
		dayLength()
		loungeableOccupied()
		placeObject()
		isTileProtected()
		destroyLiquid()
		debugLine()
		spawnLiquid()
		entityCanDamage()
		containerItemsCanFit()
		xwrap()
		entityUniqueId()
		itemDropQuery()
		lightLevel()
		placeMod()
		spawnNpc()
		spawnTreasure()
		time()
		underground()
		spawnVehicle()
		spawnMonster()
		timeOfDay()
		findPlatformerPath()
		debugPoly()
		containerTakeNumItemsAt()
		isMonster()
		farmableStage()
		polyCollision()
		objectLineQuery()
		entityHasCountOfItem()
		entityHandItemDescriptor()
		tileIsOccupied()
		resolvePolyCollision()
		pointCollision()
		callScriptedEntity()
		collisionBlocksAlongLine()
		containerStackItems()
		objectSpaces()
		containerConsume()
		spawnStagehand()
		spawnProjectile()
		stagehandType()
		entityQuery()
		lineTileCollision()
		containerSwapItemsNoCombine()
		liquidAlongLine()
		playerQuery()
		objectQuery()
		entityGender()
		rectCollision()
		containerItemAt()
		polyContains()
		containerTakeAt()
		magnitude()
		mod()
		containerSwapItems()
		isNpc()
		lineCollision()
		getObjectParameter()
		debugPoint()
		pointTileCollision()
		containerItemsFitWhere()
		containerAvailable()
		getProperty()
		containerItems()
		threatLevel()
		entityType()
		sendEntityMessage()
		material()
		liquidAt()
		containerSize()
		debugText()
		monsterType()
		entityMoney()
		nearestTo()
		npcLineQuery()
		entityPortrait()
		entityName()
		entityDamageTeam()
		containerConsumeAt()
		entityAggressive()
		windLevel()
		monsterQuery()
		entityExists()
		loungeableQuery()
		npcQuery()
		entityLineQuery()
	}
	root = {
		createBiome()
		imageSpaces()
		createItem()
		loadVersionedJson()
		createTreasure()
		getMatchingTenants()
		monsterSkillParameter()
		getConfiguration()
		npcVariant()
		itemHasTag()
		imageSize()
		projectileGravityMultiplier()
		nonEmptyRegion()
		evalFunction2()
		projectileConfig()
		materialMiningSound()
		generateName()
		isTreasurePool()
		hasTech()
		behaviorModule()
		itemConfig()
		treeStemDirectory()
		evalFunction()
		techConfig()
		npcConfig()
		setConfigurationPath()
		getConfigurationPath()
		materialHealth()
		materialFootstepSound()
		monsterMovementSettings()
		materialPath()
		setConfiguration()
		monsterPortrait()
		itemType()
		questConfig()
		recipesForItem()
		assetJson()
		treeFoliageDirectory()
		techType()
		liquidStatusEffects()
		makeCurrentVersionedJson()
		itemTags()
		tenantConfig()
		npcPortrait()
	}
	jsize()
	status = {
		setResourceLocked()
		resourcePercentage()
		addPersistentEffects()
		removeEphemeralEffect()
		resource()
		setResourcePercentage()
		resourcePositive()
		damageTakenSince()
		statPositive()
		stat()
		statusProperty()
		activeUniqueStatusEffectSummary()
		inflictedHitsSince()
		resourceMax()
		setStatusProperty()
		setPersistentEffects()
		resetAllResources()
		addEphemeralEffects()
		overConsumeResource()
		modifyResource()
		addEphemeralEffect()
		getPersistentEffects()
		resetResource()
		consumeResource()
		clearPersistentEffects()
		modifyResourcePercentage()
		clearEphemeralEffects()
		resourceNames()
		addPersistentEffect()
		resourceLocked()
		clearAllPersistentEffects()
		inflictedDamageSince()
		isResource()
		setResource()
		giveResource()
	}
	xpcall()
	getmetatable()
	utf8 = {
		len()
		codepoint()
		offset()
		codes()
		charpattern = "[
[23:30:44.317] [Warn] 	select()
	rawequal()
	rawset()
	string = {
		gmatch()
		char()
		sub()
		unpack()
		upper()
		lower()
		find()
		rep()
		dump()
		len()
		reverse()
		packsize()
		pack()
		byte()
		match()
		format()
		gsub()
	}
	require()
	pairs()
	next()
	jobject()
	math = {
		pi = 3.1415926535898
		rad()
		max()
		sqrt()
		random()
		floor()
		log()
		acos()
		fmod()
		mininteger = -9223372036854775808
		type()
		huge = inf
		randomseed()
		deg()
		exp()
		maxinteger = 9223372036854775807
		cos()
		min()
		tointeger()
		modf()
		asin()
		tan()
		atan()
		abs()
		sin()
		ult()
		ceil()
	}
	print()
	pcall()
	type()
	init()
	setmetatable()
	jresize()
	ic = {
		checkStack()
		itemAmount()
		stripColor()
		quickstack()
		itemConfig()
		amountEquipped()
		sortFunc()
		lock()
		giveBack()
		renameThis()
		sort()
		searchBox()
		sort_relative()
		clientVersion = 1
		renameButton()
		searchButton()
		getQuality()
	}
	player = {
		equippedTech()
		altHandItem()
		giveEssentialItem()
		consumeTaggedItem()
		setUniverseFlag()
		species()
		itemsWithTag()
		worldId()
		warp()
		completeMission()
		inventoryTags()
		upgradeShip()
		hasQuest()
		consumeItem()
		gender()
		primaryHandItem()
		essentialItem()
		equippedItem()
		setIntroComplete()
		playTime()
		enabledTechs()
		recordEvent()
		playCinematic()
		introComplete()
		hasCompletedQuest()
		makeTechAvailable()
		consumeItemWithParameter()
		startQuest()
		hasItemWithParameter()
		getItemWithParameter()
		lounge()
		enableTech()
		equipTech()
		enableMission()
		removeEssentialItem()
		isLounging()
		availableTechs()
		primaryHandItemTags()
		makeTechUnavailable()
		confirm()
		serverUuid()
		addBookmark()
		altHandItemTags()
		cleanupItems()
		radioMessage()
		setEquippedItem()
		ownShipWorldId()
		hasItem()
		canStartQuest()
		giveBlueprint()
		hasCountOfItem()
		shipUpgrades()
		giveItem()
	}
	config = {
		getParameter()
	}
	self = {
	}
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	world = {
		spawnItem()
		entityPosition()
		entityHealth()
		damageTileArea()
		day()
		placeMaterial()
		entityDescription()
		containerPutItemsAt()
		entityVelocity()
		damageTiles()
		entityHandItem()
		objectAt()
		setProperty()
		containerItemApply()
		containerClose()
		distance()
		findUniqueEntity()
		gravity()
		rectTileCollision()
		entitySpecies()
		platformerPathStart()
		containerOpen()
		containerTakeAll()
		breathable()
		npcType()
		containerAddItems()
		dayLength()
		loungeableOccupied()
		placeObject()
		isTileProtected()
		destroyLiquid()
		debugLine()
		spawnLiquid()
		entityCanDamage()
		containerItemsCanFit()
		xwrap()
		entityUniqueId()
		itemDropQuery()
		lightLevel()
		placeMod()
		spawnNpc()
		spawnTreasure()
		time()
		underground()
		spawnVehicle()
		spawnMonster()
		timeOfDay()
		findPlatformerPath()
		debugPoly()
		containerTakeNumItemsAt()
		isMonster()
		farmableStage()
		polyCollision()
		objectLineQuery()
		entityHasCountOfItem()
		entityHandItemDescriptor()
		tileIsOccupied()
		resolvePolyCollision()
		pointCollision()
		callScriptedEntity()
		collisionBlocksAlongLine()
		containerStackItems()
		objectSpaces()
		containerConsume()
		spawnStagehand()
		spawnProjectile()
		stagehandType()
		entityQuery()
		lineTileCollision()
		containerSwapItemsNoCombine()
		liquidAlongLine()
		playerQuery()
		objectQuery()
		entityGender()
		rectCollision()
		containerItemAt()
		polyContains()
		containerTakeAt()
		magnitude()
		mod()
		containerSwapItems()
		isNpc()
		lineCollision()
		getObjectParameter()
		debugPoint()
		pointTileCollision()
		containerItemsFitWhere()
		containerAvailable()
		getProperty()
		containerItems()
		threatLevel()
		entityType()
		sendEntityMessage()
		material()
		liquidAt()
		containerSize()
		debugText()
		monsterType()
		entityMoney()
		nearestTo()
		npcLineQuery()
		entityPortrait()
		entityName()
		entityDamageTeam()
		containerConsumeAt()
		entityAggressive()
		windLevel()
		monsterQuery()
		entityExists()
		loungeableQuery()
		npcQuery()
		entityLineQuery()
	}
	root = {
		createBiome()
		imageSpaces()
		createItem()
		loadVersionedJson()
		createTreasure()
		getMatchingTenants()
		monsterSkillParameter()
		getConfiguration()
		npcVariant()
		itemHasTag()
		imageSize()
		projectileGravityMultiplier()
		nonEmptyRegion()
		evalFunction2()
		projectileConfig()
		materialMiningSound()
		generateName()
		isTreasurePool()
		hasTech()
		behaviorModule()
		itemConfig()
		treeStemDirectory()
		evalFunction()
		techConfig()
		npcConfig()
		setConfigurationPath()
		getConfigurationPath()
		materialHealth()
		materialFootstepSound()
		monsterMovementSettings()
		materialPath()
		setConfiguration()
		monsterPortrait()
		itemType()
		questConfig()
		recipesForItem()
		assetJson()
		treeFoliageDirectory()
		techType()
		liquidStatusEffects()
		makeCurrentVersionedJson()
		itemTags()
		tenantConfig()
		npcPortrait()
	}
	jsize()
	status = {
		setResourceLocked()
		resourcePercentage()
		addPersistentEffects()
		removeEphemeralEffect()
		resource()
		setResourcePercentage()
		resourcePositive()
		damageTakenSince()
		statPositive()
		stat()
		statusProperty()
		activeUniqueStatusEffectSummary()
		inflictedHitsSince()
		resourceMax()
		setStatusProperty()
		setPersistentEffects()
		resetAllResources()
		addEphemeralEffects()
		overConsumeResource()
		modifyResource()
		addEphemeralEffect()
		getPersistentEffects()
		resetResource()
		consumeResource()
		clearPersistentEffects()
		modifyResourcePercentage()
		clearEphemeralEffects()
		resourceNames()
		addPersistentEffect()
		resourceLocked()
		clearAllPersistentEffects()
		inflictedDamageSince()
		isResource()
		setResource()
		giveResource()
	}
	xpcall()
	getmetatable()
	utf8 = {
		len()
		codepoint()
		offset()
		codes()
		charpattern = "[
[23:31:38.355] [Warn] 	select()
	rawequal()
	rawset()
	string = {
		gmatch()
		char()
		sub()
		unpack()
		upper()
		lower()
		find()
		rep()
		dump()
		len()
		reverse()
		packsize()
		pack()
		byte()
		match()
		format()
		gsub()
	}
	require()
	pairs()
	next()
	jobject()
	math = {
		pi = 3.1415926535898
		rad()
		max()
		sqrt()
		random()
		floor()
		log()
		acos()
		fmod()
		mininteger = -9223372036854775808
		type()
		huge = inf
		randomseed()
		deg()
		exp()
		maxinteger = 9223372036854775807
		cos()
		min()
		tointeger()
		modf()
		asin()
		tan()
		atan()
		abs()
		sin()
		ult()
		ceil()
	}
	print()
	pcall()
	type()
	init()
	setmetatable()
	jresize()
	ic = {
		checkStack()
		itemAmount()
		stripColor()
		quickstack()
		itemConfig()
		amountEquipped()
		sortFunc()
		lock()
		giveBack()
		renameThis()
		sort()
		searchBox()
		sort_relative()
		clientVersion = 1
		renameButton()
		searchButton()
		getQuality()
	}
	player = {
		equippedTech()
		altHandItem()
		giveEssentialItem()
		consumeTaggedItem()
		setUniverseFlag()
		species()
		itemsWithTag()
		worldId()
		warp()
		completeMission()
		inventoryTags()
		upgradeShip()
		hasQuest()
		consumeItem()
		gender()
		primaryHandItem()
		essentialItem()
		equippedItem()
		setIntroComplete()
		playTime()
		enabledTechs()
		recordEvent()
		playCinematic()
		introComplete()
		hasCompletedQuest()
		makeTechAvailable()
		consumeItemWithParameter()
		startQuest()
		hasItemWithParameter()
		getItemWithParameter()
		lounge()
		enableTech()
		equipTech()
		enableMission()
		removeEssentialItem()
		isLounging()
		availableTechs()
		primaryHandItemTags()
		makeTechUnavailable()
		confirm()
		serverUuid()
		addBookmark()
		altHandItemTags()
		cleanupItems()
		radioMessage()
		setEquippedItem()
		ownShipWorldId()
		hasItem()
		canStartQuest()
		giveBlueprint()
		hasCountOfItem()
		shipUpgrades()
		giveItem()
	}
	config = {
		getParameter()
	}
	self = {
	}
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	world = {
		spawnItem()
		entityPosition()
		entityHealth()
		damageTileArea()
		day()
		placeMaterial()
		entityDescription()
		containerPutItemsAt()
		entityVelocity()
		damageTiles()
		entityHandItem()
		objectAt()
		setProperty()
		containerItemApply()
		containerClose()
		distance()
		findUniqueEntity()
		gravity()
		rectTileCollision()
		entitySpecies()
		platformerPathStart()
		containerOpen()
		containerTakeAll()
		breathable()
		npcType()
		containerAddItems()
		dayLength()
		loungeableOccupied()
		placeObject()
		isTileProtected()
		destroyLiquid()
		debugLine()
		spawnLiquid()
		entityCanDamage()
		containerItemsCanFit()
		xwrap()
		entityUniqueId()
		itemDropQuery()
		lightLevel()
		placeMod()
		spawnNpc()
		spawnTreasure()
		time()
		underground()
		spawnVehicle()
		spawnMonster()
		timeOfDay()
		findPlatformerPath()
		debugPoly()
		containerTakeNumItemsAt()
		isMonster()
		farmableStage()
		polyCollision()
		objectLineQuery()
		entityHasCountOfItem()
		entityHandItemDescriptor()
		tileIsOccupied()
		resolvePolyCollision()
		pointCollision()
		callScriptedEntity()
		collisionBlocksAlongLine()
		containerStackItems()
		objectSpaces()
		containerConsume()
		spawnStagehand()
		spawnProjectile()
		stagehandType()
		entityQuery()
		lineTileCollision()
		containerSwapItemsNoCombine()
		liquidAlongLine()
		playerQuery()
		objectQuery()
		entityGender()
		rectCollision()
		containerItemAt()
		polyContains()
		containerTakeAt()
		magnitude()
		mod()
		containerSwapItems()
		isNpc()
		lineCollision()
		getObjectParameter()
		debugPoint()
		pointTileCollision()
		containerItemsFitWhere()
		containerAvailable()
		getProperty()
		containerItems()
		threatLevel()
		entityType()
		sendEntityMessage()
		material()
		liquidAt()
		containerSize()
		debugText()
		monsterType()
		entityMoney()
		nearestTo()
		npcLineQuery()
		entityPortrait()
		entityName()
		entityDamageTeam()
		containerConsumeAt()
		entityAggressive()
		windLevel()
		monsterQuery()
		entityExists()
		loungeableQuery()
		npcQuery()
		entityLineQuery()
	}
	root = {
		createBiome()
		imageSpaces()
		createItem()
		loadVersionedJson()
		createTreasure()
		getMatchingTenants()
		monsterSkillParameter()
		getConfiguration()
		npcVariant()
		itemHasTag()
		imageSize()
		projectileGravityMultiplier()
		nonEmptyRegion()
		evalFunction2()
		projectileConfig()
		materialMiningSound()
		generateName()
		isTreasurePool()
		hasTech()
		behaviorModule()
		itemConfig()
		treeStemDirectory()
		evalFunction()
		techConfig()
		npcConfig()
		setConfigurationPath()
		getConfigurationPath()
		materialHealth()
		materialFootstepSound()
		monsterMovementSettings()
		materialPath()
		setConfiguration()
		monsterPortrait()
		itemType()
		questConfig()
		recipesForItem()
		assetJson()
		treeFoliageDirectory()
		techType()
		liquidStatusEffects()
		makeCurrentVersionedJson()
		itemTags()
		tenantConfig()
		npcPortrait()
	}
	jsize()
	status = {
		setResourceLocked()
		resourcePercentage()
		addPersistentEffects()
		removeEphemeralEffect()
		resource()
		setResourcePercentage()
		resourcePositive()
		damageTakenSince()
		statPositive()
		stat()
		statusProperty()
		activeUniqueStatusEffectSummary()
		inflictedHitsSince()
		resourceMax()
		setStatusProperty()
		setPersistentEffects()
		resetAllResources()
		addEphemeralEffects()
		overConsumeResource()
		modifyResource()
		addEphemeralEffect()
		getPersistentEffects()
		resetResource()
		consumeResource()
		clearPersistentEffects()
		modifyResourcePercentage()
		clearEphemeralEffects()
		resourceNames()
		addPersistentEffect()
		resourceLocked()
		clearAllPersistentEffects()
		inflictedDamageSince()
		isResource()
		setResource()
		giveResource()
	}
	xpcall()
	getmetatable()
	utf8 = {
		len()
		codepoint()
		offset()
		codes()
		charpattern = "[
[23:31:39.354] [Warn] 	select()
	rawequal()
	rawset()
	string = {
		gmatch()
		char()
		sub()
		unpack()
		upper()
		lower()
		find()
		rep()
		dump()
		len()
		reverse()
		packsize()
		pack()
		byte()
		match()
		format()
		gsub()
	}
	require()
	pairs()
	next()
	jobject()
	math = {
		pi = 3.1415926535898
		rad()
		max()
		sqrt()
		random()
		floor()
		log()
		acos()
		fmod()
		mininteger = -9223372036854775808
		type()
		huge = inf
		randomseed()
		deg()
		exp()
		maxinteger = 9223372036854775807
		cos()
		min()
		tointeger()
		modf()
		asin()
		tan()
		atan()
		abs()
		sin()
		ult()
		ceil()
	}
	print()
	pcall()
	type()
	init()
	setmetatable()
	jresize()
	ic = {
		checkStack()
		itemAmount()
		stripColor()
		quickstack()
		itemConfig()
		amountEquipped()
		sortFunc()
		lock()
		giveBack()
		renameThis()
		sort()
		searchBox()
		sort_relative()
		clientVersion = 1
		renameButton()
		searchButton()
		getQuality()
	}
	player = {
		equippedTech()
		altHandItem()
		giveEssentialItem()
		consumeTaggedItem()
		setUniverseFlag()
		species()
		itemsWithTag()
		worldId()
		warp()
		completeMission()
		inventoryTags()
		upgradeShip()
		hasQuest()
		consumeItem()
		gender()
		primaryHandItem()
		essentialItem()
		equippedItem()
		setIntroComplete()
		playTime()
		enabledTechs()
		recordEvent()
		playCinematic()
		introComplete()
		hasCompletedQuest()
		makeTechAvailable()
		consumeItemWithParameter()
		startQuest()
		hasItemWithParameter()
		getItemWithParameter()
		lounge()
		enableTech()
		equipTech()
		enableMission()
		removeEssentialItem()
		isLounging()
		availableTechs()
		primaryHandItemTags()
		makeTechUnavailable()
		confirm()
		serverUuid()
		addBookmark()
		altHandItemTags()
		cleanupItems()
		radioMessage()
		setEquippedItem()
		ownShipWorldId()
		hasItem()
		canStartQuest()
		giveBlueprint()
		hasCountOfItem()
		shipUpgrades()
		giveItem()
	}
	config = {
		getParameter()
	}
	self = {
	}
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	world = {
		spawnItem()
		entityPosition()
		entityHealth()
		damageTileArea()
		day()
		placeMaterial()
		entityDescription()
		containerPutItemsAt()
		entityVelocity()
		damageTiles()
		entityHandItem()
		objectAt()
		setProperty()
		containerItemApply()
		containerClose()
		distance()
		findUniqueEntity()
		gravity()
		rectTileCollision()
		entitySpecies()
		platformerPathStart()
		containerOpen()
		containerTakeAll()
		breathable()
		npcType()
		containerAddItems()
		dayLength()
		loungeableOccupied()
		placeObject()
		isTileProtected()
		destroyLiquid()
		debugLine()
		spawnLiquid()
		entityCanDamage()
		containerItemsCanFit()
		xwrap()
		entityUniqueId()
		itemDropQuery()
		lightLevel()
		placeMod()
		spawnNpc()
		spawnTreasure()
		time()
		underground()
		spawnVehicle()
		spawnMonster()
		timeOfDay()
		findPlatformerPath()
		debugPoly()
		containerTakeNumItemsAt()
		isMonster()
		farmableStage()
		polyCollision()
		objectLineQuery()
		entityHasCountOfItem()
		entityHandItemDescriptor()
		tileIsOccupied()
		resolvePolyCollision()
		pointCollision()
		callScriptedEntity()
		collisionBlocksAlongLine()
		containerStackItems()
		objectSpaces()
		containerConsume()
		spawnStagehand()
		spawnProjectile()
		stagehandType()
		entityQuery()
		lineTileCollision()
		containerSwapItemsNoCombine()
		liquidAlongLine()
		playerQuery()
		objectQuery()
		entityGender()
		rectCollision()
		containerItemAt()
		polyContains()
		containerTakeAt()
		magnitude()
		mod()
		containerSwapItems()
		isNpc()
		lineCollision()
		getObjectParameter()
		debugPoint()
		pointTileCollision()
		containerItemsFitWhere()
		containerAvailable()
		getProperty()
		containerItems()
		threatLevel()
		entityType()
		sendEntityMessage()
		material()
		liquidAt()
		containerSize()
		debugText()
		monsterType()
		entityMoney()
		nearestTo()
		npcLineQuery()
		entityPortrait()
		entityName()
		entityDamageTeam()
		containerConsumeAt()
		entityAggressive()
		windLevel()
		monsterQuery()
		entityExists()
		loungeableQuery()
		npcQuery()
		entityLineQuery()
	}
	root = {
		createBiome()
		imageSpaces()
		createItem()
		loadVersionedJson()
		createTreasure()
		getMatchingTenants()
		monsterSkillParameter()
		getConfiguration()
		npcVariant()
		itemHasTag()
		imageSize()
		projectileGravityMultiplier()
		nonEmptyRegion()
		evalFunction2()
		projectileConfig()
		materialMiningSound()
		generateName()
		isTreasurePool()
		hasTech()
		behaviorModule()
		itemConfig()
		treeStemDirectory()
		evalFunction()
		techConfig()
		npcConfig()
		setConfigurationPath()
		getConfigurationPath()
		materialHealth()
		materialFootstepSound()
		monsterMovementSettings()
		materialPath()
		setConfiguration()
		monsterPortrait()
		itemType()
		questConfig()
		recipesForItem()
		assetJson()
		treeFoliageDirectory()
		techType()
		liquidStatusEffects()
		makeCurrentVersionedJson()
		itemTags()
		tenantConfig()
		npcPortrait()
	}
	jsize()
	status = {
		setResourceLocked()
		resourcePercentage()
		addPersistentEffects()
		removeEphemeralEffect()
		resource()
		setResourcePercentage()
		resourcePositive()
		damageTakenSince()
		statPositive()
		stat()
		statusProperty()
		activeUniqueStatusEffectSummary()
		inflictedHitsSince()
		resourceMax()
		setStatusProperty()
		setPersistentEffects()
		resetAllResources()
		addEphemeralEffects()
		overConsumeResource()
		modifyResource()
		addEphemeralEffect()
		getPersistentEffects()
		resetResource()
		consumeResource()
		clearPersistentEffects()
		modifyResourcePercentage()
		clearEphemeralEffects()
		resourceNames()
		addPersistentEffect()
		resourceLocked()
		clearAllPersistentEffects()
		inflictedDamageSince()
		isResource()
		setResource()
		giveResource()
	}
	xpcall()
	getmetatable()
	utf8 = {
		len()
		codepoint()
		offset()
		codes()
		charpattern = "[
[23:31:40.848] [Warn] 	select()
	rawequal()
	rawset()
	string = {
		gmatch()
		char()
		sub()
		unpack()
		upper()
		lower()
		find()
		rep()
		dump()
		len()
		reverse()
		packsize()
		pack()
		byte()
		match()
		format()
		gsub()
	}
	require()
	pairs()
	next()
	jobject()
	math = {
		pi = 3.1415926535898
		rad()
		max()
		sqrt()
		random()
		floor()
		log()
		acos()
		fmod()
		mininteger = -9223372036854775808
		type()
		huge = inf
		randomseed()
		deg()
		exp()
		maxinteger = 9223372036854775807
		cos()
		min()
		tointeger()
		modf()
		asin()
		tan()
		atan()
		abs()
		sin()
		ult()
		ceil()
	}
	print()
	pcall()
	type()
	init()
	setmetatable()
	jresize()
	ic = {
		checkStack()
		itemAmount()
		stripColor()
		quickstack()
		itemConfig()
		amountEquipped()
		sortFunc()
		lock()
		giveBack()
		renameThis()
		sort()
		searchBox()
		sort_relative()
		clientVersion = 1
		renameButton()
		searchButton()
		getQuality()
	}
	player = {
		equippedTech()
		altHandItem()
		giveEssentialItem()
		consumeTaggedItem()
		setUniverseFlag()
		species()
		itemsWithTag()
		worldId()
		warp()
		completeMission()
		inventoryTags()
		upgradeShip()
		hasQuest()
		consumeItem()
		gender()
		primaryHandItem()
		essentialItem()
		equippedItem()
		setIntroComplete()
		playTime()
		enabledTechs()
		recordEvent()
		playCinematic()
		introComplete()
		hasCompletedQuest()
		makeTechAvailable()
		consumeItemWithParameter()
		startQuest()
		hasItemWithParameter()
		getItemWithParameter()
		lounge()
		enableTech()
		equipTech()
		enableMission()
		removeEssentialItem()
		isLounging()
		availableTechs()
		primaryHandItemTags()
		makeTechUnavailable()
		confirm()
		serverUuid()
		addBookmark()
		altHandItemTags()
		cleanupItems()
		radioMessage()
		setEquippedItem()
		ownShipWorldId()
		hasItem()
		canStartQuest()
		giveBlueprint()
		hasCountOfItem()
		shipUpgrades()
		giveItem()
	}
	config = {
		getParameter()
	}
	self = {
	}
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	world = {
		spawnItem()
		entityPosition()
		entityHealth()
		damageTileArea()
		day()
		placeMaterial()
		entityDescription()
		containerPutItemsAt()
		entityVelocity()
		damageTiles()
		entityHandItem()
		objectAt()
		setProperty()
		containerItemApply()
		containerClose()
		distance()
		findUniqueEntity()
		gravity()
		rectTileCollision()
		entitySpecies()
		platformerPathStart()
		containerOpen()
		containerTakeAll()
		breathable()
		npcType()
		containerAddItems()
		dayLength()
		loungeableOccupied()
		placeObject()
		isTileProtected()
		destroyLiquid()
		debugLine()
		spawnLiquid()
		entityCanDamage()
		containerItemsCanFit()
		xwrap()
		entityUniqueId()
		itemDropQuery()
		lightLevel()
		placeMod()
		spawnNpc()
		spawnTreasure()
		time()
		underground()
		spawnVehicle()
		spawnMonster()
		timeOfDay()
		findPlatformerPath()
		debugPoly()
		containerTakeNumItemsAt()
		isMonster()
		farmableStage()
		polyCollision()
		objectLineQuery()
		entityHasCountOfItem()
		entityHandItemDescriptor()
		tileIsOccupied()
		resolvePolyCollision()
		pointCollision()
		callScriptedEntity()
		collisionBlocksAlongLine()
		containerStackItems()
		objectSpaces()
		containerConsume()
		spawnStagehand()
		spawnProjectile()
		stagehandType()
		entityQuery()
		lineTileCollision()
		containerSwapItemsNoCombine()
		liquidAlongLine()
		playerQuery()
		objectQuery()
		entityGender()
		rectCollision()
		containerItemAt()
		polyContains()
		containerTakeAt()
		magnitude()
		mod()
		containerSwapItems()
		isNpc()
		lineCollision()
		getObjectParameter()
		debugPoint()
		pointTileCollision()
		containerItemsFitWhere()
		containerAvailable()
		getProperty()
		containerItems()
		threatLevel()
		entityType()
		sendEntityMessage()
		material()
		liquidAt()
		containerSize()
		debugText()
		monsterType()
		entityMoney()
		nearestTo()
		npcLineQuery()
		entityPortrait()
		entityName()
		entityDamageTeam()
		containerConsumeAt()
		entityAggressive()
		windLevel()
		monsterQuery()
		entityExists()
		loungeableQuery()
		npcQuery()
		entityLineQuery()
	}
	root = {
		createBiome()
		imageSpaces()
		createItem()
		loadVersionedJson()
		createTreasure()
		getMatchingTenants()
		monsterSkillParameter()
		getConfiguration()
		npcVariant()
		itemHasTag()
		imageSize()
		projectileGravityMultiplier()
		nonEmptyRegion()
		evalFunction2()
		projectileConfig()
		materialMiningSound()
		generateName()
		isTreasurePool()
		hasTech()
		behaviorModule()
		itemConfig()
		treeStemDirectory()
		evalFunction()
		techConfig()
		npcConfig()
		setConfigurationPath()
		getConfigurationPath()
		materialHealth()
		materialFootstepSound()
		monsterMovementSettings()
		materialPath()
		setConfiguration()
		monsterPortrait()
		itemType()
		questConfig()
		recipesForItem()
		assetJson()
		treeFoliageDirectory()
		techType()
		liquidStatusEffects()
		makeCurrentVersionedJson()
		itemTags()
		tenantConfig()
		npcPortrait()
	}
	jsize()
	status = {
		setResourceLocked()
		resourcePercentage()
		addPersistentEffects()
		removeEphemeralEffect()
		resource()
		setResourcePercentage()
		resourcePositive()
		damageTakenSince()
		statPositive()
		stat()
		statusProperty()
		activeUniqueStatusEffectSummary()
		inflictedHitsSince()
		resourceMax()
		setStatusProperty()
		setPersistentEffects()
		resetAllResources()
		addEphemeralEffects()
		overConsumeResource()
		modifyResource()
		addEphemeralEffect()
		getPersistentEffects()
		resetResource()
		consumeResource()
		clearPersistentEffects()
		modifyResourcePercentage()
		clearEphemeralEffects()
		resourceNames()
		addPersistentEffect()
		resourceLocked()
		clearAllPersistentEffects()
		inflictedDamageSince()
		isResource()
		setResource()
		giveResource()
	}
	xpcall()
	getmetatable()
	utf8 = {
		len()
		codepoint()
		offset()
		codes()
		charpattern = "[
[23:31:48.982] [Warn] 	select()
	rawequal()
	rawset()
	string = {
		gmatch()
		char()
		sub()
		unpack()
		upper()
		lower()
		find()
		rep()
		dump()
		len()
		reverse()
		packsize()
		pack()
		byte()
		match()
		format()
		gsub()
	}
	require()
	pairs()
	next()
	jobject()
	math = {
		pi = 3.1415926535898
		rad()
		max()
		sqrt()
		random()
		floor()
		log()
		acos()
		fmod()
		mininteger = -9223372036854775808
		type()
		huge = inf
		randomseed()
		deg()
		exp()
		maxinteger = 9223372036854775807
		cos()
		min()
		tointeger()
		modf()
		asin()
		tan()
		atan()
		abs()
		sin()
		ult()
		ceil()
	}
	print()
	pcall()
	type()
	init()
	setmetatable()
	jresize()
	ic = {
		checkStack()
		itemAmount()
		stripColor()
		quickstack()
		itemConfig()
		amountEquipped()
		sortFunc()
		lock()
		giveBack()
		renameThis()
		sort()
		searchBox()
		sort_relative()
		clientVersion = 1
		renameButton()
		searchButton()
		getQuality()
	}
	player = {
		equippedTech()
		altHandItem()
		giveEssentialItem()
		consumeTaggedItem()
		setUniverseFlag()
		species()
		itemsWithTag()
		worldId()
		warp()
		completeMission()
		inventoryTags()
		upgradeShip()
		hasQuest()
		consumeItem()
		gender()
		primaryHandItem()
		essentialItem()
		equippedItem()
		setIntroComplete()
		playTime()
		enabledTechs()
		recordEvent()
		playCinematic()
		introComplete()
		hasCompletedQuest()
		makeTechAvailable()
		consumeItemWithParameter()
		startQuest()
		hasItemWithParameter()
		getItemWithParameter()
		lounge()
		enableTech()
		equipTech()
		enableMission()
		removeEssentialItem()
		isLounging()
		availableTechs()
		primaryHandItemTags()
		makeTechUnavailable()
		confirm()
		serverUuid()
		addBookmark()
		altHandItemTags()
		cleanupItems()
		radioMessage()
		setEquippedItem()
		ownShipWorldId()
		hasItem()
		canStartQuest()
		giveBlueprint()
		hasCountOfItem()
		shipUpgrades()
		giveItem()
	}
	config = {
		getParameter()
	}
	self = {
	}
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	world = {
		spawnItem()
		entityPosition()
		entityHealth()
		damageTileArea()
		day()
		placeMaterial()
		entityDescription()
		containerPutItemsAt()
		entityVelocity()
		damageTiles()
		entityHandItem()
		objectAt()
		setProperty()
		containerItemApply()
		containerClose()
		distance()
		findUniqueEntity()
		gravity()
		rectTileCollision()
		entitySpecies()
		platformerPathStart()
		containerOpen()
		containerTakeAll()
		breathable()
		npcType()
		containerAddItems()
		dayLength()
		loungeableOccupied()
		placeObject()
		isTileProtected()
		destroyLiquid()
		debugLine()
		spawnLiquid()
		entityCanDamage()
		containerItemsCanFit()
		xwrap()
		entityUniqueId()
		itemDropQuery()
		lightLevel()
		placeMod()
		spawnNpc()
		spawnTreasure()
		time()
		underground()
		spawnVehicle()
		spawnMonster()
		timeOfDay()
		findPlatformerPath()
		debugPoly()
		containerTakeNumItemsAt()
		isMonster()
		farmableStage()
		polyCollision()
		objectLineQuery()
		entityHasCountOfItem()
		entityHandItemDescriptor()
		tileIsOccupied()
		resolvePolyCollision()
		pointCollision()
		callScriptedEntity()
		collisionBlocksAlongLine()
		containerStackItems()
		objectSpaces()
		containerConsume()
		spawnStagehand()
		spawnProjectile()
		stagehandType()
		entityQuery()
		lineTileCollision()
		containerSwapItemsNoCombine()
		liquidAlongLine()
		playerQuery()
		objectQuery()
		entityGender()
		rectCollision()
		containerItemAt()
		polyContains()
		containerTakeAt()
		magnitude()
		mod()
		containerSwapItems()
		isNpc()
		lineCollision()
		getObjectParameter()
		debugPoint()
		pointTileCollision()
		containerItemsFitWhere()
		containerAvailable()
		getProperty()
		containerItems()
		threatLevel()
		entityType()
		sendEntityMessage()
		material()
		liquidAt()
		containerSize()
		debugText()
		monsterType()
		entityMoney()
		nearestTo()
		npcLineQuery()
		entityPortrait()
		entityName()
		entityDamageTeam()
		containerConsumeAt()
		entityAggressive()
		windLevel()
		monsterQuery()
		entityExists()
		loungeableQuery()
		npcQuery()
		entityLineQuery()
	}
	root = {
		createBiome()
		imageSpaces()
		createItem()
		loadVersionedJson()
		createTreasure()
		getMatchingTenants()
		monsterSkillParameter()
		getConfiguration()
		npcVariant()
		itemHasTag()
		imageSize()
		projectileGravityMultiplier()
		nonEmptyRegion()
		evalFunction2()
		projectileConfig()
		materialMiningSound()
		generateName()
		isTreasurePool()
		hasTech()
		behaviorModule()
		itemConfig()
		treeStemDirectory()
		evalFunction()
		techConfig()
		npcConfig()
		setConfigurationPath()
		getConfigurationPath()
		materialHealth()
		materialFootstepSound()
		monsterMovementSettings()
		materialPath()
		setConfiguration()
		monsterPortrait()
		itemType()
		questConfig()
		recipesForItem()
		assetJson()
		treeFoliageDirectory()
		techType()
		liquidStatusEffects()
		makeCurrentVersionedJson()
		itemTags()
		tenantConfig()
		npcPortrait()
	}
	jsize()
	status = {
		setResourceLocked()
		resourcePercentage()
		addPersistentEffects()
		removeEphemeralEffect()
		resource()
		setResourcePercentage()
		resourcePositive()
		damageTakenSince()
		statPositive()
		stat()
		statusProperty()
		activeUniqueStatusEffectSummary()
		inflictedHitsSince()
		resourceMax()
		setStatusProperty()
		setPersistentEffects()
		resetAllResources()
		addEphemeralEffects()
		overConsumeResource()
		modifyResource()
		addEphemeralEffect()
		getPersistentEffects()
		resetResource()
		consumeResource()
		clearPersistentEffects()
		modifyResourcePercentage()
		clearEphemeralEffects()
		resourceNames()
		addPersistentEffect()
		resourceLocked()
		clearAllPersistentEffects()
		inflictedDamageSince()
		isResource()
		setResource()
		giveResource()
	}
	xpcall()
	getmetatable()
	utf8 = {
		len()
		codepoint()
		offset()
		codes()
		charpattern = "[
[23:31:59.565] [Info] [IC] [Sort] Time elapsed: 0.009
[23:33:58.824] [Warn] 	select()
	rawequal()
	rawset()
	string = {
		gmatch()
		char()
		sub()
		unpack()
		upper()
		lower()
		find()
		rep()
		dump()
		len()
		reverse()
		packsize()
		pack()
		byte()
		match()
		format()
		gsub()
	}
	require()
	pairs()
	next()
	jobject()
	math = {
		pi = 3.1415926535898
		rad()
		max()
		sqrt()
		random()
		floor()
		log()
		acos()
		fmod()
		mininteger = -9223372036854775808
		type()
		huge = inf
		randomseed()
		deg()
		exp()
		maxinteger = 9223372036854775807
		cos()
		min()
		tointeger()
		modf()
		asin()
		tan()
		atan()
		abs()
		sin()
		ult()
		ceil()
	}
	print()
	pcall()
	type()
	init()
	setmetatable()
	jresize()
	ic = {
		checkStack()
		itemAmount()
		stripColor()
		quickstack()
		itemConfig()
		amountEquipped()
		sortFunc()
		lock()
		giveBack()
		renameThis()
		sort()
		searchBox()
		sort_relative()
		clientVersion = 1
		renameButton()
		searchButton()
		getQuality()
	}
	player = {
		equippedTech()
		altHandItem()
		giveEssentialItem()
		consumeTaggedItem()
		setUniverseFlag()
		species()
		itemsWithTag()
		worldId()
		warp()
		completeMission()
		inventoryTags()
		upgradeShip()
		hasQuest()
		consumeItem()
		gender()
		primaryHandItem()
		essentialItem()
		equippedItem()
		setIntroComplete()
		playTime()
		enabledTechs()
		recordEvent()
		playCinematic()
		introComplete()
		hasCompletedQuest()
		makeTechAvailable()
		consumeItemWithParameter()
		startQuest()
		hasItemWithParameter()
		getItemWithParameter()
		lounge()
		enableTech()
		equipTech()
		enableMission()
		removeEssentialItem()
		isLounging()
		availableTechs()
		primaryHandItemTags()
		makeTechUnavailable()
		confirm()
		serverUuid()
		addBookmark()
		altHandItemTags()
		cleanupItems()
		radioMessage()
		setEquippedItem()
		ownShipWorldId()
		hasItem()
		canStartQuest()
		giveBlueprint()
		hasCountOfItem()
		shipUpgrades()
		giveItem()
	}
	config = {
		getParameter()
	}
	self = {
	}
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	world = {
		spawnItem()
		entityPosition()
		entityHealth()
		damageTileArea()
		day()
		placeMaterial()
		entityDescription()
		containerPutItemsAt()
		entityVelocity()
		damageTiles()
		entityHandItem()
		objectAt()
		setProperty()
		containerItemApply()
		containerClose()
		distance()
		findUniqueEntity()
		gravity()
		rectTileCollision()
		entitySpecies()
		platformerPathStart()
		containerOpen()
		containerTakeAll()
		breathable()
		npcType()
		containerAddItems()
		dayLength()
		loungeableOccupied()
		placeObject()
		isTileProtected()
		destroyLiquid()
		debugLine()
		spawnLiquid()
		entityCanDamage()
		containerItemsCanFit()
		xwrap()
		entityUniqueId()
		itemDropQuery()
		lightLevel()
		placeMod()
		spawnNpc()
		spawnTreasure()
		time()
		underground()
		spawnVehicle()
		spawnMonster()
		timeOfDay()
		findPlatformerPath()
		debugPoly()
		containerTakeNumItemsAt()
		isMonster()
		farmableStage()
		polyCollision()
		objectLineQuery()
		entityHasCountOfItem()
		entityHandItemDescriptor()
		tileIsOccupied()
		resolvePolyCollision()
		pointCollision()
		callScriptedEntity()
		collisionBlocksAlongLine()
		containerStackItems()
		objectSpaces()
		containerConsume()
		spawnStagehand()
		spawnProjectile()
		stagehandType()
		entityQuery()
		lineTileCollision()
		containerSwapItemsNoCombine()
		liquidAlongLine()
		playerQuery()
		objectQuery()
		entityGender()
		rectCollision()
		containerItemAt()
		polyContains()
		containerTakeAt()
		magnitude()
		mod()
		containerSwapItems()
		isNpc()
		lineCollision()
		getObjectParameter()
		debugPoint()
		pointTileCollision()
		containerItemsFitWhere()
		containerAvailable()
		getProperty()
		containerItems()
		threatLevel()
		entityType()
		sendEntityMessage()
		material()
		liquidAt()
		containerSize()
		debugText()
		monsterType()
		entityMoney()
		nearestTo()
		npcLineQuery()
		entityPortrait()
		entityName()
		entityDamageTeam()
		containerConsumeAt()
		entityAggressive()
		windLevel()
		monsterQuery()
		entityExists()
		loungeableQuery()
		npcQuery()
		entityLineQuery()
	}
	root = {
		createBiome()
		imageSpaces()
		createItem()
		loadVersionedJson()
		createTreasure()
		getMatchingTenants()
		monsterSkillParameter()
		getConfiguration()
		npcVariant()
		itemHasTag()
		imageSize()
		projectileGravityMultiplier()
		nonEmptyRegion()
		evalFunction2()
		projectileConfig()
		materialMiningSound()
		generateName()
		isTreasurePool()
		hasTech()
		behaviorModule()
		itemConfig()
		treeStemDirectory()
		evalFunction()
		techConfig()
		npcConfig()
		setConfigurationPath()
		getConfigurationPath()
		materialHealth()
		materialFootstepSound()
		monsterMovementSettings()
		materialPath()
		setConfiguration()
		monsterPortrait()
		itemType()
		questConfig()
		recipesForItem()
		assetJson()
		treeFoliageDirectory()
		techType()
		liquidStatusEffects()
		makeCurrentVersionedJson()
		itemTags()
		tenantConfig()
		npcPortrait()
	}
	jsize()
	status = {
		setResourceLocked()
		resourcePercentage()
		addPersistentEffects()
		removeEphemeralEffect()
		resource()
		setResourcePercentage()
		resourcePositive()
		damageTakenSince()
		statPositive()
		stat()
		statusProperty()
		activeUniqueStatusEffectSummary()
		inflictedHitsSince()
		resourceMax()
		setStatusProperty()
		setPersistentEffects()
		resetAllResources()
		addEphemeralEffects()
		overConsumeResource()
		modifyResource()
		addEphemeralEffect()
		getPersistentEffects()
		resetResource()
		consumeResource()
		clearPersistentEffects()
		modifyResourcePercentage()
		clearEphemeralEffects()
		resourceNames()
		addPersistentEffect()
		resourceLocked()
		clearAllPersistentEffects()
		inflictedDamageSince()
		isResource()
		setResource()
		giveResource()
	}
	xpcall()
	getmetatable()
	utf8 = {
		len()
		codepoint()
		offset()
		codes()
		charpattern = "[
[23:34:08.913] [Warn] 	select()
	rawequal()
	rawset()
	string = {
		gmatch()
		char()
		sub()
		unpack()
		upper()
		lower()
		find()
		rep()
		dump()
		len()
		reverse()
		packsize()
		pack()
		byte()
		match()
		format()
		gsub()
	}
	require()
	pairs()
	next()
	jobject()
	math = {
		pi = 3.1415926535898
		rad()
		max()
		sqrt()
		random()
		floor()
		log()
		acos()
		fmod()
		mininteger = -9223372036854775808
		type()
		huge = inf
		randomseed()
		deg()
		exp()
		maxinteger = 9223372036854775807
		cos()
		min()
		tointeger()
		modf()
		asin()
		tan()
		atan()
		abs()
		sin()
		ult()
		ceil()
	}
	print()
	pcall()
	type()
	init()
	setmetatable()
	jresize()
	ic = {
		checkStack()
		itemAmount()
		stripColor()
		quickstack()
		itemConfig()
		amountEquipped()
		sortFunc()
		lock()
		giveBack()
		renameThis()
		sort()
		searchBox()
		sort_relative()
		clientVersion = 1
		renameButton()
		searchButton()
		getQuality()
	}
	player = {
		equippedTech()
		altHandItem()
		giveEssentialItem()
		consumeTaggedItem()
		setUniverseFlag()
		species()
		itemsWithTag()
		worldId()
		warp()
		completeMission()
		inventoryTags()
		upgradeShip()
		hasQuest()
		consumeItem()
		gender()
		primaryHandItem()
		essentialItem()
		equippedItem()
		setIntroComplete()
		playTime()
		enabledTechs()
		recordEvent()
		playCinematic()
		introComplete()
		hasCompletedQuest()
		makeTechAvailable()
		consumeItemWithParameter()
		startQuest()
		hasItemWithParameter()
		getItemWithParameter()
		lounge()
		enableTech()
		equipTech()
		enableMission()
		removeEssentialItem()
		isLounging()
		availableTechs()
		primaryHandItemTags()
		makeTechUnavailable()
		confirm()
		serverUuid()
		addBookmark()
		altHandItemTags()
		cleanupItems()
		radioMessage()
		setEquippedItem()
		ownShipWorldId()
		hasItem()
		canStartQuest()
		giveBlueprint()
		hasCountOfItem()
		shipUpgrades()
		giveItem()
	}
	config = {
		getParameter()
	}
	self = {
	}
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	world = {
		spawnItem()
		entityPosition()
		entityHealth()
		damageTileArea()
		day()
		placeMaterial()
		entityDescription()
		containerPutItemsAt()
		entityVelocity()
		damageTiles()
		entityHandItem()
		objectAt()
		setProperty()
		containerItemApply()
		containerClose()
		distance()
		findUniqueEntity()
		gravity()
		rectTileCollision()
		entitySpecies()
		platformerPathStart()
		containerOpen()
		containerTakeAll()
		breathable()
		npcType()
		containerAddItems()
		dayLength()
		loungeableOccupied()
		placeObject()
		isTileProtected()
		destroyLiquid()
		debugLine()
		spawnLiquid()
		entityCanDamage()
		containerItemsCanFit()
		xwrap()
		entityUniqueId()
		itemDropQuery()
		lightLevel()
		placeMod()
		spawnNpc()
		spawnTreasure()
		time()
		underground()
		spawnVehicle()
		spawnMonster()
		timeOfDay()
		findPlatformerPath()
		debugPoly()
		containerTakeNumItemsAt()
		isMonster()
		farmableStage()
		polyCollision()
		objectLineQuery()
		entityHasCountOfItem()
		entityHandItemDescriptor()
		tileIsOccupied()
		resolvePolyCollision()
		pointCollision()
		callScriptedEntity()
		collisionBlocksAlongLine()
		containerStackItems()
		objectSpaces()
		containerConsume()
		spawnStagehand()
		spawnProjectile()
		stagehandType()
		entityQuery()
		lineTileCollision()
		containerSwapItemsNoCombine()
		liquidAlongLine()
		playerQuery()
		objectQuery()
		entityGender()
		rectCollision()
		containerItemAt()
		polyContains()
		containerTakeAt()
		magnitude()
		mod()
		containerSwapItems()
		isNpc()
		lineCollision()
		getObjectParameter()
		debugPoint()
		pointTileCollision()
		containerItemsFitWhere()
		containerAvailable()
		getProperty()
		containerItems()
		threatLevel()
		entityType()
		sendEntityMessage()
		material()
		liquidAt()
		containerSize()
		debugText()
		monsterType()
		entityMoney()
		nearestTo()
		npcLineQuery()
		entityPortrait()
		entityName()
		entityDamageTeam()
		containerConsumeAt()
		entityAggressive()
		windLevel()
		monsterQuery()
		entityExists()
		loungeableQuery()
		npcQuery()
		entityLineQuery()
	}
	root = {
		createBiome()
		imageSpaces()
		createItem()
		loadVersionedJson()
		createTreasure()
		getMatchingTenants()
		monsterSkillParameter()
		getConfiguration()
		npcVariant()
		itemHasTag()
		imageSize()
		projectileGravityMultiplier()
		nonEmptyRegion()
		evalFunction2()
		projectileConfig()
		materialMiningSound()
		generateName()
		isTreasurePool()
		hasTech()
		behaviorModule()
		itemConfig()
		treeStemDirectory()
		evalFunction()
		techConfig()
		npcConfig()
		setConfigurationPath()
		getConfigurationPath()
		materialHealth()
		materialFootstepSound()
		monsterMovementSettings()
		materialPath()
		setConfiguration()
		monsterPortrait()
		itemType()
		questConfig()
		recipesForItem()
		assetJson()
		treeFoliageDirectory()
		techType()
		liquidStatusEffects()
		makeCurrentVersionedJson()
		itemTags()
		tenantConfig()
		npcPortrait()
	}
	jsize()
	status = {
		setResourceLocked()
		resourcePercentage()
		addPersistentEffects()
		removeEphemeralEffect()
		resource()
		setResourcePercentage()
		resourcePositive()
		damageTakenSince()
		statPositive()
		stat()
		statusProperty()
		activeUniqueStatusEffectSummary()
		inflictedHitsSince()
		resourceMax()
		setStatusProperty()
		setPersistentEffects()
		resetAllResources()
		addEphemeralEffects()
		overConsumeResource()
		modifyResource()
		addEphemeralEffect()
		getPersistentEffects()
		resetResource()
		consumeResource()
		clearPersistentEffects()
		modifyResourcePercentage()
		clearEphemeralEffects()
		resourceNames()
		addPersistentEffect()
		resourceLocked()
		clearAllPersistentEffects()
		inflictedDamageSince()
		isResource()
		setResource()
		giveResource()
	}
	xpcall()
	getmetatable()
	utf8 = {
		len()
		codepoint()
		offset()
		codes()
		charpattern = "[
[23:34:39.533] [Warn] 	select()
	rawequal()
	rawset()
	string = {
		gmatch()
		char()
		sub()
		unpack()
		upper()
		lower()
		find()
		rep()
		dump()
		len()
		reverse()
		packsize()
		pack()
		byte()
		match()
		format()
		gsub()
	}
	require()
	pairs()
	next()
	jobject()
	math = {
		pi = 3.1415926535898
		rad()
		max()
		sqrt()
		random()
		floor()
		log()
		acos()
		fmod()
		mininteger = -9223372036854775808
		type()
		huge = inf
		randomseed()
		deg()
		exp()
		maxinteger = 9223372036854775807
		cos()
		min()
		tointeger()
		modf()
		asin()
		tan()
		atan()
		abs()
		sin()
		ult()
		ceil()
	}
	print()
	pcall()
	type()
	init()
	setmetatable()
	jresize()
	ic = {
		checkStack()
		itemAmount()
		stripColor()
		quickstack()
		itemConfig()
		amountEquipped()
		sortFunc()
		lock()
		giveBack()
		renameThis()
		sort()
		searchBox()
		sort_relative()
		clientVersion = 1
		renameButton()
		searchButton()
		getQuality()
	}
	player = {
		equippedTech()
		altHandItem()
		giveEssentialItem()
		consumeTaggedItem()
		setUniverseFlag()
		species()
		itemsWithTag()
		worldId()
		warp()
		completeMission()
		inventoryTags()
		upgradeShip()
		hasQuest()
		consumeItem()
		gender()
		primaryHandItem()
		essentialItem()
		equippedItem()
		setIntroComplete()
		playTime()
		enabledTechs()
		recordEvent()
		playCinematic()
		introComplete()
		hasCompletedQuest()
		makeTechAvailable()
		consumeItemWithParameter()
		startQuest()
		hasItemWithParameter()
		getItemWithParameter()
		lounge()
		enableTech()
		equipTech()
		enableMission()
		removeEssentialItem()
		isLounging()
		availableTechs()
		primaryHandItemTags()
		makeTechUnavailable()
		confirm()
		serverUuid()
		addBookmark()
		altHandItemTags()
		cleanupItems()
		radioMessage()
		setEquippedItem()
		ownShipWorldId()
		hasItem()
		canStartQuest()
		giveBlueprint()
		hasCountOfItem()
		shipUpgrades()
		giveItem()
	}
	config = {
		getParameter()
	}
	self = {
	}
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	world = {
		spawnItem()
		entityPosition()
		entityHealth()
		damageTileArea()
		day()
		placeMaterial()
		entityDescription()
		containerPutItemsAt()
		entityVelocity()
		damageTiles()
		entityHandItem()
		objectAt()
		setProperty()
		containerItemApply()
		containerClose()
		distance()
		findUniqueEntity()
		gravity()
		rectTileCollision()
		entitySpecies()
		platformerPathStart()
		containerOpen()
		containerTakeAll()
		breathable()
		npcType()
		containerAddItems()
		dayLength()
		loungeableOccupied()
		placeObject()
		isTileProtected()
		destroyLiquid()
		debugLine()
		spawnLiquid()
		entityCanDamage()
		containerItemsCanFit()
		xwrap()
		entityUniqueId()
		itemDropQuery()
		lightLevel()
		placeMod()
		spawnNpc()
		spawnTreasure()
		time()
		underground()
		spawnVehicle()
		spawnMonster()
		timeOfDay()
		findPlatformerPath()
		debugPoly()
		containerTakeNumItemsAt()
		isMonster()
		farmableStage()
		polyCollision()
		objectLineQuery()
		entityHasCountOfItem()
		entityHandItemDescriptor()
		tileIsOccupied()
		resolvePolyCollision()
		pointCollision()
		callScriptedEntity()
		collisionBlocksAlongLine()
		containerStackItems()
		objectSpaces()
		containerConsume()
		spawnStagehand()
		spawnProjectile()
		stagehandType()
		entityQuery()
		lineTileCollision()
		containerSwapItemsNoCombine()
		liquidAlongLine()
		playerQuery()
		objectQuery()
		entityGender()
		rectCollision()
		containerItemAt()
		polyContains()
		containerTakeAt()
		magnitude()
		mod()
		containerSwapItems()
		isNpc()
		lineCollision()
		getObjectParameter()
		debugPoint()
		pointTileCollision()
		containerItemsFitWhere()
		containerAvailable()
		getProperty()
		containerItems()
		threatLevel()
		entityType()
		sendEntityMessage()
		material()
		liquidAt()
		containerSize()
		debugText()
		monsterType()
		entityMoney()
		nearestTo()
		npcLineQuery()
		entityPortrait()
		entityName()
		entityDamageTeam()
		containerConsumeAt()
		entityAggressive()
		windLevel()
		monsterQuery()
		entityExists()
		loungeableQuery()
		npcQuery()
		entityLineQuery()
	}
	root = {
		createBiome()
		imageSpaces()
		createItem()
		loadVersionedJson()
		createTreasure()
		getMatchingTenants()
		monsterSkillParameter()
		getConfiguration()
		npcVariant()
		itemHasTag()
		imageSize()
		projectileGravityMultiplier()
		nonEmptyRegion()
		evalFunction2()
		projectileConfig()
		materialMiningSound()
		generateName()
		isTreasurePool()
		hasTech()
		behaviorModule()
		itemConfig()
		treeStemDirectory()
		evalFunction()
		techConfig()
		npcConfig()
		setConfigurationPath()
		getConfigurationPath()
		materialHealth()
		materialFootstepSound()
		monsterMovementSettings()
		materialPath()
		setConfiguration()
		monsterPortrait()
		itemType()
		questConfig()
		recipesForItem()
		assetJson()
		treeFoliageDirectory()
		techType()
		liquidStatusEffects()
		makeCurrentVersionedJson()
		itemTags()
		tenantConfig()
		npcPortrait()
	}
	jsize()
	status = {
		setResourceLocked()
		resourcePercentage()
		addPersistentEffects()
		removeEphemeralEffect()
		resource()
		setResourcePercentage()
		resourcePositive()
		damageTakenSince()
		statPositive()
		stat()
		statusProperty()
		activeUniqueStatusEffectSummary()
		inflictedHitsSince()
		resourceMax()
		setStatusProperty()
		setPersistentEffects()
		resetAllResources()
		addEphemeralEffects()
		overConsumeResource()
		modifyResource()
		addEphemeralEffect()
		getPersistentEffects()
		resetResource()
		consumeResource()
		clearPersistentEffects()
		modifyResourcePercentage()
		clearEphemeralEffects()
		resourceNames()
		addPersistentEffect()
		resourceLocked()
		clearAllPersistentEffects()
		inflictedDamageSince()
		isResource()
		setResource()
		giveResource()
	}
	xpcall()
	getmetatable()
	utf8 = {
		len()
		codepoint()
		offset()
		codes()
		charpattern = "[
[23:35:08.648] [Warn] 	select()
	rawequal()
	rawset()
	string = {
		gmatch()
		char()
		sub()
		unpack()
		upper()
		lower()
		find()
		rep()
		dump()
		len()
		reverse()
		packsize()
		pack()
		byte()
		match()
		format()
		gsub()
	}
	require()
	pairs()
	next()
	jobject()
	math = {
		pi = 3.1415926535898
		rad()
		max()
		sqrt()
		random()
		floor()
		log()
		acos()
		fmod()
		mininteger = -9223372036854775808
		type()
		huge = inf
		randomseed()
		deg()
		exp()
		maxinteger = 9223372036854775807
		cos()
		min()
		tointeger()
		modf()
		asin()
		tan()
		atan()
		abs()
		sin()
		ult()
		ceil()
	}
	print()
	pcall()
	type()
	init()
	setmetatable()
	jresize()
	ic = {
		checkStack()
		itemAmount()
		stripColor()
		quickstack()
		itemConfig()
		amountEquipped()
		sortFunc()
		lock()
		giveBack()
		renameThis()
		sort()
		searchBox()
		sort_relative()
		clientVersion = 1
		renameButton()
		searchButton()
		getQuality()
	}
	player = {
		equippedTech()
		altHandItem()
		giveEssentialItem()
		consumeTaggedItem()
		setUniverseFlag()
		species()
		itemsWithTag()
		worldId()
		warp()
		completeMission()
		inventoryTags()
		upgradeShip()
		hasQuest()
		consumeItem()
		gender()
		primaryHandItem()
		essentialItem()
		equippedItem()
		setIntroComplete()
		playTime()
		enabledTechs()
		recordEvent()
		playCinematic()
		introComplete()
		hasCompletedQuest()
		makeTechAvailable()
		consumeItemWithParameter()
		startQuest()
		hasItemWithParameter()
		getItemWithParameter()
		lounge()
		enableTech()
		equipTech()
		enableMission()
		removeEssentialItem()
		isLounging()
		availableTechs()
		primaryHandItemTags()
		makeTechUnavailable()
		confirm()
		serverUuid()
		addBookmark()
		altHandItemTags()
		cleanupItems()
		radioMessage()
		setEquippedItem()
		ownShipWorldId()
		hasItem()
		canStartQuest()
		giveBlueprint()
		hasCountOfItem()
		shipUpgrades()
		giveItem()
	}
	config = {
		getParameter()
	}
	self = {
	}
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	world = {
		spawnItem()
		entityPosition()
		entityHealth()
		damageTileArea()
		day()
		placeMaterial()
		entityDescription()
		containerPutItemsAt()
		entityVelocity()
		damageTiles()
		entityHandItem()
		objectAt()
		setProperty()
		containerItemApply()
		containerClose()
		distance()
		findUniqueEntity()
		gravity()
		rectTileCollision()
		entitySpecies()
		platformerPathStart()
		containerOpen()
		containerTakeAll()
		breathable()
		npcType()
		containerAddItems()
		dayLength()
		loungeableOccupied()
		placeObject()
		isTileProtected()
		destroyLiquid()
		debugLine()
		spawnLiquid()
		entityCanDamage()
		containerItemsCanFit()
		xwrap()
		entityUniqueId()
		itemDropQuery()
		lightLevel()
		placeMod()
		spawnNpc()
		spawnTreasure()
		time()
		underground()
		spawnVehicle()
		spawnMonster()
		timeOfDay()
		findPlatformerPath()
		debugPoly()
		containerTakeNumItemsAt()
		isMonster()
		farmableStage()
		polyCollision()
		objectLineQuery()
		entityHasCountOfItem()
		entityHandItemDescriptor()
		tileIsOccupied()
		resolvePolyCollision()
		pointCollision()
		callScriptedEntity()
		collisionBlocksAlongLine()
		containerStackItems()
		objectSpaces()
		containerConsume()
		spawnStagehand()
		spawnProjectile()
		stagehandType()
		entityQuery()
		lineTileCollision()
		containerSwapItemsNoCombine()
		liquidAlongLine()
		playerQuery()
		objectQuery()
		entityGender()
		rectCollision()
		containerItemAt()
		polyContains()
		containerTakeAt()
		magnitude()
		mod()
		containerSwapItems()
		isNpc()
		lineCollision()
		getObjectParameter()
		debugPoint()
		pointTileCollision()
		containerItemsFitWhere()
		containerAvailable()
		getProperty()
		containerItems()
		threatLevel()
		entityType()
		sendEntityMessage()
		material()
		liquidAt()
		containerSize()
		debugText()
		monsterType()
		entityMoney()
		nearestTo()
		npcLineQuery()
		entityPortrait()
		entityName()
		entityDamageTeam()
		containerConsumeAt()
		entityAggressive()
		windLevel()
		monsterQuery()
		entityExists()
		loungeableQuery()
		npcQuery()
		entityLineQuery()
	}
	root = {
		createBiome()
		imageSpaces()
		createItem()
		loadVersionedJson()
		createTreasure()
		getMatchingTenants()
		monsterSkillParameter()
		getConfiguration()
		npcVariant()
		itemHasTag()
		imageSize()
		projectileGravityMultiplier()
		nonEmptyRegion()
		evalFunction2()
		projectileConfig()
		materialMiningSound()
		generateName()
		isTreasurePool()
		hasTech()
		behaviorModule()
		itemConfig()
		treeStemDirectory()
		evalFunction()
		techConfig()
		npcConfig()
		setConfigurationPath()
		getConfigurationPath()
		materialHealth()
		materialFootstepSound()
		monsterMovementSettings()
		materialPath()
		setConfiguration()
		monsterPortrait()
		itemType()
		questConfig()
		recipesForItem()
		assetJson()
		treeFoliageDirectory()
		techType()
		liquidStatusEffects()
		makeCurrentVersionedJson()
		itemTags()
		tenantConfig()
		npcPortrait()
	}
	jsize()
	status = {
		setResourceLocked()
		resourcePercentage()
		addPersistentEffects()
		removeEphemeralEffect()
		resource()
		setResourcePercentage()
		resourcePositive()
		damageTakenSince()
		statPositive()
		stat()
		statusProperty()
		activeUniqueStatusEffectSummary()
		inflictedHitsSince()
		resourceMax()
		setStatusProperty()
		setPersistentEffects()
		resetAllResources()
		addEphemeralEffects()
		overConsumeResource()
		modifyResource()
		addEphemeralEffect()
		getPersistentEffects()
		resetResource()
		consumeResource()
		clearPersistentEffects()
		modifyResourcePercentage()
		clearEphemeralEffects()
		resourceNames()
		addPersistentEffect()
		resourceLocked()
		clearAllPersistentEffects()
		inflictedDamageSince()
		isResource()
		setResource()
		giveResource()
	}
	xpcall()
	getmetatable()
	utf8 = {
		len()
		codepoint()
		offset()
		codes()
		charpattern = "[
[23:35:10.014] [Warn] 	select()
	rawequal()
	rawset()
	string = {
		gmatch()
		char()
		sub()
		unpack()
		upper()
		lower()
		find()
		rep()
		dump()
		len()
		reverse()
		packsize()
		pack()
		byte()
		match()
		format()
		gsub()
	}
	require()
	pairs()
	next()
	jobject()
	math = {
		pi = 3.1415926535898
		rad()
		max()
		sqrt()
		random()
		floor()
		log()
		acos()
		fmod()
		mininteger = -9223372036854775808
		type()
		huge = inf
		randomseed()
		deg()
		exp()
		maxinteger = 9223372036854775807
		cos()
		min()
		tointeger()
		modf()
		asin()
		tan()
		atan()
		abs()
		sin()
		ult()
		ceil()
	}
	print()
	pcall()
	type()
	init()
	setmetatable()
	jresize()
	ic = {
		checkStack()
		itemAmount()
		stripColor()
		quickstack()
		itemConfig()
		amountEquipped()
		sortFunc()
		lock()
		giveBack()
		renameThis()
		sort()
		searchBox()
		sort_relative()
		clientVersion = 1
		renameButton()
		searchButton()
		getQuality()
	}
	player = {
		equippedTech()
		altHandItem()
		giveEssentialItem()
		consumeTaggedItem()
		setUniverseFlag()
		species()
		itemsWithTag()
		worldId()
		warp()
		completeMission()
		inventoryTags()
		upgradeShip()
		hasQuest()
		consumeItem()
		gender()
		primaryHandItem()
		essentialItem()
		equippedItem()
		setIntroComplete()
		playTime()
		enabledTechs()
		recordEvent()
		playCinematic()
		introComplete()
		hasCompletedQuest()
		makeTechAvailable()
		consumeItemWithParameter()
		startQuest()
		hasItemWithParameter()
		getItemWithParameter()
		lounge()
		enableTech()
		equipTech()
		enableMission()
		removeEssentialItem()
		isLounging()
		availableTechs()
		primaryHandItemTags()
		makeTechUnavailable()
		confirm()
		serverUuid()
		addBookmark()
		altHandItemTags()
		cleanupItems()
		radioMessage()
		setEquippedItem()
		ownShipWorldId()
		hasItem()
		canStartQuest()
		giveBlueprint()
		hasCountOfItem()
		shipUpgrades()
		giveItem()
	}
	config = {
		getParameter()
	}
	self = {
	}
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	world = {
		spawnItem()
		entityPosition()
		entityHealth()
		damageTileArea()
		day()
		placeMaterial()
		entityDescription()
		containerPutItemsAt()
		entityVelocity()
		damageTiles()
		entityHandItem()
		objectAt()
		setProperty()
		containerItemApply()
		containerClose()
		distance()
		findUniqueEntity()
		gravity()
		rectTileCollision()
		entitySpecies()
		platformerPathStart()
		containerOpen()
		containerTakeAll()
		breathable()
		npcType()
		containerAddItems()
		dayLength()
		loungeableOccupied()
		placeObject()
		isTileProtected()
		destroyLiquid()
		debugLine()
		spawnLiquid()
		entityCanDamage()
		containerItemsCanFit()
		xwrap()
		entityUniqueId()
		itemDropQuery()
		lightLevel()
		placeMod()
		spawnNpc()
		spawnTreasure()
		time()
		underground()
		spawnVehicle()
		spawnMonster()
		timeOfDay()
		findPlatformerPath()
		debugPoly()
		containerTakeNumItemsAt()
		isMonster()
		farmableStage()
		polyCollision()
		objectLineQuery()
		entityHasCountOfItem()
		entityHandItemDescriptor()
		tileIsOccupied()
		resolvePolyCollision()
		pointCollision()
		callScriptedEntity()
		collisionBlocksAlongLine()
		containerStackItems()
		objectSpaces()
		containerConsume()
		spawnStagehand()
		spawnProjectile()
		stagehandType()
		entityQuery()
		lineTileCollision()
		containerSwapItemsNoCombine()
		liquidAlongLine()
		playerQuery()
		objectQuery()
		entityGender()
		rectCollision()
		containerItemAt()
		polyContains()
		containerTakeAt()
		magnitude()
		mod()
		containerSwapItems()
		isNpc()
		lineCollision()
		getObjectParameter()
		debugPoint()
		pointTileCollision()
		containerItemsFitWhere()
		containerAvailable()
		getProperty()
		containerItems()
		threatLevel()
		entityType()
		sendEntityMessage()
		material()
		liquidAt()
		containerSize()
		debugText()
		monsterType()
		entityMoney()
		nearestTo()
		npcLineQuery()
		entityPortrait()
		entityName()
		entityDamageTeam()
		containerConsumeAt()
		entityAggressive()
		windLevel()
		monsterQuery()
		entityExists()
		loungeableQuery()
		npcQuery()
		entityLineQuery()
	}
	root = {
		createBiome()
		imageSpaces()
		createItem()
		loadVersionedJson()
		createTreasure()
		getMatchingTenants()
		monsterSkillParameter()
		getConfiguration()
		npcVariant()
		itemHasTag()
		imageSize()
		projectileGravityMultiplier()
		nonEmptyRegion()
		evalFunction2()
		projectileConfig()
		materialMiningSound()
		generateName()
		isTreasurePool()
		hasTech()
		behaviorModule()
		itemConfig()
		treeStemDirectory()
		evalFunction()
		techConfig()
		npcConfig()
		setConfigurationPath()
		getConfigurationPath()
		materialHealth()
		materialFootstepSound()
		monsterMovementSettings()
		materialPath()
		setConfiguration()
		monsterPortrait()
		itemType()
		questConfig()
		recipesForItem()
		assetJson()
		treeFoliageDirectory()
		techType()
		liquidStatusEffects()
		makeCurrentVersionedJson()
		itemTags()
		tenantConfig()
		npcPortrait()
	}
	jsize()
	status = {
		setResourceLocked()
		resourcePercentage()
		addPersistentEffects()
		removeEphemeralEffect()
		resource()
		setResourcePercentage()
		resourcePositive()
		damageTakenSince()
		statPositive()
		stat()
		statusProperty()
		activeUniqueStatusEffectSummary()
		inflictedHitsSince()
		resourceMax()
		setStatusProperty()
		setPersistentEffects()
		resetAllResources()
		addEphemeralEffects()
		overConsumeResource()
		modifyResource()
		addEphemeralEffect()
		getPersistentEffects()
		resetResource()
		consumeResource()
		clearPersistentEffects()
		modifyResourcePercentage()
		clearEphemeralEffects()
		resourceNames()
		addPersistentEffect()
		resourceLocked()
		clearAllPersistentEffects()
		inflictedDamageSince()
		isResource()
		setResource()
		giveResource()
	}
	xpcall()
	getmetatable()
	utf8 = {
		len()
		codepoint()
		offset()
		codes()
		charpattern = "[
[23:35:11.381] [Warn] 	select()
	rawequal()
	rawset()
	string = {
		gmatch()
		char()
		sub()
		unpack()
		upper()
		lower()
		find()
		rep()
		dump()
		len()
		reverse()
		packsize()
		pack()
		byte()
		match()
		format()
		gsub()
	}
	require()
	pairs()
	next()
	jobject()
	math = {
		pi = 3.1415926535898
		rad()
		max()
		sqrt()
		random()
		floor()
		log()
		acos()
		fmod()
		mininteger = -9223372036854775808
		type()
		huge = inf
		randomseed()
		deg()
		exp()
		maxinteger = 9223372036854775807
		cos()
		min()
		tointeger()
		modf()
		asin()
		tan()
		atan()
		abs()
		sin()
		ult()
		ceil()
	}
	print()
	pcall()
	type()
	init()
	setmetatable()
	jresize()
	ic = {
		checkStack()
		itemAmount()
		stripColor()
		quickstack()
		itemConfig()
		amountEquipped()
		sortFunc()
		lock()
		giveBack()
		renameThis()
		sort()
		searchBox()
		sort_relative()
		clientVersion = 1
		renameButton()
		searchButton()
		getQuality()
	}
	player = {
		equippedTech()
		altHandItem()
		giveEssentialItem()
		consumeTaggedItem()
		setUniverseFlag()
		species()
		itemsWithTag()
		worldId()
		warp()
		completeMission()
		inventoryTags()
		upgradeShip()
		hasQuest()
		consumeItem()
		gender()
		primaryHandItem()
		essentialItem()
		equippedItem()
		setIntroComplete()
		playTime()
		enabledTechs()
		recordEvent()
		playCinematic()
		introComplete()
		hasCompletedQuest()
		makeTechAvailable()
		consumeItemWithParameter()
		startQuest()
		hasItemWithParameter()
		getItemWithParameter()
		lounge()
		enableTech()
		equipTech()
		enableMission()
		removeEssentialItem()
		isLounging()
		availableTechs()
		primaryHandItemTags()
		makeTechUnavailable()
		confirm()
		serverUuid()
		addBookmark()
		altHandItemTags()
		cleanupItems()
		radioMessage()
		setEquippedItem()
		ownShipWorldId()
		hasItem()
		canStartQuest()
		giveBlueprint()
		hasCountOfItem()
		shipUpgrades()
		giveItem()
	}
	config = {
		getParameter()
	}
	self = {
	}
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	world = {
		spawnItem()
		entityPosition()
		entityHealth()
		damageTileArea()
		day()
		placeMaterial()
		entityDescription()
		containerPutItemsAt()
		entityVelocity()
		damageTiles()
		entityHandItem()
		objectAt()
		setProperty()
		containerItemApply()
		containerClose()
		distance()
		findUniqueEntity()
		gravity()
		rectTileCollision()
		entitySpecies()
		platformerPathStart()
		containerOpen()
		containerTakeAll()
		breathable()
		npcType()
		containerAddItems()
		dayLength()
		loungeableOccupied()
		placeObject()
		isTileProtected()
		destroyLiquid()
		debugLine()
		spawnLiquid()
		entityCanDamage()
		containerItemsCanFit()
		xwrap()
		entityUniqueId()
		itemDropQuery()
		lightLevel()
		placeMod()
		spawnNpc()
		spawnTreasure()
		time()
		underground()
		spawnVehicle()
		spawnMonster()
		timeOfDay()
		findPlatformerPath()
		debugPoly()
		containerTakeNumItemsAt()
		isMonster()
		farmableStage()
		polyCollision()
		objectLineQuery()
		entityHasCountOfItem()
		entityHandItemDescriptor()
		tileIsOccupied()
		resolvePolyCollision()
		pointCollision()
		callScriptedEntity()
		collisionBlocksAlongLine()
		containerStackItems()
		objectSpaces()
		containerConsume()
		spawnStagehand()
		spawnProjectile()
		stagehandType()
		entityQuery()
		lineTileCollision()
		containerSwapItemsNoCombine()
		liquidAlongLine()
		playerQuery()
		objectQuery()
		entityGender()
		rectCollision()
		containerItemAt()
		polyContains()
		containerTakeAt()
		magnitude()
		mod()
		containerSwapItems()
		isNpc()
		lineCollision()
		getObjectParameter()
		debugPoint()
		pointTileCollision()
		containerItemsFitWhere()
		containerAvailable()
		getProperty()
		containerItems()
		threatLevel()
		entityType()
		sendEntityMessage()
		material()
		liquidAt()
		containerSize()
		debugText()
		monsterType()
		entityMoney()
		nearestTo()
		npcLineQuery()
		entityPortrait()
		entityName()
		entityDamageTeam()
		containerConsumeAt()
		entityAggressive()
		windLevel()
		monsterQuery()
		entityExists()
		loungeableQuery()
		npcQuery()
		entityLineQuery()
	}
	root = {
		createBiome()
		imageSpaces()
		createItem()
		loadVersionedJson()
		createTreasure()
		getMatchingTenants()
		monsterSkillParameter()
		getConfiguration()
		npcVariant()
		itemHasTag()
		imageSize()
		projectileGravityMultiplier()
		nonEmptyRegion()
		evalFunction2()
		projectileConfig()
		materialMiningSound()
		generateName()
		isTreasurePool()
		hasTech()
		behaviorModule()
		itemConfig()
		treeStemDirectory()
		evalFunction()
		techConfig()
		npcConfig()
		setConfigurationPath()
		getConfigurationPath()
		materialHealth()
		materialFootstepSound()
		monsterMovementSettings()
		materialPath()
		setConfiguration()
		monsterPortrait()
		itemType()
		questConfig()
		recipesForItem()
		assetJson()
		treeFoliageDirectory()
		techType()
		liquidStatusEffects()
		makeCurrentVersionedJson()
		itemTags()
		tenantConfig()
		npcPortrait()
	}
	jsize()
	status = {
		setResourceLocked()
		resourcePercentage()
		addPersistentEffects()
		removeEphemeralEffect()
		resource()
		setResourcePercentage()
		resourcePositive()
		damageTakenSince()
		statPositive()
		stat()
		statusProperty()
		activeUniqueStatusEffectSummary()
		inflictedHitsSince()
		resourceMax()
		setStatusProperty()
		setPersistentEffects()
		resetAllResources()
		addEphemeralEffects()
		overConsumeResource()
		modifyResource()
		addEphemeralEffect()
		getPersistentEffects()
		resetResource()
		consumeResource()
		clearPersistentEffects()
		modifyResourcePercentage()
		clearEphemeralEffects()
		resourceNames()
		addPersistentEffect()
		resourceLocked()
		clearAllPersistentEffects()
		inflictedDamageSince()
		isResource()
		setResource()
		giveResource()
	}
	xpcall()
	getmetatable()
	utf8 = {
		len()
		codepoint()
		offset()
		codes()
		charpattern = "[
[23:35:34.433] [Warn] 	select()
	rawequal()
	rawset()
	string = {
		gmatch()
		char()
		sub()
		unpack()
		upper()
		lower()
		find()
		rep()
		dump()
		len()
		reverse()
		packsize()
		pack()
		byte()
		match()
		format()
		gsub()
	}
	require()
	pairs()
	next()
	jobject()
	math = {
		pi = 3.1415926535898
		rad()
		max()
		sqrt()
		random()
		floor()
		log()
		acos()
		fmod()
		mininteger = -9223372036854775808
		type()
		huge = inf
		randomseed()
		deg()
		exp()
		maxinteger = 9223372036854775807
		cos()
		min()
		tointeger()
		modf()
		asin()
		tan()
		atan()
		abs()
		sin()
		ult()
		ceil()
	}
	print()
	pcall()
	type()
	init()
	setmetatable()
	jresize()
	ic = {
		checkStack()
		itemAmount()
		stripColor()
		quickstack()
		itemConfig()
		amountEquipped()
		sortFunc()
		lock()
		giveBack()
		renameThis()
		sort()
		searchBox()
		sort_relative()
		clientVersion = 1
		renameButton()
		searchButton()
		getQuality()
	}
	player = {
		equippedTech()
		altHandItem()
		giveEssentialItem()
		consumeTaggedItem()
		setUniverseFlag()
		species()
		itemsWithTag()
		worldId()
		warp()
		completeMission()
		inventoryTags()
		upgradeShip()
		hasQuest()
		consumeItem()
		gender()
		primaryHandItem()
		essentialItem()
		equippedItem()
		setIntroComplete()
		playTime()
		enabledTechs()
		recordEvent()
		playCinematic()
		introComplete()
		hasCompletedQuest()
		makeTechAvailable()
		consumeItemWithParameter()
		startQuest()
		hasItemWithParameter()
		getItemWithParameter()
		lounge()
		enableTech()
		equipTech()
		enableMission()
		removeEssentialItem()
		isLounging()
		availableTechs()
		primaryHandItemTags()
		makeTechUnavailable()
		confirm()
		serverUuid()
		addBookmark()
		altHandItemTags()
		cleanupItems()
		radioMessage()
		setEquippedItem()
		ownShipWorldId()
		hasItem()
		canStartQuest()
		giveBlueprint()
		hasCountOfItem()
		shipUpgrades()
		giveItem()
	}
	config = {
		getParameter()
	}
	self = {
	}
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	world = {
		spawnItem()
		entityPosition()
		entityHealth()
		damageTileArea()
		day()
		placeMaterial()
		entityDescription()
		containerPutItemsAt()
		entityVelocity()
		damageTiles()
		entityHandItem()
		objectAt()
		setProperty()
		containerItemApply()
		containerClose()
		distance()
		findUniqueEntity()
		gravity()
		rectTileCollision()
		entitySpecies()
		platformerPathStart()
		containerOpen()
		containerTakeAll()
		breathable()
		npcType()
		containerAddItems()
		dayLength()
		loungeableOccupied()
		placeObject()
		isTileProtected()
		destroyLiquid()
		debugLine()
		spawnLiquid()
		entityCanDamage()
		containerItemsCanFit()
		xwrap()
		entityUniqueId()
		itemDropQuery()
		lightLevel()
		placeMod()
		spawnNpc()
		spawnTreasure()
		time()
		underground()
		spawnVehicle()
		spawnMonster()
		timeOfDay()
		findPlatformerPath()
		debugPoly()
		containerTakeNumItemsAt()
		isMonster()
		farmableStage()
		polyCollision()
		objectLineQuery()
		entityHasCountOfItem()
		entityHandItemDescriptor()
		tileIsOccupied()
		resolvePolyCollision()
		pointCollision()
		callScriptedEntity()
		collisionBlocksAlongLine()
		containerStackItems()
		objectSpaces()
		containerConsume()
		spawnStagehand()
		spawnProjectile()
		stagehandType()
		entityQuery()
		lineTileCollision()
		containerSwapItemsNoCombine()
		liquidAlongLine()
		playerQuery()
		objectQuery()
		entityGender()
		rectCollision()
		containerItemAt()
		polyContains()
		containerTakeAt()
		magnitude()
		mod()
		containerSwapItems()
		isNpc()
		lineCollision()
		getObjectParameter()
		debugPoint()
		pointTileCollision()
		containerItemsFitWhere()
		containerAvailable()
		getProperty()
		containerItems()
		threatLevel()
		entityType()
		sendEntityMessage()
		material()
		liquidAt()
		containerSize()
		debugText()
		monsterType()
		entityMoney()
		nearestTo()
		npcLineQuery()
		entityPortrait()
		entityName()
		entityDamageTeam()
		containerConsumeAt()
		entityAggressive()
		windLevel()
		monsterQuery()
		entityExists()
		loungeableQuery()
		npcQuery()
		entityLineQuery()
	}
	root = {
		createBiome()
		imageSpaces()
		createItem()
		loadVersionedJson()
		createTreasure()
		getMatchingTenants()
		monsterSkillParameter()
		getConfiguration()
		npcVariant()
		itemHasTag()
		imageSize()
		projectileGravityMultiplier()
		nonEmptyRegion()
		evalFunction2()
		projectileConfig()
		materialMiningSound()
		generateName()
		isTreasurePool()
		hasTech()
		behaviorModule()
		itemConfig()
		treeStemDirectory()
		evalFunction()
		techConfig()
		npcConfig()
		setConfigurationPath()
		getConfigurationPath()
		materialHealth()
		materialFootstepSound()
		monsterMovementSettings()
		materialPath()
		setConfiguration()
		monsterPortrait()
		itemType()
		questConfig()
		recipesForItem()
		assetJson()
		treeFoliageDirectory()
		techType()
		liquidStatusEffects()
		makeCurrentVersionedJson()
		itemTags()
		tenantConfig()
		npcPortrait()
	}
	jsize()
	status = {
		setResourceLocked()
		resourcePercentage()
		addPersistentEffects()
		removeEphemeralEffect()
		resource()
		setResourcePercentage()
		resourcePositive()
		damageTakenSince()
		statPositive()
		stat()
		statusProperty()
		activeUniqueStatusEffectSummary()
		inflictedHitsSince()
		resourceMax()
		setStatusProperty()
		setPersistentEffects()
		resetAllResources()
		addEphemeralEffects()
		overConsumeResource()
		modifyResource()
		addEphemeralEffect()
		getPersistentEffects()
		resetResource()
		consumeResource()
		clearPersistentEffects()
		modifyResourcePercentage()
		clearEphemeralEffects()
		resourceNames()
		addPersistentEffect()
		resourceLocked()
		clearAllPersistentEffects()
		inflictedDamageSince()
		isResource()
		setResource()
		giveResource()
	}
	xpcall()
	getmetatable()
	utf8 = {
		len()
		codepoint()
		offset()
		codes()
		charpattern = "[
[23:35:35.806] [Warn] 	select()
	rawequal()
	rawset()
	string = {
		gmatch()
		char()
		sub()
		unpack()
		upper()
		lower()
		find()
		rep()
		dump()
		len()
		reverse()
		packsize()
		pack()
		byte()
		match()
		format()
		gsub()
	}
	require()
	pairs()
	next()
	jobject()
	math = {
		pi = 3.1415926535898
		rad()
		max()
		sqrt()
		random()
		floor()
		log()
		acos()
		fmod()
		mininteger = -9223372036854775808
		type()
		huge = inf
		randomseed()
		deg()
		exp()
		maxinteger = 9223372036854775807
		cos()
		min()
		tointeger()
		modf()
		asin()
		tan()
		atan()
		abs()
		sin()
		ult()
		ceil()
	}
	print()
	pcall()
	type()
	init()
	setmetatable()
	jresize()
	ic = {
		checkStack()
		itemAmount()
		stripColor()
		quickstack()
		itemConfig()
		amountEquipped()
		sortFunc()
		lock()
		giveBack()
		renameThis()
		sort()
		searchBox()
		sort_relative()
		clientVersion = 1
		renameButton()
		searchButton()
		getQuality()
	}
	player = {
		equippedTech()
		altHandItem()
		giveEssentialItem()
		consumeTaggedItem()
		setUniverseFlag()
		species()
		itemsWithTag()
		worldId()
		warp()
		completeMission()
		inventoryTags()
		upgradeShip()
		hasQuest()
		consumeItem()
		gender()
		primaryHandItem()
		essentialItem()
		equippedItem()
		setIntroComplete()
		playTime()
		enabledTechs()
		recordEvent()
		playCinematic()
		introComplete()
		hasCompletedQuest()
		makeTechAvailable()
		consumeItemWithParameter()
		startQuest()
		hasItemWithParameter()
		getItemWithParameter()
		lounge()
		enableTech()
		equipTech()
		enableMission()
		removeEssentialItem()
		isLounging()
		availableTechs()
		primaryHandItemTags()
		makeTechUnavailable()
		confirm()
		serverUuid()
		addBookmark()
		altHandItemTags()
		cleanupItems()
		radioMessage()
		setEquippedItem()
		ownShipWorldId()
		hasItem()
		canStartQuest()
		giveBlueprint()
		hasCountOfItem()
		shipUpgrades()
		giveItem()
	}
	config = {
		getParameter()
	}
	self = {
	}
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	world = {
		spawnItem()
		entityPosition()
		entityHealth()
		damageTileArea()
		day()
		placeMaterial()
		entityDescription()
		containerPutItemsAt()
		entityVelocity()
		damageTiles()
		entityHandItem()
		objectAt()
		setProperty()
		containerItemApply()
		containerClose()
		distance()
		findUniqueEntity()
		gravity()
		rectTileCollision()
		entitySpecies()
		platformerPathStart()
		containerOpen()
		containerTakeAll()
		breathable()
		npcType()
		containerAddItems()
		dayLength()
		loungeableOccupied()
		placeObject()
		isTileProtected()
		destroyLiquid()
		debugLine()
		spawnLiquid()
		entityCanDamage()
		containerItemsCanFit()
		xwrap()
		entityUniqueId()
		itemDropQuery()
		lightLevel()
		placeMod()
		spawnNpc()
		spawnTreasure()
		time()
		underground()
		spawnVehicle()
		spawnMonster()
		timeOfDay()
		findPlatformerPath()
		debugPoly()
		containerTakeNumItemsAt()
		isMonster()
		farmableStage()
		polyCollision()
		objectLineQuery()
		entityHasCountOfItem()
		entityHandItemDescriptor()
		tileIsOccupied()
		resolvePolyCollision()
		pointCollision()
		callScriptedEntity()
		collisionBlocksAlongLine()
		containerStackItems()
		objectSpaces()
		containerConsume()
		spawnStagehand()
		spawnProjectile()
		stagehandType()
		entityQuery()
		lineTileCollision()
		containerSwapItemsNoCombine()
		liquidAlongLine()
		playerQuery()
		objectQuery()
		entityGender()
		rectCollision()
		containerItemAt()
		polyContains()
		containerTakeAt()
		magnitude()
		mod()
		containerSwapItems()
		isNpc()
		lineCollision()
		getObjectParameter()
		debugPoint()
		pointTileCollision()
		containerItemsFitWhere()
		containerAvailable()
		getProperty()
		containerItems()
		threatLevel()
		entityType()
		sendEntityMessage()
		material()
		liquidAt()
		containerSize()
		debugText()
		monsterType()
		entityMoney()
		nearestTo()
		npcLineQuery()
		entityPortrait()
		entityName()
		entityDamageTeam()
		containerConsumeAt()
		entityAggressive()
		windLevel()
		monsterQuery()
		entityExists()
		loungeableQuery()
		npcQuery()
		entityLineQuery()
	}
	root = {
		createBiome()
		imageSpaces()
		createItem()
		loadVersionedJson()
		createTreasure()
		getMatchingTenants()
		monsterSkillParameter()
		getConfiguration()
		npcVariant()
		itemHasTag()
		imageSize()
		projectileGravityMultiplier()
		nonEmptyRegion()
		evalFunction2()
		projectileConfig()
		materialMiningSound()
		generateName()
		isTreasurePool()
		hasTech()
		behaviorModule()
		itemConfig()
		treeStemDirectory()
		evalFunction()
		techConfig()
		npcConfig()
		setConfigurationPath()
		getConfigurationPath()
		materialHealth()
		materialFootstepSound()
		monsterMovementSettings()
		materialPath()
		setConfiguration()
		monsterPortrait()
		itemType()
		questConfig()
		recipesForItem()
		assetJson()
		treeFoliageDirectory()
		techType()
		liquidStatusEffects()
		makeCurrentVersionedJson()
		itemTags()
		tenantConfig()
		npcPortrait()
	}
	jsize()
	status = {
		setResourceLocked()
		resourcePercentage()
		addPersistentEffects()
		removeEphemeralEffect()
		resource()
		setResourcePercentage()
		resourcePositive()
		damageTakenSince()
		statPositive()
		stat()
		statusProperty()
		activeUniqueStatusEffectSummary()
		inflictedHitsSince()
		resourceMax()
		setStatusProperty()
		setPersistentEffects()
		resetAllResources()
		addEphemeralEffects()
		overConsumeResource()
		modifyResource()
		addEphemeralEffect()
		getPersistentEffects()
		resetResource()
		consumeResource()
		clearPersistentEffects()
		modifyResourcePercentage()
		clearEphemeralEffects()
		resourceNames()
		addPersistentEffect()
		resourceLocked()
		clearAllPersistentEffects()
		inflictedDamageSince()
		isResource()
		setResource()
		giveResource()
	}
	xpcall()
	getmetatable()
	utf8 = {
		len()
		codepoint()
		offset()
		codes()
		charpattern = "[
[23:35:37.034] [Warn] 	select()
	rawequal()
	rawset()
	string = {
		gmatch()
		char()
		sub()
		unpack()
		upper()
		lower()
		find()
		rep()
		dump()
		len()
		reverse()
		packsize()
		pack()
		byte()
		match()
		format()
		gsub()
	}
	require()
	pairs()
	next()
	jobject()
	math = {
		pi = 3.1415926535898
		rad()
		max()
		sqrt()
		random()
		floor()
		log()
		acos()
		fmod()
		mininteger = -9223372036854775808
		type()
		huge = inf
		randomseed()
		deg()
		exp()
		maxinteger = 9223372036854775807
		cos()
		min()
		tointeger()
		modf()
		asin()
		tan()
		atan()
		abs()
		sin()
		ult()
		ceil()
	}
	print()
	pcall()
	type()
	init()
	setmetatable()
	jresize()
	ic = {
		checkStack()
		itemAmount()
		stripColor()
		quickstack()
		itemConfig()
		amountEquipped()
		sortFunc()
		lock()
		giveBack()
		renameThis()
		sort()
		searchBox()
		sort_relative()
		clientVersion = 1
		renameButton()
		searchButton()
		getQuality()
	}
	player = {
		equippedTech()
		altHandItem()
		giveEssentialItem()
		consumeTaggedItem()
		setUniverseFlag()
		species()
		itemsWithTag()
		worldId()
		warp()
		completeMission()
		inventoryTags()
		upgradeShip()
		hasQuest()
		consumeItem()
		gender()
		primaryHandItem()
		essentialItem()
		equippedItem()
		setIntroComplete()
		playTime()
		enabledTechs()
		recordEvent()
		playCinematic()
		introComplete()
		hasCompletedQuest()
		makeTechAvailable()
		consumeItemWithParameter()
		startQuest()
		hasItemWithParameter()
		getItemWithParameter()
		lounge()
		enableTech()
		equipTech()
		enableMission()
		removeEssentialItem()
		isLounging()
		availableTechs()
		primaryHandItemTags()
		makeTechUnavailable()
		confirm()
		serverUuid()
		addBookmark()
		altHandItemTags()
		cleanupItems()
		radioMessage()
		setEquippedItem()
		ownShipWorldId()
		hasItem()
		canStartQuest()
		giveBlueprint()
		hasCountOfItem()
		shipUpgrades()
		giveItem()
	}
	config = {
		getParameter()
	}
	self = {
	}
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	world = {
		spawnItem()
		entityPosition()
		entityHealth()
		damageTileArea()
		day()
		placeMaterial()
		entityDescription()
		containerPutItemsAt()
		entityVelocity()
		damageTiles()
		entityHandItem()
		objectAt()
		setProperty()
		containerItemApply()
		containerClose()
		distance()
		findUniqueEntity()
		gravity()
		rectTileCollision()
		entitySpecies()
		platformerPathStart()
		containerOpen()
		containerTakeAll()
		breathable()
		npcType()
		containerAddItems()
		dayLength()
		loungeableOccupied()
		placeObject()
		isTileProtected()
		destroyLiquid()
		debugLine()
		spawnLiquid()
		entityCanDamage()
		containerItemsCanFit()
		xwrap()
		entityUniqueId()
		itemDropQuery()
		lightLevel()
		placeMod()
		spawnNpc()
		spawnTreasure()
		time()
		underground()
		spawnVehicle()
		spawnMonster()
		timeOfDay()
		findPlatformerPath()
		debugPoly()
		containerTakeNumItemsAt()
		isMonster()
		farmableStage()
		polyCollision()
		objectLineQuery()
		entityHasCountOfItem()
		entityHandItemDescriptor()
		tileIsOccupied()
		resolvePolyCollision()
		pointCollision()
		callScriptedEntity()
		collisionBlocksAlongLine()
		containerStackItems()
		objectSpaces()
		containerConsume()
		spawnStagehand()
		spawnProjectile()
		stagehandType()
		entityQuery()
		lineTileCollision()
		containerSwapItemsNoCombine()
		liquidAlongLine()
		playerQuery()
		objectQuery()
		entityGender()
		rectCollision()
		containerItemAt()
		polyContains()
		containerTakeAt()
		magnitude()
		mod()
		containerSwapItems()
		isNpc()
		lineCollision()
		getObjectParameter()
		debugPoint()
		pointTileCollision()
		containerItemsFitWhere()
		containerAvailable()
		getProperty()
		containerItems()
		threatLevel()
		entityType()
		sendEntityMessage()
		material()
		liquidAt()
		containerSize()
		debugText()
		monsterType()
		entityMoney()
		nearestTo()
		npcLineQuery()
		entityPortrait()
		entityName()
		entityDamageTeam()
		containerConsumeAt()
		entityAggressive()
		windLevel()
		monsterQuery()
		entityExists()
		loungeableQuery()
		npcQuery()
		entityLineQuery()
	}
	root = {
		createBiome()
		imageSpaces()
		createItem()
		loadVersionedJson()
		createTreasure()
		getMatchingTenants()
		monsterSkillParameter()
		getConfiguration()
		npcVariant()
		itemHasTag()
		imageSize()
		projectileGravityMultiplier()
		nonEmptyRegion()
		evalFunction2()
		projectileConfig()
		materialMiningSound()
		generateName()
		isTreasurePool()
		hasTech()
		behaviorModule()
		itemConfig()
		treeStemDirectory()
		evalFunction()
		techConfig()
		npcConfig()
		setConfigurationPath()
		getConfigurationPath()
		materialHealth()
		materialFootstepSound()
		monsterMovementSettings()
		materialPath()
		setConfiguration()
		monsterPortrait()
		itemType()
		questConfig()
		recipesForItem()
		assetJson()
		treeFoliageDirectory()
		techType()
		liquidStatusEffects()
		makeCurrentVersionedJson()
		itemTags()
		tenantConfig()
		npcPortrait()
	}
	jsize()
	status = {
		setResourceLocked()
		resourcePercentage()
		addPersistentEffects()
		removeEphemeralEffect()
		resource()
		setResourcePercentage()
		resourcePositive()
		damageTakenSince()
		statPositive()
		stat()
		statusProperty()
		activeUniqueStatusEffectSummary()
		inflictedHitsSince()
		resourceMax()
		setStatusProperty()
		setPersistentEffects()
		resetAllResources()
		addEphemeralEffects()
		overConsumeResource()
		modifyResource()
		addEphemeralEffect()
		getPersistentEffects()
		resetResource()
		consumeResource()
		clearPersistentEffects()
		modifyResourcePercentage()
		clearEphemeralEffects()
		resourceNames()
		addPersistentEffect()
		resourceLocked()
		clearAllPersistentEffects()
		inflictedDamageSince()
		isResource()
		setResource()
		giveResource()
	}
	xpcall()
	getmetatable()
	utf8 = {
		len()
		codepoint()
		offset()
		codes()
		charpattern = "[
[23:35:38.415] [Warn] 	select()
	rawequal()
	rawset()
	string = {
		gmatch()
		char()
		sub()
		unpack()
		upper()
		lower()
		find()
		rep()
		dump()
		len()
		reverse()
		packsize()
		pack()
		byte()
		match()
		format()
		gsub()
	}
	require()
	pairs()
	next()
	jobject()
	math = {
		pi = 3.1415926535898
		rad()
		max()
		sqrt()
		random()
		floor()
		log()
		acos()
		fmod()
		mininteger = -9223372036854775808
		type()
		huge = inf
		randomseed()
		deg()
		exp()
		maxinteger = 9223372036854775807
		cos()
		min()
		tointeger()
		modf()
		asin()
		tan()
		atan()
		abs()
		sin()
		ult()
		ceil()
	}
	print()
	pcall()
	type()
	init()
	setmetatable()
	jresize()
	ic = {
		checkStack()
		itemAmount()
		stripColor()
		quickstack()
		itemConfig()
		amountEquipped()
		sortFunc()
		lock()
		giveBack()
		renameThis()
		sort()
		searchBox()
		sort_relative()
		clientVersion = 1
		renameButton()
		searchButton()
		getQuality()
	}
	player = {
		equippedTech()
		altHandItem()
		giveEssentialItem()
		consumeTaggedItem()
		setUniverseFlag()
		species()
		itemsWithTag()
		worldId()
		warp()
		completeMission()
		inventoryTags()
		upgradeShip()
		hasQuest()
		consumeItem()
		gender()
		primaryHandItem()
		essentialItem()
		equippedItem()
		setIntroComplete()
		playTime()
		enabledTechs()
		recordEvent()
		playCinematic()
		introComplete()
		hasCompletedQuest()
		makeTechAvailable()
		consumeItemWithParameter()
		startQuest()
		hasItemWithParameter()
		getItemWithParameter()
		lounge()
		enableTech()
		equipTech()
		enableMission()
		removeEssentialItem()
		isLounging()
		availableTechs()
		primaryHandItemTags()
		makeTechUnavailable()
		confirm()
		serverUuid()
		addBookmark()
		altHandItemTags()
		cleanupItems()
		radioMessage()
		setEquippedItem()
		ownShipWorldId()
		hasItem()
		canStartQuest()
		giveBlueprint()
		hasCountOfItem()
		shipUpgrades()
		giveItem()
	}
	config = {
		getParameter()
	}
	self = {
	}
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	world = {
		spawnItem()
		entityPosition()
		entityHealth()
		damageTileArea()
		day()
		placeMaterial()
		entityDescription()
		containerPutItemsAt()
		entityVelocity()
		damageTiles()
		entityHandItem()
		objectAt()
		setProperty()
		containerItemApply()
		containerClose()
		distance()
		findUniqueEntity()
		gravity()
		rectTileCollision()
		entitySpecies()
		platformerPathStart()
		containerOpen()
		containerTakeAll()
		breathable()
		npcType()
		containerAddItems()
		dayLength()
		loungeableOccupied()
		placeObject()
		isTileProtected()
		destroyLiquid()
		debugLine()
		spawnLiquid()
		entityCanDamage()
		containerItemsCanFit()
		xwrap()
		entityUniqueId()
		itemDropQuery()
		lightLevel()
		placeMod()
		spawnNpc()
		spawnTreasure()
		time()
		underground()
		spawnVehicle()
		spawnMonster()
		timeOfDay()
		findPlatformerPath()
		debugPoly()
		containerTakeNumItemsAt()
		isMonster()
		farmableStage()
		polyCollision()
		objectLineQuery()
		entityHasCountOfItem()
		entityHandItemDescriptor()
		tileIsOccupied()
		resolvePolyCollision()
		pointCollision()
		callScriptedEntity()
		collisionBlocksAlongLine()
		containerStackItems()
		objectSpaces()
		containerConsume()
		spawnStagehand()
		spawnProjectile()
		stagehandType()
		entityQuery()
		lineTileCollision()
		containerSwapItemsNoCombine()
		liquidAlongLine()
		playerQuery()
		objectQuery()
		entityGender()
		rectCollision()
		containerItemAt()
		polyContains()
		containerTakeAt()
		magnitude()
		mod()
		containerSwapItems()
		isNpc()
		lineCollision()
		getObjectParameter()
		debugPoint()
		pointTileCollision()
		containerItemsFitWhere()
		containerAvailable()
		getProperty()
		containerItems()
		threatLevel()
		entityType()
		sendEntityMessage()
		material()
		liquidAt()
		containerSize()
		debugText()
		monsterType()
		entityMoney()
		nearestTo()
		npcLineQuery()
		entityPortrait()
		entityName()
		entityDamageTeam()
		containerConsumeAt()
		entityAggressive()
		windLevel()
		monsterQuery()
		entityExists()
		loungeableQuery()
		npcQuery()
		entityLineQuery()
	}
	root = {
		createBiome()
		imageSpaces()
		createItem()
		loadVersionedJson()
		createTreasure()
		getMatchingTenants()
		monsterSkillParameter()
		getConfiguration()
		npcVariant()
		itemHasTag()
		imageSize()
		projectileGravityMultiplier()
		nonEmptyRegion()
		evalFunction2()
		projectileConfig()
		materialMiningSound()
		generateName()
		isTreasurePool()
		hasTech()
		behaviorModule()
		itemConfig()
		treeStemDirectory()
		evalFunction()
		techConfig()
		npcConfig()
		setConfigurationPath()
		getConfigurationPath()
		materialHealth()
		materialFootstepSound()
		monsterMovementSettings()
		materialPath()
		setConfiguration()
		monsterPortrait()
		itemType()
		questConfig()
		recipesForItem()
		assetJson()
		treeFoliageDirectory()
		techType()
		liquidStatusEffects()
		makeCurrentVersionedJson()
		itemTags()
		tenantConfig()
		npcPortrait()
	}
	jsize()
	status = {
		setResourceLocked()
		resourcePercentage()
		addPersistentEffects()
		removeEphemeralEffect()
		resource()
		setResourcePercentage()
		resourcePositive()
		damageTakenSince()
		statPositive()
		stat()
		statusProperty()
		activeUniqueStatusEffectSummary()
		inflictedHitsSince()
		resourceMax()
		setStatusProperty()
		setPersistentEffects()
		resetAllResources()
		addEphemeralEffects()
		overConsumeResource()
		modifyResource()
		addEphemeralEffect()
		getPersistentEffects()
		resetResource()
		consumeResource()
		clearPersistentEffects()
		modifyResourcePercentage()
		clearEphemeralEffects()
		resourceNames()
		addPersistentEffect()
		resourceLocked()
		clearAllPersistentEffects()
		inflictedDamageSince()
		isResource()
		setResource()
		giveResource()
	}
	xpcall()
	getmetatable()
	utf8 = {
		len()
		codepoint()
		offset()
		codes()
		charpattern = "[
[23:35:42.357] [Warn] 	select()
	rawequal()
	rawset()
	string = {
		gmatch()
		char()
		sub()
		unpack()
		upper()
		lower()
		find()
		rep()
		dump()
		len()
		reverse()
		packsize()
		pack()
		byte()
		match()
		format()
		gsub()
	}
	require()
	pairs()
	next()
	jobject()
	math = {
		pi = 3.1415926535898
		rad()
		max()
		sqrt()
		random()
		floor()
		log()
		acos()
		fmod()
		mininteger = -9223372036854775808
		type()
		huge = inf
		randomseed()
		deg()
		exp()
		maxinteger = 9223372036854775807
		cos()
		min()
		tointeger()
		modf()
		asin()
		tan()
		atan()
		abs()
		sin()
		ult()
		ceil()
	}
	print()
	pcall()
	type()
	init()
	setmetatable()
	jresize()
	ic = {
		checkStack()
		itemAmount()
		stripColor()
		quickstack()
		itemConfig()
		amountEquipped()
		sortFunc()
		lock()
		giveBack()
		renameThis()
		sort()
		searchBox()
		sort_relative()
		clientVersion = 1
		renameButton()
		searchButton()
		getQuality()
	}
	player = {
		equippedTech()
		altHandItem()
		giveEssentialItem()
		consumeTaggedItem()
		setUniverseFlag()
		species()
		itemsWithTag()
		worldId()
		warp()
		completeMission()
		inventoryTags()
		upgradeShip()
		hasQuest()
		consumeItem()
		gender()
		primaryHandItem()
		essentialItem()
		equippedItem()
		setIntroComplete()
		playTime()
		enabledTechs()
		recordEvent()
		playCinematic()
		introComplete()
		hasCompletedQuest()
		makeTechAvailable()
		consumeItemWithParameter()
		startQuest()
		hasItemWithParameter()
		getItemWithParameter()
		lounge()
		enableTech()
		equipTech()
		enableMission()
		removeEssentialItem()
		isLounging()
		availableTechs()
		primaryHandItemTags()
		makeTechUnavailable()
		confirm()
		serverUuid()
		addBookmark()
		altHandItemTags()
		cleanupItems()
		radioMessage()
		setEquippedItem()
		ownShipWorldId()
		hasItem()
		canStartQuest()
		giveBlueprint()
		hasCountOfItem()
		shipUpgrades()
		giveItem()
	}
	config = {
		getParameter()
	}
	self = {
	}
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	world = {
		spawnItem()
		entityPosition()
		entityHealth()
		damageTileArea()
		day()
		placeMaterial()
		entityDescription()
		containerPutItemsAt()
		entityVelocity()
		damageTiles()
		entityHandItem()
		objectAt()
		setProperty()
		containerItemApply()
		containerClose()
		distance()
		findUniqueEntity()
		gravity()
		rectTileCollision()
		entitySpecies()
		platformerPathStart()
		containerOpen()
		containerTakeAll()
		breathable()
		npcType()
		containerAddItems()
		dayLength()
		loungeableOccupied()
		placeObject()
		isTileProtected()
		destroyLiquid()
		debugLine()
		spawnLiquid()
		entityCanDamage()
		containerItemsCanFit()
		xwrap()
		entityUniqueId()
		itemDropQuery()
		lightLevel()
		placeMod()
		spawnNpc()
		spawnTreasure()
		time()
		underground()
		spawnVehicle()
		spawnMonster()
		timeOfDay()
		findPlatformerPath()
		debugPoly()
		containerTakeNumItemsAt()
		isMonster()
		farmableStage()
		polyCollision()
		objectLineQuery()
		entityHasCountOfItem()
		entityHandItemDescriptor()
		tileIsOccupied()
		resolvePolyCollision()
		pointCollision()
		callScriptedEntity()
		collisionBlocksAlongLine()
		containerStackItems()
		objectSpaces()
		containerConsume()
		spawnStagehand()
		spawnProjectile()
		stagehandType()
		entityQuery()
		lineTileCollision()
		containerSwapItemsNoCombine()
		liquidAlongLine()
		playerQuery()
		objectQuery()
		entityGender()
		rectCollision()
		containerItemAt()
		polyContains()
		containerTakeAt()
		magnitude()
		mod()
		containerSwapItems()
		isNpc()
		lineCollision()
		getObjectParameter()
		debugPoint()
		pointTileCollision()
		containerItemsFitWhere()
		containerAvailable()
		getProperty()
		containerItems()
		threatLevel()
		entityType()
		sendEntityMessage()
		material()
		liquidAt()
		containerSize()
		debugText()
		monsterType()
		entityMoney()
		nearestTo()
		npcLineQuery()
		entityPortrait()
		entityName()
		entityDamageTeam()
		containerConsumeAt()
		entityAggressive()
		windLevel()
		monsterQuery()
		entityExists()
		loungeableQuery()
		npcQuery()
		entityLineQuery()
	}
	root = {
		createBiome()
		imageSpaces()
		createItem()
		loadVersionedJson()
		createTreasure()
		getMatchingTenants()
		monsterSkillParameter()
		getConfiguration()
		npcVariant()
		itemHasTag()
		imageSize()
		projectileGravityMultiplier()
		nonEmptyRegion()
		evalFunction2()
		projectileConfig()
		materialMiningSound()
		generateName()
		isTreasurePool()
		hasTech()
		behaviorModule()
		itemConfig()
		treeStemDirectory()
		evalFunction()
		techConfig()
		npcConfig()
		setConfigurationPath()
		getConfigurationPath()
		materialHealth()
		materialFootstepSound()
		monsterMovementSettings()
		materialPath()
		setConfiguration()
		monsterPortrait()
		itemType()
		questConfig()
		recipesForItem()
		assetJson()
		treeFoliageDirectory()
		techType()
		liquidStatusEffects()
		makeCurrentVersionedJson()
		itemTags()
		tenantConfig()
		npcPortrait()
	}
	jsize()
	status = {
		setResourceLocked()
		resourcePercentage()
		addPersistentEffects()
		removeEphemeralEffect()
		resource()
		setResourcePercentage()
		resourcePositive()
		damageTakenSince()
		statPositive()
		stat()
		statusProperty()
		activeUniqueStatusEffectSummary()
		inflictedHitsSince()
		resourceMax()
		setStatusProperty()
		setPersistentEffects()
		resetAllResources()
		addEphemeralEffects()
		overConsumeResource()
		modifyResource()
		addEphemeralEffect()
		getPersistentEffects()
		resetResource()
		consumeResource()
		clearPersistentEffects()
		modifyResourcePercentage()
		clearEphemeralEffects()
		resourceNames()
		addPersistentEffect()
		resourceLocked()
		clearAllPersistentEffects()
		inflictedDamageSince()
		isResource()
		setResource()
		giveResource()
	}
	xpcall()
	getmetatable()
	utf8 = {
		len()
		codepoint()
		offset()
		codes()
		charpattern = "[
[23:35:43.648] [Warn] 	select()
	rawequal()
	rawset()
	string = {
		gmatch()
		char()
		sub()
		unpack()
		upper()
		lower()
		find()
		rep()
		dump()
		len()
		reverse()
		packsize()
		pack()
		byte()
		match()
		format()
		gsub()
	}
	require()
	pairs()
	next()
	jobject()
	math = {
		pi = 3.1415926535898
		rad()
		max()
		sqrt()
		random()
		floor()
		log()
		acos()
		fmod()
		mininteger = -9223372036854775808
		type()
		huge = inf
		randomseed()
		deg()
		exp()
		maxinteger = 9223372036854775807
		cos()
		min()
		tointeger()
		modf()
		asin()
		tan()
		atan()
		abs()
		sin()
		ult()
		ceil()
	}
	print()
	pcall()
	type()
	init()
	setmetatable()
	jresize()
	ic = {
		checkStack()
		itemAmount()
		stripColor()
		quickstack()
		itemConfig()
		amountEquipped()
		sortFunc()
		lock()
		giveBack()
		renameThis()
		sort()
		searchBox()
		sort_relative()
		clientVersion = 1
		renameButton()
		searchButton()
		getQuality()
	}
	player = {
		equippedTech()
		altHandItem()
		giveEssentialItem()
		consumeTaggedItem()
		setUniverseFlag()
		species()
		itemsWithTag()
		worldId()
		warp()
		completeMission()
		inventoryTags()
		upgradeShip()
		hasQuest()
		consumeItem()
		gender()
		primaryHandItem()
		essentialItem()
		equippedItem()
		setIntroComplete()
		playTime()
		enabledTechs()
		recordEvent()
		playCinematic()
		introComplete()
		hasCompletedQuest()
		makeTechAvailable()
		consumeItemWithParameter()
		startQuest()
		hasItemWithParameter()
		getItemWithParameter()
		lounge()
		enableTech()
		equipTech()
		enableMission()
		removeEssentialItem()
		isLounging()
		availableTechs()
		primaryHandItemTags()
		makeTechUnavailable()
		confirm()
		serverUuid()
		addBookmark()
		altHandItemTags()
		cleanupItems()
		radioMessage()
		setEquippedItem()
		ownShipWorldId()
		hasItem()
		canStartQuest()
		giveBlueprint()
		hasCountOfItem()
		shipUpgrades()
		giveItem()
	}
	config = {
		getParameter()
	}
	self = {
	}
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	world = {
		spawnItem()
		entityPosition()
		entityHealth()
		damageTileArea()
		day()
		placeMaterial()
		entityDescription()
		containerPutItemsAt()
		entityVelocity()
		damageTiles()
		entityHandItem()
		objectAt()
		setProperty()
		containerItemApply()
		containerClose()
		distance()
		findUniqueEntity()
		gravity()
		rectTileCollision()
		entitySpecies()
		platformerPathStart()
		containerOpen()
		containerTakeAll()
		breathable()
		npcType()
		containerAddItems()
		dayLength()
		loungeableOccupied()
		placeObject()
		isTileProtected()
		destroyLiquid()
		debugLine()
		spawnLiquid()
		entityCanDamage()
		containerItemsCanFit()
		xwrap()
		entityUniqueId()
		itemDropQuery()
		lightLevel()
		placeMod()
		spawnNpc()
		spawnTreasure()
		time()
		underground()
		spawnVehicle()
		spawnMonster()
		timeOfDay()
		findPlatformerPath()
		debugPoly()
		containerTakeNumItemsAt()
		isMonster()
		farmableStage()
		polyCollision()
		objectLineQuery()
		entityHasCountOfItem()
		entityHandItemDescriptor()
		tileIsOccupied()
		resolvePolyCollision()
		pointCollision()
		callScriptedEntity()
		collisionBlocksAlongLine()
		containerStackItems()
		objectSpaces()
		containerConsume()
		spawnStagehand()
		spawnProjectile()
		stagehandType()
		entityQuery()
		lineTileCollision()
		containerSwapItemsNoCombine()
		liquidAlongLine()
		playerQuery()
		objectQuery()
		entityGender()
		rectCollision()
		containerItemAt()
		polyContains()
		containerTakeAt()
		magnitude()
		mod()
		containerSwapItems()
		isNpc()
		lineCollision()
		getObjectParameter()
		debugPoint()
		pointTileCollision()
		containerItemsFitWhere()
		containerAvailable()
		getProperty()
		containerItems()
		threatLevel()
		entityType()
		sendEntityMessage()
		material()
		liquidAt()
		containerSize()
		debugText()
		monsterType()
		entityMoney()
		nearestTo()
		npcLineQuery()
		entityPortrait()
		entityName()
		entityDamageTeam()
		containerConsumeAt()
		entityAggressive()
		windLevel()
		monsterQuery()
		entityExists()
		loungeableQuery()
		npcQuery()
		entityLineQuery()
	}
	root = {
		createBiome()
		imageSpaces()
		createItem()
		loadVersionedJson()
		createTreasure()
		getMatchingTenants()
		monsterSkillParameter()
		getConfiguration()
		npcVariant()
		itemHasTag()
		imageSize()
		projectileGravityMultiplier()
		nonEmptyRegion()
		evalFunction2()
		projectileConfig()
		materialMiningSound()
		generateName()
		isTreasurePool()
		hasTech()
		behaviorModule()
		itemConfig()
		treeStemDirectory()
		evalFunction()
		techConfig()
		npcConfig()
		setConfigurationPath()
		getConfigurationPath()
		materialHealth()
		materialFootstepSound()
		monsterMovementSettings()
		materialPath()
		setConfiguration()
		monsterPortrait()
		itemType()
		questConfig()
		recipesForItem()
		assetJson()
		treeFoliageDirectory()
		techType()
		liquidStatusEffects()
		makeCurrentVersionedJson()
		itemTags()
		tenantConfig()
		npcPortrait()
	}
	jsize()
	status = {
		setResourceLocked()
		resourcePercentage()
		addPersistentEffects()
		removeEphemeralEffect()
		resource()
		setResourcePercentage()
		resourcePositive()
		damageTakenSince()
		statPositive()
		stat()
		statusProperty()
		activeUniqueStatusEffectSummary()
		inflictedHitsSince()
		resourceMax()
		setStatusProperty()
		setPersistentEffects()
		resetAllResources()
		addEphemeralEffects()
		overConsumeResource()
		modifyResource()
		addEphemeralEffect()
		getPersistentEffects()
		resetResource()
		consumeResource()
		clearPersistentEffects()
		modifyResourcePercentage()
		clearEphemeralEffects()
		resourceNames()
		addPersistentEffect()
		resourceLocked()
		clearAllPersistentEffects()
		inflictedDamageSince()
		isResource()
		setResource()
		giveResource()
	}
	xpcall()
	getmetatable()
	utf8 = {
		len()
		codepoint()
		offset()
		codes()
		charpattern = "[
[23:35:44.881] [Warn] 	select()
	rawequal()
	rawset()
	string = {
		gmatch()
		char()
		sub()
		unpack()
		upper()
		lower()
		find()
		rep()
		dump()
		len()
		reverse()
		packsize()
		pack()
		byte()
		match()
		format()
		gsub()
	}
	require()
	pairs()
	next()
	jobject()
	math = {
		pi = 3.1415926535898
		rad()
		max()
		sqrt()
		random()
		floor()
		log()
		acos()
		fmod()
		mininteger = -9223372036854775808
		type()
		huge = inf
		randomseed()
		deg()
		exp()
		maxinteger = 9223372036854775807
		cos()
		min()
		tointeger()
		modf()
		asin()
		tan()
		atan()
		abs()
		sin()
		ult()
		ceil()
	}
	print()
	pcall()
	type()
	init()
	setmetatable()
	jresize()
	ic = {
		checkStack()
		itemAmount()
		stripColor()
		quickstack()
		itemConfig()
		amountEquipped()
		sortFunc()
		lock()
		giveBack()
		renameThis()
		sort()
		searchBox()
		sort_relative()
		clientVersion = 1
		renameButton()
		searchButton()
		getQuality()
	}
	player = {
		equippedTech()
		altHandItem()
		giveEssentialItem()
		consumeTaggedItem()
		setUniverseFlag()
		species()
		itemsWithTag()
		worldId()
		warp()
		completeMission()
		inventoryTags()
		upgradeShip()
		hasQuest()
		consumeItem()
		gender()
		primaryHandItem()
		essentialItem()
		equippedItem()
		setIntroComplete()
		playTime()
		enabledTechs()
		recordEvent()
		playCinematic()
		introComplete()
		hasCompletedQuest()
		makeTechAvailable()
		consumeItemWithParameter()
		startQuest()
		hasItemWithParameter()
		getItemWithParameter()
		lounge()
		enableTech()
		equipTech()
		enableMission()
		removeEssentialItem()
		isLounging()
		availableTechs()
		primaryHandItemTags()
		makeTechUnavailable()
		confirm()
		serverUuid()
		addBookmark()
		altHandItemTags()
		cleanupItems()
		radioMessage()
		setEquippedItem()
		ownShipWorldId()
		hasItem()
		canStartQuest()
		giveBlueprint()
		hasCountOfItem()
		shipUpgrades()
		giveItem()
	}
	config = {
		getParameter()
	}
	self = {
	}
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	world = {
		spawnItem()
		entityPosition()
		entityHealth()
		damageTileArea()
		day()
		placeMaterial()
		entityDescription()
		containerPutItemsAt()
		entityVelocity()
		damageTiles()
		entityHandItem()
		objectAt()
		setProperty()
		containerItemApply()
		containerClose()
		distance()
		findUniqueEntity()
		gravity()
		rectTileCollision()
		entitySpecies()
		platformerPathStart()
		containerOpen()
		containerTakeAll()
		breathable()
		npcType()
		containerAddItems()
		dayLength()
		loungeableOccupied()
		placeObject()
		isTileProtected()
		destroyLiquid()
		debugLine()
		spawnLiquid()
		entityCanDamage()
		containerItemsCanFit()
		xwrap()
		entityUniqueId()
		itemDropQuery()
		lightLevel()
		placeMod()
		spawnNpc()
		spawnTreasure()
		time()
		underground()
		spawnVehicle()
		spawnMonster()
		timeOfDay()
		findPlatformerPath()
		debugPoly()
		containerTakeNumItemsAt()
		isMonster()
		farmableStage()
		polyCollision()
		objectLineQuery()
		entityHasCountOfItem()
		entityHandItemDescriptor()
		tileIsOccupied()
		resolvePolyCollision()
		pointCollision()
		callScriptedEntity()
		collisionBlocksAlongLine()
		containerStackItems()
		objectSpaces()
		containerConsume()
		spawnStagehand()
		spawnProjectile()
		stagehandType()
		entityQuery()
		lineTileCollision()
		containerSwapItemsNoCombine()
		liquidAlongLine()
		playerQuery()
		objectQuery()
		entityGender()
		rectCollision()
		containerItemAt()
		polyContains()
		containerTakeAt()
		magnitude()
		mod()
		containerSwapItems()
		isNpc()
		lineCollision()
		getObjectParameter()
		debugPoint()
		pointTileCollision()
		containerItemsFitWhere()
		containerAvailable()
		getProperty()
		containerItems()
		threatLevel()
		entityType()
		sendEntityMessage()
		material()
		liquidAt()
		containerSize()
		debugText()
		monsterType()
		entityMoney()
		nearestTo()
		npcLineQuery()
		entityPortrait()
		entityName()
		entityDamageTeam()
		containerConsumeAt()
		entityAggressive()
		windLevel()
		monsterQuery()
		entityExists()
		loungeableQuery()
		npcQuery()
		entityLineQuery()
	}
	root = {
		createBiome()
		imageSpaces()
		createItem()
		loadVersionedJson()
		createTreasure()
		getMatchingTenants()
		monsterSkillParameter()
		getConfiguration()
		npcVariant()
		itemHasTag()
		imageSize()
		projectileGravityMultiplier()
		nonEmptyRegion()
		evalFunction2()
		projectileConfig()
		materialMiningSound()
		generateName()
		isTreasurePool()
		hasTech()
		behaviorModule()
		itemConfig()
		treeStemDirectory()
		evalFunction()
		techConfig()
		npcConfig()
		setConfigurationPath()
		getConfigurationPath()
		materialHealth()
		materialFootstepSound()
		monsterMovementSettings()
		materialPath()
		setConfiguration()
		monsterPortrait()
		itemType()
		questConfig()
		recipesForItem()
		assetJson()
		treeFoliageDirectory()
		techType()
		liquidStatusEffects()
		makeCurrentVersionedJson()
		itemTags()
		tenantConfig()
		npcPortrait()
	}
	jsize()
	status = {
		setResourceLocked()
		resourcePercentage()
		addPersistentEffects()
		removeEphemeralEffect()
		resource()
		setResourcePercentage()
		resourcePositive()
		damageTakenSince()
		statPositive()
		stat()
		statusProperty()
		activeUniqueStatusEffectSummary()
		inflictedHitsSince()
		resourceMax()
		setStatusProperty()
		setPersistentEffects()
		resetAllResources()
		addEphemeralEffects()
		overConsumeResource()
		modifyResource()
		addEphemeralEffect()
		getPersistentEffects()
		resetResource()
		consumeResource()
		clearPersistentEffects()
		modifyResourcePercentage()
		clearEphemeralEffects()
		resourceNames()
		addPersistentEffect()
		resourceLocked()
		clearAllPersistentEffects()
		inflictedDamageSince()
		isResource()
		setResource()
		giveResource()
	}
	xpcall()
	getmetatable()
	utf8 = {
		len()
		codepoint()
		offset()
		codes()
		charpattern = "[
[23:35:45.966] [Warn] 	select()
	rawequal()
	rawset()
	string = {
		gmatch()
		char()
		sub()
		unpack()
		upper()
		lower()
		find()
		rep()
		dump()
		len()
		reverse()
		packsize()
		pack()
		byte()
		match()
		format()
		gsub()
	}
	require()
	pairs()
	next()
	jobject()
	math = {
		pi = 3.1415926535898
		rad()
		max()
		sqrt()
		random()
		floor()
		log()
		acos()
		fmod()
		mininteger = -9223372036854775808
		type()
		huge = inf
		randomseed()
		deg()
		exp()
		maxinteger = 9223372036854775807
		cos()
		min()
		tointeger()
		modf()
		asin()
		tan()
		atan()
		abs()
		sin()
		ult()
		ceil()
	}
	print()
	pcall()
	type()
	init()
	setmetatable()
	jresize()
	ic = {
		checkStack()
		itemAmount()
		stripColor()
		quickstack()
		itemConfig()
		amountEquipped()
		sortFunc()
		lock()
		giveBack()
		renameThis()
		sort()
		searchBox()
		sort_relative()
		clientVersion = 1
		renameButton()
		searchButton()
		getQuality()
	}
	player = {
		equippedTech()
		altHandItem()
		giveEssentialItem()
		consumeTaggedItem()
		setUniverseFlag()
		species()
		itemsWithTag()
		worldId()
		warp()
		completeMission()
		inventoryTags()
		upgradeShip()
		hasQuest()
		consumeItem()
		gender()
		primaryHandItem()
		essentialItem()
		equippedItem()
		setIntroComplete()
		playTime()
		enabledTechs()
		recordEvent()
		playCinematic()
		introComplete()
		hasCompletedQuest()
		makeTechAvailable()
		consumeItemWithParameter()
		startQuest()
		hasItemWithParameter()
		getItemWithParameter()
		lounge()
		enableTech()
		equipTech()
		enableMission()
		removeEssentialItem()
		isLounging()
		availableTechs()
		primaryHandItemTags()
		makeTechUnavailable()
		confirm()
		serverUuid()
		addBookmark()
		altHandItemTags()
		cleanupItems()
		radioMessage()
		setEquippedItem()
		ownShipWorldId()
		hasItem()
		canStartQuest()
		giveBlueprint()
		hasCountOfItem()
		shipUpgrades()
		giveItem()
	}
	config = {
		getParameter()
	}
	self = {
	}
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	world = {
		spawnItem()
		entityPosition()
		entityHealth()
		damageTileArea()
		day()
		placeMaterial()
		entityDescription()
		containerPutItemsAt()
		entityVelocity()
		damageTiles()
		entityHandItem()
		objectAt()
		setProperty()
		containerItemApply()
		containerClose()
		distance()
		findUniqueEntity()
		gravity()
		rectTileCollision()
		entitySpecies()
		platformerPathStart()
		containerOpen()
		containerTakeAll()
		breathable()
		npcType()
		containerAddItems()
		dayLength()
		loungeableOccupied()
		placeObject()
		isTileProtected()
		destroyLiquid()
		debugLine()
		spawnLiquid()
		entityCanDamage()
		containerItemsCanFit()
		xwrap()
		entityUniqueId()
		itemDropQuery()
		lightLevel()
		placeMod()
		spawnNpc()
		spawnTreasure()
		time()
		underground()
		spawnVehicle()
		spawnMonster()
		timeOfDay()
		findPlatformerPath()
		debugPoly()
		containerTakeNumItemsAt()
		isMonster()
		farmableStage()
		polyCollision()
		objectLineQuery()
		entityHasCountOfItem()
		entityHandItemDescriptor()
		tileIsOccupied()
		resolvePolyCollision()
		pointCollision()
		callScriptedEntity()
		collisionBlocksAlongLine()
		containerStackItems()
		objectSpaces()
		containerConsume()
		spawnStagehand()
		spawnProjectile()
		stagehandType()
		entityQuery()
		lineTileCollision()
		containerSwapItemsNoCombine()
		liquidAlongLine()
		playerQuery()
		objectQuery()
		entityGender()
		rectCollision()
		containerItemAt()
		polyContains()
		containerTakeAt()
		magnitude()
		mod()
		containerSwapItems()
		isNpc()
		lineCollision()
		getObjectParameter()
		debugPoint()
		pointTileCollision()
		containerItemsFitWhere()
		containerAvailable()
		getProperty()
		containerItems()
		threatLevel()
		entityType()
		sendEntityMessage()
		material()
		liquidAt()
		containerSize()
		debugText()
		monsterType()
		entityMoney()
		nearestTo()
		npcLineQuery()
		entityPortrait()
		entityName()
		entityDamageTeam()
		containerConsumeAt()
		entityAggressive()
		windLevel()
		monsterQuery()
		entityExists()
		loungeableQuery()
		npcQuery()
		entityLineQuery()
	}
	root = {
		createBiome()
		imageSpaces()
		createItem()
		loadVersionedJson()
		createTreasure()
		getMatchingTenants()
		monsterSkillParameter()
		getConfiguration()
		npcVariant()
		itemHasTag()
		imageSize()
		projectileGravityMultiplier()
		nonEmptyRegion()
		evalFunction2()
		projectileConfig()
		materialMiningSound()
		generateName()
		isTreasurePool()
		hasTech()
		behaviorModule()
		itemConfig()
		treeStemDirectory()
		evalFunction()
		techConfig()
		npcConfig()
		setConfigurationPath()
		getConfigurationPath()
		materialHealth()
		materialFootstepSound()
		monsterMovementSettings()
		materialPath()
		setConfiguration()
		monsterPortrait()
		itemType()
		questConfig()
		recipesForItem()
		assetJson()
		treeFoliageDirectory()
		techType()
		liquidStatusEffects()
		makeCurrentVersionedJson()
		itemTags()
		tenantConfig()
		npcPortrait()
	}
	jsize()
	status = {
		setResourceLocked()
		resourcePercentage()
		addPersistentEffects()
		removeEphemeralEffect()
		resource()
		setResourcePercentage()
		resourcePositive()
		damageTakenSince()
		statPositive()
		stat()
		statusProperty()
		activeUniqueStatusEffectSummary()
		inflictedHitsSince()
		resourceMax()
		setStatusProperty()
		setPersistentEffects()
		resetAllResources()
		addEphemeralEffects()
		overConsumeResource()
		modifyResource()
		addEphemeralEffect()
		getPersistentEffects()
		resetResource()
		consumeResource()
		clearPersistentEffects()
		modifyResourcePercentage()
		clearEphemeralEffects()
		resourceNames()
		addPersistentEffect()
		resourceLocked()
		clearAllPersistentEffects()
		inflictedDamageSince()
		isResource()
		setResource()
		giveResource()
	}
	xpcall()
	getmetatable()
	utf8 = {
		len()
		codepoint()
		offset()
		codes()
		charpattern = "[
[23:35:47.681] [Warn] 	select()
	rawequal()
	rawset()
	string = {
		gmatch()
		char()
		sub()
		unpack()
		upper()
		lower()
		find()
		rep()
		dump()
		len()
		reverse()
		packsize()
		pack()
		byte()
		match()
		format()
		gsub()
	}
	require()
	pairs()
	next()
	jobject()
	math = {
		pi = 3.1415926535898
		rad()
		max()
		sqrt()
		random()
		floor()
		log()
		acos()
		fmod()
		mininteger = -9223372036854775808
		type()
		huge = inf
		randomseed()
		deg()
		exp()
		maxinteger = 9223372036854775807
		cos()
		min()
		tointeger()
		modf()
		asin()
		tan()
		atan()
		abs()
		sin()
		ult()
		ceil()
	}
	print()
	pcall()
	type()
	init()
	setmetatable()
	jresize()
	ic = {
		checkStack()
		itemAmount()
		stripColor()
		quickstack()
		itemConfig()
		amountEquipped()
		sortFunc()
		lock()
		giveBack()
		renameThis()
		sort()
		searchBox()
		sort_relative()
		clientVersion = 1
		renameButton()
		searchButton()
		getQuality()
	}
	player = {
		equippedTech()
		altHandItem()
		giveEssentialItem()
		consumeTaggedItem()
		setUniverseFlag()
		species()
		itemsWithTag()
		worldId()
		warp()
		completeMission()
		inventoryTags()
		upgradeShip()
		hasQuest()
		consumeItem()
		gender()
		primaryHandItem()
		essentialItem()
		equippedItem()
		setIntroComplete()
		playTime()
		enabledTechs()
		recordEvent()
		playCinematic()
		introComplete()
		hasCompletedQuest()
		makeTechAvailable()
		consumeItemWithParameter()
		startQuest()
		hasItemWithParameter()
		getItemWithParameter()
		lounge()
		enableTech()
		equipTech()
		enableMission()
		removeEssentialItem()
		isLounging()
		availableTechs()
		primaryHandItemTags()
		makeTechUnavailable()
		confirm()
		serverUuid()
		addBookmark()
		altHandItemTags()
		cleanupItems()
		radioMessage()
		setEquippedItem()
		ownShipWorldId()
		hasItem()
		canStartQuest()
		giveBlueprint()
		hasCountOfItem()
		shipUpgrades()
		giveItem()
	}
	config = {
		getParameter()
	}
	self = {
	}
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	world = {
		spawnItem()
		entityPosition()
		entityHealth()
		damageTileArea()
		day()
		placeMaterial()
		entityDescription()
		containerPutItemsAt()
		entityVelocity()
		damageTiles()
		entityHandItem()
		objectAt()
		setProperty()
		containerItemApply()
		containerClose()
		distance()
		findUniqueEntity()
		gravity()
		rectTileCollision()
		entitySpecies()
		platformerPathStart()
		containerOpen()
		containerTakeAll()
		breathable()
		npcType()
		containerAddItems()
		dayLength()
		loungeableOccupied()
		placeObject()
		isTileProtected()
		destroyLiquid()
		debugLine()
		spawnLiquid()
		entityCanDamage()
		containerItemsCanFit()
		xwrap()
		entityUniqueId()
		itemDropQuery()
		lightLevel()
		placeMod()
		spawnNpc()
		spawnTreasure()
		time()
		underground()
		spawnVehicle()
		spawnMonster()
		timeOfDay()
		findPlatformerPath()
		debugPoly()
		containerTakeNumItemsAt()
		isMonster()
		farmableStage()
		polyCollision()
		objectLineQuery()
		entityHasCountOfItem()
		entityHandItemDescriptor()
		tileIsOccupied()
		resolvePolyCollision()
		pointCollision()
		callScriptedEntity()
		collisionBlocksAlongLine()
		containerStackItems()
		objectSpaces()
		containerConsume()
		spawnStagehand()
		spawnProjectile()
		stagehandType()
		entityQuery()
		lineTileCollision()
		containerSwapItemsNoCombine()
		liquidAlongLine()
		playerQuery()
		objectQuery()
		entityGender()
		rectCollision()
		containerItemAt()
		polyContains()
		containerTakeAt()
		magnitude()
		mod()
		containerSwapItems()
		isNpc()
		lineCollision()
		getObjectParameter()
		debugPoint()
		pointTileCollision()
		containerItemsFitWhere()
		containerAvailable()
		getProperty()
		containerItems()
		threatLevel()
		entityType()
		sendEntityMessage()
		material()
		liquidAt()
		containerSize()
		debugText()
		monsterType()
		entityMoney()
		nearestTo()
		npcLineQuery()
		entityPortrait()
		entityName()
		entityDamageTeam()
		containerConsumeAt()
		entityAggressive()
		windLevel()
		monsterQuery()
		entityExists()
		loungeableQuery()
		npcQuery()
		entityLineQuery()
	}
	root = {
		createBiome()
		imageSpaces()
		createItem()
		loadVersionedJson()
		createTreasure()
		getMatchingTenants()
		monsterSkillParameter()
		getConfiguration()
		npcVariant()
		itemHasTag()
		imageSize()
		projectileGravityMultiplier()
		nonEmptyRegion()
		evalFunction2()
		projectileConfig()
		materialMiningSound()
		generateName()
		isTreasurePool()
		hasTech()
		behaviorModule()
		itemConfig()
		treeStemDirectory()
		evalFunction()
		techConfig()
		npcConfig()
		setConfigurationPath()
		getConfigurationPath()
		materialHealth()
		materialFootstepSound()
		monsterMovementSettings()
		materialPath()
		setConfiguration()
		monsterPortrait()
		itemType()
		questConfig()
		recipesForItem()
		assetJson()
		treeFoliageDirectory()
		techType()
		liquidStatusEffects()
		makeCurrentVersionedJson()
		itemTags()
		tenantConfig()
		npcPortrait()
	}
	jsize()
	status = {
		setResourceLocked()
		resourcePercentage()
		addPersistentEffects()
		removeEphemeralEffect()
		resource()
		setResourcePercentage()
		resourcePositive()
		damageTakenSince()
		statPositive()
		stat()
		statusProperty()
		activeUniqueStatusEffectSummary()
		inflictedHitsSince()
		resourceMax()
		setStatusProperty()
		setPersistentEffects()
		resetAllResources()
		addEphemeralEffects()
		overConsumeResource()
		modifyResource()
		addEphemeralEffect()
		getPersistentEffects()
		resetResource()
		consumeResource()
		clearPersistentEffects()
		modifyResourcePercentage()
		clearEphemeralEffects()
		resourceNames()
		addPersistentEffect()
		resourceLocked()
		clearAllPersistentEffects()
		inflictedDamageSince()
		isResource()
		setResource()
		giveResource()
	}
	xpcall()
	getmetatable()
	utf8 = {
		len()
		codepoint()
		offset()
		codes()
		charpattern = "[
[23:35:48.732] [Warn] 	select()
	rawequal()
	rawset()
	string = {
		gmatch()
		char()
		sub()
		unpack()
		upper()
		lower()
		find()
		rep()
		dump()
		len()
		reverse()
		packsize()
		pack()
		byte()
		match()
		format()
		gsub()
	}
	require()
	pairs()
	next()
	jobject()
	math = {
		pi = 3.1415926535898
		rad()
		max()
		sqrt()
		random()
		floor()
		log()
		acos()
		fmod()
		mininteger = -9223372036854775808
		type()
		huge = inf
		randomseed()
		deg()
		exp()
		maxinteger = 9223372036854775807
		cos()
		min()
		tointeger()
		modf()
		asin()
		tan()
		atan()
		abs()
		sin()
		ult()
		ceil()
	}
	print()
	pcall()
	type()
	init()
	setmetatable()
	jresize()
	ic = {
		checkStack()
		itemAmount()
		stripColor()
		quickstack()
		itemConfig()
		amountEquipped()
		sortFunc()
		lock()
		giveBack()
		renameThis()
		sort()
		searchBox()
		sort_relative()
		clientVersion = 1
		renameButton()
		searchButton()
		getQuality()
	}
	player = {
		equippedTech()
		altHandItem()
		giveEssentialItem()
		consumeTaggedItem()
		setUniverseFlag()
		species()
		itemsWithTag()
		worldId()
		warp()
		completeMission()
		inventoryTags()
		upgradeShip()
		hasQuest()
		consumeItem()
		gender()
		primaryHandItem()
		essentialItem()
		equippedItem()
		setIntroComplete()
		playTime()
		enabledTechs()
		recordEvent()
		playCinematic()
		introComplete()
		hasCompletedQuest()
		makeTechAvailable()
		consumeItemWithParameter()
		startQuest()
		hasItemWithParameter()
		getItemWithParameter()
		lounge()
		enableTech()
		equipTech()
		enableMission()
		removeEssentialItem()
		isLounging()
		availableTechs()
		primaryHandItemTags()
		makeTechUnavailable()
		confirm()
		serverUuid()
		addBookmark()
		altHandItemTags()
		cleanupItems()
		radioMessage()
		setEquippedItem()
		ownShipWorldId()
		hasItem()
		canStartQuest()
		giveBlueprint()
		hasCountOfItem()
		shipUpgrades()
		giveItem()
	}
	config = {
		getParameter()
	}
	self = {
	}
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	world = {
		spawnItem()
		entityPosition()
		entityHealth()
		damageTileArea()
		day()
		placeMaterial()
		entityDescription()
		containerPutItemsAt()
		entityVelocity()
		damageTiles()
		entityHandItem()
		objectAt()
		setProperty()
		containerItemApply()
		containerClose()
		distance()
		findUniqueEntity()
		gravity()
		rectTileCollision()
		entitySpecies()
		platformerPathStart()
		containerOpen()
		containerTakeAll()
		breathable()
		npcType()
		containerAddItems()
		dayLength()
		loungeableOccupied()
		placeObject()
		isTileProtected()
		destroyLiquid()
		debugLine()
		spawnLiquid()
		entityCanDamage()
		containerItemsCanFit()
		xwrap()
		entityUniqueId()
		itemDropQuery()
		lightLevel()
		placeMod()
		spawnNpc()
		spawnTreasure()
		time()
		underground()
		spawnVehicle()
		spawnMonster()
		timeOfDay()
		findPlatformerPath()
		debugPoly()
		containerTakeNumItemsAt()
		isMonster()
		farmableStage()
		polyCollision()
		objectLineQuery()
		entityHasCountOfItem()
		entityHandItemDescriptor()
		tileIsOccupied()
		resolvePolyCollision()
		pointCollision()
		callScriptedEntity()
		collisionBlocksAlongLine()
		containerStackItems()
		objectSpaces()
		containerConsume()
		spawnStagehand()
		spawnProjectile()
		stagehandType()
		entityQuery()
		lineTileCollision()
		containerSwapItemsNoCombine()
		liquidAlongLine()
		playerQuery()
		objectQuery()
		entityGender()
		rectCollision()
		containerItemAt()
		polyContains()
		containerTakeAt()
		magnitude()
		mod()
		containerSwapItems()
		isNpc()
		lineCollision()
		getObjectParameter()
		debugPoint()
		pointTileCollision()
		containerItemsFitWhere()
		containerAvailable()
		getProperty()
		containerItems()
		threatLevel()
		entityType()
		sendEntityMessage()
		material()
		liquidAt()
		containerSize()
		debugText()
		monsterType()
		entityMoney()
		nearestTo()
		npcLineQuery()
		entityPortrait()
		entityName()
		entityDamageTeam()
		containerConsumeAt()
		entityAggressive()
		windLevel()
		monsterQuery()
		entityExists()
		loungeableQuery()
		npcQuery()
		entityLineQuery()
	}
	root = {
		createBiome()
		imageSpaces()
		createItem()
		loadVersionedJson()
		createTreasure()
		getMatchingTenants()
		monsterSkillParameter()
		getConfiguration()
		npcVariant()
		itemHasTag()
		imageSize()
		projectileGravityMultiplier()
		nonEmptyRegion()
		evalFunction2()
		projectileConfig()
		materialMiningSound()
		generateName()
		isTreasurePool()
		hasTech()
		behaviorModule()
		itemConfig()
		treeStemDirectory()
		evalFunction()
		techConfig()
		npcConfig()
		setConfigurationPath()
		getConfigurationPath()
		materialHealth()
		materialFootstepSound()
		monsterMovementSettings()
		materialPath()
		setConfiguration()
		monsterPortrait()
		itemType()
		questConfig()
		recipesForItem()
		assetJson()
		treeFoliageDirectory()
		techType()
		liquidStatusEffects()
		makeCurrentVersionedJson()
		itemTags()
		tenantConfig()
		npcPortrait()
	}
	jsize()
	status = {
		setResourceLocked()
		resourcePercentage()
		addPersistentEffects()
		removeEphemeralEffect()
		resource()
		setResourcePercentage()
		resourcePositive()
		damageTakenSince()
		statPositive()
		stat()
		statusProperty()
		activeUniqueStatusEffectSummary()
		inflictedHitsSince()
		resourceMax()
		setStatusProperty()
		setPersistentEffects()
		resetAllResources()
		addEphemeralEffects()
		overConsumeResource()
		modifyResource()
		addEphemeralEffect()
		getPersistentEffects()
		resetResource()
		consumeResource()
		clearPersistentEffects()
		modifyResourcePercentage()
		clearEphemeralEffects()
		resourceNames()
		addPersistentEffect()
		resourceLocked()
		clearAllPersistentEffects()
		inflictedDamageSince()
		isResource()
		setResource()
		giveResource()
	}
	xpcall()
	getmetatable()
	utf8 = {
		len()
		codepoint()
		offset()
		codes()
		charpattern = "[
[23:36:41.505] [Warn] 	select()
	rawequal()
	rawset()
	string = {
		gmatch()
		char()
		sub()
		unpack()
		upper()
		lower()
		find()
		rep()
		dump()
		len()
		reverse()
		packsize()
		pack()
		byte()
		match()
		format()
		gsub()
	}
	require()
	pairs()
	next()
	jobject()
	math = {
		pi = 3.1415926535898
		rad()
		max()
		sqrt()
		random()
		floor()
		log()
		acos()
		fmod()
		mininteger = -9223372036854775808
		type()
		huge = inf
		randomseed()
		deg()
		exp()
		maxinteger = 9223372036854775807
		cos()
		min()
		tointeger()
		modf()
		asin()
		tan()
		atan()
		abs()
		sin()
		ult()
		ceil()
	}
	print()
	pcall()
	type()
	init()
	setmetatable()
	jresize()
	ic = {
		checkStack()
		itemAmount()
		stripColor()
		quickstack()
		itemConfig()
		amountEquipped()
		sortFunc()
		lock()
		giveBack()
		renameThis()
		sort()
		searchBox()
		sort_relative()
		clientVersion = 1
		renameButton()
		searchButton()
		getQuality()
	}
	player = {
		equippedTech()
		altHandItem()
		giveEssentialItem()
		consumeTaggedItem()
		setUniverseFlag()
		species()
		itemsWithTag()
		worldId()
		warp()
		completeMission()
		inventoryTags()
		upgradeShip()
		hasQuest()
		consumeItem()
		gender()
		primaryHandItem()
		essentialItem()
		equippedItem()
		setIntroComplete()
		playTime()
		enabledTechs()
		recordEvent()
		playCinematic()
		introComplete()
		hasCompletedQuest()
		makeTechAvailable()
		consumeItemWithParameter()
		startQuest()
		hasItemWithParameter()
		getItemWithParameter()
		lounge()
		enableTech()
		equipTech()
		enableMission()
		removeEssentialItem()
		isLounging()
		availableTechs()
		primaryHandItemTags()
		makeTechUnavailable()
		confirm()
		serverUuid()
		addBookmark()
		altHandItemTags()
		cleanupItems()
		radioMessage()
		setEquippedItem()
		ownShipWorldId()
		hasItem()
		canStartQuest()
		giveBlueprint()
		hasCountOfItem()
		shipUpgrades()
		giveItem()
	}
	config = {
		getParameter()
	}
	self = {
	}
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	world = {
		spawnItem()
		entityPosition()
		entityHealth()
		damageTileArea()
		day()
		placeMaterial()
		entityDescription()
		containerPutItemsAt()
		entityVelocity()
		damageTiles()
		entityHandItem()
		objectAt()
		setProperty()
		containerItemApply()
		containerClose()
		distance()
		findUniqueEntity()
		gravity()
		rectTileCollision()
		entitySpecies()
		platformerPathStart()
		containerOpen()
		containerTakeAll()
		breathable()
		npcType()
		containerAddItems()
		dayLength()
		loungeableOccupied()
		placeObject()
		isTileProtected()
		destroyLiquid()
		debugLine()
		spawnLiquid()
		entityCanDamage()
		containerItemsCanFit()
		xwrap()
		entityUniqueId()
		itemDropQuery()
		lightLevel()
		placeMod()
		spawnNpc()
		spawnTreasure()
		time()
		underground()
		spawnVehicle()
		spawnMonster()
		timeOfDay()
		findPlatformerPath()
		debugPoly()
		containerTakeNumItemsAt()
		isMonster()
		farmableStage()
		polyCollision()
		objectLineQuery()
		entityHasCountOfItem()
		entityHandItemDescriptor()
		tileIsOccupied()
		resolvePolyCollision()
		pointCollision()
		callScriptedEntity()
		collisionBlocksAlongLine()
		containerStackItems()
		objectSpaces()
		containerConsume()
		spawnStagehand()
		spawnProjectile()
		stagehandType()
		entityQuery()
		lineTileCollision()
		containerSwapItemsNoCombine()
		liquidAlongLine()
		playerQuery()
		objectQuery()
		entityGender()
		rectCollision()
		containerItemAt()
		polyContains()
		containerTakeAt()
		magnitude()
		mod()
		containerSwapItems()
		isNpc()
		lineCollision()
		getObjectParameter()
		debugPoint()
		pointTileCollision()
		containerItemsFitWhere()
		containerAvailable()
		getProperty()
		containerItems()
		threatLevel()
		entityType()
		sendEntityMessage()
		material()
		liquidAt()
		containerSize()
		debugText()
		monsterType()
		entityMoney()
		nearestTo()
		npcLineQuery()
		entityPortrait()
		entityName()
		entityDamageTeam()
		containerConsumeAt()
		entityAggressive()
		windLevel()
		monsterQuery()
		entityExists()
		loungeableQuery()
		npcQuery()
		entityLineQuery()
	}
	root = {
		createBiome()
		imageSpaces()
		createItem()
		loadVersionedJson()
		createTreasure()
		getMatchingTenants()
		monsterSkillParameter()
		getConfiguration()
		npcVariant()
		itemHasTag()
		imageSize()
		projectileGravityMultiplier()
		nonEmptyRegion()
		evalFunction2()
		projectileConfig()
		materialMiningSound()
		generateName()
		isTreasurePool()
		hasTech()
		behaviorModule()
		itemConfig()
		treeStemDirectory()
		evalFunction()
		techConfig()
		npcConfig()
		setConfigurationPath()
		getConfigurationPath()
		materialHealth()
		materialFootstepSound()
		monsterMovementSettings()
		materialPath()
		setConfiguration()
		monsterPortrait()
		itemType()
		questConfig()
		recipesForItem()
		assetJson()
		treeFoliageDirectory()
		techType()
		liquidStatusEffects()
		makeCurrentVersionedJson()
		itemTags()
		tenantConfig()
		npcPortrait()
	}
	jsize()
	status = {
		setResourceLocked()
		resourcePercentage()
		addPersistentEffects()
		removeEphemeralEffect()
		resource()
		setResourcePercentage()
		resourcePositive()
		damageTakenSince()
		statPositive()
		stat()
		statusProperty()
		activeUniqueStatusEffectSummary()
		inflictedHitsSince()
		resourceMax()
		setStatusProperty()
		setPersistentEffects()
		resetAllResources()
		addEphemeralEffects()
		overConsumeResource()
		modifyResource()
		addEphemeralEffect()
		getPersistentEffects()
		resetResource()
		consumeResource()
		clearPersistentEffects()
		modifyResourcePercentage()
		clearEphemeralEffects()
		resourceNames()
		addPersistentEffect()
		resourceLocked()
		clearAllPersistentEffects()
		inflictedDamageSince()
		isResource()
		setResource()
		giveResource()
	}
	xpcall()
	getmetatable()
	utf8 = {
		len()
		codepoint()
		offset()
		codes()
		charpattern = "[
[23:36:44.601] [Info] [IC] [Sort] Time elapsed: 0.008
[23:36:47.932] [Warn] 	select()
	rawequal()
	rawset()
	string = {
		gmatch()
		char()
		sub()
		unpack()
		upper()
		lower()
		find()
		rep()
		dump()
		len()
		reverse()
		packsize()
		pack()
		byte()
		match()
		format()
		gsub()
	}
	require()
	pairs()
	next()
	jobject()
	math = {
		pi = 3.1415926535898
		rad()
		max()
		sqrt()
		random()
		floor()
		log()
		acos()
		fmod()
		mininteger = -9223372036854775808
		type()
		huge = inf
		randomseed()
		deg()
		exp()
		maxinteger = 9223372036854775807
		cos()
		min()
		tointeger()
		modf()
		asin()
		tan()
		atan()
		abs()
		sin()
		ult()
		ceil()
	}
	print()
	pcall()
	type()
	init()
	setmetatable()
	jresize()
	ic = {
		checkStack()
		itemAmount()
		stripColor()
		quickstack()
		itemConfig()
		amountEquipped()
		sortFunc()
		lock()
		giveBack()
		renameThis()
		sort()
		searchBox()
		sort_relative()
		clientVersion = 1
		renameButton()
		searchButton()
		getQuality()
	}
	player = {
		equippedTech()
		altHandItem()
		giveEssentialItem()
		consumeTaggedItem()
		setUniverseFlag()
		species()
		itemsWithTag()
		worldId()
		warp()
		completeMission()
		inventoryTags()
		upgradeShip()
		hasQuest()
		consumeItem()
		gender()
		primaryHandItem()
		essentialItem()
		equippedItem()
		setIntroComplete()
		playTime()
		enabledTechs()
		recordEvent()
		playCinematic()
		introComplete()
		hasCompletedQuest()
		makeTechAvailable()
		consumeItemWithParameter()
		startQuest()
		hasItemWithParameter()
		getItemWithParameter()
		lounge()
		enableTech()
		equipTech()
		enableMission()
		removeEssentialItem()
		isLounging()
		availableTechs()
		primaryHandItemTags()
		makeTechUnavailable()
		confirm()
		serverUuid()
		addBookmark()
		altHandItemTags()
		cleanupItems()
		radioMessage()
		setEquippedItem()
		ownShipWorldId()
		hasItem()
		canStartQuest()
		giveBlueprint()
		hasCountOfItem()
		shipUpgrades()
		giveItem()
	}
	config = {
		getParameter()
	}
	self = {
	}
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	world = {
		spawnItem()
		entityPosition()
		entityHealth()
		damageTileArea()
		day()
		placeMaterial()
		entityDescription()
		containerPutItemsAt()
		entityVelocity()
		damageTiles()
		entityHandItem()
		objectAt()
		setProperty()
		containerItemApply()
		containerClose()
		distance()
		findUniqueEntity()
		gravity()
		rectTileCollision()
		entitySpecies()
		platformerPathStart()
		containerOpen()
		containerTakeAll()
		breathable()
		npcType()
		containerAddItems()
		dayLength()
		loungeableOccupied()
		placeObject()
		isTileProtected()
		destroyLiquid()
		debugLine()
		spawnLiquid()
		entityCanDamage()
		containerItemsCanFit()
		xwrap()
		entityUniqueId()
		itemDropQuery()
		lightLevel()
		placeMod()
		spawnNpc()
		spawnTreasure()
		time()
		underground()
		spawnVehicle()
		spawnMonster()
		timeOfDay()
		findPlatformerPath()
		debugPoly()
		containerTakeNumItemsAt()
		isMonster()
		farmableStage()
		polyCollision()
		objectLineQuery()
		entityHasCountOfItem()
		entityHandItemDescriptor()
		tileIsOccupied()
		resolvePolyCollision()
		pointCollision()
		callScriptedEntity()
		collisionBlocksAlongLine()
		containerStackItems()
		objectSpaces()
		containerConsume()
		spawnStagehand()
		spawnProjectile()
		stagehandType()
		entityQuery()
		lineTileCollision()
		containerSwapItemsNoCombine()
		liquidAlongLine()
		playerQuery()
		objectQuery()
		entityGender()
		rectCollision()
		containerItemAt()
		polyContains()
		containerTakeAt()
		magnitude()
		mod()
		containerSwapItems()
		isNpc()
		lineCollision()
		getObjectParameter()
		debugPoint()
		pointTileCollision()
		containerItemsFitWhere()
		containerAvailable()
		getProperty()
		containerItems()
		threatLevel()
		entityType()
		sendEntityMessage()
		material()
		liquidAt()
		containerSize()
		debugText()
		monsterType()
		entityMoney()
		nearestTo()
		npcLineQuery()
		entityPortrait()
		entityName()
		entityDamageTeam()
		containerConsumeAt()
		entityAggressive()
		windLevel()
		monsterQuery()
		entityExists()
		loungeableQuery()
		npcQuery()
		entityLineQuery()
	}
	root = {
		createBiome()
		imageSpaces()
		createItem()
		loadVersionedJson()
		createTreasure()
		getMatchingTenants()
		monsterSkillParameter()
		getConfiguration()
		npcVariant()
		itemHasTag()
		imageSize()
		projectileGravityMultiplier()
		nonEmptyRegion()
		evalFunction2()
		projectileConfig()
		materialMiningSound()
		generateName()
		isTreasurePool()
		hasTech()
		behaviorModule()
		itemConfig()
		treeStemDirectory()
		evalFunction()
		techConfig()
		npcConfig()
		setConfigurationPath()
		getConfigurationPath()
		materialHealth()
		materialFootstepSound()
		monsterMovementSettings()
		materialPath()
		setConfiguration()
		monsterPortrait()
		itemType()
		questConfig()
		recipesForItem()
		assetJson()
		treeFoliageDirectory()
		techType()
		liquidStatusEffects()
		makeCurrentVersionedJson()
		itemTags()
		tenantConfig()
		npcPortrait()
	}
	jsize()
	status = {
		setResourceLocked()
		resourcePercentage()
		addPersistentEffects()
		removeEphemeralEffect()
		resource()
		setResourcePercentage()
		resourcePositive()
		damageTakenSince()
		statPositive()
		stat()
		statusProperty()
		activeUniqueStatusEffectSummary()
		inflictedHitsSince()
		resourceMax()
		setStatusProperty()
		setPersistentEffects()
		resetAllResources()
		addEphemeralEffects()
		overConsumeResource()
		modifyResource()
		addEphemeralEffect()
		getPersistentEffects()
		resetResource()
		consumeResource()
		clearPersistentEffects()
		modifyResourcePercentage()
		clearEphemeralEffects()
		resourceNames()
		addPersistentEffect()
		resourceLocked()
		clearAllPersistentEffects()
		inflictedDamageSince()
		isResource()
		setResource()
		giveResource()
	}
	xpcall()
	getmetatable()
	utf8 = {
		len()
		codepoint()
		offset()
		codes()
		charpattern = "[
[23:36:48.981] [Warn] 	select()
	rawequal()
	rawset()
	string = {
		gmatch()
		char()
		sub()
		unpack()
		upper()
		lower()
		find()
		rep()
		dump()
		len()
		reverse()
		packsize()
		pack()
		byte()
		match()
		format()
		gsub()
	}
	require()
	pairs()
	next()
	jobject()
	math = {
		pi = 3.1415926535898
		rad()
		max()
		sqrt()
		random()
		floor()
		log()
		acos()
		fmod()
		mininteger = -9223372036854775808
		type()
		huge = inf
		randomseed()
		deg()
		exp()
		maxinteger = 9223372036854775807
		cos()
		min()
		tointeger()
		modf()
		asin()
		tan()
		atan()
		abs()
		sin()
		ult()
		ceil()
	}
	print()
	pcall()
	type()
	init()
	setmetatable()
	jresize()
	ic = {
		checkStack()
		itemAmount()
		stripColor()
		quickstack()
		itemConfig()
		amountEquipped()
		sortFunc()
		lock()
		giveBack()
		renameThis()
		sort()
		searchBox()
		sort_relative()
		clientVersion = 1
		renameButton()
		searchButton()
		getQuality()
	}
	player = {
		equippedTech()
		altHandItem()
		giveEssentialItem()
		consumeTaggedItem()
		setUniverseFlag()
		species()
		itemsWithTag()
		worldId()
		warp()
		completeMission()
		inventoryTags()
		upgradeShip()
		hasQuest()
		consumeItem()
		gender()
		primaryHandItem()
		essentialItem()
		equippedItem()
		setIntroComplete()
		playTime()
		enabledTechs()
		recordEvent()
		playCinematic()
		introComplete()
		hasCompletedQuest()
		makeTechAvailable()
		consumeItemWithParameter()
		startQuest()
		hasItemWithParameter()
		getItemWithParameter()
		lounge()
		enableTech()
		equipTech()
		enableMission()
		removeEssentialItem()
		isLounging()
		availableTechs()
		primaryHandItemTags()
		makeTechUnavailable()
		confirm()
		serverUuid()
		addBookmark()
		altHandItemTags()
		cleanupItems()
		radioMessage()
		setEquippedItem()
		ownShipWorldId()
		hasItem()
		canStartQuest()
		giveBlueprint()
		hasCountOfItem()
		shipUpgrades()
		giveItem()
	}
	config = {
		getParameter()
	}
	self = {
	}
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	world = {
		spawnItem()
		entityPosition()
		entityHealth()
		damageTileArea()
		day()
		placeMaterial()
		entityDescription()
		containerPutItemsAt()
		entityVelocity()
		damageTiles()
		entityHandItem()
		objectAt()
		setProperty()
		containerItemApply()
		containerClose()
		distance()
		findUniqueEntity()
		gravity()
		rectTileCollision()
		entitySpecies()
		platformerPathStart()
		containerOpen()
		containerTakeAll()
		breathable()
		npcType()
		containerAddItems()
		dayLength()
		loungeableOccupied()
		placeObject()
		isTileProtected()
		destroyLiquid()
		debugLine()
		spawnLiquid()
		entityCanDamage()
		containerItemsCanFit()
		xwrap()
		entityUniqueId()
		itemDropQuery()
		lightLevel()
		placeMod()
		spawnNpc()
		spawnTreasure()
		time()
		underground()
		spawnVehicle()
		spawnMonster()
		timeOfDay()
		findPlatformerPath()
		debugPoly()
		containerTakeNumItemsAt()
		isMonster()
		farmableStage()
		polyCollision()
		objectLineQuery()
		entityHasCountOfItem()
		entityHandItemDescriptor()
		tileIsOccupied()
		resolvePolyCollision()
		pointCollision()
		callScriptedEntity()
		collisionBlocksAlongLine()
		containerStackItems()
		objectSpaces()
		containerConsume()
		spawnStagehand()
		spawnProjectile()
		stagehandType()
		entityQuery()
		lineTileCollision()
		containerSwapItemsNoCombine()
		liquidAlongLine()
		playerQuery()
		objectQuery()
		entityGender()
		rectCollision()
		containerItemAt()
		polyContains()
		containerTakeAt()
		magnitude()
		mod()
		containerSwapItems()
		isNpc()
		lineCollision()
		getObjectParameter()
		debugPoint()
		pointTileCollision()
		containerItemsFitWhere()
		containerAvailable()
		getProperty()
		containerItems()
		threatLevel()
		entityType()
		sendEntityMessage()
		material()
		liquidAt()
		containerSize()
		debugText()
		monsterType()
		entityMoney()
		nearestTo()
		npcLineQuery()
		entityPortrait()
		entityName()
		entityDamageTeam()
		containerConsumeAt()
		entityAggressive()
		windLevel()
		monsterQuery()
		entityExists()
		loungeableQuery()
		npcQuery()
		entityLineQuery()
	}
	root = {
		createBiome()
		imageSpaces()
		createItem()
		loadVersionedJson()
		createTreasure()
		getMatchingTenants()
		monsterSkillParameter()
		getConfiguration()
		npcVariant()
		itemHasTag()
		imageSize()
		projectileGravityMultiplier()
		nonEmptyRegion()
		evalFunction2()
		projectileConfig()
		materialMiningSound()
		generateName()
		isTreasurePool()
		hasTech()
		behaviorModule()
		itemConfig()
		treeStemDirectory()
		evalFunction()
		techConfig()
		npcConfig()
		setConfigurationPath()
		getConfigurationPath()
		materialHealth()
		materialFootstepSound()
		monsterMovementSettings()
		materialPath()
		setConfiguration()
		monsterPortrait()
		itemType()
		questConfig()
		recipesForItem()
		assetJson()
		treeFoliageDirectory()
		techType()
		liquidStatusEffects()
		makeCurrentVersionedJson()
		itemTags()
		tenantConfig()
		npcPortrait()
	}
	jsize()
	status = {
		setResourceLocked()
		resourcePercentage()
		addPersistentEffects()
		removeEphemeralEffect()
		resource()
		setResourcePercentage()
		resourcePositive()
		damageTakenSince()
		statPositive()
		stat()
		statusProperty()
		activeUniqueStatusEffectSummary()
		inflictedHitsSince()
		resourceMax()
		setStatusProperty()
		setPersistentEffects()
		resetAllResources()
		addEphemeralEffects()
		overConsumeResource()
		modifyResource()
		addEphemeralEffect()
		getPersistentEffects()
		resetResource()
		consumeResource()
		clearPersistentEffects()
		modifyResourcePercentage()
		clearEphemeralEffects()
		resourceNames()
		addPersistentEffect()
		resourceLocked()
		clearAllPersistentEffects()
		inflictedDamageSince()
		isResource()
		setResource()
		giveResource()
	}
	xpcall()
	getmetatable()
	utf8 = {
		len()
		codepoint()
		offset()
		codes()
		charpattern = "[
[23:36:54.713] [Warn] 	select()
	rawequal()
	rawset()
	string = {
		gmatch()
		char()
		sub()
		unpack()
		upper()
		lower()
		find()
		rep()
		dump()
		len()
		reverse()
		packsize()
		pack()
		byte()
		match()
		format()
		gsub()
	}
	require()
	pairs()
	next()
	jobject()
	math = {
		pi = 3.1415926535898
		rad()
		max()
		sqrt()
		random()
		floor()
		log()
		acos()
		fmod()
		mininteger = -9223372036854775808
		type()
		huge = inf
		randomseed()
		deg()
		exp()
		maxinteger = 9223372036854775807
		cos()
		min()
		tointeger()
		modf()
		asin()
		tan()
		atan()
		abs()
		sin()
		ult()
		ceil()
	}
	print()
	pcall()
	type()
	init()
	setmetatable()
	jresize()
	ic = {
		checkStack()
		itemAmount()
		stripColor()
		quickstack()
		itemConfig()
		amountEquipped()
		sortFunc()
		lock()
		giveBack()
		renameThis()
		sort()
		searchBox()
		sort_relative()
		clientVersion = 1
		renameButton()
		searchButton()
		getQuality()
	}
	player = {
		equippedTech()
		altHandItem()
		giveEssentialItem()
		consumeTaggedItem()
		setUniverseFlag()
		species()
		itemsWithTag()
		worldId()
		warp()
		completeMission()
		inventoryTags()
		upgradeShip()
		hasQuest()
		consumeItem()
		gender()
		primaryHandItem()
		essentialItem()
		equippedItem()
		setIntroComplete()
		playTime()
		enabledTechs()
		recordEvent()
		playCinematic()
		introComplete()
		hasCompletedQuest()
		makeTechAvailable()
		consumeItemWithParameter()
		startQuest()
		hasItemWithParameter()
		getItemWithParameter()
		lounge()
		enableTech()
		equipTech()
		enableMission()
		removeEssentialItem()
		isLounging()
		availableTechs()
		primaryHandItemTags()
		makeTechUnavailable()
		confirm()
		serverUuid()
		addBookmark()
		altHandItemTags()
		cleanupItems()
		radioMessage()
		setEquippedItem()
		ownShipWorldId()
		hasItem()
		canStartQuest()
		giveBlueprint()
		hasCountOfItem()
		shipUpgrades()
		giveItem()
	}
	config = {
		getParameter()
	}
	self = {
	}
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	world = {
		spawnItem()
		entityPosition()
		entityHealth()
		damageTileArea()
		day()
		placeMaterial()
		entityDescription()
		containerPutItemsAt()
		entityVelocity()
		damageTiles()
		entityHandItem()
		objectAt()
		setProperty()
		containerItemApply()
		containerClose()
		distance()
		findUniqueEntity()
		gravity()
		rectTileCollision()
		entitySpecies()
		platformerPathStart()
		containerOpen()
		containerTakeAll()
		breathable()
		npcType()
		containerAddItems()
		dayLength()
		loungeableOccupied()
		placeObject()
		isTileProtected()
		destroyLiquid()
		debugLine()
		spawnLiquid()
		entityCanDamage()
		containerItemsCanFit()
		xwrap()
		entityUniqueId()
		itemDropQuery()
		lightLevel()
		placeMod()
		spawnNpc()
		spawnTreasure()
		time()
		underground()
		spawnVehicle()
		spawnMonster()
		timeOfDay()
		findPlatformerPath()
		debugPoly()
		containerTakeNumItemsAt()
		isMonster()
		farmableStage()
		polyCollision()
		objectLineQuery()
		entityHasCountOfItem()
		entityHandItemDescriptor()
		tileIsOccupied()
		resolvePolyCollision()
		pointCollision()
		callScriptedEntity()
		collisionBlocksAlongLine()
		containerStackItems()
		objectSpaces()
		containerConsume()
		spawnStagehand()
		spawnProjectile()
		stagehandType()
		entityQuery()
		lineTileCollision()
		containerSwapItemsNoCombine()
		liquidAlongLine()
		playerQuery()
		objectQuery()
		entityGender()
		rectCollision()
		containerItemAt()
		polyContains()
		containerTakeAt()
		magnitude()
		mod()
		containerSwapItems()
		isNpc()
		lineCollision()
		getObjectParameter()
		debugPoint()
		pointTileCollision()
		containerItemsFitWhere()
		containerAvailable()
		getProperty()
		containerItems()
		threatLevel()
		entityType()
		sendEntityMessage()
		material()
		liquidAt()
		containerSize()
		debugText()
		monsterType()
		entityMoney()
		nearestTo()
		npcLineQuery()
		entityPortrait()
		entityName()
		entityDamageTeam()
		containerConsumeAt()
		entityAggressive()
		windLevel()
		monsterQuery()
		entityExists()
		loungeableQuery()
		npcQuery()
		entityLineQuery()
	}
	root = {
		createBiome()
		imageSpaces()
		createItem()
		loadVersionedJson()
		createTreasure()
		getMatchingTenants()
		monsterSkillParameter()
		getConfiguration()
		npcVariant()
		itemHasTag()
		imageSize()
		projectileGravityMultiplier()
		nonEmptyRegion()
		evalFunction2()
		projectileConfig()
		materialMiningSound()
		generateName()
		isTreasurePool()
		hasTech()
		behaviorModule()
		itemConfig()
		treeStemDirectory()
		evalFunction()
		techConfig()
		npcConfig()
		setConfigurationPath()
		getConfigurationPath()
		materialHealth()
		materialFootstepSound()
		monsterMovementSettings()
		materialPath()
		setConfiguration()
		monsterPortrait()
		itemType()
		questConfig()
		recipesForItem()
		assetJson()
		treeFoliageDirectory()
		techType()
		liquidStatusEffects()
		makeCurrentVersionedJson()
		itemTags()
		tenantConfig()
		npcPortrait()
	}
	jsize()
	status = {
		setResourceLocked()
		resourcePercentage()
		addPersistentEffects()
		removeEphemeralEffect()
		resource()
		setResourcePercentage()
		resourcePositive()
		damageTakenSince()
		statPositive()
		stat()
		statusProperty()
		activeUniqueStatusEffectSummary()
		inflictedHitsSince()
		resourceMax()
		setStatusProperty()
		setPersistentEffects()
		resetAllResources()
		addEphemeralEffects()
		overConsumeResource()
		modifyResource()
		addEphemeralEffect()
		getPersistentEffects()
		resetResource()
		consumeResource()
		clearPersistentEffects()
		modifyResourcePercentage()
		clearEphemeralEffects()
		resourceNames()
		addPersistentEffect()
		resourceLocked()
		clearAllPersistentEffects()
		inflictedDamageSince()
		isResource()
		setResource()
		giveResource()
	}
	xpcall()
	getmetatable()
	utf8 = {
		len()
		codepoint()
		offset()
		codes()
		charpattern = "[
[23:36:55.743] [Warn] 	select()
	rawequal()
	rawset()
	string = {
		gmatch()
		char()
		sub()
		unpack()
		upper()
		lower()
		find()
		rep()
		dump()
		len()
		reverse()
		packsize()
		pack()
		byte()
		match()
		format()
		gsub()
	}
	require()
	pairs()
	next()
	jobject()
	math = {
		pi = 3.1415926535898
		rad()
		max()
		sqrt()
		random()
		floor()
		log()
		acos()
		fmod()
		mininteger = -9223372036854775808
		type()
		huge = inf
		randomseed()
		deg()
		exp()
		maxinteger = 9223372036854775807
		cos()
		min()
		tointeger()
		modf()
		asin()
		tan()
		atan()
		abs()
		sin()
		ult()
		ceil()
	}
	print()
	pcall()
	type()
	init()
	setmetatable()
	jresize()
	ic = {
		checkStack()
		itemAmount()
		stripColor()
		quickstack()
		itemConfig()
		amountEquipped()
		sortFunc()
		lock()
		giveBack()
		renameThis()
		sort()
		searchBox()
		sort_relative()
		clientVersion = 1
		renameButton()
		searchButton()
		getQuality()
	}
	player = {
		equippedTech()
		altHandItem()
		giveEssentialItem()
		consumeTaggedItem()
		setUniverseFlag()
		species()
		itemsWithTag()
		worldId()
		warp()
		completeMission()
		inventoryTags()
		upgradeShip()
		hasQuest()
		consumeItem()
		gender()
		primaryHandItem()
		essentialItem()
		equippedItem()
		setIntroComplete()
		playTime()
		enabledTechs()
		recordEvent()
		playCinematic()
		introComplete()
		hasCompletedQuest()
		makeTechAvailable()
		consumeItemWithParameter()
		startQuest()
		hasItemWithParameter()
		getItemWithParameter()
		lounge()
		enableTech()
		equipTech()
		enableMission()
		removeEssentialItem()
		isLounging()
		availableTechs()
		primaryHandItemTags()
		makeTechUnavailable()
		confirm()
		serverUuid()
		addBookmark()
		altHandItemTags()
		cleanupItems()
		radioMessage()
		setEquippedItem()
		ownShipWorldId()
		hasItem()
		canStartQuest()
		giveBlueprint()
		hasCountOfItem()
		shipUpgrades()
		giveItem()
	}
	config = {
		getParameter()
	}
	self = {
	}
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	world = {
		spawnItem()
		entityPosition()
		entityHealth()
		damageTileArea()
		day()
		placeMaterial()
		entityDescription()
		containerPutItemsAt()
		entityVelocity()
		damageTiles()
		entityHandItem()
		objectAt()
		setProperty()
		containerItemApply()
		containerClose()
		distance()
		findUniqueEntity()
		gravity()
		rectTileCollision()
		entitySpecies()
		platformerPathStart()
		containerOpen()
		containerTakeAll()
		breathable()
		npcType()
		containerAddItems()
		dayLength()
		loungeableOccupied()
		placeObject()
		isTileProtected()
		destroyLiquid()
		debugLine()
		spawnLiquid()
		entityCanDamage()
		containerItemsCanFit()
		xwrap()
		entityUniqueId()
		itemDropQuery()
		lightLevel()
		placeMod()
		spawnNpc()
		spawnTreasure()
		time()
		underground()
		spawnVehicle()
		spawnMonster()
		timeOfDay()
		findPlatformerPath()
		debugPoly()
		containerTakeNumItemsAt()
		isMonster()
		farmableStage()
		polyCollision()
		objectLineQuery()
		entityHasCountOfItem()
		entityHandItemDescriptor()
		tileIsOccupied()
		resolvePolyCollision()
		pointCollision()
		callScriptedEntity()
		collisionBlocksAlongLine()
		containerStackItems()
		objectSpaces()
		containerConsume()
		spawnStagehand()
		spawnProjectile()
		stagehandType()
		entityQuery()
		lineTileCollision()
		containerSwapItemsNoCombine()
		liquidAlongLine()
		playerQuery()
		objectQuery()
		entityGender()
		rectCollision()
		containerItemAt()
		polyContains()
		containerTakeAt()
		magnitude()
		mod()
		containerSwapItems()
		isNpc()
		lineCollision()
		getObjectParameter()
		debugPoint()
		pointTileCollision()
		containerItemsFitWhere()
		containerAvailable()
		getProperty()
		containerItems()
		threatLevel()
		entityType()
		sendEntityMessage()
		material()
		liquidAt()
		containerSize()
		debugText()
		monsterType()
		entityMoney()
		nearestTo()
		npcLineQuery()
		entityPortrait()
		entityName()
		entityDamageTeam()
		containerConsumeAt()
		entityAggressive()
		windLevel()
		monsterQuery()
		entityExists()
		loungeableQuery()
		npcQuery()
		entityLineQuery()
	}
	root = {
		createBiome()
		imageSpaces()
		createItem()
		loadVersionedJson()
		createTreasure()
		getMatchingTenants()
		monsterSkillParameter()
		getConfiguration()
		npcVariant()
		itemHasTag()
		imageSize()
		projectileGravityMultiplier()
		nonEmptyRegion()
		evalFunction2()
		projectileConfig()
		materialMiningSound()
		generateName()
		isTreasurePool()
		hasTech()
		behaviorModule()
		itemConfig()
		treeStemDirectory()
		evalFunction()
		techConfig()
		npcConfig()
		setConfigurationPath()
		getConfigurationPath()
		materialHealth()
		materialFootstepSound()
		monsterMovementSettings()
		materialPath()
		setConfiguration()
		monsterPortrait()
		itemType()
		questConfig()
		recipesForItem()
		assetJson()
		treeFoliageDirectory()
		techType()
		liquidStatusEffects()
		makeCurrentVersionedJson()
		itemTags()
		tenantConfig()
		npcPortrait()
	}
	jsize()
	status = {
		setResourceLocked()
		resourcePercentage()
		addPersistentEffects()
		removeEphemeralEffect()
		resource()
		setResourcePercentage()
		resourcePositive()
		damageTakenSince()
		statPositive()
		stat()
		statusProperty()
		activeUniqueStatusEffectSummary()
		inflictedHitsSince()
		resourceMax()
		setStatusProperty()
		setPersistentEffects()
		resetAllResources()
		addEphemeralEffects()
		overConsumeResource()
		modifyResource()
		addEphemeralEffect()
		getPersistentEffects()
		resetResource()
		consumeResource()
		clearPersistentEffects()
		modifyResourcePercentage()
		clearEphemeralEffects()
		resourceNames()
		addPersistentEffect()
		resourceLocked()
		clearAllPersistentEffects()
		inflictedDamageSince()
		isResource()
		setResource()
		giveResource()
	}
	xpcall()
	getmetatable()
	utf8 = {
		len()
		codepoint()
		offset()
		codes()
		charpattern = "[
[23:36:57.360] [Warn] 	select()
	rawequal()
	rawset()
	string = {
		gmatch()
		char()
		sub()
		unpack()
		upper()
		lower()
		find()
		rep()
		dump()
		len()
		reverse()
		packsize()
		pack()
		byte()
		match()
		format()
		gsub()
	}
	require()
	pairs()
	next()
	jobject()
	math = {
		pi = 3.1415926535898
		rad()
		max()
		sqrt()
		random()
		floor()
		log()
		acos()
		fmod()
		mininteger = -9223372036854775808
		type()
		huge = inf
		randomseed()
		deg()
		exp()
		maxinteger = 9223372036854775807
		cos()
		min()
		tointeger()
		modf()
		asin()
		tan()
		atan()
		abs()
		sin()
		ult()
		ceil()
	}
	print()
	pcall()
	type()
	init()
	setmetatable()
	jresize()
	ic = {
		checkStack()
		itemAmount()
		stripColor()
		quickstack()
		itemConfig()
		amountEquipped()
		sortFunc()
		lock()
		giveBack()
		renameThis()
		sort()
		searchBox()
		sort_relative()
		clientVersion = 1
		renameButton()
		searchButton()
		getQuality()
	}
	player = {
		equippedTech()
		altHandItem()
		giveEssentialItem()
		consumeTaggedItem()
		setUniverseFlag()
		species()
		itemsWithTag()
		worldId()
		warp()
		completeMission()
		inventoryTags()
		upgradeShip()
		hasQuest()
		consumeItem()
		gender()
		primaryHandItem()
		essentialItem()
		equippedItem()
		setIntroComplete()
		playTime()
		enabledTechs()
		recordEvent()
		playCinematic()
		introComplete()
		hasCompletedQuest()
		makeTechAvailable()
		consumeItemWithParameter()
		startQuest()
		hasItemWithParameter()
		getItemWithParameter()
		lounge()
		enableTech()
		equipTech()
		enableMission()
		removeEssentialItem()
		isLounging()
		availableTechs()
		primaryHandItemTags()
		makeTechUnavailable()
		confirm()
		serverUuid()
		addBookmark()
		altHandItemTags()
		cleanupItems()
		radioMessage()
		setEquippedItem()
		ownShipWorldId()
		hasItem()
		canStartQuest()
		giveBlueprint()
		hasCountOfItem()
		shipUpgrades()
		giveItem()
	}
	config = {
		getParameter()
	}
	self = {
	}
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	world = {
		spawnItem()
		entityPosition()
		entityHealth()
		damageTileArea()
		day()
		placeMaterial()
		entityDescription()
		containerPutItemsAt()
		entityVelocity()
		damageTiles()
		entityHandItem()
		objectAt()
		setProperty()
		containerItemApply()
		containerClose()
		distance()
		findUniqueEntity()
		gravity()
		rectTileCollision()
		entitySpecies()
		platformerPathStart()
		containerOpen()
		containerTakeAll()
		breathable()
		npcType()
		containerAddItems()
		dayLength()
		loungeableOccupied()
		placeObject()
		isTileProtected()
		destroyLiquid()
		debugLine()
		spawnLiquid()
		entityCanDamage()
		containerItemsCanFit()
		xwrap()
		entityUniqueId()
		itemDropQuery()
		lightLevel()
		placeMod()
		spawnNpc()
		spawnTreasure()
		time()
		underground()
		spawnVehicle()
		spawnMonster()
		timeOfDay()
		findPlatformerPath()
		debugPoly()
		containerTakeNumItemsAt()
		isMonster()
		farmableStage()
		polyCollision()
		objectLineQuery()
		entityHasCountOfItem()
		entityHandItemDescriptor()
		tileIsOccupied()
		resolvePolyCollision()
		pointCollision()
		callScriptedEntity()
		collisionBlocksAlongLine()
		containerStackItems()
		objectSpaces()
		containerConsume()
		spawnStagehand()
		spawnProjectile()
		stagehandType()
		entityQuery()
		lineTileCollision()
		containerSwapItemsNoCombine()
		liquidAlongLine()
		playerQuery()
		objectQuery()
		entityGender()
		rectCollision()
		containerItemAt()
		polyContains()
		containerTakeAt()
		magnitude()
		mod()
		containerSwapItems()
		isNpc()
		lineCollision()
		getObjectParameter()
		debugPoint()
		pointTileCollision()
		containerItemsFitWhere()
		containerAvailable()
		getProperty()
		containerItems()
		threatLevel()
		entityType()
		sendEntityMessage()
		material()
		liquidAt()
		containerSize()
		debugText()
		monsterType()
		entityMoney()
		nearestTo()
		npcLineQuery()
		entityPortrait()
		entityName()
		entityDamageTeam()
		containerConsumeAt()
		entityAggressive()
		windLevel()
		monsterQuery()
		entityExists()
		loungeableQuery()
		npcQuery()
		entityLineQuery()
	}
	root = {
		createBiome()
		imageSpaces()
		createItem()
		loadVersionedJson()
		createTreasure()
		getMatchingTenants()
		monsterSkillParameter()
		getConfiguration()
		npcVariant()
		itemHasTag()
		imageSize()
		projectileGravityMultiplier()
		nonEmptyRegion()
		evalFunction2()
		projectileConfig()
		materialMiningSound()
		generateName()
		isTreasurePool()
		hasTech()
		behaviorModule()
		itemConfig()
		treeStemDirectory()
		evalFunction()
		techConfig()
		npcConfig()
		setConfigurationPath()
		getConfigurationPath()
		materialHealth()
		materialFootstepSound()
		monsterMovementSettings()
		materialPath()
		setConfiguration()
		monsterPortrait()
		itemType()
		questConfig()
		recipesForItem()
		assetJson()
		treeFoliageDirectory()
		techType()
		liquidStatusEffects()
		makeCurrentVersionedJson()
		itemTags()
		tenantConfig()
		npcPortrait()
	}
	jsize()
	status = {
		setResourceLocked()
		resourcePercentage()
		addPersistentEffects()
		removeEphemeralEffect()
		resource()
		setResourcePercentage()
		resourcePositive()
		damageTakenSince()
		statPositive()
		stat()
		statusProperty()
		activeUniqueStatusEffectSummary()
		inflictedHitsSince()
		resourceMax()
		setStatusProperty()
		setPersistentEffects()
		resetAllResources()
		addEphemeralEffects()
		overConsumeResource()
		modifyResource()
		addEphemeralEffect()
		getPersistentEffects()
		resetResource()
		consumeResource()
		clearPersistentEffects()
		modifyResourcePercentage()
		clearEphemeralEffects()
		resourceNames()
		addPersistentEffect()
		resourceLocked()
		clearAllPersistentEffects()
		inflictedDamageSince()
		isResource()
		setResource()
		giveResource()
	}
	xpcall()
	getmetatable()
	utf8 = {
		len()
		codepoint()
		offset()
		codes()
		charpattern = "[
[23:36:58.417] [Warn] 	select()
	rawequal()
	rawset()
	string = {
		gmatch()
		char()
		sub()
		unpack()
		upper()
		lower()
		find()
		rep()
		dump()
		len()
		reverse()
		packsize()
		pack()
		byte()
		match()
		format()
		gsub()
	}
	require()
	pairs()
	next()
	jobject()
	math = {
		pi = 3.1415926535898
		rad()
		max()
		sqrt()
		random()
		floor()
		log()
		acos()
		fmod()
		mininteger = -9223372036854775808
		type()
		huge = inf
		randomseed()
		deg()
		exp()
		maxinteger = 9223372036854775807
		cos()
		min()
		tointeger()
		modf()
		asin()
		tan()
		atan()
		abs()
		sin()
		ult()
		ceil()
	}
	print()
	pcall()
	type()
	init()
	setmetatable()
	jresize()
	ic = {
		checkStack()
		itemAmount()
		stripColor()
		quickstack()
		itemConfig()
		amountEquipped()
		sortFunc()
		lock()
		giveBack()
		renameThis()
		sort()
		searchBox()
		sort_relative()
		clientVersion = 1
		renameButton()
		searchButton()
		getQuality()
	}
	player = {
		equippedTech()
		altHandItem()
		giveEssentialItem()
		consumeTaggedItem()
		setUniverseFlag()
		species()
		itemsWithTag()
		worldId()
		warp()
		completeMission()
		inventoryTags()
		upgradeShip()
		hasQuest()
		consumeItem()
		gender()
		primaryHandItem()
		essentialItem()
		equippedItem()
		setIntroComplete()
		playTime()
		enabledTechs()
		recordEvent()
		playCinematic()
		introComplete()
		hasCompletedQuest()
		makeTechAvailable()
		consumeItemWithParameter()
		startQuest()
		hasItemWithParameter()
		getItemWithParameter()
		lounge()
		enableTech()
		equipTech()
		enableMission()
		removeEssentialItem()
		isLounging()
		availableTechs()
		primaryHandItemTags()
		makeTechUnavailable()
		confirm()
		serverUuid()
		addBookmark()
		altHandItemTags()
		cleanupItems()
		radioMessage()
		setEquippedItem()
		ownShipWorldId()
		hasItem()
		canStartQuest()
		giveBlueprint()
		hasCountOfItem()
		shipUpgrades()
		giveItem()
	}
	config = {
		getParameter()
	}
	self = {
	}
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	world = {
		spawnItem()
		entityPosition()
		entityHealth()
		damageTileArea()
		day()
		placeMaterial()
		entityDescription()
		containerPutItemsAt()
		entityVelocity()
		damageTiles()
		entityHandItem()
		objectAt()
		setProperty()
		containerItemApply()
		containerClose()
		distance()
		findUniqueEntity()
		gravity()
		rectTileCollision()
		entitySpecies()
		platformerPathStart()
		containerOpen()
		containerTakeAll()
		breathable()
		npcType()
		containerAddItems()
		dayLength()
		loungeableOccupied()
		placeObject()
		isTileProtected()
		destroyLiquid()
		debugLine()
		spawnLiquid()
		entityCanDamage()
		containerItemsCanFit()
		xwrap()
		entityUniqueId()
		itemDropQuery()
		lightLevel()
		placeMod()
		spawnNpc()
		spawnTreasure()
		time()
		underground()
		spawnVehicle()
		spawnMonster()
		timeOfDay()
		findPlatformerPath()
		debugPoly()
		containerTakeNumItemsAt()
		isMonster()
		farmableStage()
		polyCollision()
		objectLineQuery()
		entityHasCountOfItem()
		entityHandItemDescriptor()
		tileIsOccupied()
		resolvePolyCollision()
		pointCollision()
		callScriptedEntity()
		collisionBlocksAlongLine()
		containerStackItems()
		objectSpaces()
		containerConsume()
		spawnStagehand()
		spawnProjectile()
		stagehandType()
		entityQuery()
		lineTileCollision()
		containerSwapItemsNoCombine()
		liquidAlongLine()
		playerQuery()
		objectQuery()
		entityGender()
		rectCollision()
		containerItemAt()
		polyContains()
		containerTakeAt()
		magnitude()
		mod()
		containerSwapItems()
		isNpc()
		lineCollision()
		getObjectParameter()
		debugPoint()
		pointTileCollision()
		containerItemsFitWhere()
		containerAvailable()
		getProperty()
		containerItems()
		threatLevel()
		entityType()
		sendEntityMessage()
		material()
		liquidAt()
		containerSize()
		debugText()
		monsterType()
		entityMoney()
		nearestTo()
		npcLineQuery()
		entityPortrait()
		entityName()
		entityDamageTeam()
		containerConsumeAt()
		entityAggressive()
		windLevel()
		monsterQuery()
		entityExists()
		loungeableQuery()
		npcQuery()
		entityLineQuery()
	}
	root = {
		createBiome()
		imageSpaces()
		createItem()
		loadVersionedJson()
		createTreasure()
		getMatchingTenants()
		monsterSkillParameter()
		getConfiguration()
		npcVariant()
		itemHasTag()
		imageSize()
		projectileGravityMultiplier()
		nonEmptyRegion()
		evalFunction2()
		projectileConfig()
		materialMiningSound()
		generateName()
		isTreasurePool()
		hasTech()
		behaviorModule()
		itemConfig()
		treeStemDirectory()
		evalFunction()
		techConfig()
		npcConfig()
		setConfigurationPath()
		getConfigurationPath()
		materialHealth()
		materialFootstepSound()
		monsterMovementSettings()
		materialPath()
		setConfiguration()
		monsterPortrait()
		itemType()
		questConfig()
		recipesForItem()
		assetJson()
		treeFoliageDirectory()
		techType()
		liquidStatusEffects()
		makeCurrentVersionedJson()
		itemTags()
		tenantConfig()
		npcPortrait()
	}
	jsize()
	status = {
		setResourceLocked()
		resourcePercentage()
		addPersistentEffects()
		removeEphemeralEffect()
		resource()
		setResourcePercentage()
		resourcePositive()
		damageTakenSince()
		statPositive()
		stat()
		statusProperty()
		activeUniqueStatusEffectSummary()
		inflictedHitsSince()
		resourceMax()
		setStatusProperty()
		setPersistentEffects()
		resetAllResources()
		addEphemeralEffects()
		overConsumeResource()
		modifyResource()
		addEphemeralEffect()
		getPersistentEffects()
		resetResource()
		consumeResource()
		clearPersistentEffects()
		modifyResourcePercentage()
		clearEphemeralEffects()
		resourceNames()
		addPersistentEffect()
		resourceLocked()
		clearAllPersistentEffects()
		inflictedDamageSince()
		isResource()
		setResource()
		giveResource()
	}
	xpcall()
	getmetatable()
	utf8 = {
		len()
		codepoint()
		offset()
		codes()
		charpattern = "[
[23:37:26.616] [Warn] 	select()
	rawequal()
	rawset()
	string = {
		gmatch()
		char()
		sub()
		unpack()
		upper()
		lower()
		find()
		rep()
		dump()
		len()
		reverse()
		packsize()
		pack()
		byte()
		match()
		format()
		gsub()
	}
	require()
	pairs()
	next()
	jobject()
	math = {
		pi = 3.1415926535898
		rad()
		max()
		sqrt()
		random()
		floor()
		log()
		acos()
		fmod()
		mininteger = -9223372036854775808
		type()
		huge = inf
		randomseed()
		deg()
		exp()
		maxinteger = 9223372036854775807
		cos()
		min()
		tointeger()
		modf()
		asin()
		tan()
		atan()
		abs()
		sin()
		ult()
		ceil()
	}
	print()
	pcall()
	type()
	init()
	setmetatable()
	jresize()
	ic = {
		checkStack()
		itemAmount()
		stripColor()
		quickstack()
		itemConfig()
		amountEquipped()
		sortFunc()
		lock()
		giveBack()
		renameThis()
		sort()
		searchBox()
		sort_relative()
		clientVersion = 1
		renameButton()
		searchButton()
		getQuality()
	}
	player = {
		equippedTech()
		altHandItem()
		giveEssentialItem()
		consumeTaggedItem()
		setUniverseFlag()
		species()
		itemsWithTag()
		worldId()
		warp()
		completeMission()
		inventoryTags()
		upgradeShip()
		hasQuest()
		consumeItem()
		gender()
		primaryHandItem()
		essentialItem()
		equippedItem()
		setIntroComplete()
		playTime()
		enabledTechs()
		recordEvent()
		playCinematic()
		introComplete()
		hasCompletedQuest()
		makeTechAvailable()
		consumeItemWithParameter()
		startQuest()
		hasItemWithParameter()
		getItemWithParameter()
		lounge()
		enableTech()
		equipTech()
		enableMission()
		removeEssentialItem()
		isLounging()
		availableTechs()
		primaryHandItemTags()
		makeTechUnavailable()
		confirm()
		serverUuid()
		addBookmark()
		altHandItemTags()
		cleanupItems()
		radioMessage()
		setEquippedItem()
		ownShipWorldId()
		hasItem()
		canStartQuest()
		giveBlueprint()
		hasCountOfItem()
		shipUpgrades()
		giveItem()
	}
	config = {
		getParameter()
	}
	self = {
	}
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	world = {
		spawnItem()
		entityPosition()
		entityHealth()
		damageTileArea()
		day()
		placeMaterial()
		entityDescription()
		containerPutItemsAt()
		entityVelocity()
		damageTiles()
		entityHandItem()
		objectAt()
		setProperty()
		containerItemApply()
		containerClose()
		distance()
		findUniqueEntity()
		gravity()
		rectTileCollision()
		entitySpecies()
		platformerPathStart()
		containerOpen()
		containerTakeAll()
		breathable()
		npcType()
		containerAddItems()
		dayLength()
		loungeableOccupied()
		placeObject()
		isTileProtected()
		destroyLiquid()
		debugLine()
		spawnLiquid()
		entityCanDamage()
		containerItemsCanFit()
		xwrap()
		entityUniqueId()
		itemDropQuery()
		lightLevel()
		placeMod()
		spawnNpc()
		spawnTreasure()
		time()
		underground()
		spawnVehicle()
		spawnMonster()
		timeOfDay()
		findPlatformerPath()
		debugPoly()
		containerTakeNumItemsAt()
		isMonster()
		farmableStage()
		polyCollision()
		objectLineQuery()
		entityHasCountOfItem()
		entityHandItemDescriptor()
		tileIsOccupied()
		resolvePolyCollision()
		pointCollision()
		callScriptedEntity()
		collisionBlocksAlongLine()
		containerStackItems()
		objectSpaces()
		containerConsume()
		spawnStagehand()
		spawnProjectile()
		stagehandType()
		entityQuery()
		lineTileCollision()
		containerSwapItemsNoCombine()
		liquidAlongLine()
		playerQuery()
		objectQuery()
		entityGender()
		rectCollision()
		containerItemAt()
		polyContains()
		containerTakeAt()
		magnitude()
		mod()
		containerSwapItems()
		isNpc()
		lineCollision()
		getObjectParameter()
		debugPoint()
		pointTileCollision()
		containerItemsFitWhere()
		containerAvailable()
		getProperty()
		containerItems()
		threatLevel()
		entityType()
		sendEntityMessage()
		material()
		liquidAt()
		containerSize()
		debugText()
		monsterType()
		entityMoney()
		nearestTo()
		npcLineQuery()
		entityPortrait()
		entityName()
		entityDamageTeam()
		containerConsumeAt()
		entityAggressive()
		windLevel()
		monsterQuery()
		entityExists()
		loungeableQuery()
		npcQuery()
		entityLineQuery()
	}
	root = {
		createBiome()
		imageSpaces()
		createItem()
		loadVersionedJson()
		createTreasure()
		getMatchingTenants()
		monsterSkillParameter()
		getConfiguration()
		npcVariant()
		itemHasTag()
		imageSize()
		projectileGravityMultiplier()
		nonEmptyRegion()
		evalFunction2()
		projectileConfig()
		materialMiningSound()
		generateName()
		isTreasurePool()
		hasTech()
		behaviorModule()
		itemConfig()
		treeStemDirectory()
		evalFunction()
		techConfig()
		npcConfig()
		setConfigurationPath()
		getConfigurationPath()
		materialHealth()
		materialFootstepSound()
		monsterMovementSettings()
		materialPath()
		setConfiguration()
		monsterPortrait()
		itemType()
		questConfig()
		recipesForItem()
		assetJson()
		treeFoliageDirectory()
		techType()
		liquidStatusEffects()
		makeCurrentVersionedJson()
		itemTags()
		tenantConfig()
		npcPortrait()
	}
	jsize()
	status = {
		setResourceLocked()
		resourcePercentage()
		addPersistentEffects()
		removeEphemeralEffect()
		resource()
		setResourcePercentage()
		resourcePositive()
		damageTakenSince()
		statPositive()
		stat()
		statusProperty()
		activeUniqueStatusEffectSummary()
		inflictedHitsSince()
		resourceMax()
		setStatusProperty()
		setPersistentEffects()
		resetAllResources()
		addEphemeralEffects()
		overConsumeResource()
		modifyResource()
		addEphemeralEffect()
		getPersistentEffects()
		resetResource()
		consumeResource()
		clearPersistentEffects()
		modifyResourcePercentage()
		clearEphemeralEffects()
		resourceNames()
		addPersistentEffect()
		resourceLocked()
		clearAllPersistentEffects()
		inflictedDamageSince()
		isResource()
		setResource()
		giveResource()
	}
	xpcall()
	getmetatable()
	utf8 = {
		len()
		codepoint()
		offset()
		codes()
		charpattern = "[
[23:37:27.483] [Warn] 	select()
	rawequal()
	rawset()
	string = {
		gmatch()
		char()
		sub()
		unpack()
		upper()
		lower()
		find()
		rep()
		dump()
		len()
		reverse()
		packsize()
		pack()
		byte()
		match()
		format()
		gsub()
	}
	require()
	pairs()
	next()
	jobject()
	math = {
		pi = 3.1415926535898
		rad()
		max()
		sqrt()
		random()
		floor()
		log()
		acos()
		fmod()
		mininteger = -9223372036854775808
		type()
		huge = inf
		randomseed()
		deg()
		exp()
		maxinteger = 9223372036854775807
		cos()
		min()
		tointeger()
		modf()
		asin()
		tan()
		atan()
		abs()
		sin()
		ult()
		ceil()
	}
	print()
	pcall()
	type()
	init()
	setmetatable()
	jresize()
	ic = {
		checkStack()
		itemAmount()
		stripColor()
		quickstack()
		itemConfig()
		amountEquipped()
		sortFunc()
		lock()
		giveBack()
		renameThis()
		sort()
		searchBox()
		sort_relative()
		clientVersion = 1
		renameButton()
		searchButton()
		getQuality()
	}
	player = {
		equippedTech()
		altHandItem()
		giveEssentialItem()
		consumeTaggedItem()
		setUniverseFlag()
		species()
		itemsWithTag()
		worldId()
		warp()
		completeMission()
		inventoryTags()
		upgradeShip()
		hasQuest()
		consumeItem()
		gender()
		primaryHandItem()
		essentialItem()
		equippedItem()
		setIntroComplete()
		playTime()
		enabledTechs()
		recordEvent()
		playCinematic()
		introComplete()
		hasCompletedQuest()
		makeTechAvailable()
		consumeItemWithParameter()
		startQuest()
		hasItemWithParameter()
		getItemWithParameter()
		lounge()
		enableTech()
		equipTech()
		enableMission()
		removeEssentialItem()
		isLounging()
		availableTechs()
		primaryHandItemTags()
		makeTechUnavailable()
		confirm()
		serverUuid()
		addBookmark()
		altHandItemTags()
		cleanupItems()
		radioMessage()
		setEquippedItem()
		ownShipWorldId()
		hasItem()
		canStartQuest()
		giveBlueprint()
		hasCountOfItem()
		shipUpgrades()
		giveItem()
	}
	config = {
		getParameter()
	}
	self = {
	}
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	world = {
		spawnItem()
		entityPosition()
		entityHealth()
		damageTileArea()
		day()
		placeMaterial()
		entityDescription()
		containerPutItemsAt()
		entityVelocity()
		damageTiles()
		entityHandItem()
		objectAt()
		setProperty()
		containerItemApply()
		containerClose()
		distance()
		findUniqueEntity()
		gravity()
		rectTileCollision()
		entitySpecies()
		platformerPathStart()
		containerOpen()
		containerTakeAll()
		breathable()
		npcType()
		containerAddItems()
		dayLength()
		loungeableOccupied()
		placeObject()
		isTileProtected()
		destroyLiquid()
		debugLine()
		spawnLiquid()
		entityCanDamage()
		containerItemsCanFit()
		xwrap()
		entityUniqueId()
		itemDropQuery()
		lightLevel()
		placeMod()
		spawnNpc()
		spawnTreasure()
		time()
		underground()
		spawnVehicle()
		spawnMonster()
		timeOfDay()
		findPlatformerPath()
		debugPoly()
		containerTakeNumItemsAt()
		isMonster()
		farmableStage()
		polyCollision()
		objectLineQuery()
		entityHasCountOfItem()
		entityHandItemDescriptor()
		tileIsOccupied()
		resolvePolyCollision()
		pointCollision()
		callScriptedEntity()
		collisionBlocksAlongLine()
		containerStackItems()
		objectSpaces()
		containerConsume()
		spawnStagehand()
		spawnProjectile()
		stagehandType()
		entityQuery()
		lineTileCollision()
		containerSwapItemsNoCombine()
		liquidAlongLine()
		playerQuery()
		objectQuery()
		entityGender()
		rectCollision()
		containerItemAt()
		polyContains()
		containerTakeAt()
		magnitude()
		mod()
		containerSwapItems()
		isNpc()
		lineCollision()
		getObjectParameter()
		debugPoint()
		pointTileCollision()
		containerItemsFitWhere()
		containerAvailable()
		getProperty()
		containerItems()
		threatLevel()
		entityType()
		sendEntityMessage()
		material()
		liquidAt()
		containerSize()
		debugText()
		monsterType()
		entityMoney()
		nearestTo()
		npcLineQuery()
		entityPortrait()
		entityName()
		entityDamageTeam()
		containerConsumeAt()
		entityAggressive()
		windLevel()
		monsterQuery()
		entityExists()
		loungeableQuery()
		npcQuery()
		entityLineQuery()
	}
	root = {
		createBiome()
		imageSpaces()
		createItem()
		loadVersionedJson()
		createTreasure()
		getMatchingTenants()
		monsterSkillParameter()
		getConfiguration()
		npcVariant()
		itemHasTag()
		imageSize()
		projectileGravityMultiplier()
		nonEmptyRegion()
		evalFunction2()
		projectileConfig()
		materialMiningSound()
		generateName()
		isTreasurePool()
		hasTech()
		behaviorModule()
		itemConfig()
		treeStemDirectory()
		evalFunction()
		techConfig()
		npcConfig()
		setConfigurationPath()
		getConfigurationPath()
		materialHealth()
		materialFootstepSound()
		monsterMovementSettings()
		materialPath()
		setConfiguration()
		monsterPortrait()
		itemType()
		questConfig()
		recipesForItem()
		assetJson()
		treeFoliageDirectory()
		techType()
		liquidStatusEffects()
		makeCurrentVersionedJson()
		itemTags()
		tenantConfig()
		npcPortrait()
	}
	jsize()
	status = {
		setResourceLocked()
		resourcePercentage()
		addPersistentEffects()
		removeEphemeralEffect()
		resource()
		setResourcePercentage()
		resourcePositive()
		damageTakenSince()
		statPositive()
		stat()
		statusProperty()
		activeUniqueStatusEffectSummary()
		inflictedHitsSince()
		resourceMax()
		setStatusProperty()
		setPersistentEffects()
		resetAllResources()
		addEphemeralEffects()
		overConsumeResource()
		modifyResource()
		addEphemeralEffect()
		getPersistentEffects()
		resetResource()
		consumeResource()
		clearPersistentEffects()
		modifyResourcePercentage()
		clearEphemeralEffects()
		resourceNames()
		addPersistentEffect()
		resourceLocked()
		clearAllPersistentEffects()
		inflictedDamageSince()
		isResource()
		setResource()
		giveResource()
	}
	xpcall()
	getmetatable()
	utf8 = {
		len()
		codepoint()
		offset()
		codes()
		charpattern = "[
[23:37:28.462] [Warn] 	select()
	rawequal()
	rawset()
	string = {
		gmatch()
		char()
		sub()
		unpack()
		upper()
		lower()
		find()
		rep()
		dump()
		len()
		reverse()
		packsize()
		pack()
		byte()
		match()
		format()
		gsub()
	}
	require()
	pairs()
	next()
	jobject()
	math = {
		pi = 3.1415926535898
		rad()
		max()
		sqrt()
		random()
		floor()
		log()
		acos()
		fmod()
		mininteger = -9223372036854775808
		type()
		huge = inf
		randomseed()
		deg()
		exp()
		maxinteger = 9223372036854775807
		cos()
		min()
		tointeger()
		modf()
		asin()
		tan()
		atan()
		abs()
		sin()
		ult()
		ceil()
	}
	print()
	pcall()
	type()
	init()
	setmetatable()
	jresize()
	ic = {
		checkStack()
		itemAmount()
		stripColor()
		quickstack()
		itemConfig()
		amountEquipped()
		sortFunc()
		lock()
		giveBack()
		renameThis()
		sort()
		searchBox()
		sort_relative()
		clientVersion = 1
		renameButton()
		searchButton()
		getQuality()
	}
	player = {
		equippedTech()
		altHandItem()
		giveEssentialItem()
		consumeTaggedItem()
		setUniverseFlag()
		species()
		itemsWithTag()
		worldId()
		warp()
		completeMission()
		inventoryTags()
		upgradeShip()
		hasQuest()
		consumeItem()
		gender()
		primaryHandItem()
		essentialItem()
		equippedItem()
		setIntroComplete()
		playTime()
		enabledTechs()
		recordEvent()
		playCinematic()
		introComplete()
		hasCompletedQuest()
		makeTechAvailable()
		consumeItemWithParameter()
		startQuest()
		hasItemWithParameter()
		getItemWithParameter()
		lounge()
		enableTech()
		equipTech()
		enableMission()
		removeEssentialItem()
		isLounging()
		availableTechs()
		primaryHandItemTags()
		makeTechUnavailable()
		confirm()
		serverUuid()
		addBookmark()
		altHandItemTags()
		cleanupItems()
		radioMessage()
		setEquippedItem()
		ownShipWorldId()
		hasItem()
		canStartQuest()
		giveBlueprint()
		hasCountOfItem()
		shipUpgrades()
		giveItem()
	}
	config = {
		getParameter()
	}
	self = {
	}
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	world = {
		spawnItem()
		entityPosition()
		entityHealth()
		damageTileArea()
		day()
		placeMaterial()
		entityDescription()
		containerPutItemsAt()
		entityVelocity()
		damageTiles()
		entityHandItem()
		objectAt()
		setProperty()
		containerItemApply()
		containerClose()
		distance()
		findUniqueEntity()
		gravity()
		rectTileCollision()
		entitySpecies()
		platformerPathStart()
		containerOpen()
		containerTakeAll()
		breathable()
		npcType()
		containerAddItems()
		dayLength()
		loungeableOccupied()
		placeObject()
		isTileProtected()
		destroyLiquid()
		debugLine()
		spawnLiquid()
		entityCanDamage()
		containerItemsCanFit()
		xwrap()
		entityUniqueId()
		itemDropQuery()
		lightLevel()
		placeMod()
		spawnNpc()
		spawnTreasure()
		time()
		underground()
		spawnVehicle()
		spawnMonster()
		timeOfDay()
		findPlatformerPath()
		debugPoly()
		containerTakeNumItemsAt()
		isMonster()
		farmableStage()
		polyCollision()
		objectLineQuery()
		entityHasCountOfItem()
		entityHandItemDescriptor()
		tileIsOccupied()
		resolvePolyCollision()
		pointCollision()
		callScriptedEntity()
		collisionBlocksAlongLine()
		containerStackItems()
		objectSpaces()
		containerConsume()
		spawnStagehand()
		spawnProjectile()
		stagehandType()
		entityQuery()
		lineTileCollision()
		containerSwapItemsNoCombine()
		liquidAlongLine()
		playerQuery()
		objectQuery()
		entityGender()
		rectCollision()
		containerItemAt()
		polyContains()
		containerTakeAt()
		magnitude()
		mod()
		containerSwapItems()
		isNpc()
		lineCollision()
		getObjectParameter()
		debugPoint()
		pointTileCollision()
		containerItemsFitWhere()
		containerAvailable()
		getProperty()
		containerItems()
		threatLevel()
		entityType()
		sendEntityMessage()
		material()
		liquidAt()
		containerSize()
		debugText()
		monsterType()
		entityMoney()
		nearestTo()
		npcLineQuery()
		entityPortrait()
		entityName()
		entityDamageTeam()
		containerConsumeAt()
		entityAggressive()
		windLevel()
		monsterQuery()
		entityExists()
		loungeableQuery()
		npcQuery()
		entityLineQuery()
	}
	root = {
		createBiome()
		imageSpaces()
		createItem()
		loadVersionedJson()
		createTreasure()
		getMatchingTenants()
		monsterSkillParameter()
		getConfiguration()
		npcVariant()
		itemHasTag()
		imageSize()
		projectileGravityMultiplier()
		nonEmptyRegion()
		evalFunction2()
		projectileConfig()
		materialMiningSound()
		generateName()
		isTreasurePool()
		hasTech()
		behaviorModule()
		itemConfig()
		treeStemDirectory()
		evalFunction()
		techConfig()
		npcConfig()
		setConfigurationPath()
		getConfigurationPath()
		materialHealth()
		materialFootstepSound()
		monsterMovementSettings()
		materialPath()
		setConfiguration()
		monsterPortrait()
		itemType()
		questConfig()
		recipesForItem()
		assetJson()
		treeFoliageDirectory()
		techType()
		liquidStatusEffects()
		makeCurrentVersionedJson()
		itemTags()
		tenantConfig()
		npcPortrait()
	}
	jsize()
	status = {
		setResourceLocked()
		resourcePercentage()
		addPersistentEffects()
		removeEphemeralEffect()
		resource()
		setResourcePercentage()
		resourcePositive()
		damageTakenSince()
		statPositive()
		stat()
		statusProperty()
		activeUniqueStatusEffectSummary()
		inflictedHitsSince()
		resourceMax()
		setStatusProperty()
		setPersistentEffects()
		resetAllResources()
		addEphemeralEffects()
		overConsumeResource()
		modifyResource()
		addEphemeralEffect()
		getPersistentEffects()
		resetResource()
		consumeResource()
		clearPersistentEffects()
		modifyResourcePercentage()
		clearEphemeralEffects()
		resourceNames()
		addPersistentEffect()
		resourceLocked()
		clearAllPersistentEffects()
		inflictedDamageSince()
		isResource()
		setResource()
		giveResource()
	}
	xpcall()
	getmetatable()
	utf8 = {
		len()
		codepoint()
		offset()
		codes()
		charpattern = "[
[23:37:30.399] [Warn] 	select()
	rawequal()
	rawset()
	string = {
		gmatch()
		char()
		sub()
		unpack()
		upper()
		lower()
		find()
		rep()
		dump()
		len()
		reverse()
		packsize()
		pack()
		byte()
		match()
		format()
		gsub()
	}
	require()
	pairs()
	next()
	jobject()
	math = {
		pi = 3.1415926535898
		rad()
		max()
		sqrt()
		random()
		floor()
		log()
		acos()
		fmod()
		mininteger = -9223372036854775808
		type()
		huge = inf
		randomseed()
		deg()
		exp()
		maxinteger = 9223372036854775807
		cos()
		min()
		tointeger()
		modf()
		asin()
		tan()
		atan()
		abs()
		sin()
		ult()
		ceil()
	}
	print()
	pcall()
	type()
	init()
	setmetatable()
	jresize()
	ic = {
		checkStack()
		itemAmount()
		stripColor()
		quickstack()
		itemConfig()
		amountEquipped()
		sortFunc()
		lock()
		giveBack()
		renameThis()
		sort()
		searchBox()
		sort_relative()
		clientVersion = 1
		renameButton()
		searchButton()
		getQuality()
	}
	player = {
		equippedTech()
		altHandItem()
		giveEssentialItem()
		consumeTaggedItem()
		setUniverseFlag()
		species()
		itemsWithTag()
		worldId()
		warp()
		completeMission()
		inventoryTags()
		upgradeShip()
		hasQuest()
		consumeItem()
		gender()
		primaryHandItem()
		essentialItem()
		equippedItem()
		setIntroComplete()
		playTime()
		enabledTechs()
		recordEvent()
		playCinematic()
		introComplete()
		hasCompletedQuest()
		makeTechAvailable()
		consumeItemWithParameter()
		startQuest()
		hasItemWithParameter()
		getItemWithParameter()
		lounge()
		enableTech()
		equipTech()
		enableMission()
		removeEssentialItem()
		isLounging()
		availableTechs()
		primaryHandItemTags()
		makeTechUnavailable()
		confirm()
		serverUuid()
		addBookmark()
		altHandItemTags()
		cleanupItems()
		radioMessage()
		setEquippedItem()
		ownShipWorldId()
		hasItem()
		canStartQuest()
		giveBlueprint()
		hasCountOfItem()
		shipUpgrades()
		giveItem()
	}
	config = {
		getParameter()
	}
	self = {
	}
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	world = {
		spawnItem()
		entityPosition()
		entityHealth()
		damageTileArea()
		day()
		placeMaterial()
		entityDescription()
		containerPutItemsAt()
		entityVelocity()
		damageTiles()
		entityHandItem()
		objectAt()
		setProperty()
		containerItemApply()
		containerClose()
		distance()
		findUniqueEntity()
		gravity()
		rectTileCollision()
		entitySpecies()
		platformerPathStart()
		containerOpen()
		containerTakeAll()
		breathable()
		npcType()
		containerAddItems()
		dayLength()
		loungeableOccupied()
		placeObject()
		isTileProtected()
		destroyLiquid()
		debugLine()
		spawnLiquid()
		entityCanDamage()
		containerItemsCanFit()
		xwrap()
		entityUniqueId()
		itemDropQuery()
		lightLevel()
		placeMod()
		spawnNpc()
		spawnTreasure()
		time()
		underground()
		spawnVehicle()
		spawnMonster()
		timeOfDay()
		findPlatformerPath()
		debugPoly()
		containerTakeNumItemsAt()
		isMonster()
		farmableStage()
		polyCollision()
		objectLineQuery()
		entityHasCountOfItem()
		entityHandItemDescriptor()
		tileIsOccupied()
		resolvePolyCollision()
		pointCollision()
		callScriptedEntity()
		collisionBlocksAlongLine()
		containerStackItems()
		objectSpaces()
		containerConsume()
		spawnStagehand()
		spawnProjectile()
		stagehandType()
		entityQuery()
		lineTileCollision()
		containerSwapItemsNoCombine()
		liquidAlongLine()
		playerQuery()
		objectQuery()
		entityGender()
		rectCollision()
		containerItemAt()
		polyContains()
		containerTakeAt()
		magnitude()
		mod()
		containerSwapItems()
		isNpc()
		lineCollision()
		getObjectParameter()
		debugPoint()
		pointTileCollision()
		containerItemsFitWhere()
		containerAvailable()
		getProperty()
		containerItems()
		threatLevel()
		entityType()
		sendEntityMessage()
		material()
		liquidAt()
		containerSize()
		debugText()
		monsterType()
		entityMoney()
		nearestTo()
		npcLineQuery()
		entityPortrait()
		entityName()
		entityDamageTeam()
		containerConsumeAt()
		entityAggressive()
		windLevel()
		monsterQuery()
		entityExists()
		loungeableQuery()
		npcQuery()
		entityLineQuery()
	}
	root = {
		createBiome()
		imageSpaces()
		createItem()
		loadVersionedJson()
		createTreasure()
		getMatchingTenants()
		monsterSkillParameter()
		getConfiguration()
		npcVariant()
		itemHasTag()
		imageSize()
		projectileGravityMultiplier()
		nonEmptyRegion()
		evalFunction2()
		projectileConfig()
		materialMiningSound()
		generateName()
		isTreasurePool()
		hasTech()
		behaviorModule()
		itemConfig()
		treeStemDirectory()
		evalFunction()
		techConfig()
		npcConfig()
		setConfigurationPath()
		getConfigurationPath()
		materialHealth()
		materialFootstepSound()
		monsterMovementSettings()
		materialPath()
		setConfiguration()
		monsterPortrait()
		itemType()
		questConfig()
		recipesForItem()
		assetJson()
		treeFoliageDirectory()
		techType()
		liquidStatusEffects()
		makeCurrentVersionedJson()
		itemTags()
		tenantConfig()
		npcPortrait()
	}
	jsize()
	status = {
		setResourceLocked()
		resourcePercentage()
		addPersistentEffects()
		removeEphemeralEffect()
		resource()
		setResourcePercentage()
		resourcePositive()
		damageTakenSince()
		statPositive()
		stat()
		statusProperty()
		activeUniqueStatusEffectSummary()
		inflictedHitsSince()
		resourceMax()
		setStatusProperty()
		setPersistentEffects()
		resetAllResources()
		addEphemeralEffects()
		overConsumeResource()
		modifyResource()
		addEphemeralEffect()
		getPersistentEffects()
		resetResource()
		consumeResource()
		clearPersistentEffects()
		modifyResourcePercentage()
		clearEphemeralEffects()
		resourceNames()
		addPersistentEffect()
		resourceLocked()
		clearAllPersistentEffects()
		inflictedDamageSince()
		isResource()
		setResource()
		giveResource()
	}
	xpcall()
	getmetatable()
	utf8 = {
		len()
		codepoint()
		offset()
		codes()
		charpattern = "[
[23:37:31.933] [Warn] 	select()
	rawequal()
	rawset()
	string = {
		gmatch()
		char()
		sub()
		unpack()
		upper()
		lower()
		find()
		rep()
		dump()
		len()
		reverse()
		packsize()
		pack()
		byte()
		match()
		format()
		gsub()
	}
	require()
	pairs()
	next()
	jobject()
	math = {
		pi = 3.1415926535898
		rad()
		max()
		sqrt()
		random()
		floor()
		log()
		acos()
		fmod()
		mininteger = -9223372036854775808
		type()
		huge = inf
		randomseed()
		deg()
		exp()
		maxinteger = 9223372036854775807
		cos()
		min()
		tointeger()
		modf()
		asin()
		tan()
		atan()
		abs()
		sin()
		ult()
		ceil()
	}
	print()
	pcall()
	type()
	init()
	setmetatable()
	jresize()
	ic = {
		checkStack()
		itemAmount()
		stripColor()
		quickstack()
		itemConfig()
		amountEquipped()
		sortFunc()
		lock()
		giveBack()
		renameThis()
		sort()
		searchBox()
		sort_relative()
		clientVersion = 1
		renameButton()
		searchButton()
		getQuality()
	}
	player = {
		equippedTech()
		altHandItem()
		giveEssentialItem()
		consumeTaggedItem()
		setUniverseFlag()
		species()
		itemsWithTag()
		worldId()
		warp()
		completeMission()
		inventoryTags()
		upgradeShip()
		hasQuest()
		consumeItem()
		gender()
		primaryHandItem()
		essentialItem()
		equippedItem()
		setIntroComplete()
		playTime()
		enabledTechs()
		recordEvent()
		playCinematic()
		introComplete()
		hasCompletedQuest()
		makeTechAvailable()
		consumeItemWithParameter()
		startQuest()
		hasItemWithParameter()
		getItemWithParameter()
		lounge()
		enableTech()
		equipTech()
		enableMission()
		removeEssentialItem()
		isLounging()
		availableTechs()
		primaryHandItemTags()
		makeTechUnavailable()
		confirm()
		serverUuid()
		addBookmark()
		altHandItemTags()
		cleanupItems()
		radioMessage()
		setEquippedItem()
		ownShipWorldId()
		hasItem()
		canStartQuest()
		giveBlueprint()
		hasCountOfItem()
		shipUpgrades()
		giveItem()
	}
	config = {
		getParameter()
	}
	self = {
	}
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	world = {
		spawnItem()
		entityPosition()
		entityHealth()
		damageTileArea()
		day()
		placeMaterial()
		entityDescription()
		containerPutItemsAt()
		entityVelocity()
		damageTiles()
		entityHandItem()
		objectAt()
		setProperty()
		containerItemApply()
		containerClose()
		distance()
		findUniqueEntity()
		gravity()
		rectTileCollision()
		entitySpecies()
		platformerPathStart()
		containerOpen()
		containerTakeAll()
		breathable()
		npcType()
		containerAddItems()
		dayLength()
		loungeableOccupied()
		placeObject()
		isTileProtected()
		destroyLiquid()
		debugLine()
		spawnLiquid()
		entityCanDamage()
		containerItemsCanFit()
		xwrap()
		entityUniqueId()
		itemDropQuery()
		lightLevel()
		placeMod()
		spawnNpc()
		spawnTreasure()
		time()
		underground()
		spawnVehicle()
		spawnMonster()
		timeOfDay()
		findPlatformerPath()
		debugPoly()
		containerTakeNumItemsAt()
		isMonster()
		farmableStage()
		polyCollision()
		objectLineQuery()
		entityHasCountOfItem()
		entityHandItemDescriptor()
		tileIsOccupied()
		resolvePolyCollision()
		pointCollision()
		callScriptedEntity()
		collisionBlocksAlongLine()
		containerStackItems()
		objectSpaces()
		containerConsume()
		spawnStagehand()
		spawnProjectile()
		stagehandType()
		entityQuery()
		lineTileCollision()
		containerSwapItemsNoCombine()
		liquidAlongLine()
		playerQuery()
		objectQuery()
		entityGender()
		rectCollision()
		containerItemAt()
		polyContains()
		containerTakeAt()
		magnitude()
		mod()
		containerSwapItems()
		isNpc()
		lineCollision()
		getObjectParameter()
		debugPoint()
		pointTileCollision()
		containerItemsFitWhere()
		containerAvailable()
		getProperty()
		containerItems()
		threatLevel()
		entityType()
		sendEntityMessage()
		material()
		liquidAt()
		containerSize()
		debugText()
		monsterType()
		entityMoney()
		nearestTo()
		npcLineQuery()
		entityPortrait()
		entityName()
		entityDamageTeam()
		containerConsumeAt()
		entityAggressive()
		windLevel()
		monsterQuery()
		entityExists()
		loungeableQuery()
		npcQuery()
		entityLineQuery()
	}
	root = {
		createBiome()
		imageSpaces()
		createItem()
		loadVersionedJson()
		createTreasure()
		getMatchingTenants()
		monsterSkillParameter()
		getConfiguration()
		npcVariant()
		itemHasTag()
		imageSize()
		projectileGravityMultiplier()
		nonEmptyRegion()
		evalFunction2()
		projectileConfig()
		materialMiningSound()
		generateName()
		isTreasurePool()
		hasTech()
		behaviorModule()
		itemConfig()
		treeStemDirectory()
		evalFunction()
		techConfig()
		npcConfig()
		setConfigurationPath()
		getConfigurationPath()
		materialHealth()
		materialFootstepSound()
		monsterMovementSettings()
		materialPath()
		setConfiguration()
		monsterPortrait()
		itemType()
		questConfig()
		recipesForItem()
		assetJson()
		treeFoliageDirectory()
		techType()
		liquidStatusEffects()
		makeCurrentVersionedJson()
		itemTags()
		tenantConfig()
		npcPortrait()
	}
	jsize()
	status = {
		setResourceLocked()
		resourcePercentage()
		addPersistentEffects()
		removeEphemeralEffect()
		resource()
		setResourcePercentage()
		resourcePositive()
		damageTakenSince()
		statPositive()
		stat()
		statusProperty()
		activeUniqueStatusEffectSummary()
		inflictedHitsSince()
		resourceMax()
		setStatusProperty()
		setPersistentEffects()
		resetAllResources()
		addEphemeralEffects()
		overConsumeResource()
		modifyResource()
		addEphemeralEffect()
		getPersistentEffects()
		resetResource()
		consumeResource()
		clearPersistentEffects()
		modifyResourcePercentage()
		clearEphemeralEffects()
		resourceNames()
		addPersistentEffect()
		resourceLocked()
		clearAllPersistentEffects()
		inflictedDamageSince()
		isResource()
		setResource()
		giveResource()
	}
	xpcall()
	getmetatable()
	utf8 = {
		len()
		codepoint()
		offset()
		codes()
		charpattern = "[
[23:40:17.593] [Error] Exception while calling script uninit: (LuaException) Error code 2, [string "/stats/effects/beamout/beamout.lua"]:14: (StarException) Entity 102686 does not exist or is not a local master scripted entity
[0] 7ff6c55b1ee3 Star::captureStack
[1] 7ff6c55b0c6e Star::StarException::StarException
[2] 7ff6c55b0fb5 Star::StarException::StarException
[3] 7ff6c5bcbbf6 Star::StarException::format<int>
[4] 7ff6c5bf351b Star::LuaBindings::WorldEntityCallbacks::callScriptedEntity
[5] 7ff6c5bb9855 std::_Invoker_functor::_Call<Star::Maybe<Star::Variant<Star::Empty,bool,__int64,double,Star::String,Star::LuaTable,Star::LuaFunction,Star::LuaThread,Star::LuaUserData> > (__cdecl*const & __ptr64)(Star::World * __ptr64,int,Star::String const & __ptr64,Star::LuaVariadic<Star::Variant<Star::Empty,bool,__int64,double,Star::String,Star::LuaTable,Star::LuaFunction,Star::LuaThread,Star::LuaUserData> > const & __ptr64),Star::World * __ptr64 const & __ptr64,int,Star::String,Star::LuaVariadic<Star::Variant<Star::Empty,bool,__int64,double,Star::String,Star::LuaTable,Star::LuaFunction,Star::LuaThread,Star::LuaUserData> > >
[6] 7ff6c5bcdd2a std::invoke<Star::Maybe<Star::Variant<Star::Empty,bool,__int64,double,Star::String,Star::LuaTable,Star::LuaFunction,Star::LuaThread,Star::LuaUserData> > (__cdecl*const & __ptr64)(Star::World * __ptr64,int,Star::String const & __ptr64,Star::LuaVariadic<Star::Variant<Star::Empty,bool,__int64,double,Star::String,Star::LuaTable,Star::LuaFunction,Star::LuaThread,Star::LuaUserData> > const & __ptr64),Star::World * __ptr64 const & __ptr64,int,Star::String,Star::LuaVariadic<Star::Variant<Star::Empty,bool,__int64,double,Star::String,Star::LuaTable,Star::LuaFunction,Star::LuaThread,Star::LuaUserData> > >
[7] 7ff6c5bbdf5b std::_Invoke_ret<Star::Maybe<Star::Variant<Star::Empty,bool,__int64,double,Star::String,Star::LuaTable,Star::LuaFunction,Star::LuaThread,Star::LuaUserData> > (__cdecl*const & __ptr64)(Star::World * __ptr64,int,Star::String const & __ptr64,Star::LuaVariadic<Star::Variant<Star::Empty,bool,__int64,double,Star::String,Star::LuaTable,Star::LuaFunction,Star::LuaThread,Star::LuaUserData> > const & __ptr64),Star::World * __ptr64 const & __ptr64,int,Star::String,Star::LuaVariadic<Star::Variant<Star::Empty,bool,__int64,double,Star::String,Star::LuaTable,Star::LuaFunction,Star::LuaThread,Star::LuaUserData> > >
[8] 7ff6c5bbb3aa std::_Call_binder<std::_Unforced,0,1,2,3,Star::Maybe<Star::Variant<Star::Empty,bool,__int64,double,Star::String,Star::LuaTable,Star::LuaFunction,Star::LuaThread,Star::LuaUserData> > (__cdecl*const)(Star::World * __ptr64,int,Star::String const & __ptr64,Star::LuaVariadic<Star::Variant<Star::Empty,bool,__int64,double,Star::String,Star::LuaTable,Star::LuaFunction,Star::LuaThread,Star::LuaUserData> > const & __ptr64),std::tuple<Star::World * __ptr64,std::_Ph<1>,std::_Ph<2>,std::_Ph<3> > const ,std::tuple<int && __ptr64,Star::String && __ptr64,Star::LuaVariadic<Star::Variant<Star::Empty,bool,__int64,double,Star::String,Star::LuaTable,Star::LuaFunction,Star::LuaThread,Star::LuaUserData> > && __ptr64> >
[9] 7ff6c5bb675f std::_Binder<std::_Unforced,Star::Maybe<Star::Variant<Star::Empty,bool,__int64,double,Star::String,Star::LuaTable,Star::LuaFunction,Star::LuaThread,Star::LuaUserData> > (__cdecl&)(Star::World * __ptr64,int,Star::String const & __ptr64,Star::LuaVariadic<Star::Variant<Star::Empty,bool,__int64,double,Star::String,Star::LuaTable,Star::LuaFunction,Star::LuaThread,Star::LuaUserData> > const & __ptr64),Star::World * __ptr64 & __ptr64,std::_Ph<1> const & __ptr64,std::_Ph<2> const & __ptr64,std::_Ph<3> const & __ptr64>::operator()<int,Star::String,Star::LuaVariadic<Star::Variant<Star::Empty,bool,__int64,double,Star::String,Star::LuaTable,Star::LuaFunction,Star::LuaThread,Star::LuaUserData> > >
[10] 7ff6c5be8d2c <lambda_cf8e2fc210c152351a677d981806b1c3>::operator()
[11] 7ff6c5bb899f std::_Invoker_functor::_Call<<lambda_cf8e2fc210c152351a677d981806b1c3> & __ptr64,Star::LuaEngine & __ptr64,unsigned __int64,Star::Variant<Star::Empty,bool,__int64,double,Star::String,Star::LuaTable,Star::LuaFunction,Star::LuaThread,Star::LuaUserData> * __ptr64>
[12] 7ff6c5bcd640 std::invoke<<lambda_cf8e2fc210c152351a677d981806b1c3> & __ptr64,Star::LuaEngine & __ptr64,unsigned __int64,Star::Variant<Star::Empty,bool,__int64,double,Star::String,Star::LuaTable,Star::LuaFunction,Star::LuaThread,Star::LuaUserData> * __ptr64>
[13] 7ff6c5bc0e79 std::_Invoke_ret<Star::Variant<Star::Variant<Star::Empty,bool,__int64,double,Star::String,Star::LuaTable,Star::LuaFunction,Star::LuaThread,Star::LuaUserData>,Star::LuaVariadic<Star::Variant<Star::Empty,bool,__int64,double,Star::String,Star::LuaTable,Star::LuaFunction,Star::LuaThread,Star::LuaUserData> > >,<lambda_cf8e2fc210c152351a677d981806b1c3> & __ptr64,Star::LuaEngine & __ptr64,unsigned __int64,Star::Variant<Star::Empty,bool,__int64,double,Star::String,Star::LuaTable,Star::LuaFunction,Star::LuaThread,Star::LuaUserData> * __ptr64>
[14] 7ff6c5beed8b std::_Func_impl<<lambda_cf8e2fc210c152351a677d981806b1c3>,std::allocator<int>,Star::Variant<Star::Variant<Star::Empty,bool,__int64,double,Star::String,Star::LuaTable,Star::LuaFunction,Star::LuaThread,Star::LuaUserData>,Star::LuaVariadic<Star::Variant<Star::Empty,bool,__int64,double,Star::String,Star::LuaTable,Star::LuaFunction,Star::LuaThread,Star::LuaUserData> > >,Star::LuaEngine & __ptr64,unsigned __int64,Star::Variant<Star::Empty,bool,__int64,double,Star::String,Star::LuaTable,Star::LuaFunction,Star::LuaThread,Star::LuaUserData> * __ptr64>::_Do_call
[15] 7ff6c55804bd std::_Func_class<Star::Variant<Star::Variant<Star::Empty,bool,__int64,double,Star::String,Star::LuaTable,Star::LuaFunction,Star::LuaThread,Star::LuaUserData>,Star::LuaVariadic<Star::Variant<Star::Empty,bool,__int64,double,Star::String,Star::LuaTable,Star::LuaFunction,Star::LuaThread,Star::LuaUserData> > >,Star::LuaEngine & __ptr64,unsigned __int64,Star::Variant<Star::Empty,bool,__int64,double,Star::String,Star::LuaTable,Star::LuaFunction,Star::LuaThread,Star::LuaUserData> * __ptr64>::operator()
[16] 7ff6c557f554 <lambda_a03bcae4599b53751a446949639a4d5e>::operator()
[17] 7ff6c550a798 luaD_precall
[18] 7ff6c5523541 luaV_execute
[19] 7ff6c550a2a3 luaD_call
[20] 7ff6c550aa7b luaD_rawrunprotected
[21] 7ff6c550a4b0 luaD_pcall
[22] 7ff6c55009d4 lua_pcallk
[23] 7ff6c5587530 Star::LuaEngine::pcallWithTraceback
[24] 7ff6c5739844 Star::LuaEngine::callFunction<>
[25] 7ff6c573c6b1 Star::LuaFunction::invoke<Star::Variant<Star::Empty,bool,__int64,double,Star::String,Star::LuaTable,Star::LuaFunction,Star::LuaThread,Star::LuaUserData> >
[26] 7ff6c5b6e793 Star::LuaContext::invokePath<Star::Variant<Star::Empty,bool,__int64,double,Star::String,Star::LuaTable,Star::LuaFunction,Star::LuaThread,Star::LuaUserData> >
[27] 7ff6c5b70ac0 Star::LuaBaseComponent::uninit
[28] 7ff6c59901a7 Star::StatusController::uninitUniqueEffectScript
[29] 7ff6c599002c Star::StatusController::uninit
[30] 7ff6c57e3af8 Star::Npc::uninit
[31] 7ff6c5af259f Star::WorldStorage::unloadSectorToLevel
[32] 7ff6c5af10d3 Star::WorldStorage::tick
[33] 7ff6c5ade2f3 Star::WorldServer::update
[34] 7ff6c5ae5762 Star::WorldServerThread::update
[35] 7ff6c5ae51c8 Star::WorldServerThread::run
[36] 7ff6c55aea0e Star::ThreadImpl::runThread
[37] 7ffae0088102 BaseThreadInitThunk
[38] 7ffae163c5b4 RtlUserThreadStart
stack traceback:
	[C]: in ?
	[C]: in field 'callScriptedEntity'
	[string "/stats/effects/beamout/beamout.lua"]:14: in function <[string "/stats/effects/beamout/beamout.lua"]:12>
[0] 7ff6c55b1ee3 Star::captureStack
[1] 7ff6c55b0c6e Star::StarException::StarException
[2] 7ff6c55860a1 Star::LuaEngine::handleError
[3] 7ff6c573985d Star::LuaEngine::callFunction<>
[4] 7ff6c573c6b1 Star::LuaFunction::invoke<Star::Variant<Star::Empty,bool,__int64,double,Star::String,Star::LuaTable,Star::LuaFunction,Star::LuaThread,Star::LuaUserData> >
[5] 7ff6c5b6e793 Star::LuaContext::invokePath<Star::Variant<Star::Empty,bool,__int64,double,Star::String,Star::LuaTable,Star::LuaFunction,Star::LuaThread,Star::LuaUserData> >
[6] 7ff6c5b70ac0 Star::LuaBaseComponent::uninit
[7] 7ff6c59901a7 Star::StatusController::uninitUniqueEffectScript
[8] 7ff6c599002c Star::StatusController::uninit
[9] 7ff6c57e3af8 Star::Npc::uninit
[10] 7ff6c5af259f Star::WorldStorage::unloadSectorToLevel
[11] 7ff6c5af10d3 Star::WorldStorage::tick
[12] 7ff6c5ade2f3 Star::WorldServer::update
[13] 7ff6c5ae5762 Star::WorldServerThread::update
[14] 7ff6c5ae51c8 Star::WorldServerThread::run
[15] 7ff6c55aea0e Star::ThreadImpl::runThread
[16] 7ffae0088102 BaseThreadInitThunk
[17] 7ffae163c5b4 RtlUserThreadStart
[23:42:06.566] [Warn] 	select()
	rawequal()
	rawset()
	string = {
		gmatch()
		char()
		sub()
		unpack()
		upper()
		lower()
		find()
		rep()
		dump()
		len()
		reverse()
		packsize()
		pack()
		byte()
		match()
		format()
		gsub()
	}
	require()
	pairs()
	next()
	jobject()
	math = {
		pi = 3.1415926535898
		rad()
		max()
		sqrt()
		random()
		floor()
		log()
		acos()
		fmod()
		mininteger = -9223372036854775808
		type()
		huge = inf
		randomseed()
		deg()
		exp()
		maxinteger = 9223372036854775807
		cos()
		min()
		tointeger()
		modf()
		asin()
		tan()
		atan()
		abs()
		sin()
		ult()
		ceil()
	}
	print()
	pcall()
	type()
	init()
	setmetatable()
	jresize()
	ic = {
		checkStack()
		itemAmount()
		stripColor()
		quickstack()
		itemConfig()
		amountEquipped()
		sortFunc()
		lock()
		giveBack()
		renameThis()
		sort()
		searchBox()
		sort_relative()
		clientVersion = 1
		renameButton()
		searchButton()
		getQuality()
	}
	player = {
		equippedTech()
		altHandItem()
		giveEssentialItem()
		consumeTaggedItem()
		setUniverseFlag()
		species()
		itemsWithTag()
		worldId()
		warp()
		completeMission()
		inventoryTags()
		upgradeShip()
		hasQuest()
		consumeItem()
		gender()
		primaryHandItem()
		essentialItem()
		equippedItem()
		setIntroComplete()
		playTime()
		enabledTechs()
		recordEvent()
		playCinematic()
		introComplete()
		hasCompletedQuest()
		makeTechAvailable()
		consumeItemWithParameter()
		startQuest()
		hasItemWithParameter()
		getItemWithParameter()
		lounge()
		enableTech()
		equipTech()
		enableMission()
		removeEssentialItem()
		isLounging()
		availableTechs()
		primaryHandItemTags()
		makeTechUnavailable()
		confirm()
		serverUuid()
		addBookmark()
		altHandItemTags()
		cleanupItems()
		radioMessage()
		setEquippedItem()
		ownShipWorldId()
		hasItem()
		canStartQuest()
		giveBlueprint()
		hasCountOfItem()
		shipUpgrades()
		giveItem()
	}
	config = {
		getParameter()
	}
	self = {
	}
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	world = {
		spawnItem()
		entityPosition()
		entityHealth()
		damageTileArea()
		day()
		placeMaterial()
		entityDescription()
		containerPutItemsAt()
		entityVelocity()
		damageTiles()
		entityHandItem()
		objectAt()
		setProperty()
		containerItemApply()
		containerClose()
		distance()
		findUniqueEntity()
		gravity()
		rectTileCollision()
		entitySpecies()
		platformerPathStart()
		containerOpen()
		containerTakeAll()
		breathable()
		npcType()
		containerAddItems()
		dayLength()
		loungeableOccupied()
		placeObject()
		isTileProtected()
		destroyLiquid()
		debugLine()
		spawnLiquid()
		entityCanDamage()
		containerItemsCanFit()
		xwrap()
		entityUniqueId()
		itemDropQuery()
		lightLevel()
		placeMod()
		spawnNpc()
		spawnTreasure()
		time()
		underground()
		spawnVehicle()
		spawnMonster()
		timeOfDay()
		findPlatformerPath()
		debugPoly()
		containerTakeNumItemsAt()
		isMonster()
		farmableStage()
		polyCollision()
		objectLineQuery()
		entityHasCountOfItem()
		entityHandItemDescriptor()
		tileIsOccupied()
		resolvePolyCollision()
		pointCollision()
		callScriptedEntity()
		collisionBlocksAlongLine()
		containerStackItems()
		objectSpaces()
		containerConsume()
		spawnStagehand()
		spawnProjectile()
		stagehandType()
		entityQuery()
		lineTileCollision()
		containerSwapItemsNoCombine()
		liquidAlongLine()
		playerQuery()
		objectQuery()
		entityGender()
		rectCollision()
		containerItemAt()
		polyContains()
		containerTakeAt()
		magnitude()
		mod()
		containerSwapItems()
		isNpc()
		lineCollision()
		getObjectParameter()
		debugPoint()
		pointTileCollision()
		containerItemsFitWhere()
		containerAvailable()
		getProperty()
		containerItems()
		threatLevel()
		entityType()
		sendEntityMessage()
		material()
		liquidAt()
		containerSize()
		debugText()
		monsterType()
		entityMoney()
		nearestTo()
		npcLineQuery()
		entityPortrait()
		entityName()
		entityDamageTeam()
		containerConsumeAt()
		entityAggressive()
		windLevel()
		monsterQuery()
		entityExists()
		loungeableQuery()
		npcQuery()
		entityLineQuery()
	}
	root = {
		createBiome()
		imageSpaces()
		createItem()
		loadVersionedJson()
		createTreasure()
		getMatchingTenants()
		monsterSkillParameter()
		getConfiguration()
		npcVariant()
		itemHasTag()
		imageSize()
		projectileGravityMultiplier()
		nonEmptyRegion()
		evalFunction2()
		projectileConfig()
		materialMiningSound()
		generateName()
		isTreasurePool()
		hasTech()
		behaviorModule()
		itemConfig()
		treeStemDirectory()
		evalFunction()
		techConfig()
		npcConfig()
		setConfigurationPath()
		getConfigurationPath()
		materialHealth()
		materialFootstepSound()
		monsterMovementSettings()
		materialPath()
		setConfiguration()
		monsterPortrait()
		itemType()
		questConfig()
		recipesForItem()
		assetJson()
		treeFoliageDirectory()
		techType()
		liquidStatusEffects()
		makeCurrentVersionedJson()
		itemTags()
		tenantConfig()
		npcPortrait()
	}
	jsize()
	status = {
		setResourceLocked()
		resourcePercentage()
		addPersistentEffects()
		removeEphemeralEffect()
		resource()
		setResourcePercentage()
		resourcePositive()
		damageTakenSince()
		statPositive()
		stat()
		statusProperty()
		activeUniqueStatusEffectSummary()
		inflictedHitsSince()
		resourceMax()
		setStatusProperty()
		setPersistentEffects()
		resetAllResources()
		addEphemeralEffects()
		overConsumeResource()
		modifyResource()
		addEphemeralEffect()
		getPersistentEffects()
		resetResource()
		consumeResource()
		clearPersistentEffects()
		modifyResourcePercentage()
		clearEphemeralEffects()
		resourceNames()
		addPersistentEffect()
		resourceLocked()
		clearAllPersistentEffects()
		inflictedDamageSince()
		isResource()
		setResource()
		giveResource()
	}
	xpcall()
	getmetatable()
	utf8 = {
		len()
		codepoint()
		offset()
		codes()
		charpattern = "[
[23:42:20.846] [Warn] 	select()
	rawequal()
	rawset()
	string = {
		gmatch()
		char()
		sub()
		unpack()
		upper()
		lower()
		find()
		rep()
		dump()
		len()
		reverse()
		packsize()
		pack()
		byte()
		match()
		format()
		gsub()
	}
	require()
	pairs()
	next()
	jobject()
	math = {
		pi = 3.1415926535898
		rad()
		max()
		sqrt()
		random()
		floor()
		log()
		acos()
		fmod()
		mininteger = -9223372036854775808
		type()
		huge = inf
		randomseed()
		deg()
		exp()
		maxinteger = 9223372036854775807
		cos()
		min()
		tointeger()
		modf()
		asin()
		tan()
		atan()
		abs()
		sin()
		ult()
		ceil()
	}
	print()
	pcall()
	type()
	init()
	setmetatable()
	jresize()
	ic = {
		checkStack()
		itemAmount()
		stripColor()
		quickstack()
		itemConfig()
		amountEquipped()
		sortFunc()
		lock()
		giveBack()
		renameThis()
		sort()
		searchBox()
		sort_relative()
		clientVersion = 1
		renameButton()
		searchButton()
		getQuality()
	}
	player = {
		equippedTech()
		altHandItem()
		giveEssentialItem()
		consumeTaggedItem()
		setUniverseFlag()
		species()
		itemsWithTag()
		worldId()
		warp()
		completeMission()
		inventoryTags()
		upgradeShip()
		hasQuest()
		consumeItem()
		gender()
		primaryHandItem()
		essentialItem()
		equippedItem()
		setIntroComplete()
		playTime()
		enabledTechs()
		recordEvent()
		playCinematic()
		introComplete()
		hasCompletedQuest()
		makeTechAvailable()
		consumeItemWithParameter()
		startQuest()
		hasItemWithParameter()
		getItemWithParameter()
		lounge()
		enableTech()
		equipTech()
		enableMission()
		removeEssentialItem()
		isLounging()
		availableTechs()
		primaryHandItemTags()
		makeTechUnavailable()
		confirm()
		serverUuid()
		addBookmark()
		altHandItemTags()
		cleanupItems()
		radioMessage()
		setEquippedItem()
		ownShipWorldId()
		hasItem()
		canStartQuest()
		giveBlueprint()
		hasCountOfItem()
		shipUpgrades()
		giveItem()
	}
	config = {
		getParameter()
	}
	self = {
	}
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	world = {
		spawnItem()
		entityPosition()
		entityHealth()
		damageTileArea()
		day()
		placeMaterial()
		entityDescription()
		containerPutItemsAt()
		entityVelocity()
		damageTiles()
		entityHandItem()
		objectAt()
		setProperty()
		containerItemApply()
		containerClose()
		distance()
		findUniqueEntity()
		gravity()
		rectTileCollision()
		entitySpecies()
		platformerPathStart()
		containerOpen()
		containerTakeAll()
		breathable()
		npcType()
		containerAddItems()
		dayLength()
		loungeableOccupied()
		placeObject()
		isTileProtected()
		destroyLiquid()
		debugLine()
		spawnLiquid()
		entityCanDamage()
		containerItemsCanFit()
		xwrap()
		entityUniqueId()
		itemDropQuery()
		lightLevel()
		placeMod()
		spawnNpc()
		spawnTreasure()
		time()
		underground()
		spawnVehicle()
		spawnMonster()
		timeOfDay()
		findPlatformerPath()
		debugPoly()
		containerTakeNumItemsAt()
		isMonster()
		farmableStage()
		polyCollision()
		objectLineQuery()
		entityHasCountOfItem()
		entityHandItemDescriptor()
		tileIsOccupied()
		resolvePolyCollision()
		pointCollision()
		callScriptedEntity()
		collisionBlocksAlongLine()
		containerStackItems()
		objectSpaces()
		containerConsume()
		spawnStagehand()
		spawnProjectile()
		stagehandType()
		entityQuery()
		lineTileCollision()
		containerSwapItemsNoCombine()
		liquidAlongLine()
		playerQuery()
		objectQuery()
		entityGender()
		rectCollision()
		containerItemAt()
		polyContains()
		containerTakeAt()
		magnitude()
		mod()
		containerSwapItems()
		isNpc()
		lineCollision()
		getObjectParameter()
		debugPoint()
		pointTileCollision()
		containerItemsFitWhere()
		containerAvailable()
		getProperty()
		containerItems()
		threatLevel()
		entityType()
		sendEntityMessage()
		material()
		liquidAt()
		containerSize()
		debugText()
		monsterType()
		entityMoney()
		nearestTo()
		npcLineQuery()
		entityPortrait()
		entityName()
		entityDamageTeam()
		containerConsumeAt()
		entityAggressive()
		windLevel()
		monsterQuery()
		entityExists()
		loungeableQuery()
		npcQuery()
		entityLineQuery()
	}
	root = {
		createBiome()
		imageSpaces()
		createItem()
		loadVersionedJson()
		createTreasure()
		getMatchingTenants()
		monsterSkillParameter()
		getConfiguration()
		npcVariant()
		itemHasTag()
		imageSize()
		projectileGravityMultiplier()
		nonEmptyRegion()
		evalFunction2()
		projectileConfig()
		materialMiningSound()
		generateName()
		isTreasurePool()
		hasTech()
		behaviorModule()
		itemConfig()
		treeStemDirectory()
		evalFunction()
		techConfig()
		npcConfig()
		setConfigurationPath()
		getConfigurationPath()
		materialHealth()
		materialFootstepSound()
		monsterMovementSettings()
		materialPath()
		setConfiguration()
		monsterPortrait()
		itemType()
		questConfig()
		recipesForItem()
		assetJson()
		treeFoliageDirectory()
		techType()
		liquidStatusEffects()
		makeCurrentVersionedJson()
		itemTags()
		tenantConfig()
		npcPortrait()
	}
	jsize()
	status = {
		setResourceLocked()
		resourcePercentage()
		addPersistentEffects()
		removeEphemeralEffect()
		resource()
		setResourcePercentage()
		resourcePositive()
		damageTakenSince()
		statPositive()
		stat()
		statusProperty()
		activeUniqueStatusEffectSummary()
		inflictedHitsSince()
		resourceMax()
		setStatusProperty()
		setPersistentEffects()
		resetAllResources()
		addEphemeralEffects()
		overConsumeResource()
		modifyResource()
		addEphemeralEffect()
		getPersistentEffects()
		resetResource()
		consumeResource()
		clearPersistentEffects()
		modifyResourcePercentage()
		clearEphemeralEffects()
		resourceNames()
		addPersistentEffect()
		resourceLocked()
		clearAllPersistentEffects()
		inflictedDamageSince()
		isResource()
		setResource()
		giveResource()
	}
	xpcall()
	getmetatable()
	utf8 = {
		len()
		codepoint()
		offset()
		codes()
		charpattern = "[
[23:42:42.683] [Warn] 	select()
	rawequal()
	rawset()
	string = {
		gmatch()
		char()
		sub()
		unpack()
		upper()
		lower()
		find()
		rep()
		dump()
		len()
		reverse()
		packsize()
		pack()
		byte()
		match()
		format()
		gsub()
	}
	require()
	pairs()
	next()
	jobject()
	math = {
		pi = 3.1415926535898
		rad()
		max()
		sqrt()
		random()
		floor()
		log()
		acos()
		fmod()
		mininteger = -9223372036854775808
		type()
		huge = inf
		randomseed()
		deg()
		exp()
		maxinteger = 9223372036854775807
		cos()
		min()
		tointeger()
		modf()
		asin()
		tan()
		atan()
		abs()
		sin()
		ult()
		ceil()
	}
	print()
	pcall()
	type()
	init()
	setmetatable()
	jresize()
	ic = {
		checkStack()
		itemAmount()
		stripColor()
		quickstack()
		itemConfig()
		amountEquipped()
		sortFunc()
		lock()
		giveBack()
		renameThis()
		sort()
		searchBox()
		sort_relative()
		clientVersion = 1
		renameButton()
		searchButton()
		getQuality()
	}
	player = {
		equippedTech()
		altHandItem()
		giveEssentialItem()
		consumeTaggedItem()
		setUniverseFlag()
		species()
		itemsWithTag()
		worldId()
		warp()
		completeMission()
		inventoryTags()
		upgradeShip()
		hasQuest()
		consumeItem()
		gender()
		primaryHandItem()
		essentialItem()
		equippedItem()
		setIntroComplete()
		playTime()
		enabledTechs()
		recordEvent()
		playCinematic()
		introComplete()
		hasCompletedQuest()
		makeTechAvailable()
		consumeItemWithParameter()
		startQuest()
		hasItemWithParameter()
		getItemWithParameter()
		lounge()
		enableTech()
		equipTech()
		enableMission()
		removeEssentialItem()
		isLounging()
		availableTechs()
		primaryHandItemTags()
		makeTechUnavailable()
		confirm()
		serverUuid()
		addBookmark()
		altHandItemTags()
		cleanupItems()
		radioMessage()
		setEquippedItem()
		ownShipWorldId()
		hasItem()
		canStartQuest()
		giveBlueprint()
		hasCountOfItem()
		shipUpgrades()
		giveItem()
	}
	config = {
		getParameter()
	}
	self = {
	}
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	world = {
		spawnItem()
		entityPosition()
		entityHealth()
		damageTileArea()
		day()
		placeMaterial()
		entityDescription()
		containerPutItemsAt()
		entityVelocity()
		damageTiles()
		entityHandItem()
		objectAt()
		setProperty()
		containerItemApply()
		containerClose()
		distance()
		findUniqueEntity()
		gravity()
		rectTileCollision()
		entitySpecies()
		platformerPathStart()
		containerOpen()
		containerTakeAll()
		breathable()
		npcType()
		containerAddItems()
		dayLength()
		loungeableOccupied()
		placeObject()
		isTileProtected()
		destroyLiquid()
		debugLine()
		spawnLiquid()
		entityCanDamage()
		containerItemsCanFit()
		xwrap()
		entityUniqueId()
		itemDropQuery()
		lightLevel()
		placeMod()
		spawnNpc()
		spawnTreasure()
		time()
		underground()
		spawnVehicle()
		spawnMonster()
		timeOfDay()
		findPlatformerPath()
		debugPoly()
		containerTakeNumItemsAt()
		isMonster()
		farmableStage()
		polyCollision()
		objectLineQuery()
		entityHasCountOfItem()
		entityHandItemDescriptor()
		tileIsOccupied()
		resolvePolyCollision()
		pointCollision()
		callScriptedEntity()
		collisionBlocksAlongLine()
		containerStackItems()
		objectSpaces()
		containerConsume()
		spawnStagehand()
		spawnProjectile()
		stagehandType()
		entityQuery()
		lineTileCollision()
		containerSwapItemsNoCombine()
		liquidAlongLine()
		playerQuery()
		objectQuery()
		entityGender()
		rectCollision()
		containerItemAt()
		polyContains()
		containerTakeAt()
		magnitude()
		mod()
		containerSwapItems()
		isNpc()
		lineCollision()
		getObjectParameter()
		debugPoint()
		pointTileCollision()
		containerItemsFitWhere()
		containerAvailable()
		getProperty()
		containerItems()
		threatLevel()
		entityType()
		sendEntityMessage()
		material()
		liquidAt()
		containerSize()
		debugText()
		monsterType()
		entityMoney()
		nearestTo()
		npcLineQuery()
		entityPortrait()
		entityName()
		entityDamageTeam()
		containerConsumeAt()
		entityAggressive()
		windLevel()
		monsterQuery()
		entityExists()
		loungeableQuery()
		npcQuery()
		entityLineQuery()
	}
	root = {
		createBiome()
		imageSpaces()
		createItem()
		loadVersionedJson()
		createTreasure()
		getMatchingTenants()
		monsterSkillParameter()
		getConfiguration()
		npcVariant()
		itemHasTag()
		imageSize()
		projectileGravityMultiplier()
		nonEmptyRegion()
		evalFunction2()
		projectileConfig()
		materialMiningSound()
		generateName()
		isTreasurePool()
		hasTech()
		behaviorModule()
		itemConfig()
		treeStemDirectory()
		evalFunction()
		techConfig()
		npcConfig()
		setConfigurationPath()
		getConfigurationPath()
		materialHealth()
		materialFootstepSound()
		monsterMovementSettings()
		materialPath()
		setConfiguration()
		monsterPortrait()
		itemType()
		questConfig()
		recipesForItem()
		assetJson()
		treeFoliageDirectory()
		techType()
		liquidStatusEffects()
		makeCurrentVersionedJson()
		itemTags()
		tenantConfig()
		npcPortrait()
	}
	jsize()
	status = {
		setResourceLocked()
		resourcePercentage()
		addPersistentEffects()
		removeEphemeralEffect()
		resource()
		setResourcePercentage()
		resourcePositive()
		damageTakenSince()
		statPositive()
		stat()
		statusProperty()
		activeUniqueStatusEffectSummary()
		inflictedHitsSince()
		resourceMax()
		setStatusProperty()
		setPersistentEffects()
		resetAllResources()
		addEphemeralEffects()
		overConsumeResource()
		modifyResource()
		addEphemeralEffect()
		getPersistentEffects()
		resetResource()
		consumeResource()
		clearPersistentEffects()
		modifyResourcePercentage()
		clearEphemeralEffects()
		resourceNames()
		addPersistentEffect()
		resourceLocked()
		clearAllPersistentEffects()
		inflictedDamageSince()
		isResource()
		setResource()
		giveResource()
	}
	xpcall()
	getmetatable()
	utf8 = {
		len()
		codepoint()
		offset()
		codes()
		charpattern = "[
[23:42:43.735] [Warn] 	select()
	rawequal()
	rawset()
	string = {
		gmatch()
		char()
		sub()
		unpack()
		upper()
		lower()
		find()
		rep()
		dump()
		len()
		reverse()
		packsize()
		pack()
		byte()
		match()
		format()
		gsub()
	}
	require()
	pairs()
	next()
	jobject()
	math = {
		pi = 3.1415926535898
		rad()
		max()
		sqrt()
		random()
		floor()
		log()
		acos()
		fmod()
		mininteger = -9223372036854775808
		type()
		huge = inf
		randomseed()
		deg()
		exp()
		maxinteger = 9223372036854775807
		cos()
		min()
		tointeger()
		modf()
		asin()
		tan()
		atan()
		abs()
		sin()
		ult()
		ceil()
	}
	print()
	pcall()
	type()
	init()
	setmetatable()
	jresize()
	ic = {
		checkStack()
		itemAmount()
		stripColor()
		quickstack()
		itemConfig()
		amountEquipped()
		sortFunc()
		lock()
		giveBack()
		renameThis()
		sort()
		searchBox()
		sort_relative()
		clientVersion = 1
		renameButton()
		searchButton()
		getQuality()
	}
	player = {
		equippedTech()
		altHandItem()
		giveEssentialItem()
		consumeTaggedItem()
		setUniverseFlag()
		species()
		itemsWithTag()
		worldId()
		warp()
		completeMission()
		inventoryTags()
		upgradeShip()
		hasQuest()
		consumeItem()
		gender()
		primaryHandItem()
		essentialItem()
		equippedItem()
		setIntroComplete()
		playTime()
		enabledTechs()
		recordEvent()
		playCinematic()
		introComplete()
		hasCompletedQuest()
		makeTechAvailable()
		consumeItemWithParameter()
		startQuest()
		hasItemWithParameter()
		getItemWithParameter()
		lounge()
		enableTech()
		equipTech()
		enableMission()
		removeEssentialItem()
		isLounging()
		availableTechs()
		primaryHandItemTags()
		makeTechUnavailable()
		confirm()
		serverUuid()
		addBookmark()
		altHandItemTags()
		cleanupItems()
		radioMessage()
		setEquippedItem()
		ownShipWorldId()
		hasItem()
		canStartQuest()
		giveBlueprint()
		hasCountOfItem()
		shipUpgrades()
		giveItem()
	}
	config = {
		getParameter()
	}
	self = {
	}
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	world = {
		spawnItem()
		entityPosition()
		entityHealth()
		damageTileArea()
		day()
		placeMaterial()
		entityDescription()
		containerPutItemsAt()
		entityVelocity()
		damageTiles()
		entityHandItem()
		objectAt()
		setProperty()
		containerItemApply()
		containerClose()
		distance()
		findUniqueEntity()
		gravity()
		rectTileCollision()
		entitySpecies()
		platformerPathStart()
		containerOpen()
		containerTakeAll()
		breathable()
		npcType()
		containerAddItems()
		dayLength()
		loungeableOccupied()
		placeObject()
		isTileProtected()
		destroyLiquid()
		debugLine()
		spawnLiquid()
		entityCanDamage()
		containerItemsCanFit()
		xwrap()
		entityUniqueId()
		itemDropQuery()
		lightLevel()
		placeMod()
		spawnNpc()
		spawnTreasure()
		time()
		underground()
		spawnVehicle()
		spawnMonster()
		timeOfDay()
		findPlatformerPath()
		debugPoly()
		containerTakeNumItemsAt()
		isMonster()
		farmableStage()
		polyCollision()
		objectLineQuery()
		entityHasCountOfItem()
		entityHandItemDescriptor()
		tileIsOccupied()
		resolvePolyCollision()
		pointCollision()
		callScriptedEntity()
		collisionBlocksAlongLine()
		containerStackItems()
		objectSpaces()
		containerConsume()
		spawnStagehand()
		spawnProjectile()
		stagehandType()
		entityQuery()
		lineTileCollision()
		containerSwapItemsNoCombine()
		liquidAlongLine()
		playerQuery()
		objectQuery()
		entityGender()
		rectCollision()
		containerItemAt()
		polyContains()
		containerTakeAt()
		magnitude()
		mod()
		containerSwapItems()
		isNpc()
		lineCollision()
		getObjectParameter()
		debugPoint()
		pointTileCollision()
		containerItemsFitWhere()
		containerAvailable()
		getProperty()
		containerItems()
		threatLevel()
		entityType()
		sendEntityMessage()
		material()
		liquidAt()
		containerSize()
		debugText()
		monsterType()
		entityMoney()
		nearestTo()
		npcLineQuery()
		entityPortrait()
		entityName()
		entityDamageTeam()
		containerConsumeAt()
		entityAggressive()
		windLevel()
		monsterQuery()
		entityExists()
		loungeableQuery()
		npcQuery()
		entityLineQuery()
	}
	root = {
		createBiome()
		imageSpaces()
		createItem()
		loadVersionedJson()
		createTreasure()
		getMatchingTenants()
		monsterSkillParameter()
		getConfiguration()
		npcVariant()
		itemHasTag()
		imageSize()
		projectileGravityMultiplier()
		nonEmptyRegion()
		evalFunction2()
		projectileConfig()
		materialMiningSound()
		generateName()
		isTreasurePool()
		hasTech()
		behaviorModule()
		itemConfig()
		treeStemDirectory()
		evalFunction()
		techConfig()
		npcConfig()
		setConfigurationPath()
		getConfigurationPath()
		materialHealth()
		materialFootstepSound()
		monsterMovementSettings()
		materialPath()
		setConfiguration()
		monsterPortrait()
		itemType()
		questConfig()
		recipesForItem()
		assetJson()
		treeFoliageDirectory()
		techType()
		liquidStatusEffects()
		makeCurrentVersionedJson()
		itemTags()
		tenantConfig()
		npcPortrait()
	}
	jsize()
	status = {
		setResourceLocked()
		resourcePercentage()
		addPersistentEffects()
		removeEphemeralEffect()
		resource()
		setResourcePercentage()
		resourcePositive()
		damageTakenSince()
		statPositive()
		stat()
		statusProperty()
		activeUniqueStatusEffectSummary()
		inflictedHitsSince()
		resourceMax()
		setStatusProperty()
		setPersistentEffects()
		resetAllResources()
		addEphemeralEffects()
		overConsumeResource()
		modifyResource()
		addEphemeralEffect()
		getPersistentEffects()
		resetResource()
		consumeResource()
		clearPersistentEffects()
		modifyResourcePercentage()
		clearEphemeralEffects()
		resourceNames()
		addPersistentEffect()
		resourceLocked()
		clearAllPersistentEffects()
		inflictedDamageSince()
		isResource()
		setResource()
		giveResource()
	}
	xpcall()
	getmetatable()
	utf8 = {
		len()
		codepoint()
		offset()
		codes()
		charpattern = "[
[23:42:45.970] [Warn] 	select()
	rawequal()
	rawset()
	string = {
		gmatch()
		char()
		sub()
		unpack()
		upper()
		lower()
		find()
		rep()
		dump()
		len()
		reverse()
		packsize()
		pack()
		byte()
		match()
		format()
		gsub()
	}
	require()
	pairs()
	next()
	jobject()
	math = {
		pi = 3.1415926535898
		rad()
		max()
		sqrt()
		random()
		floor()
		log()
		acos()
		fmod()
		mininteger = -9223372036854775808
		type()
		huge = inf
		randomseed()
		deg()
		exp()
		maxinteger = 9223372036854775807
		cos()
		min()
		tointeger()
		modf()
		asin()
		tan()
		atan()
		abs()
		sin()
		ult()
		ceil()
	}
	print()
	pcall()
	type()
	init()
	setmetatable()
	jresize()
	ic = {
		checkStack()
		itemAmount()
		stripColor()
		quickstack()
		itemConfig()
		amountEquipped()
		sortFunc()
		lock()
		giveBack()
		renameThis()
		sort()
		searchBox()
		sort_relative()
		clientVersion = 1
		renameButton()
		searchButton()
		getQuality()
	}
	player = {
		equippedTech()
		altHandItem()
		giveEssentialItem()
		consumeTaggedItem()
		setUniverseFlag()
		species()
		itemsWithTag()
		worldId()
		warp()
		completeMission()
		inventoryTags()
		upgradeShip()
		hasQuest()
		consumeItem()
		gender()
		primaryHandItem()
		essentialItem()
		equippedItem()
		setIntroComplete()
		playTime()
		enabledTechs()
		recordEvent()
		playCinematic()
		introComplete()
		hasCompletedQuest()
		makeTechAvailable()
		consumeItemWithParameter()
		startQuest()
		hasItemWithParameter()
		getItemWithParameter()
		lounge()
		enableTech()
		equipTech()
		enableMission()
		removeEssentialItem()
		isLounging()
		availableTechs()
		primaryHandItemTags()
		makeTechUnavailable()
		confirm()
		serverUuid()
		addBookmark()
		altHandItemTags()
		cleanupItems()
		radioMessage()
		setEquippedItem()
		ownShipWorldId()
		hasItem()
		canStartQuest()
		giveBlueprint()
		hasCountOfItem()
		shipUpgrades()
		giveItem()
	}
	config = {
		getParameter()
	}
	self = {
	}
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	world = {
		spawnItem()
		entityPosition()
		entityHealth()
		damageTileArea()
		day()
		placeMaterial()
		entityDescription()
		containerPutItemsAt()
		entityVelocity()
		damageTiles()
		entityHandItem()
		objectAt()
		setProperty()
		containerItemApply()
		containerClose()
		distance()
		findUniqueEntity()
		gravity()
		rectTileCollision()
		entitySpecies()
		platformerPathStart()
		containerOpen()
		containerTakeAll()
		breathable()
		npcType()
		containerAddItems()
		dayLength()
		loungeableOccupied()
		placeObject()
		isTileProtected()
		destroyLiquid()
		debugLine()
		spawnLiquid()
		entityCanDamage()
		containerItemsCanFit()
		xwrap()
		entityUniqueId()
		itemDropQuery()
		lightLevel()
		placeMod()
		spawnNpc()
		spawnTreasure()
		time()
		underground()
		spawnVehicle()
		spawnMonster()
		timeOfDay()
		findPlatformerPath()
		debugPoly()
		containerTakeNumItemsAt()
		isMonster()
		farmableStage()
		polyCollision()
		objectLineQuery()
		entityHasCountOfItem()
		entityHandItemDescriptor()
		tileIsOccupied()
		resolvePolyCollision()
		pointCollision()
		callScriptedEntity()
		collisionBlocksAlongLine()
		containerStackItems()
		objectSpaces()
		containerConsume()
		spawnStagehand()
		spawnProjectile()
		stagehandType()
		entityQuery()
		lineTileCollision()
		containerSwapItemsNoCombine()
		liquidAlongLine()
		playerQuery()
		objectQuery()
		entityGender()
		rectCollision()
		containerItemAt()
		polyContains()
		containerTakeAt()
		magnitude()
		mod()
		containerSwapItems()
		isNpc()
		lineCollision()
		getObjectParameter()
		debugPoint()
		pointTileCollision()
		containerItemsFitWhere()
		containerAvailable()
		getProperty()
		containerItems()
		threatLevel()
		entityType()
		sendEntityMessage()
		material()
		liquidAt()
		containerSize()
		debugText()
		monsterType()
		entityMoney()
		nearestTo()
		npcLineQuery()
		entityPortrait()
		entityName()
		entityDamageTeam()
		containerConsumeAt()
		entityAggressive()
		windLevel()
		monsterQuery()
		entityExists()
		loungeableQuery()
		npcQuery()
		entityLineQuery()
	}
	root = {
		createBiome()
		imageSpaces()
		createItem()
		loadVersionedJson()
		createTreasure()
		getMatchingTenants()
		monsterSkillParameter()
		getConfiguration()
		npcVariant()
		itemHasTag()
		imageSize()
		projectileGravityMultiplier()
		nonEmptyRegion()
		evalFunction2()
		projectileConfig()
		materialMiningSound()
		generateName()
		isTreasurePool()
		hasTech()
		behaviorModule()
		itemConfig()
		treeStemDirectory()
		evalFunction()
		techConfig()
		npcConfig()
		setConfigurationPath()
		getConfigurationPath()
		materialHealth()
		materialFootstepSound()
		monsterMovementSettings()
		materialPath()
		setConfiguration()
		monsterPortrait()
		itemType()
		questConfig()
		recipesForItem()
		assetJson()
		treeFoliageDirectory()
		techType()
		liquidStatusEffects()
		makeCurrentVersionedJson()
		itemTags()
		tenantConfig()
		npcPortrait()
	}
	jsize()
	status = {
		setResourceLocked()
		resourcePercentage()
		addPersistentEffects()
		removeEphemeralEffect()
		resource()
		setResourcePercentage()
		resourcePositive()
		damageTakenSince()
		statPositive()
		stat()
		statusProperty()
		activeUniqueStatusEffectSummary()
		inflictedHitsSince()
		resourceMax()
		setStatusProperty()
		setPersistentEffects()
		resetAllResources()
		addEphemeralEffects()
		overConsumeResource()
		modifyResource()
		addEphemeralEffect()
		getPersistentEffects()
		resetResource()
		consumeResource()
		clearPersistentEffects()
		modifyResourcePercentage()
		clearEphemeralEffects()
		resourceNames()
		addPersistentEffect()
		resourceLocked()
		clearAllPersistentEffects()
		inflictedDamageSince()
		isResource()
		setResource()
		giveResource()
	}
	xpcall()
	getmetatable()
	utf8 = {
		len()
		codepoint()
		offset()
		codes()
		charpattern = "[
[23:42:47.166] [Warn] 	select()
	rawequal()
	rawset()
	string = {
		gmatch()
		char()
		sub()
		unpack()
		upper()
		lower()
		find()
		rep()
		dump()
		len()
		reverse()
		packsize()
		pack()
		byte()
		match()
		format()
		gsub()
	}
	require()
	pairs()
	next()
	jobject()
	math = {
		pi = 3.1415926535898
		rad()
		max()
		sqrt()
		random()
		floor()
		log()
		acos()
		fmod()
		mininteger = -9223372036854775808
		type()
		huge = inf
		randomseed()
		deg()
		exp()
		maxinteger = 9223372036854775807
		cos()
		min()
		tointeger()
		modf()
		asin()
		tan()
		atan()
		abs()
		sin()
		ult()
		ceil()
	}
	print()
	pcall()
	type()
	init()
	setmetatable()
	jresize()
	ic = {
		checkStack()
		itemAmount()
		stripColor()
		quickstack()
		itemConfig()
		amountEquipped()
		sortFunc()
		lock()
		giveBack()
		renameThis()
		sort()
		searchBox()
		sort_relative()
		clientVersion = 1
		renameButton()
		searchButton()
		getQuality()
	}
	player = {
		equippedTech()
		altHandItem()
		giveEssentialItem()
		consumeTaggedItem()
		setUniverseFlag()
		species()
		itemsWithTag()
		worldId()
		warp()
		completeMission()
		inventoryTags()
		upgradeShip()
		hasQuest()
		consumeItem()
		gender()
		primaryHandItem()
		essentialItem()
		equippedItem()
		setIntroComplete()
		playTime()
		enabledTechs()
		recordEvent()
		playCinematic()
		introComplete()
		hasCompletedQuest()
		makeTechAvailable()
		consumeItemWithParameter()
		startQuest()
		hasItemWithParameter()
		getItemWithParameter()
		lounge()
		enableTech()
		equipTech()
		enableMission()
		removeEssentialItem()
		isLounging()
		availableTechs()
		primaryHandItemTags()
		makeTechUnavailable()
		confirm()
		serverUuid()
		addBookmark()
		altHandItemTags()
		cleanupItems()
		radioMessage()
		setEquippedItem()
		ownShipWorldId()
		hasItem()
		canStartQuest()
		giveBlueprint()
		hasCountOfItem()
		shipUpgrades()
		giveItem()
	}
	config = {
		getParameter()
	}
	self = {
	}
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	world = {
		spawnItem()
		entityPosition()
		entityHealth()
		damageTileArea()
		day()
		placeMaterial()
		entityDescription()
		containerPutItemsAt()
		entityVelocity()
		damageTiles()
		entityHandItem()
		objectAt()
		setProperty()
		containerItemApply()
		containerClose()
		distance()
		findUniqueEntity()
		gravity()
		rectTileCollision()
		entitySpecies()
		platformerPathStart()
		containerOpen()
		containerTakeAll()
		breathable()
		npcType()
		containerAddItems()
		dayLength()
		loungeableOccupied()
		placeObject()
		isTileProtected()
		destroyLiquid()
		debugLine()
		spawnLiquid()
		entityCanDamage()
		containerItemsCanFit()
		xwrap()
		entityUniqueId()
		itemDropQuery()
		lightLevel()
		placeMod()
		spawnNpc()
		spawnTreasure()
		time()
		underground()
		spawnVehicle()
		spawnMonster()
		timeOfDay()
		findPlatformerPath()
		debugPoly()
		containerTakeNumItemsAt()
		isMonster()
		farmableStage()
		polyCollision()
		objectLineQuery()
		entityHasCountOfItem()
		entityHandItemDescriptor()
		tileIsOccupied()
		resolvePolyCollision()
		pointCollision()
		callScriptedEntity()
		collisionBlocksAlongLine()
		containerStackItems()
		objectSpaces()
		containerConsume()
		spawnStagehand()
		spawnProjectile()
		stagehandType()
		entityQuery()
		lineTileCollision()
		containerSwapItemsNoCombine()
		liquidAlongLine()
		playerQuery()
		objectQuery()
		entityGender()
		rectCollision()
		containerItemAt()
		polyContains()
		containerTakeAt()
		magnitude()
		mod()
		containerSwapItems()
		isNpc()
		lineCollision()
		getObjectParameter()
		debugPoint()
		pointTileCollision()
		containerItemsFitWhere()
		containerAvailable()
		getProperty()
		containerItems()
		threatLevel()
		entityType()
		sendEntityMessage()
		material()
		liquidAt()
		containerSize()
		debugText()
		monsterType()
		entityMoney()
		nearestTo()
		npcLineQuery()
		entityPortrait()
		entityName()
		entityDamageTeam()
		containerConsumeAt()
		entityAggressive()
		windLevel()
		monsterQuery()
		entityExists()
		loungeableQuery()
		npcQuery()
		entityLineQuery()
	}
	root = {
		createBiome()
		imageSpaces()
		createItem()
		loadVersionedJson()
		createTreasure()
		getMatchingTenants()
		monsterSkillParameter()
		getConfiguration()
		npcVariant()
		itemHasTag()
		imageSize()
		projectileGravityMultiplier()
		nonEmptyRegion()
		evalFunction2()
		projectileConfig()
		materialMiningSound()
		generateName()
		isTreasurePool()
		hasTech()
		behaviorModule()
		itemConfig()
		treeStemDirectory()
		evalFunction()
		techConfig()
		npcConfig()
		setConfigurationPath()
		getConfigurationPath()
		materialHealth()
		materialFootstepSound()
		monsterMovementSettings()
		materialPath()
		setConfiguration()
		monsterPortrait()
		itemType()
		questConfig()
		recipesForItem()
		assetJson()
		treeFoliageDirectory()
		techType()
		liquidStatusEffects()
		makeCurrentVersionedJson()
		itemTags()
		tenantConfig()
		npcPortrait()
	}
	jsize()
	status = {
		setResourceLocked()
		resourcePercentage()
		addPersistentEffects()
		removeEphemeralEffect()
		resource()
		setResourcePercentage()
		resourcePositive()
		damageTakenSince()
		statPositive()
		stat()
		statusProperty()
		activeUniqueStatusEffectSummary()
		inflictedHitsSince()
		resourceMax()
		setStatusProperty()
		setPersistentEffects()
		resetAllResources()
		addEphemeralEffects()
		overConsumeResource()
		modifyResource()
		addEphemeralEffect()
		getPersistentEffects()
		resetResource()
		consumeResource()
		clearPersistentEffects()
		modifyResourcePercentage()
		clearEphemeralEffects()
		resourceNames()
		addPersistentEffect()
		resourceLocked()
		clearAllPersistentEffects()
		inflictedDamageSince()
		isResource()
		setResource()
		giveResource()
	}
	xpcall()
	getmetatable()
	utf8 = {
		len()
		codepoint()
		offset()
		codes()
		charpattern = "[
[23:42:48.469] [Warn] 	select()
	rawequal()
	rawset()
	string = {
		gmatch()
		char()
		sub()
		unpack()
		upper()
		lower()
		find()
		rep()
		dump()
		len()
		reverse()
		packsize()
		pack()
		byte()
		match()
		format()
		gsub()
	}
	require()
	pairs()
	next()
	jobject()
	math = {
		pi = 3.1415926535898
		rad()
		max()
		sqrt()
		random()
		floor()
		log()
		acos()
		fmod()
		mininteger = -9223372036854775808
		type()
		huge = inf
		randomseed()
		deg()
		exp()
		maxinteger = 9223372036854775807
		cos()
		min()
		tointeger()
		modf()
		asin()
		tan()
		atan()
		abs()
		sin()
		ult()
		ceil()
	}
	print()
	pcall()
	type()
	init()
	setmetatable()
	jresize()
	ic = {
		checkStack()
		itemAmount()
		stripColor()
		quickstack()
		itemConfig()
		amountEquipped()
		sortFunc()
		lock()
		giveBack()
		renameThis()
		sort()
		searchBox()
		sort_relative()
		clientVersion = 1
		renameButton()
		searchButton()
		getQuality()
	}
	player = {
		equippedTech()
		altHandItem()
		giveEssentialItem()
		consumeTaggedItem()
		setUniverseFlag()
		species()
		itemsWithTag()
		worldId()
		warp()
		completeMission()
		inventoryTags()
		upgradeShip()
		hasQuest()
		consumeItem()
		gender()
		primaryHandItem()
		essentialItem()
		equippedItem()
		setIntroComplete()
		playTime()
		enabledTechs()
		recordEvent()
		playCinematic()
		introComplete()
		hasCompletedQuest()
		makeTechAvailable()
		consumeItemWithParameter()
		startQuest()
		hasItemWithParameter()
		getItemWithParameter()
		lounge()
		enableTech()
		equipTech()
		enableMission()
		removeEssentialItem()
		isLounging()
		availableTechs()
		primaryHandItemTags()
		makeTechUnavailable()
		confirm()
		serverUuid()
		addBookmark()
		altHandItemTags()
		cleanupItems()
		radioMessage()
		setEquippedItem()
		ownShipWorldId()
		hasItem()
		canStartQuest()
		giveBlueprint()
		hasCountOfItem()
		shipUpgrades()
		giveItem()
	}
	config = {
		getParameter()
	}
	self = {
	}
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	world = {
		spawnItem()
		entityPosition()
		entityHealth()
		damageTileArea()
		day()
		placeMaterial()
		entityDescription()
		containerPutItemsAt()
		entityVelocity()
		damageTiles()
		entityHandItem()
		objectAt()
		setProperty()
		containerItemApply()
		containerClose()
		distance()
		findUniqueEntity()
		gravity()
		rectTileCollision()
		entitySpecies()
		platformerPathStart()
		containerOpen()
		containerTakeAll()
		breathable()
		npcType()
		containerAddItems()
		dayLength()
		loungeableOccupied()
		placeObject()
		isTileProtected()
		destroyLiquid()
		debugLine()
		spawnLiquid()
		entityCanDamage()
		containerItemsCanFit()
		xwrap()
		entityUniqueId()
		itemDropQuery()
		lightLevel()
		placeMod()
		spawnNpc()
		spawnTreasure()
		time()
		underground()
		spawnVehicle()
		spawnMonster()
		timeOfDay()
		findPlatformerPath()
		debugPoly()
		containerTakeNumItemsAt()
		isMonster()
		farmableStage()
		polyCollision()
		objectLineQuery()
		entityHasCountOfItem()
		entityHandItemDescriptor()
		tileIsOccupied()
		resolvePolyCollision()
		pointCollision()
		callScriptedEntity()
		collisionBlocksAlongLine()
		containerStackItems()
		objectSpaces()
		containerConsume()
		spawnStagehand()
		spawnProjectile()
		stagehandType()
		entityQuery()
		lineTileCollision()
		containerSwapItemsNoCombine()
		liquidAlongLine()
		playerQuery()
		objectQuery()
		entityGender()
		rectCollision()
		containerItemAt()
		polyContains()
		containerTakeAt()
		magnitude()
		mod()
		containerSwapItems()
		isNpc()
		lineCollision()
		getObjectParameter()
		debugPoint()
		pointTileCollision()
		containerItemsFitWhere()
		containerAvailable()
		getProperty()
		containerItems()
		threatLevel()
		entityType()
		sendEntityMessage()
		material()
		liquidAt()
		containerSize()
		debugText()
		monsterType()
		entityMoney()
		nearestTo()
		npcLineQuery()
		entityPortrait()
		entityName()
		entityDamageTeam()
		containerConsumeAt()
		entityAggressive()
		windLevel()
		monsterQuery()
		entityExists()
		loungeableQuery()
		npcQuery()
		entityLineQuery()
	}
	root = {
		createBiome()
		imageSpaces()
		createItem()
		loadVersionedJson()
		createTreasure()
		getMatchingTenants()
		monsterSkillParameter()
		getConfiguration()
		npcVariant()
		itemHasTag()
		imageSize()
		projectileGravityMultiplier()
		nonEmptyRegion()
		evalFunction2()
		projectileConfig()
		materialMiningSound()
		generateName()
		isTreasurePool()
		hasTech()
		behaviorModule()
		itemConfig()
		treeStemDirectory()
		evalFunction()
		techConfig()
		npcConfig()
		setConfigurationPath()
		getConfigurationPath()
		materialHealth()
		materialFootstepSound()
		monsterMovementSettings()
		materialPath()
		setConfiguration()
		monsterPortrait()
		itemType()
		questConfig()
		recipesForItem()
		assetJson()
		treeFoliageDirectory()
		techType()
		liquidStatusEffects()
		makeCurrentVersionedJson()
		itemTags()
		tenantConfig()
		npcPortrait()
	}
	jsize()
	status = {
		setResourceLocked()
		resourcePercentage()
		addPersistentEffects()
		removeEphemeralEffect()
		resource()
		setResourcePercentage()
		resourcePositive()
		damageTakenSince()
		statPositive()
		stat()
		statusProperty()
		activeUniqueStatusEffectSummary()
		inflictedHitsSince()
		resourceMax()
		setStatusProperty()
		setPersistentEffects()
		resetAllResources()
		addEphemeralEffects()
		overConsumeResource()
		modifyResource()
		addEphemeralEffect()
		getPersistentEffects()
		resetResource()
		consumeResource()
		clearPersistentEffects()
		modifyResourcePercentage()
		clearEphemeralEffects()
		resourceNames()
		addPersistentEffect()
		resourceLocked()
		clearAllPersistentEffects()
		inflictedDamageSince()
		isResource()
		setResource()
		giveResource()
	}
	xpcall()
	getmetatable()
	utf8 = {
		len()
		codepoint()
		offset()
		codes()
		charpattern = "[
[23:42:49.717] [Warn] 	select()
	rawequal()
	rawset()
	string = {
		gmatch()
		char()
		sub()
		unpack()
		upper()
		lower()
		find()
		rep()
		dump()
		len()
		reverse()
		packsize()
		pack()
		byte()
		match()
		format()
		gsub()
	}
	require()
	pairs()
	next()
	jobject()
	math = {
		pi = 3.1415926535898
		rad()
		max()
		sqrt()
		random()
		floor()
		log()
		acos()
		fmod()
		mininteger = -9223372036854775808
		type()
		huge = inf
		randomseed()
		deg()
		exp()
		maxinteger = 9223372036854775807
		cos()
		min()
		tointeger()
		modf()
		asin()
		tan()
		atan()
		abs()
		sin()
		ult()
		ceil()
	}
	print()
	pcall()
	type()
	init()
	setmetatable()
	jresize()
	ic = {
		checkStack()
		itemAmount()
		stripColor()
		quickstack()
		itemConfig()
		amountEquipped()
		sortFunc()
		lock()
		giveBack()
		renameThis()
		sort()
		searchBox()
		sort_relative()
		clientVersion = 1
		renameButton()
		searchButton()
		getQuality()
	}
	player = {
		equippedTech()
		altHandItem()
		giveEssentialItem()
		consumeTaggedItem()
		setUniverseFlag()
		species()
		itemsWithTag()
		worldId()
		warp()
		completeMission()
		inventoryTags()
		upgradeShip()
		hasQuest()
		consumeItem()
		gender()
		primaryHandItem()
		essentialItem()
		equippedItem()
		setIntroComplete()
		playTime()
		enabledTechs()
		recordEvent()
		playCinematic()
		introComplete()
		hasCompletedQuest()
		makeTechAvailable()
		consumeItemWithParameter()
		startQuest()
		hasItemWithParameter()
		getItemWithParameter()
		lounge()
		enableTech()
		equipTech()
		enableMission()
		removeEssentialItem()
		isLounging()
		availableTechs()
		primaryHandItemTags()
		makeTechUnavailable()
		confirm()
		serverUuid()
		addBookmark()
		altHandItemTags()
		cleanupItems()
		radioMessage()
		setEquippedItem()
		ownShipWorldId()
		hasItem()
		canStartQuest()
		giveBlueprint()
		hasCountOfItem()
		shipUpgrades()
		giveItem()
	}
	config = {
		getParameter()
	}
	self = {
	}
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	world = {
		spawnItem()
		entityPosition()
		entityHealth()
		damageTileArea()
		day()
		placeMaterial()
		entityDescription()
		containerPutItemsAt()
		entityVelocity()
		damageTiles()
		entityHandItem()
		objectAt()
		setProperty()
		containerItemApply()
		containerClose()
		distance()
		findUniqueEntity()
		gravity()
		rectTileCollision()
		entitySpecies()
		platformerPathStart()
		containerOpen()
		containerTakeAll()
		breathable()
		npcType()
		containerAddItems()
		dayLength()
		loungeableOccupied()
		placeObject()
		isTileProtected()
		destroyLiquid()
		debugLine()
		spawnLiquid()
		entityCanDamage()
		containerItemsCanFit()
		xwrap()
		entityUniqueId()
		itemDropQuery()
		lightLevel()
		placeMod()
		spawnNpc()
		spawnTreasure()
		time()
		underground()
		spawnVehicle()
		spawnMonster()
		timeOfDay()
		findPlatformerPath()
		debugPoly()
		containerTakeNumItemsAt()
		isMonster()
		farmableStage()
		polyCollision()
		objectLineQuery()
		entityHasCountOfItem()
		entityHandItemDescriptor()
		tileIsOccupied()
		resolvePolyCollision()
		pointCollision()
		callScriptedEntity()
		collisionBlocksAlongLine()
		containerStackItems()
		objectSpaces()
		containerConsume()
		spawnStagehand()
		spawnProjectile()
		stagehandType()
		entityQuery()
		lineTileCollision()
		containerSwapItemsNoCombine()
		liquidAlongLine()
		playerQuery()
		objectQuery()
		entityGender()
		rectCollision()
		containerItemAt()
		polyContains()
		containerTakeAt()
		magnitude()
		mod()
		containerSwapItems()
		isNpc()
		lineCollision()
		getObjectParameter()
		debugPoint()
		pointTileCollision()
		containerItemsFitWhere()
		containerAvailable()
		getProperty()
		containerItems()
		threatLevel()
		entityType()
		sendEntityMessage()
		material()
		liquidAt()
		containerSize()
		debugText()
		monsterType()
		entityMoney()
		nearestTo()
		npcLineQuery()
		entityPortrait()
		entityName()
		entityDamageTeam()
		containerConsumeAt()
		entityAggressive()
		windLevel()
		monsterQuery()
		entityExists()
		loungeableQuery()
		npcQuery()
		entityLineQuery()
	}
	root = {
		createBiome()
		imageSpaces()
		createItem()
		loadVersionedJson()
		createTreasure()
		getMatchingTenants()
		monsterSkillParameter()
		getConfiguration()
		npcVariant()
		itemHasTag()
		imageSize()
		projectileGravityMultiplier()
		nonEmptyRegion()
		evalFunction2()
		projectileConfig()
		materialMiningSound()
		generateName()
		isTreasurePool()
		hasTech()
		behaviorModule()
		itemConfig()
		treeStemDirectory()
		evalFunction()
		techConfig()
		npcConfig()
		setConfigurationPath()
		getConfigurationPath()
		materialHealth()
		materialFootstepSound()
		monsterMovementSettings()
		materialPath()
		setConfiguration()
		monsterPortrait()
		itemType()
		questConfig()
		recipesForItem()
		assetJson()
		treeFoliageDirectory()
		techType()
		liquidStatusEffects()
		makeCurrentVersionedJson()
		itemTags()
		tenantConfig()
		npcPortrait()
	}
	jsize()
	status = {
		setResourceLocked()
		resourcePercentage()
		addPersistentEffects()
		removeEphemeralEffect()
		resource()
		setResourcePercentage()
		resourcePositive()
		damageTakenSince()
		statPositive()
		stat()
		statusProperty()
		activeUniqueStatusEffectSummary()
		inflictedHitsSince()
		resourceMax()
		setStatusProperty()
		setPersistentEffects()
		resetAllResources()
		addEphemeralEffects()
		overConsumeResource()
		modifyResource()
		addEphemeralEffect()
		getPersistentEffects()
		resetResource()
		consumeResource()
		clearPersistentEffects()
		modifyResourcePercentage()
		clearEphemeralEffects()
		resourceNames()
		addPersistentEffect()
		resourceLocked()
		clearAllPersistentEffects()
		inflictedDamageSince()
		isResource()
		setResource()
		giveResource()
	}
	xpcall()
	getmetatable()
	utf8 = {
		len()
		codepoint()
		offset()
		codes()
		charpattern = "[
[23:42:57.945] [Info] [IC] [Sort] Time elapsed: 0.002
[23:43:03.320] [Warn] 	select()
	rawequal()
	rawset()
	string = {
		gmatch()
		char()
		sub()
		unpack()
		upper()
		lower()
		find()
		rep()
		dump()
		len()
		reverse()
		packsize()
		pack()
		byte()
		match()
		format()
		gsub()
	}
	require()
	pairs()
	next()
	jobject()
	math = {
		pi = 3.1415926535898
		rad()
		max()
		sqrt()
		random()
		floor()
		log()
		acos()
		fmod()
		mininteger = -9223372036854775808
		type()
		huge = inf
		randomseed()
		deg()
		exp()
		maxinteger = 9223372036854775807
		cos()
		min()
		tointeger()
		modf()
		asin()
		tan()
		atan()
		abs()
		sin()
		ult()
		ceil()
	}
	print()
	pcall()
	type()
	init()
	setmetatable()
	jresize()
	ic = {
		checkStack()
		itemAmount()
		stripColor()
		quickstack()
		itemConfig()
		amountEquipped()
		sortFunc()
		lock()
		giveBack()
		renameThis()
		sort()
		searchBox()
		sort_relative()
		clientVersion = 1
		renameButton()
		searchButton()
		getQuality()
	}
	player = {
		equippedTech()
		altHandItem()
		giveEssentialItem()
		consumeTaggedItem()
		setUniverseFlag()
		species()
		itemsWithTag()
		worldId()
		warp()
		completeMission()
		inventoryTags()
		upgradeShip()
		hasQuest()
		consumeItem()
		gender()
		primaryHandItem()
		essentialItem()
		equippedItem()
		setIntroComplete()
		playTime()
		enabledTechs()
		recordEvent()
		playCinematic()
		introComplete()
		hasCompletedQuest()
		makeTechAvailable()
		consumeItemWithParameter()
		startQuest()
		hasItemWithParameter()
		getItemWithParameter()
		lounge()
		enableTech()
		equipTech()
		enableMission()
		removeEssentialItem()
		isLounging()
		availableTechs()
		primaryHandItemTags()
		makeTechUnavailable()
		confirm()
		serverUuid()
		addBookmark()
		altHandItemTags()
		cleanupItems()
		radioMessage()
		setEquippedItem()
		ownShipWorldId()
		hasItem()
		canStartQuest()
		giveBlueprint()
		hasCountOfItem()
		shipUpgrades()
		giveItem()
	}
	config = {
		getParameter()
	}
	self = {
	}
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	world = {
		spawnItem()
		entityPosition()
		entityHealth()
		damageTileArea()
		day()
		placeMaterial()
		entityDescription()
		containerPutItemsAt()
		entityVelocity()
		damageTiles()
		entityHandItem()
		objectAt()
		setProperty()
		containerItemApply()
		containerClose()
		distance()
		findUniqueEntity()
		gravity()
		rectTileCollision()
		entitySpecies()
		platformerPathStart()
		containerOpen()
		containerTakeAll()
		breathable()
		npcType()
		containerAddItems()
		dayLength()
		loungeableOccupied()
		placeObject()
		isTileProtected()
		destroyLiquid()
		debugLine()
		spawnLiquid()
		entityCanDamage()
		containerItemsCanFit()
		xwrap()
		entityUniqueId()
		itemDropQuery()
		lightLevel()
		placeMod()
		spawnNpc()
		spawnTreasure()
		time()
		underground()
		spawnVehicle()
		spawnMonster()
		timeOfDay()
		findPlatformerPath()
		debugPoly()
		containerTakeNumItemsAt()
		isMonster()
		farmableStage()
		polyCollision()
		objectLineQuery()
		entityHasCountOfItem()
		entityHandItemDescriptor()
		tileIsOccupied()
		resolvePolyCollision()
		pointCollision()
		callScriptedEntity()
		collisionBlocksAlongLine()
		containerStackItems()
		objectSpaces()
		containerConsume()
		spawnStagehand()
		spawnProjectile()
		stagehandType()
		entityQuery()
		lineTileCollision()
		containerSwapItemsNoCombine()
		liquidAlongLine()
		playerQuery()
		objectQuery()
		entityGender()
		rectCollision()
		containerItemAt()
		polyContains()
		containerTakeAt()
		magnitude()
		mod()
		containerSwapItems()
		isNpc()
		lineCollision()
		getObjectParameter()
		debugPoint()
		pointTileCollision()
		containerItemsFitWhere()
		containerAvailable()
		getProperty()
		containerItems()
		threatLevel()
		entityType()
		sendEntityMessage()
		material()
		liquidAt()
		containerSize()
		debugText()
		monsterType()
		entityMoney()
		nearestTo()
		npcLineQuery()
		entityPortrait()
		entityName()
		entityDamageTeam()
		containerConsumeAt()
		entityAggressive()
		windLevel()
		monsterQuery()
		entityExists()
		loungeableQuery()
		npcQuery()
		entityLineQuery()
	}
	root = {
		createBiome()
		imageSpaces()
		createItem()
		loadVersionedJson()
		createTreasure()
		getMatchingTenants()
		monsterSkillParameter()
		getConfiguration()
		npcVariant()
		itemHasTag()
		imageSize()
		projectileGravityMultiplier()
		nonEmptyRegion()
		evalFunction2()
		projectileConfig()
		materialMiningSound()
		generateName()
		isTreasurePool()
		hasTech()
		behaviorModule()
		itemConfig()
		treeStemDirectory()
		evalFunction()
		techConfig()
		npcConfig()
		setConfigurationPath()
		getConfigurationPath()
		materialHealth()
		materialFootstepSound()
		monsterMovementSettings()
		materialPath()
		setConfiguration()
		monsterPortrait()
		itemType()
		questConfig()
		recipesForItem()
		assetJson()
		treeFoliageDirectory()
		techType()
		liquidStatusEffects()
		makeCurrentVersionedJson()
		itemTags()
		tenantConfig()
		npcPortrait()
	}
	jsize()
	status = {
		setResourceLocked()
		resourcePercentage()
		addPersistentEffects()
		removeEphemeralEffect()
		resource()
		setResourcePercentage()
		resourcePositive()
		damageTakenSince()
		statPositive()
		stat()
		statusProperty()
		activeUniqueStatusEffectSummary()
		inflictedHitsSince()
		resourceMax()
		setStatusProperty()
		setPersistentEffects()
		resetAllResources()
		addEphemeralEffects()
		overConsumeResource()
		modifyResource()
		addEphemeralEffect()
		getPersistentEffects()
		resetResource()
		consumeResource()
		clearPersistentEffects()
		modifyResourcePercentage()
		clearEphemeralEffects()
		resourceNames()
		addPersistentEffect()
		resourceLocked()
		clearAllPersistentEffects()
		inflictedDamageSince()
		isResource()
		setResource()
		giveResource()
	}
	xpcall()
	getmetatable()
	utf8 = {
		len()
		codepoint()
		offset()
		codes()
		charpattern = "[
[23:43:04.350] [Warn] 	select()
	rawequal()
	rawset()
	string = {
		gmatch()
		char()
		sub()
		unpack()
		upper()
		lower()
		find()
		rep()
		dump()
		len()
		reverse()
		packsize()
		pack()
		byte()
		match()
		format()
		gsub()
	}
	require()
	pairs()
	next()
	jobject()
	math = {
		pi = 3.1415926535898
		rad()
		max()
		sqrt()
		random()
		floor()
		log()
		acos()
		fmod()
		mininteger = -9223372036854775808
		type()
		huge = inf
		randomseed()
		deg()
		exp()
		maxinteger = 9223372036854775807
		cos()
		min()
		tointeger()
		modf()
		asin()
		tan()
		atan()
		abs()
		sin()
		ult()
		ceil()
	}
	print()
	pcall()
	type()
	init()
	setmetatable()
	jresize()
	ic = {
		checkStack()
		itemAmount()
		stripColor()
		quickstack()
		itemConfig()
		amountEquipped()
		sortFunc()
		lock()
		giveBack()
		renameThis()
		sort()
		searchBox()
		sort_relative()
		clientVersion = 1
		renameButton()
		searchButton()
		getQuality()
	}
	player = {
		equippedTech()
		altHandItem()
		giveEssentialItem()
		consumeTaggedItem()
		setUniverseFlag()
		species()
		itemsWithTag()
		worldId()
		warp()
		completeMission()
		inventoryTags()
		upgradeShip()
		hasQuest()
		consumeItem()
		gender()
		primaryHandItem()
		essentialItem()
		equippedItem()
		setIntroComplete()
		playTime()
		enabledTechs()
		recordEvent()
		playCinematic()
		introComplete()
		hasCompletedQuest()
		makeTechAvailable()
		consumeItemWithParameter()
		startQuest()
		hasItemWithParameter()
		getItemWithParameter()
		lounge()
		enableTech()
		equipTech()
		enableMission()
		removeEssentialItem()
		isLounging()
		availableTechs()
		primaryHandItemTags()
		makeTechUnavailable()
		confirm()
		serverUuid()
		addBookmark()
		altHandItemTags()
		cleanupItems()
		radioMessage()
		setEquippedItem()
		ownShipWorldId()
		hasItem()
		canStartQuest()
		giveBlueprint()
		hasCountOfItem()
		shipUpgrades()
		giveItem()
	}
	config = {
		getParameter()
	}
	self = {
	}
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	world = {
		spawnItem()
		entityPosition()
		entityHealth()
		damageTileArea()
		day()
		placeMaterial()
		entityDescription()
		containerPutItemsAt()
		entityVelocity()
		damageTiles()
		entityHandItem()
		objectAt()
		setProperty()
		containerItemApply()
		containerClose()
		distance()
		findUniqueEntity()
		gravity()
		rectTileCollision()
		entitySpecies()
		platformerPathStart()
		containerOpen()
		containerTakeAll()
		breathable()
		npcType()
		containerAddItems()
		dayLength()
		loungeableOccupied()
		placeObject()
		isTileProtected()
		destroyLiquid()
		debugLine()
		spawnLiquid()
		entityCanDamage()
		containerItemsCanFit()
		xwrap()
		entityUniqueId()
		itemDropQuery()
		lightLevel()
		placeMod()
		spawnNpc()
		spawnTreasure()
		time()
		underground()
		spawnVehicle()
		spawnMonster()
		timeOfDay()
		findPlatformerPath()
		debugPoly()
		containerTakeNumItemsAt()
		isMonster()
		farmableStage()
		polyCollision()
		objectLineQuery()
		entityHasCountOfItem()
		entityHandItemDescriptor()
		tileIsOccupied()
		resolvePolyCollision()
		pointCollision()
		callScriptedEntity()
		collisionBlocksAlongLine()
		containerStackItems()
		objectSpaces()
		containerConsume()
		spawnStagehand()
		spawnProjectile()
		stagehandType()
		entityQuery()
		lineTileCollision()
		containerSwapItemsNoCombine()
		liquidAlongLine()
		playerQuery()
		objectQuery()
		entityGender()
		rectCollision()
		containerItemAt()
		polyContains()
		containerTakeAt()
		magnitude()
		mod()
		containerSwapItems()
		isNpc()
		lineCollision()
		getObjectParameter()
		debugPoint()
		pointTileCollision()
		containerItemsFitWhere()
		containerAvailable()
		getProperty()
		containerItems()
		threatLevel()
		entityType()
		sendEntityMessage()
		material()
		liquidAt()
		containerSize()
		debugText()
		monsterType()
		entityMoney()
		nearestTo()
		npcLineQuery()
		entityPortrait()
		entityName()
		entityDamageTeam()
		containerConsumeAt()
		entityAggressive()
		windLevel()
		monsterQuery()
		entityExists()
		loungeableQuery()
		npcQuery()
		entityLineQuery()
	}
	root = {
		createBiome()
		imageSpaces()
		createItem()
		loadVersionedJson()
		createTreasure()
		getMatchingTenants()
		monsterSkillParameter()
		getConfiguration()
		npcVariant()
		itemHasTag()
		imageSize()
		projectileGravityMultiplier()
		nonEmptyRegion()
		evalFunction2()
		projectileConfig()
		materialMiningSound()
		generateName()
		isTreasurePool()
		hasTech()
		behaviorModule()
		itemConfig()
		treeStemDirectory()
		evalFunction()
		techConfig()
		npcConfig()
		setConfigurationPath()
		getConfigurationPath()
		materialHealth()
		materialFootstepSound()
		monsterMovementSettings()
		materialPath()
		setConfiguration()
		monsterPortrait()
		itemType()
		questConfig()
		recipesForItem()
		assetJson()
		treeFoliageDirectory()
		techType()
		liquidStatusEffects()
		makeCurrentVersionedJson()
		itemTags()
		tenantConfig()
		npcPortrait()
	}
	jsize()
	status = {
		setResourceLocked()
		resourcePercentage()
		addPersistentEffects()
		removeEphemeralEffect()
		resource()
		setResourcePercentage()
		resourcePositive()
		damageTakenSince()
		statPositive()
		stat()
		statusProperty()
		activeUniqueStatusEffectSummary()
		inflictedHitsSince()
		resourceMax()
		setStatusProperty()
		setPersistentEffects()
		resetAllResources()
		addEphemeralEffects()
		overConsumeResource()
		modifyResource()
		addEphemeralEffect()
		getPersistentEffects()
		resetResource()
		consumeResource()
		clearPersistentEffects()
		modifyResourcePercentage()
		clearEphemeralEffects()
		resourceNames()
		addPersistentEffect()
		resourceLocked()
		clearAllPersistentEffects()
		inflictedDamageSince()
		isResource()
		setResource()
		giveResource()
	}
	xpcall()
	getmetatable()
	utf8 = {
		len()
		codepoint()
		offset()
		codes()
		charpattern = "[
[23:43:07.433] [Warn] 	select()
	rawequal()
	rawset()
	string = {
		gmatch()
		char()
		sub()
		unpack()
		upper()
		lower()
		find()
		rep()
		dump()
		len()
		reverse()
		packsize()
		pack()
		byte()
		match()
		format()
		gsub()
	}
	require()
	pairs()
	next()
	jobject()
	math = {
		pi = 3.1415926535898
		rad()
		max()
		sqrt()
		random()
		floor()
		log()
		acos()
		fmod()
		mininteger = -9223372036854775808
		type()
		huge = inf
		randomseed()
		deg()
		exp()
		maxinteger = 9223372036854775807
		cos()
		min()
		tointeger()
		modf()
		asin()
		tan()
		atan()
		abs()
		sin()
		ult()
		ceil()
	}
	print()
	pcall()
	type()
	init()
	setmetatable()
	jresize()
	ic = {
		checkStack()
		itemAmount()
		stripColor()
		quickstack()
		itemConfig()
		amountEquipped()
		sortFunc()
		lock()
		giveBack()
		renameThis()
		sort()
		searchBox()
		sort_relative()
		clientVersion = 1
		renameButton()
		searchButton()
		getQuality()
	}
	player = {
		equippedTech()
		altHandItem()
		giveEssentialItem()
		consumeTaggedItem()
		setUniverseFlag()
		species()
		itemsWithTag()
		worldId()
		warp()
		completeMission()
		inventoryTags()
		upgradeShip()
		hasQuest()
		consumeItem()
		gender()
		primaryHandItem()
		essentialItem()
		equippedItem()
		setIntroComplete()
		playTime()
		enabledTechs()
		recordEvent()
		playCinematic()
		introComplete()
		hasCompletedQuest()
		makeTechAvailable()
		consumeItemWithParameter()
		startQuest()
		hasItemWithParameter()
		getItemWithParameter()
		lounge()
		enableTech()
		equipTech()
		enableMission()
		removeEssentialItem()
		isLounging()
		availableTechs()
		primaryHandItemTags()
		makeTechUnavailable()
		confirm()
		serverUuid()
		addBookmark()
		altHandItemTags()
		cleanupItems()
		radioMessage()
		setEquippedItem()
		ownShipWorldId()
		hasItem()
		canStartQuest()
		giveBlueprint()
		hasCountOfItem()
		shipUpgrades()
		giveItem()
	}
	config = {
		getParameter()
	}
	self = {
	}
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	world = {
		spawnItem()
		entityPosition()
		entityHealth()
		damageTileArea()
		day()
		placeMaterial()
		entityDescription()
		containerPutItemsAt()
		entityVelocity()
		damageTiles()
		entityHandItem()
		objectAt()
		setProperty()
		containerItemApply()
		containerClose()
		distance()
		findUniqueEntity()
		gravity()
		rectTileCollision()
		entitySpecies()
		platformerPathStart()
		containerOpen()
		containerTakeAll()
		breathable()
		npcType()
		containerAddItems()
		dayLength()
		loungeableOccupied()
		placeObject()
		isTileProtected()
		destroyLiquid()
		debugLine()
		spawnLiquid()
		entityCanDamage()
		containerItemsCanFit()
		xwrap()
		entityUniqueId()
		itemDropQuery()
		lightLevel()
		placeMod()
		spawnNpc()
		spawnTreasure()
		time()
		underground()
		spawnVehicle()
		spawnMonster()
		timeOfDay()
		findPlatformerPath()
		debugPoly()
		containerTakeNumItemsAt()
		isMonster()
		farmableStage()
		polyCollision()
		objectLineQuery()
		entityHasCountOfItem()
		entityHandItemDescriptor()
		tileIsOccupied()
		resolvePolyCollision()
		pointCollision()
		callScriptedEntity()
		collisionBlocksAlongLine()
		containerStackItems()
		objectSpaces()
		containerConsume()
		spawnStagehand()
		spawnProjectile()
		stagehandType()
		entityQuery()
		lineTileCollision()
		containerSwapItemsNoCombine()
		liquidAlongLine()
		playerQuery()
		objectQuery()
		entityGender()
		rectCollision()
		containerItemAt()
		polyContains()
		containerTakeAt()
		magnitude()
		mod()
		containerSwapItems()
		isNpc()
		lineCollision()
		getObjectParameter()
		debugPoint()
		pointTileCollision()
		containerItemsFitWhere()
		containerAvailable()
		getProperty()
		containerItems()
		threatLevel()
		entityType()
		sendEntityMessage()
		material()
		liquidAt()
		containerSize()
		debugText()
		monsterType()
		entityMoney()
		nearestTo()
		npcLineQuery()
		entityPortrait()
		entityName()
		entityDamageTeam()
		containerConsumeAt()
		entityAggressive()
		windLevel()
		monsterQuery()
		entityExists()
		loungeableQuery()
		npcQuery()
		entityLineQuery()
	}
	root = {
		createBiome()
		imageSpaces()
		createItem()
		loadVersionedJson()
		createTreasure()
		getMatchingTenants()
		monsterSkillParameter()
		getConfiguration()
		npcVariant()
		itemHasTag()
		imageSize()
		projectileGravityMultiplier()
		nonEmptyRegion()
		evalFunction2()
		projectileConfig()
		materialMiningSound()
		generateName()
		isTreasurePool()
		hasTech()
		behaviorModule()
		itemConfig()
		treeStemDirectory()
		evalFunction()
		techConfig()
		npcConfig()
		setConfigurationPath()
		getConfigurationPath()
		materialHealth()
		materialFootstepSound()
		monsterMovementSettings()
		materialPath()
		setConfiguration()
		monsterPortrait()
		itemType()
		questConfig()
		recipesForItem()
		assetJson()
		treeFoliageDirectory()
		techType()
		liquidStatusEffects()
		makeCurrentVersionedJson()
		itemTags()
		tenantConfig()
		npcPortrait()
	}
	jsize()
	status = {
		setResourceLocked()
		resourcePercentage()
		addPersistentEffects()
		removeEphemeralEffect()
		resource()
		setResourcePercentage()
		resourcePositive()
		damageTakenSince()
		statPositive()
		stat()
		statusProperty()
		activeUniqueStatusEffectSummary()
		inflictedHitsSince()
		resourceMax()
		setStatusProperty()
		setPersistentEffects()
		resetAllResources()
		addEphemeralEffects()
		overConsumeResource()
		modifyResource()
		addEphemeralEffect()
		getPersistentEffects()
		resetResource()
		consumeResource()
		clearPersistentEffects()
		modifyResourcePercentage()
		clearEphemeralEffects()
		resourceNames()
		addPersistentEffect()
		resourceLocked()
		clearAllPersistentEffects()
		inflictedDamageSince()
		isResource()
		setResource()
		giveResource()
	}
	xpcall()
	getmetatable()
	utf8 = {
		len()
		codepoint()
		offset()
		codes()
		charpattern = "[
[23:43:08.198] [Warn] 	select()
	rawequal()
	rawset()
	string = {
		gmatch()
		char()
		sub()
		unpack()
		upper()
		lower()
		find()
		rep()
		dump()
		len()
		reverse()
		packsize()
		pack()
		byte()
		match()
		format()
		gsub()
	}
	require()
	pairs()
	next()
	jobject()
	math = {
		pi = 3.1415926535898
		rad()
		max()
		sqrt()
		random()
		floor()
		log()
		acos()
		fmod()
		mininteger = -9223372036854775808
		type()
		huge = inf
		randomseed()
		deg()
		exp()
		maxinteger = 9223372036854775807
		cos()
		min()
		tointeger()
		modf()
		asin()
		tan()
		atan()
		abs()
		sin()
		ult()
		ceil()
	}
	print()
	pcall()
	type()
	init()
	setmetatable()
	jresize()
	ic = {
		checkStack()
		itemAmount()
		stripColor()
		quickstack()
		itemConfig()
		amountEquipped()
		sortFunc()
		lock()
		giveBack()
		renameThis()
		sort()
		searchBox()
		sort_relative()
		clientVersion = 1
		renameButton()
		searchButton()
		getQuality()
	}
	player = {
		equippedTech()
		altHandItem()
		giveEssentialItem()
		consumeTaggedItem()
		setUniverseFlag()
		species()
		itemsWithTag()
		worldId()
		warp()
		completeMission()
		inventoryTags()
		upgradeShip()
		hasQuest()
		consumeItem()
		gender()
		primaryHandItem()
		essentialItem()
		equippedItem()
		setIntroComplete()
		playTime()
		enabledTechs()
		recordEvent()
		playCinematic()
		introComplete()
		hasCompletedQuest()
		makeTechAvailable()
		consumeItemWithParameter()
		startQuest()
		hasItemWithParameter()
		getItemWithParameter()
		lounge()
		enableTech()
		equipTech()
		enableMission()
		removeEssentialItem()
		isLounging()
		availableTechs()
		primaryHandItemTags()
		makeTechUnavailable()
		confirm()
		serverUuid()
		addBookmark()
		altHandItemTags()
		cleanupItems()
		radioMessage()
		setEquippedItem()
		ownShipWorldId()
		hasItem()
		canStartQuest()
		giveBlueprint()
		hasCountOfItem()
		shipUpgrades()
		giveItem()
	}
	config = {
		getParameter()
	}
	self = {
	}
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	world = {
		spawnItem()
		entityPosition()
		entityHealth()
		damageTileArea()
		day()
		placeMaterial()
		entityDescription()
		containerPutItemsAt()
		entityVelocity()
		damageTiles()
		entityHandItem()
		objectAt()
		setProperty()
		containerItemApply()
		containerClose()
		distance()
		findUniqueEntity()
		gravity()
		rectTileCollision()
		entitySpecies()
		platformerPathStart()
		containerOpen()
		containerTakeAll()
		breathable()
		npcType()
		containerAddItems()
		dayLength()
		loungeableOccupied()
		placeObject()
		isTileProtected()
		destroyLiquid()
		debugLine()
		spawnLiquid()
		entityCanDamage()
		containerItemsCanFit()
		xwrap()
		entityUniqueId()
		itemDropQuery()
		lightLevel()
		placeMod()
		spawnNpc()
		spawnTreasure()
		time()
		underground()
		spawnVehicle()
		spawnMonster()
		timeOfDay()
		findPlatformerPath()
		debugPoly()
		containerTakeNumItemsAt()
		isMonster()
		farmableStage()
		polyCollision()
		objectLineQuery()
		entityHasCountOfItem()
		entityHandItemDescriptor()
		tileIsOccupied()
		resolvePolyCollision()
		pointCollision()
		callScriptedEntity()
		collisionBlocksAlongLine()
		containerStackItems()
		objectSpaces()
		containerConsume()
		spawnStagehand()
		spawnProjectile()
		stagehandType()
		entityQuery()
		lineTileCollision()
		containerSwapItemsNoCombine()
		liquidAlongLine()
		playerQuery()
		objectQuery()
		entityGender()
		rectCollision()
		containerItemAt()
		polyContains()
		containerTakeAt()
		magnitude()
		mod()
		containerSwapItems()
		isNpc()
		lineCollision()
		getObjectParameter()
		debugPoint()
		pointTileCollision()
		containerItemsFitWhere()
		containerAvailable()
		getProperty()
		containerItems()
		threatLevel()
		entityType()
		sendEntityMessage()
		material()
		liquidAt()
		containerSize()
		debugText()
		monsterType()
		entityMoney()
		nearestTo()
		npcLineQuery()
		entityPortrait()
		entityName()
		entityDamageTeam()
		containerConsumeAt()
		entityAggressive()
		windLevel()
		monsterQuery()
		entityExists()
		loungeableQuery()
		npcQuery()
		entityLineQuery()
	}
	root = {
		createBiome()
		imageSpaces()
		createItem()
		loadVersionedJson()
		createTreasure()
		getMatchingTenants()
		monsterSkillParameter()
		getConfiguration()
		npcVariant()
		itemHasTag()
		imageSize()
		projectileGravityMultiplier()
		nonEmptyRegion()
		evalFunction2()
		projectileConfig()
		materialMiningSound()
		generateName()
		isTreasurePool()
		hasTech()
		behaviorModule()
		itemConfig()
		treeStemDirectory()
		evalFunction()
		techConfig()
		npcConfig()
		setConfigurationPath()
		getConfigurationPath()
		materialHealth()
		materialFootstepSound()
		monsterMovementSettings()
		materialPath()
		setConfiguration()
		monsterPortrait()
		itemType()
		questConfig()
		recipesForItem()
		assetJson()
		treeFoliageDirectory()
		techType()
		liquidStatusEffects()
		makeCurrentVersionedJson()
		itemTags()
		tenantConfig()
		npcPortrait()
	}
	jsize()
	status = {
		setResourceLocked()
		resourcePercentage()
		addPersistentEffects()
		removeEphemeralEffect()
		resource()
		setResourcePercentage()
		resourcePositive()
		damageTakenSince()
		statPositive()
		stat()
		statusProperty()
		activeUniqueStatusEffectSummary()
		inflictedHitsSince()
		resourceMax()
		setStatusProperty()
		setPersistentEffects()
		resetAllResources()
		addEphemeralEffects()
		overConsumeResource()
		modifyResource()
		addEphemeralEffect()
		getPersistentEffects()
		resetResource()
		consumeResource()
		clearPersistentEffects()
		modifyResourcePercentage()
		clearEphemeralEffects()
		resourceNames()
		addPersistentEffect()
		resourceLocked()
		clearAllPersistentEffects()
		inflictedDamageSince()
		isResource()
		setResource()
		giveResource()
	}
	xpcall()
	getmetatable()
	utf8 = {
		len()
		codepoint()
		offset()
		codes()
		charpattern = "[
[23:43:10.348] [Warn] 	select()
	rawequal()
	rawset()
	string = {
		gmatch()
		char()
		sub()
		unpack()
		upper()
		lower()
		find()
		rep()
		dump()
		len()
		reverse()
		packsize()
		pack()
		byte()
		match()
		format()
		gsub()
	}
	require()
	pairs()
	next()
	jobject()
	math = {
		pi = 3.1415926535898
		rad()
		max()
		sqrt()
		random()
		floor()
		log()
		acos()
		fmod()
		mininteger = -9223372036854775808
		type()
		huge = inf
		randomseed()
		deg()
		exp()
		maxinteger = 9223372036854775807
		cos()
		min()
		tointeger()
		modf()
		asin()
		tan()
		atan()
		abs()
		sin()
		ult()
		ceil()
	}
	print()
	pcall()
	type()
	init()
	setmetatable()
	jresize()
	ic = {
		checkStack()
		itemAmount()
		stripColor()
		quickstack()
		itemConfig()
		amountEquipped()
		sortFunc()
		lock()
		giveBack()
		renameThis()
		sort()
		searchBox()
		sort_relative()
		clientVersion = 1
		renameButton()
		searchButton()
		getQuality()
	}
	player = {
		equippedTech()
		altHandItem()
		giveEssentialItem()
		consumeTaggedItem()
		setUniverseFlag()
		species()
		itemsWithTag()
		worldId()
		warp()
		completeMission()
		inventoryTags()
		upgradeShip()
		hasQuest()
		consumeItem()
		gender()
		primaryHandItem()
		essentialItem()
		equippedItem()
		setIntroComplete()
		playTime()
		enabledTechs()
		recordEvent()
		playCinematic()
		introComplete()
		hasCompletedQuest()
		makeTechAvailable()
		consumeItemWithParameter()
		startQuest()
		hasItemWithParameter()
		getItemWithParameter()
		lounge()
		enableTech()
		equipTech()
		enableMission()
		removeEssentialItem()
		isLounging()
		availableTechs()
		primaryHandItemTags()
		makeTechUnavailable()
		confirm()
		serverUuid()
		addBookmark()
		altHandItemTags()
		cleanupItems()
		radioMessage()
		setEquippedItem()
		ownShipWorldId()
		hasItem()
		canStartQuest()
		giveBlueprint()
		hasCountOfItem()
		shipUpgrades()
		giveItem()
	}
	config = {
		getParameter()
	}
	self = {
	}
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	world = {
		spawnItem()
		entityPosition()
		entityHealth()
		damageTileArea()
		day()
		placeMaterial()
		entityDescription()
		containerPutItemsAt()
		entityVelocity()
		damageTiles()
		entityHandItem()
		objectAt()
		setProperty()
		containerItemApply()
		containerClose()
		distance()
		findUniqueEntity()
		gravity()
		rectTileCollision()
		entitySpecies()
		platformerPathStart()
		containerOpen()
		containerTakeAll()
		breathable()
		npcType()
		containerAddItems()
		dayLength()
		loungeableOccupied()
		placeObject()
		isTileProtected()
		destroyLiquid()
		debugLine()
		spawnLiquid()
		entityCanDamage()
		containerItemsCanFit()
		xwrap()
		entityUniqueId()
		itemDropQuery()
		lightLevel()
		placeMod()
		spawnNpc()
		spawnTreasure()
		time()
		underground()
		spawnVehicle()
		spawnMonster()
		timeOfDay()
		findPlatformerPath()
		debugPoly()
		containerTakeNumItemsAt()
		isMonster()
		farmableStage()
		polyCollision()
		objectLineQuery()
		entityHasCountOfItem()
		entityHandItemDescriptor()
		tileIsOccupied()
		resolvePolyCollision()
		pointCollision()
		callScriptedEntity()
		collisionBlocksAlongLine()
		containerStackItems()
		objectSpaces()
		containerConsume()
		spawnStagehand()
		spawnProjectile()
		stagehandType()
		entityQuery()
		lineTileCollision()
		containerSwapItemsNoCombine()
		liquidAlongLine()
		playerQuery()
		objectQuery()
		entityGender()
		rectCollision()
		containerItemAt()
		polyContains()
		containerTakeAt()
		magnitude()
		mod()
		containerSwapItems()
		isNpc()
		lineCollision()
		getObjectParameter()
		debugPoint()
		pointTileCollision()
		containerItemsFitWhere()
		containerAvailable()
		getProperty()
		containerItems()
		threatLevel()
		entityType()
		sendEntityMessage()
		material()
		liquidAt()
		containerSize()
		debugText()
		monsterType()
		entityMoney()
		nearestTo()
		npcLineQuery()
		entityPortrait()
		entityName()
		entityDamageTeam()
		containerConsumeAt()
		entityAggressive()
		windLevel()
		monsterQuery()
		entityExists()
		loungeableQuery()
		npcQuery()
		entityLineQuery()
	}
	root = {
		createBiome()
		imageSpaces()
		createItem()
		loadVersionedJson()
		createTreasure()
		getMatchingTenants()
		monsterSkillParameter()
		getConfiguration()
		npcVariant()
		itemHasTag()
		imageSize()
		projectileGravityMultiplier()
		nonEmptyRegion()
		evalFunction2()
		projectileConfig()
		materialMiningSound()
		generateName()
		isTreasurePool()
		hasTech()
		behaviorModule()
		itemConfig()
		treeStemDirectory()
		evalFunction()
		techConfig()
		npcConfig()
		setConfigurationPath()
		getConfigurationPath()
		materialHealth()
		materialFootstepSound()
		monsterMovementSettings()
		materialPath()
		setConfiguration()
		monsterPortrait()
		itemType()
		questConfig()
		recipesForItem()
		assetJson()
		treeFoliageDirectory()
		techType()
		liquidStatusEffects()
		makeCurrentVersionedJson()
		itemTags()
		tenantConfig()
		npcPortrait()
	}
	jsize()
	status = {
		setResourceLocked()
		resourcePercentage()
		addPersistentEffects()
		removeEphemeralEffect()
		resource()
		setResourcePercentage()
		resourcePositive()
		damageTakenSince()
		statPositive()
		stat()
		statusProperty()
		activeUniqueStatusEffectSummary()
		inflictedHitsSince()
		resourceMax()
		setStatusProperty()
		setPersistentEffects()
		resetAllResources()
		addEphemeralEffects()
		overConsumeResource()
		modifyResource()
		addEphemeralEffect()
		getPersistentEffects()
		resetResource()
		consumeResource()
		clearPersistentEffects()
		modifyResourcePercentage()
		clearEphemeralEffects()
		resourceNames()
		addPersistentEffect()
		resourceLocked()
		clearAllPersistentEffects()
		inflictedDamageSince()
		isResource()
		setResource()
		giveResource()
	}
	xpcall()
	getmetatable()
	utf8 = {
		len()
		codepoint()
		offset()
		codes()
		charpattern = "[
[23:43:16.582] [Warn] 	select()
	rawequal()
	rawset()
	string = {
		gmatch()
		char()
		sub()
		unpack()
		upper()
		lower()
		find()
		rep()
		dump()
		len()
		reverse()
		packsize()
		pack()
		byte()
		match()
		format()
		gsub()
	}
	require()
	pairs()
	next()
	jobject()
	math = {
		pi = 3.1415926535898
		rad()
		max()
		sqrt()
		random()
		floor()
		log()
		acos()
		fmod()
		mininteger = -9223372036854775808
		type()
		huge = inf
		randomseed()
		deg()
		exp()
		maxinteger = 9223372036854775807
		cos()
		min()
		tointeger()
		modf()
		asin()
		tan()
		atan()
		abs()
		sin()
		ult()
		ceil()
	}
	print()
	pcall()
	type()
	init()
	setmetatable()
	jresize()
	ic = {
		checkStack()
		itemAmount()
		stripColor()
		quickstack()
		itemConfig()
		amountEquipped()
		sortFunc()
		lock()
		giveBack()
		renameThis()
		sort()
		searchBox()
		sort_relative()
		clientVersion = 1
		renameButton()
		searchButton()
		getQuality()
	}
	player = {
		equippedTech()
		altHandItem()
		giveEssentialItem()
		consumeTaggedItem()
		setUniverseFlag()
		species()
		itemsWithTag()
		worldId()
		warp()
		completeMission()
		inventoryTags()
		upgradeShip()
		hasQuest()
		consumeItem()
		gender()
		primaryHandItem()
		essentialItem()
		equippedItem()
		setIntroComplete()
		playTime()
		enabledTechs()
		recordEvent()
		playCinematic()
		introComplete()
		hasCompletedQuest()
		makeTechAvailable()
		consumeItemWithParameter()
		startQuest()
		hasItemWithParameter()
		getItemWithParameter()
		lounge()
		enableTech()
		equipTech()
		enableMission()
		removeEssentialItem()
		isLounging()
		availableTechs()
		primaryHandItemTags()
		makeTechUnavailable()
		confirm()
		serverUuid()
		addBookmark()
		altHandItemTags()
		cleanupItems()
		radioMessage()
		setEquippedItem()
		ownShipWorldId()
		hasItem()
		canStartQuest()
		giveBlueprint()
		hasCountOfItem()
		shipUpgrades()
		giveItem()
	}
	config = {
		getParameter()
	}
	self = {
	}
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	world = {
		spawnItem()
		entityPosition()
		entityHealth()
		damageTileArea()
		day()
		placeMaterial()
		entityDescription()
		containerPutItemsAt()
		entityVelocity()
		damageTiles()
		entityHandItem()
		objectAt()
		setProperty()
		containerItemApply()
		containerClose()
		distance()
		findUniqueEntity()
		gravity()
		rectTileCollision()
		entitySpecies()
		platformerPathStart()
		containerOpen()
		containerTakeAll()
		breathable()
		npcType()
		containerAddItems()
		dayLength()
		loungeableOccupied()
		placeObject()
		isTileProtected()
		destroyLiquid()
		debugLine()
		spawnLiquid()
		entityCanDamage()
		containerItemsCanFit()
		xwrap()
		entityUniqueId()
		itemDropQuery()
		lightLevel()
		placeMod()
		spawnNpc()
		spawnTreasure()
		time()
		underground()
		spawnVehicle()
		spawnMonster()
		timeOfDay()
		findPlatformerPath()
		debugPoly()
		containerTakeNumItemsAt()
		isMonster()
		farmableStage()
		polyCollision()
		objectLineQuery()
		entityHasCountOfItem()
		entityHandItemDescriptor()
		tileIsOccupied()
		resolvePolyCollision()
		pointCollision()
		callScriptedEntity()
		collisionBlocksAlongLine()
		containerStackItems()
		objectSpaces()
		containerConsume()
		spawnStagehand()
		spawnProjectile()
		stagehandType()
		entityQuery()
		lineTileCollision()
		containerSwapItemsNoCombine()
		liquidAlongLine()
		playerQuery()
		objectQuery()
		entityGender()
		rectCollision()
		containerItemAt()
		polyContains()
		containerTakeAt()
		magnitude()
		mod()
		containerSwapItems()
		isNpc()
		lineCollision()
		getObjectParameter()
		debugPoint()
		pointTileCollision()
		containerItemsFitWhere()
		containerAvailable()
		getProperty()
		containerItems()
		threatLevel()
		entityType()
		sendEntityMessage()
		material()
		liquidAt()
		containerSize()
		debugText()
		monsterType()
		entityMoney()
		nearestTo()
		npcLineQuery()
		entityPortrait()
		entityName()
		entityDamageTeam()
		containerConsumeAt()
		entityAggressive()
		windLevel()
		monsterQuery()
		entityExists()
		loungeableQuery()
		npcQuery()
		entityLineQuery()
	}
	root = {
		createBiome()
		imageSpaces()
		createItem()
		loadVersionedJson()
		createTreasure()
		getMatchingTenants()
		monsterSkillParameter()
		getConfiguration()
		npcVariant()
		itemHasTag()
		imageSize()
		projectileGravityMultiplier()
		nonEmptyRegion()
		evalFunction2()
		projectileConfig()
		materialMiningSound()
		generateName()
		isTreasurePool()
		hasTech()
		behaviorModule()
		itemConfig()
		treeStemDirectory()
		evalFunction()
		techConfig()
		npcConfig()
		setConfigurationPath()
		getConfigurationPath()
		materialHealth()
		materialFootstepSound()
		monsterMovementSettings()
		materialPath()
		setConfiguration()
		monsterPortrait()
		itemType()
		questConfig()
		recipesForItem()
		assetJson()
		treeFoliageDirectory()
		techType()
		liquidStatusEffects()
		makeCurrentVersionedJson()
		itemTags()
		tenantConfig()
		npcPortrait()
	}
	jsize()
	status = {
		setResourceLocked()
		resourcePercentage()
		addPersistentEffects()
		removeEphemeralEffect()
		resource()
		setResourcePercentage()
		resourcePositive()
		damageTakenSince()
		statPositive()
		stat()
		statusProperty()
		activeUniqueStatusEffectSummary()
		inflictedHitsSince()
		resourceMax()
		setStatusProperty()
		setPersistentEffects()
		resetAllResources()
		addEphemeralEffects()
		overConsumeResource()
		modifyResource()
		addEphemeralEffect()
		getPersistentEffects()
		resetResource()
		consumeResource()
		clearPersistentEffects()
		modifyResourcePercentage()
		clearEphemeralEffects()
		resourceNames()
		addPersistentEffect()
		resourceLocked()
		clearAllPersistentEffects()
		inflictedDamageSince()
		isResource()
		setResource()
		giveResource()
	}
	xpcall()
	getmetatable()
	utf8 = {
		len()
		codepoint()
		offset()
		codes()
		charpattern = "[
[23:43:17.858] [Warn] 	select()
	rawequal()
	rawset()
	string = {
		gmatch()
		char()
		sub()
		unpack()
		upper()
		lower()
		find()
		rep()
		dump()
		len()
		reverse()
		packsize()
		pack()
		byte()
		match()
		format()
		gsub()
	}
	require()
	pairs()
	next()
	jobject()
	math = {
		pi = 3.1415926535898
		rad()
		max()
		sqrt()
		random()
		floor()
		log()
		acos()
		fmod()
		mininteger = -9223372036854775808
		type()
		huge = inf
		randomseed()
		deg()
		exp()
		maxinteger = 9223372036854775807
		cos()
		min()
		tointeger()
		modf()
		asin()
		tan()
		atan()
		abs()
		sin()
		ult()
		ceil()
	}
	print()
	pcall()
	type()
	init()
	setmetatable()
	jresize()
	ic = {
		checkStack()
		itemAmount()
		stripColor()
		quickstack()
		itemConfig()
		amountEquipped()
		sortFunc()
		lock()
		giveBack()
		renameThis()
		sort()
		searchBox()
		sort_relative()
		clientVersion = 1
		renameButton()
		searchButton()
		getQuality()
	}
	player = {
		equippedTech()
		altHandItem()
		giveEssentialItem()
		consumeTaggedItem()
		setUniverseFlag()
		species()
		itemsWithTag()
		worldId()
		warp()
		completeMission()
		inventoryTags()
		upgradeShip()
		hasQuest()
		consumeItem()
		gender()
		primaryHandItem()
		essentialItem()
		equippedItem()
		setIntroComplete()
		playTime()
		enabledTechs()
		recordEvent()
		playCinematic()
		introComplete()
		hasCompletedQuest()
		makeTechAvailable()
		consumeItemWithParameter()
		startQuest()
		hasItemWithParameter()
		getItemWithParameter()
		lounge()
		enableTech()
		equipTech()
		enableMission()
		removeEssentialItem()
		isLounging()
		availableTechs()
		primaryHandItemTags()
		makeTechUnavailable()
		confirm()
		serverUuid()
		addBookmark()
		altHandItemTags()
		cleanupItems()
		radioMessage()
		setEquippedItem()
		ownShipWorldId()
		hasItem()
		canStartQuest()
		giveBlueprint()
		hasCountOfItem()
		shipUpgrades()
		giveItem()
	}
	config = {
		getParameter()
	}
	self = {
	}
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	world = {
		spawnItem()
		entityPosition()
		entityHealth()
		damageTileArea()
		day()
		placeMaterial()
		entityDescription()
		containerPutItemsAt()
		entityVelocity()
		damageTiles()
		entityHandItem()
		objectAt()
		setProperty()
		containerItemApply()
		containerClose()
		distance()
		findUniqueEntity()
		gravity()
		rectTileCollision()
		entitySpecies()
		platformerPathStart()
		containerOpen()
		containerTakeAll()
		breathable()
		npcType()
		containerAddItems()
		dayLength()
		loungeableOccupied()
		placeObject()
		isTileProtected()
		destroyLiquid()
		debugLine()
		spawnLiquid()
		entityCanDamage()
		containerItemsCanFit()
		xwrap()
		entityUniqueId()
		itemDropQuery()
		lightLevel()
		placeMod()
		spawnNpc()
		spawnTreasure()
		time()
		underground()
		spawnVehicle()
		spawnMonster()
		timeOfDay()
		findPlatformerPath()
		debugPoly()
		containerTakeNumItemsAt()
		isMonster()
		farmableStage()
		polyCollision()
		objectLineQuery()
		entityHasCountOfItem()
		entityHandItemDescriptor()
		tileIsOccupied()
		resolvePolyCollision()
		pointCollision()
		callScriptedEntity()
		collisionBlocksAlongLine()
		containerStackItems()
		objectSpaces()
		containerConsume()
		spawnStagehand()
		spawnProjectile()
		stagehandType()
		entityQuery()
		lineTileCollision()
		containerSwapItemsNoCombine()
		liquidAlongLine()
		playerQuery()
		objectQuery()
		entityGender()
		rectCollision()
		containerItemAt()
		polyContains()
		containerTakeAt()
		magnitude()
		mod()
		containerSwapItems()
		isNpc()
		lineCollision()
		getObjectParameter()
		debugPoint()
		pointTileCollision()
		containerItemsFitWhere()
		containerAvailable()
		getProperty()
		containerItems()
		threatLevel()
		entityType()
		sendEntityMessage()
		material()
		liquidAt()
		containerSize()
		debugText()
		monsterType()
		entityMoney()
		nearestTo()
		npcLineQuery()
		entityPortrait()
		entityName()
		entityDamageTeam()
		containerConsumeAt()
		entityAggressive()
		windLevel()
		monsterQuery()
		entityExists()
		loungeableQuery()
		npcQuery()
		entityLineQuery()
	}
	root = {
		createBiome()
		imageSpaces()
		createItem()
		loadVersionedJson()
		createTreasure()
		getMatchingTenants()
		monsterSkillParameter()
		getConfiguration()
		npcVariant()
		itemHasTag()
		imageSize()
		projectileGravityMultiplier()
		nonEmptyRegion()
		evalFunction2()
		projectileConfig()
		materialMiningSound()
		generateName()
		isTreasurePool()
		hasTech()
		behaviorModule()
		itemConfig()
		treeStemDirectory()
		evalFunction()
		techConfig()
		npcConfig()
		setConfigurationPath()
		getConfigurationPath()
		materialHealth()
		materialFootstepSound()
		monsterMovementSettings()
		materialPath()
		setConfiguration()
		monsterPortrait()
		itemType()
		questConfig()
		recipesForItem()
		assetJson()
		treeFoliageDirectory()
		techType()
		liquidStatusEffects()
		makeCurrentVersionedJson()
		itemTags()
		tenantConfig()
		npcPortrait()
	}
	jsize()
	status = {
		setResourceLocked()
		resourcePercentage()
		addPersistentEffects()
		removeEphemeralEffect()
		resource()
		setResourcePercentage()
		resourcePositive()
		damageTakenSince()
		statPositive()
		stat()
		statusProperty()
		activeUniqueStatusEffectSummary()
		inflictedHitsSince()
		resourceMax()
		setStatusProperty()
		setPersistentEffects()
		resetAllResources()
		addEphemeralEffects()
		overConsumeResource()
		modifyResource()
		addEphemeralEffect()
		getPersistentEffects()
		resetResource()
		consumeResource()
		clearPersistentEffects()
		modifyResourcePercentage()
		clearEphemeralEffects()
		resourceNames()
		addPersistentEffect()
		resourceLocked()
		clearAllPersistentEffects()
		inflictedDamageSince()
		isResource()
		setResource()
		giveResource()
	}
	xpcall()
	getmetatable()
	utf8 = {
		len()
		codepoint()
		offset()
		codes()
		charpattern = "[
[23:43:24.500] [Warn] 	select()
	rawequal()
	rawset()
	string = {
		gmatch()
		char()
		sub()
		unpack()
		upper()
		lower()
		find()
		rep()
		dump()
		len()
		reverse()
		packsize()
		pack()
		byte()
		match()
		format()
		gsub()
	}
	require()
	pairs()
	next()
	jobject()
	math = {
		pi = 3.1415926535898
		rad()
		max()
		sqrt()
		random()
		floor()
		log()
		acos()
		fmod()
		mininteger = -9223372036854775808
		type()
		huge = inf
		randomseed()
		deg()
		exp()
		maxinteger = 9223372036854775807
		cos()
		min()
		tointeger()
		modf()
		asin()
		tan()
		atan()
		abs()
		sin()
		ult()
		ceil()
	}
	print()
	pcall()
	type()
	init()
	setmetatable()
	jresize()
	ic = {
		checkStack()
		itemAmount()
		stripColor()
		quickstack()
		itemConfig()
		amountEquipped()
		sortFunc()
		lock()
		giveBack()
		renameThis()
		sort()
		searchBox()
		sort_relative()
		clientVersion = 1
		renameButton()
		searchButton()
		getQuality()
	}
	player = {
		equippedTech()
		altHandItem()
		giveEssentialItem()
		consumeTaggedItem()
		setUniverseFlag()
		species()
		itemsWithTag()
		worldId()
		warp()
		completeMission()
		inventoryTags()
		upgradeShip()
		hasQuest()
		consumeItem()
		gender()
		primaryHandItem()
		essentialItem()
		equippedItem()
		setIntroComplete()
		playTime()
		enabledTechs()
		recordEvent()
		playCinematic()
		introComplete()
		hasCompletedQuest()
		makeTechAvailable()
		consumeItemWithParameter()
		startQuest()
		hasItemWithParameter()
		getItemWithParameter()
		lounge()
		enableTech()
		equipTech()
		enableMission()
		removeEssentialItem()
		isLounging()
		availableTechs()
		primaryHandItemTags()
		makeTechUnavailable()
		confirm()
		serverUuid()
		addBookmark()
		altHandItemTags()
		cleanupItems()
		radioMessage()
		setEquippedItem()
		ownShipWorldId()
		hasItem()
		canStartQuest()
		giveBlueprint()
		hasCountOfItem()
		shipUpgrades()
		giveItem()
	}
	config = {
		getParameter()
	}
	self = {
	}
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	world = {
		spawnItem()
		entityPosition()
		entityHealth()
		damageTileArea()
		day()
		placeMaterial()
		entityDescription()
		containerPutItemsAt()
		entityVelocity()
		damageTiles()
		entityHandItem()
		objectAt()
		setProperty()
		containerItemApply()
		containerClose()
		distance()
		findUniqueEntity()
		gravity()
		rectTileCollision()
		entitySpecies()
		platformerPathStart()
		containerOpen()
		containerTakeAll()
		breathable()
		npcType()
		containerAddItems()
		dayLength()
		loungeableOccupied()
		placeObject()
		isTileProtected()
		destroyLiquid()
		debugLine()
		spawnLiquid()
		entityCanDamage()
		containerItemsCanFit()
		xwrap()
		entityUniqueId()
		itemDropQuery()
		lightLevel()
		placeMod()
		spawnNpc()
		spawnTreasure()
		time()
		underground()
		spawnVehicle()
		spawnMonster()
		timeOfDay()
		findPlatformerPath()
		debugPoly()
		containerTakeNumItemsAt()
		isMonster()
		farmableStage()
		polyCollision()
		objectLineQuery()
		entityHasCountOfItem()
		entityHandItemDescriptor()
		tileIsOccupied()
		resolvePolyCollision()
		pointCollision()
		callScriptedEntity()
		collisionBlocksAlongLine()
		containerStackItems()
		objectSpaces()
		containerConsume()
		spawnStagehand()
		spawnProjectile()
		stagehandType()
		entityQuery()
		lineTileCollision()
		containerSwapItemsNoCombine()
		liquidAlongLine()
		playerQuery()
		objectQuery()
		entityGender()
		rectCollision()
		containerItemAt()
		polyContains()
		containerTakeAt()
		magnitude()
		mod()
		containerSwapItems()
		isNpc()
		lineCollision()
		getObjectParameter()
		debugPoint()
		pointTileCollision()
		containerItemsFitWhere()
		containerAvailable()
		getProperty()
		containerItems()
		threatLevel()
		entityType()
		sendEntityMessage()
		material()
		liquidAt()
		containerSize()
		debugText()
		monsterType()
		entityMoney()
		nearestTo()
		npcLineQuery()
		entityPortrait()
		entityName()
		entityDamageTeam()
		containerConsumeAt()
		entityAggressive()
		windLevel()
		monsterQuery()
		entityExists()
		loungeableQuery()
		npcQuery()
		entityLineQuery()
	}
	root = {
		createBiome()
		imageSpaces()
		createItem()
		loadVersionedJson()
		createTreasure()
		getMatchingTenants()
		monsterSkillParameter()
		getConfiguration()
		npcVariant()
		itemHasTag()
		imageSize()
		projectileGravityMultiplier()
		nonEmptyRegion()
		evalFunction2()
		projectileConfig()
		materialMiningSound()
		generateName()
		isTreasurePool()
		hasTech()
		behaviorModule()
		itemConfig()
		treeStemDirectory()
		evalFunction()
		techConfig()
		npcConfig()
		setConfigurationPath()
		getConfigurationPath()
		materialHealth()
		materialFootstepSound()
		monsterMovementSettings()
		materialPath()
		setConfiguration()
		monsterPortrait()
		itemType()
		questConfig()
		recipesForItem()
		assetJson()
		treeFoliageDirectory()
		techType()
		liquidStatusEffects()
		makeCurrentVersionedJson()
		itemTags()
		tenantConfig()
		npcPortrait()
	}
	jsize()
	status = {
		setResourceLocked()
		resourcePercentage()
		addPersistentEffects()
		removeEphemeralEffect()
		resource()
		setResourcePercentage()
		resourcePositive()
		damageTakenSince()
		statPositive()
		stat()
		statusProperty()
		activeUniqueStatusEffectSummary()
		inflictedHitsSince()
		resourceMax()
		setStatusProperty()
		setPersistentEffects()
		resetAllResources()
		addEphemeralEffects()
		overConsumeResource()
		modifyResource()
		addEphemeralEffect()
		getPersistentEffects()
		resetResource()
		consumeResource()
		clearPersistentEffects()
		modifyResourcePercentage()
		clearEphemeralEffects()
		resourceNames()
		addPersistentEffect()
		resourceLocked()
		clearAllPersistentEffects()
		inflictedDamageSince()
		isResource()
		setResource()
		giveResource()
	}
	xpcall()
	getmetatable()
	utf8 = {
		len()
		codepoint()
		offset()
		codes()
		charpattern = "[
[23:43:28.251] [Warn] 	select()
	rawequal()
	rawset()
	string = {
		gmatch()
		char()
		sub()
		unpack()
		upper()
		lower()
		find()
		rep()
		dump()
		len()
		reverse()
		packsize()
		pack()
		byte()
		match()
		format()
		gsub()
	}
	require()
	pairs()
	next()
	jobject()
	math = {
		pi = 3.1415926535898
		rad()
		max()
		sqrt()
		random()
		floor()
		log()
		acos()
		fmod()
		mininteger = -9223372036854775808
		type()
		huge = inf
		randomseed()
		deg()
		exp()
		maxinteger = 9223372036854775807
		cos()
		min()
		tointeger()
		modf()
		asin()
		tan()
		atan()
		abs()
		sin()
		ult()
		ceil()
	}
	print()
	pcall()
	type()
	init()
	setmetatable()
	jresize()
	ic = {
		checkStack()
		itemAmount()
		stripColor()
		quickstack()
		itemConfig()
		amountEquipped()
		sortFunc()
		lock()
		giveBack()
		renameThis()
		sort()
		searchBox()
		sort_relative()
		clientVersion = 1
		renameButton()
		searchButton()
		getQuality()
	}
	player = {
		equippedTech()
		altHandItem()
		giveEssentialItem()
		consumeTaggedItem()
		setUniverseFlag()
		species()
		itemsWithTag()
		worldId()
		warp()
		completeMission()
		inventoryTags()
		upgradeShip()
		hasQuest()
		consumeItem()
		gender()
		primaryHandItem()
		essentialItem()
		equippedItem()
		setIntroComplete()
		playTime()
		enabledTechs()
		recordEvent()
		playCinematic()
		introComplete()
		hasCompletedQuest()
		makeTechAvailable()
		consumeItemWithParameter()
		startQuest()
		hasItemWithParameter()
		getItemWithParameter()
		lounge()
		enableTech()
		equipTech()
		enableMission()
		removeEssentialItem()
		isLounging()
		availableTechs()
		primaryHandItemTags()
		makeTechUnavailable()
		confirm()
		serverUuid()
		addBookmark()
		altHandItemTags()
		cleanupItems()
		radioMessage()
		setEquippedItem()
		ownShipWorldId()
		hasItem()
		canStartQuest()
		giveBlueprint()
		hasCountOfItem()
		shipUpgrades()
		giveItem()
	}
	config = {
		getParameter()
	}
	self = {
	}
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	world = {
		spawnItem()
		entityPosition()
		entityHealth()
		damageTileArea()
		day()
		placeMaterial()
		entityDescription()
		containerPutItemsAt()
		entityVelocity()
		damageTiles()
		entityHandItem()
		objectAt()
		setProperty()
		containerItemApply()
		containerClose()
		distance()
		findUniqueEntity()
		gravity()
		rectTileCollision()
		entitySpecies()
		platformerPathStart()
		containerOpen()
		containerTakeAll()
		breathable()
		npcType()
		containerAddItems()
		dayLength()
		loungeableOccupied()
		placeObject()
		isTileProtected()
		destroyLiquid()
		debugLine()
		spawnLiquid()
		entityCanDamage()
		containerItemsCanFit()
		xwrap()
		entityUniqueId()
		itemDropQuery()
		lightLevel()
		placeMod()
		spawnNpc()
		spawnTreasure()
		time()
		underground()
		spawnVehicle()
		spawnMonster()
		timeOfDay()
		findPlatformerPath()
		debugPoly()
		containerTakeNumItemsAt()
		isMonster()
		farmableStage()
		polyCollision()
		objectLineQuery()
		entityHasCountOfItem()
		entityHandItemDescriptor()
		tileIsOccupied()
		resolvePolyCollision()
		pointCollision()
		callScriptedEntity()
		collisionBlocksAlongLine()
		containerStackItems()
		objectSpaces()
		containerConsume()
		spawnStagehand()
		spawnProjectile()
		stagehandType()
		entityQuery()
		lineTileCollision()
		containerSwapItemsNoCombine()
		liquidAlongLine()
		playerQuery()
		objectQuery()
		entityGender()
		rectCollision()
		containerItemAt()
		polyContains()
		containerTakeAt()
		magnitude()
		mod()
		containerSwapItems()
		isNpc()
		lineCollision()
		getObjectParameter()
		debugPoint()
		pointTileCollision()
		containerItemsFitWhere()
		containerAvailable()
		getProperty()
		containerItems()
		threatLevel()
		entityType()
		sendEntityMessage()
		material()
		liquidAt()
		containerSize()
		debugText()
		monsterType()
		entityMoney()
		nearestTo()
		npcLineQuery()
		entityPortrait()
		entityName()
		entityDamageTeam()
		containerConsumeAt()
		entityAggressive()
		windLevel()
		monsterQuery()
		entityExists()
		loungeableQuery()
		npcQuery()
		entityLineQuery()
	}
	root = {
		createBiome()
		imageSpaces()
		createItem()
		loadVersionedJson()
		createTreasure()
		getMatchingTenants()
		monsterSkillParameter()
		getConfiguration()
		npcVariant()
		itemHasTag()
		imageSize()
		projectileGravityMultiplier()
		nonEmptyRegion()
		evalFunction2()
		projectileConfig()
		materialMiningSound()
		generateName()
		isTreasurePool()
		hasTech()
		behaviorModule()
		itemConfig()
		treeStemDirectory()
		evalFunction()
		techConfig()
		npcConfig()
		setConfigurationPath()
		getConfigurationPath()
		materialHealth()
		materialFootstepSound()
		monsterMovementSettings()
		materialPath()
		setConfiguration()
		monsterPortrait()
		itemType()
		questConfig()
		recipesForItem()
		assetJson()
		treeFoliageDirectory()
		techType()
		liquidStatusEffects()
		makeCurrentVersionedJson()
		itemTags()
		tenantConfig()
		npcPortrait()
	}
	jsize()
	status = {
		setResourceLocked()
		resourcePercentage()
		addPersistentEffects()
		removeEphemeralEffect()
		resource()
		setResourcePercentage()
		resourcePositive()
		damageTakenSince()
		statPositive()
		stat()
		statusProperty()
		activeUniqueStatusEffectSummary()
		inflictedHitsSince()
		resourceMax()
		setStatusProperty()
		setPersistentEffects()
		resetAllResources()
		addEphemeralEffects()
		overConsumeResource()
		modifyResource()
		addEphemeralEffect()
		getPersistentEffects()
		resetResource()
		consumeResource()
		clearPersistentEffects()
		modifyResourcePercentage()
		clearEphemeralEffects()
		resourceNames()
		addPersistentEffect()
		resourceLocked()
		clearAllPersistentEffects()
		inflictedDamageSince()
		isResource()
		setResource()
		giveResource()
	}
	xpcall()
	getmetatable()
	utf8 = {
		len()
		codepoint()
		offset()
		codes()
		charpattern = "[
[23:43:29.333] [Warn] 	select()
	rawequal()
	rawset()
	string = {
		gmatch()
		char()
		sub()
		unpack()
		upper()
		lower()
		find()
		rep()
		dump()
		len()
		reverse()
		packsize()
		pack()
		byte()
		match()
		format()
		gsub()
	}
	require()
	pairs()
	next()
	jobject()
	math = {
		pi = 3.1415926535898
		rad()
		max()
		sqrt()
		random()
		floor()
		log()
		acos()
		fmod()
		mininteger = -9223372036854775808
		type()
		huge = inf
		randomseed()
		deg()
		exp()
		maxinteger = 9223372036854775807
		cos()
		min()
		tointeger()
		modf()
		asin()
		tan()
		atan()
		abs()
		sin()
		ult()
		ceil()
	}
	print()
	pcall()
	type()
	init()
	setmetatable()
	jresize()
	ic = {
		checkStack()
		itemAmount()
		stripColor()
		quickstack()
		itemConfig()
		amountEquipped()
		sortFunc()
		lock()
		giveBack()
		renameThis()
		sort()
		searchBox()
		sort_relative()
		clientVersion = 1
		renameButton()
		searchButton()
		getQuality()
	}
	player = {
		equippedTech()
		altHandItem()
		giveEssentialItem()
		consumeTaggedItem()
		setUniverseFlag()
		species()
		itemsWithTag()
		worldId()
		warp()
		completeMission()
		inventoryTags()
		upgradeShip()
		hasQuest()
		consumeItem()
		gender()
		primaryHandItem()
		essentialItem()
		equippedItem()
		setIntroComplete()
		playTime()
		enabledTechs()
		recordEvent()
		playCinematic()
		introComplete()
		hasCompletedQuest()
		makeTechAvailable()
		consumeItemWithParameter()
		startQuest()
		hasItemWithParameter()
		getItemWithParameter()
		lounge()
		enableTech()
		equipTech()
		enableMission()
		removeEssentialItem()
		isLounging()
		availableTechs()
		primaryHandItemTags()
		makeTechUnavailable()
		confirm()
		serverUuid()
		addBookmark()
		altHandItemTags()
		cleanupItems()
		radioMessage()
		setEquippedItem()
		ownShipWorldId()
		hasItem()
		canStartQuest()
		giveBlueprint()
		hasCountOfItem()
		shipUpgrades()
		giveItem()
	}
	config = {
		getParameter()
	}
	self = {
	}
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	world = {
		spawnItem()
		entityPosition()
		entityHealth()
		damageTileArea()
		day()
		placeMaterial()
		entityDescription()
		containerPutItemsAt()
		entityVelocity()
		damageTiles()
		entityHandItem()
		objectAt()
		setProperty()
		containerItemApply()
		containerClose()
		distance()
		findUniqueEntity()
		gravity()
		rectTileCollision()
		entitySpecies()
		platformerPathStart()
		containerOpen()
		containerTakeAll()
		breathable()
		npcType()
		containerAddItems()
		dayLength()
		loungeableOccupied()
		placeObject()
		isTileProtected()
		destroyLiquid()
		debugLine()
		spawnLiquid()
		entityCanDamage()
		containerItemsCanFit()
		xwrap()
		entityUniqueId()
		itemDropQuery()
		lightLevel()
		placeMod()
		spawnNpc()
		spawnTreasure()
		time()
		underground()
		spawnVehicle()
		spawnMonster()
		timeOfDay()
		findPlatformerPath()
		debugPoly()
		containerTakeNumItemsAt()
		isMonster()
		farmableStage()
		polyCollision()
		objectLineQuery()
		entityHasCountOfItem()
		entityHandItemDescriptor()
		tileIsOccupied()
		resolvePolyCollision()
		pointCollision()
		callScriptedEntity()
		collisionBlocksAlongLine()
		containerStackItems()
		objectSpaces()
		containerConsume()
		spawnStagehand()
		spawnProjectile()
		stagehandType()
		entityQuery()
		lineTileCollision()
		containerSwapItemsNoCombine()
		liquidAlongLine()
		playerQuery()
		objectQuery()
		entityGender()
		rectCollision()
		containerItemAt()
		polyContains()
		containerTakeAt()
		magnitude()
		mod()
		containerSwapItems()
		isNpc()
		lineCollision()
		getObjectParameter()
		debugPoint()
		pointTileCollision()
		containerItemsFitWhere()
		containerAvailable()
		getProperty()
		containerItems()
		threatLevel()
		entityType()
		sendEntityMessage()
		material()
		liquidAt()
		containerSize()
		debugText()
		monsterType()
		entityMoney()
		nearestTo()
		npcLineQuery()
		entityPortrait()
		entityName()
		entityDamageTeam()
		containerConsumeAt()
		entityAggressive()
		windLevel()
		monsterQuery()
		entityExists()
		loungeableQuery()
		npcQuery()
		entityLineQuery()
	}
	root = {
		createBiome()
		imageSpaces()
		createItem()
		loadVersionedJson()
		createTreasure()
		getMatchingTenants()
		monsterSkillParameter()
		getConfiguration()
		npcVariant()
		itemHasTag()
		imageSize()
		projectileGravityMultiplier()
		nonEmptyRegion()
		evalFunction2()
		projectileConfig()
		materialMiningSound()
		generateName()
		isTreasurePool()
		hasTech()
		behaviorModule()
		itemConfig()
		treeStemDirectory()
		evalFunction()
		techConfig()
		npcConfig()
		setConfigurationPath()
		getConfigurationPath()
		materialHealth()
		materialFootstepSound()
		monsterMovementSettings()
		materialPath()
		setConfiguration()
		monsterPortrait()
		itemType()
		questConfig()
		recipesForItem()
		assetJson()
		treeFoliageDirectory()
		techType()
		liquidStatusEffects()
		makeCurrentVersionedJson()
		itemTags()
		tenantConfig()
		npcPortrait()
	}
	jsize()
	status = {
		setResourceLocked()
		resourcePercentage()
		addPersistentEffects()
		removeEphemeralEffect()
		resource()
		setResourcePercentage()
		resourcePositive()
		damageTakenSince()
		statPositive()
		stat()
		statusProperty()
		activeUniqueStatusEffectSummary()
		inflictedHitsSince()
		resourceMax()
		setStatusProperty()
		setPersistentEffects()
		resetAllResources()
		addEphemeralEffects()
		overConsumeResource()
		modifyResource()
		addEphemeralEffect()
		getPersistentEffects()
		resetResource()
		consumeResource()
		clearPersistentEffects()
		modifyResourcePercentage()
		clearEphemeralEffects()
		resourceNames()
		addPersistentEffect()
		resourceLocked()
		clearAllPersistentEffects()
		inflictedDamageSince()
		isResource()
		setResource()
		giveResource()
	}
	xpcall()
	getmetatable()
	utf8 = {
		len()
		codepoint()
		offset()
		codes()
		charpattern = "[
[23:43:30.534] [Warn] 	select()
	rawequal()
	rawset()
	string = {
		gmatch()
		char()
		sub()
		unpack()
		upper()
		lower()
		find()
		rep()
		dump()
		len()
		reverse()
		packsize()
		pack()
		byte()
		match()
		format()
		gsub()
	}
	require()
	pairs()
	next()
	jobject()
	math = {
		pi = 3.1415926535898
		rad()
		max()
		sqrt()
		random()
		floor()
		log()
		acos()
		fmod()
		mininteger = -9223372036854775808
		type()
		huge = inf
		randomseed()
		deg()
		exp()
		maxinteger = 9223372036854775807
		cos()
		min()
		tointeger()
		modf()
		asin()
		tan()
		atan()
		abs()
		sin()
		ult()
		ceil()
	}
	print()
	pcall()
	type()
	init()
	setmetatable()
	jresize()
	ic = {
		checkStack()
		itemAmount()
		stripColor()
		quickstack()
		itemConfig()
		amountEquipped()
		sortFunc()
		lock()
		giveBack()
		renameThis()
		sort()
		searchBox()
		sort_relative()
		clientVersion = 1
		renameButton()
		searchButton()
		getQuality()
	}
	player = {
		equippedTech()
		altHandItem()
		giveEssentialItem()
		consumeTaggedItem()
		setUniverseFlag()
		species()
		itemsWithTag()
		worldId()
		warp()
		completeMission()
		inventoryTags()
		upgradeShip()
		hasQuest()
		consumeItem()
		gender()
		primaryHandItem()
		essentialItem()
		equippedItem()
		setIntroComplete()
		playTime()
		enabledTechs()
		recordEvent()
		playCinematic()
		introComplete()
		hasCompletedQuest()
		makeTechAvailable()
		consumeItemWithParameter()
		startQuest()
		hasItemWithParameter()
		getItemWithParameter()
		lounge()
		enableTech()
		equipTech()
		enableMission()
		removeEssentialItem()
		isLounging()
		availableTechs()
		primaryHandItemTags()
		makeTechUnavailable()
		confirm()
		serverUuid()
		addBookmark()
		altHandItemTags()
		cleanupItems()
		radioMessage()
		setEquippedItem()
		ownShipWorldId()
		hasItem()
		canStartQuest()
		giveBlueprint()
		hasCountOfItem()
		shipUpgrades()
		giveItem()
	}
	config = {
		getParameter()
	}
	self = {
	}
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	world = {
		spawnItem()
		entityPosition()
		entityHealth()
		damageTileArea()
		day()
		placeMaterial()
		entityDescription()
		containerPutItemsAt()
		entityVelocity()
		damageTiles()
		entityHandItem()
		objectAt()
		setProperty()
		containerItemApply()
		containerClose()
		distance()
		findUniqueEntity()
		gravity()
		rectTileCollision()
		entitySpecies()
		platformerPathStart()
		containerOpen()
		containerTakeAll()
		breathable()
		npcType()
		containerAddItems()
		dayLength()
		loungeableOccupied()
		placeObject()
		isTileProtected()
		destroyLiquid()
		debugLine()
		spawnLiquid()
		entityCanDamage()
		containerItemsCanFit()
		xwrap()
		entityUniqueId()
		itemDropQuery()
		lightLevel()
		placeMod()
		spawnNpc()
		spawnTreasure()
		time()
		underground()
		spawnVehicle()
		spawnMonster()
		timeOfDay()
		findPlatformerPath()
		debugPoly()
		containerTakeNumItemsAt()
		isMonster()
		farmableStage()
		polyCollision()
		objectLineQuery()
		entityHasCountOfItem()
		entityHandItemDescriptor()
		tileIsOccupied()
		resolvePolyCollision()
		pointCollision()
		callScriptedEntity()
		collisionBlocksAlongLine()
		containerStackItems()
		objectSpaces()
		containerConsume()
		spawnStagehand()
		spawnProjectile()
		stagehandType()
		entityQuery()
		lineTileCollision()
		containerSwapItemsNoCombine()
		liquidAlongLine()
		playerQuery()
		objectQuery()
		entityGender()
		rectCollision()
		containerItemAt()
		polyContains()
		containerTakeAt()
		magnitude()
		mod()
		containerSwapItems()
		isNpc()
		lineCollision()
		getObjectParameter()
		debugPoint()
		pointTileCollision()
		containerItemsFitWhere()
		containerAvailable()
		getProperty()
		containerItems()
		threatLevel()
		entityType()
		sendEntityMessage()
		material()
		liquidAt()
		containerSize()
		debugText()
		monsterType()
		entityMoney()
		nearestTo()
		npcLineQuery()
		entityPortrait()
		entityName()
		entityDamageTeam()
		containerConsumeAt()
		entityAggressive()
		windLevel()
		monsterQuery()
		entityExists()
		loungeableQuery()
		npcQuery()
		entityLineQuery()
	}
	root = {
		createBiome()
		imageSpaces()
		createItem()
		loadVersionedJson()
		createTreasure()
		getMatchingTenants()
		monsterSkillParameter()
		getConfiguration()
		npcVariant()
		itemHasTag()
		imageSize()
		projectileGravityMultiplier()
		nonEmptyRegion()
		evalFunction2()
		projectileConfig()
		materialMiningSound()
		generateName()
		isTreasurePool()
		hasTech()
		behaviorModule()
		itemConfig()
		treeStemDirectory()
		evalFunction()
		techConfig()
		npcConfig()
		setConfigurationPath()
		getConfigurationPath()
		materialHealth()
		materialFootstepSound()
		monsterMovementSettings()
		materialPath()
		setConfiguration()
		monsterPortrait()
		itemType()
		questConfig()
		recipesForItem()
		assetJson()
		treeFoliageDirectory()
		techType()
		liquidStatusEffects()
		makeCurrentVersionedJson()
		itemTags()
		tenantConfig()
		npcPortrait()
	}
	jsize()
	status = {
		setResourceLocked()
		resourcePercentage()
		addPersistentEffects()
		removeEphemeralEffect()
		resource()
		setResourcePercentage()
		resourcePositive()
		damageTakenSince()
		statPositive()
		stat()
		statusProperty()
		activeUniqueStatusEffectSummary()
		inflictedHitsSince()
		resourceMax()
		setStatusProperty()
		setPersistentEffects()
		resetAllResources()
		addEphemeralEffects()
		overConsumeResource()
		modifyResource()
		addEphemeralEffect()
		getPersistentEffects()
		resetResource()
		consumeResource()
		clearPersistentEffects()
		modifyResourcePercentage()
		clearEphemeralEffects()
		resourceNames()
		addPersistentEffect()
		resourceLocked()
		clearAllPersistentEffects()
		inflictedDamageSince()
		isResource()
		setResource()
		giveResource()
	}
	xpcall()
	getmetatable()
	utf8 = {
		len()
		codepoint()
		offset()
		codes()
		charpattern = "[
[23:43:47.967] [Warn] 	select()
	rawequal()
	rawset()
	string = {
		gmatch()
		char()
		sub()
		unpack()
		upper()
		lower()
		find()
		rep()
		dump()
		len()
		reverse()
		packsize()
		pack()
		byte()
		match()
		format()
		gsub()
	}
	require()
	pairs()
	next()
	jobject()
	math = {
		pi = 3.1415926535898
		rad()
		max()
		sqrt()
		random()
		floor()
		log()
		acos()
		fmod()
		mininteger = -9223372036854775808
		type()
		huge = inf
		randomseed()
		deg()
		exp()
		maxinteger = 9223372036854775807
		cos()
		min()
		tointeger()
		modf()
		asin()
		tan()
		atan()
		abs()
		sin()
		ult()
		ceil()
	}
	print()
	pcall()
	type()
	init()
	setmetatable()
	jresize()
	ic = {
		checkStack()
		itemAmount()
		stripColor()
		quickstack()
		itemConfig()
		amountEquipped()
		sortFunc()
		lock()
		giveBack()
		renameThis()
		sort()
		searchBox()
		sort_relative()
		clientVersion = 1
		renameButton()
		searchButton()
		getQuality()
	}
	player = {
		equippedTech()
		altHandItem()
		giveEssentialItem()
		consumeTaggedItem()
		setUniverseFlag()
		species()
		itemsWithTag()
		worldId()
		warp()
		completeMission()
		inventoryTags()
		upgradeShip()
		hasQuest()
		consumeItem()
		gender()
		primaryHandItem()
		essentialItem()
		equippedItem()
		setIntroComplete()
		playTime()
		enabledTechs()
		recordEvent()
		playCinematic()
		introComplete()
		hasCompletedQuest()
		makeTechAvailable()
		consumeItemWithParameter()
		startQuest()
		hasItemWithParameter()
		getItemWithParameter()
		lounge()
		enableTech()
		equipTech()
		enableMission()
		removeEssentialItem()
		isLounging()
		availableTechs()
		primaryHandItemTags()
		makeTechUnavailable()
		confirm()
		serverUuid()
		addBookmark()
		altHandItemTags()
		cleanupItems()
		radioMessage()
		setEquippedItem()
		ownShipWorldId()
		hasItem()
		canStartQuest()
		giveBlueprint()
		hasCountOfItem()
		shipUpgrades()
		giveItem()
	}
	config = {
		getParameter()
	}
	self = {
	}
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	world = {
		spawnItem()
		entityPosition()
		entityHealth()
		damageTileArea()
		day()
		placeMaterial()
		entityDescription()
		containerPutItemsAt()
		entityVelocity()
		damageTiles()
		entityHandItem()
		objectAt()
		setProperty()
		containerItemApply()
		containerClose()
		distance()
		findUniqueEntity()
		gravity()
		rectTileCollision()
		entitySpecies()
		platformerPathStart()
		containerOpen()
		containerTakeAll()
		breathable()
		npcType()
		containerAddItems()
		dayLength()
		loungeableOccupied()
		placeObject()
		isTileProtected()
		destroyLiquid()
		debugLine()
		spawnLiquid()
		entityCanDamage()
		containerItemsCanFit()
		xwrap()
		entityUniqueId()
		itemDropQuery()
		lightLevel()
		placeMod()
		spawnNpc()
		spawnTreasure()
		time()
		underground()
		spawnVehicle()
		spawnMonster()
		timeOfDay()
		findPlatformerPath()
		debugPoly()
		containerTakeNumItemsAt()
		isMonster()
		farmableStage()
		polyCollision()
		objectLineQuery()
		entityHasCountOfItem()
		entityHandItemDescriptor()
		tileIsOccupied()
		resolvePolyCollision()
		pointCollision()
		callScriptedEntity()
		collisionBlocksAlongLine()
		containerStackItems()
		objectSpaces()
		containerConsume()
		spawnStagehand()
		spawnProjectile()
		stagehandType()
		entityQuery()
		lineTileCollision()
		containerSwapItemsNoCombine()
		liquidAlongLine()
		playerQuery()
		objectQuery()
		entityGender()
		rectCollision()
		containerItemAt()
		polyContains()
		containerTakeAt()
		magnitude()
		mod()
		containerSwapItems()
		isNpc()
		lineCollision()
		getObjectParameter()
		debugPoint()
		pointTileCollision()
		containerItemsFitWhere()
		containerAvailable()
		getProperty()
		containerItems()
		threatLevel()
		entityType()
		sendEntityMessage()
		material()
		liquidAt()
		containerSize()
		debugText()
		monsterType()
		entityMoney()
		nearestTo()
		npcLineQuery()
		entityPortrait()
		entityName()
		entityDamageTeam()
		containerConsumeAt()
		entityAggressive()
		windLevel()
		monsterQuery()
		entityExists()
		loungeableQuery()
		npcQuery()
		entityLineQuery()
	}
	root = {
		createBiome()
		imageSpaces()
		createItem()
		loadVersionedJson()
		createTreasure()
		getMatchingTenants()
		monsterSkillParameter()
		getConfiguration()
		npcVariant()
		itemHasTag()
		imageSize()
		projectileGravityMultiplier()
		nonEmptyRegion()
		evalFunction2()
		projectileConfig()
		materialMiningSound()
		generateName()
		isTreasurePool()
		hasTech()
		behaviorModule()
		itemConfig()
		treeStemDirectory()
		evalFunction()
		techConfig()
		npcConfig()
		setConfigurationPath()
		getConfigurationPath()
		materialHealth()
		materialFootstepSound()
		monsterMovementSettings()
		materialPath()
		setConfiguration()
		monsterPortrait()
		itemType()
		questConfig()
		recipesForItem()
		assetJson()
		treeFoliageDirectory()
		techType()
		liquidStatusEffects()
		makeCurrentVersionedJson()
		itemTags()
		tenantConfig()
		npcPortrait()
	}
	jsize()
	status = {
		setResourceLocked()
		resourcePercentage()
		addPersistentEffects()
		removeEphemeralEffect()
		resource()
		setResourcePercentage()
		resourcePositive()
		damageTakenSince()
		statPositive()
		stat()
		statusProperty()
		activeUniqueStatusEffectSummary()
		inflictedHitsSince()
		resourceMax()
		setStatusProperty()
		setPersistentEffects()
		resetAllResources()
		addEphemeralEffects()
		overConsumeResource()
		modifyResource()
		addEphemeralEffect()
		getPersistentEffects()
		resetResource()
		consumeResource()
		clearPersistentEffects()
		modifyResourcePercentage()
		clearEphemeralEffects()
		resourceNames()
		addPersistentEffect()
		resourceLocked()
		clearAllPersistentEffects()
		inflictedDamageSince()
		isResource()
		setResource()
		giveResource()
	}
	xpcall()
	getmetatable()
	utf8 = {
		len()
		codepoint()
		offset()
		codes()
		charpattern = "[
[23:44:15.203] [Warn] 	select()
	rawequal()
	rawset()
	string = {
		gmatch()
		char()
		sub()
		unpack()
		upper()
		lower()
		find()
		rep()
		dump()
		len()
		reverse()
		packsize()
		pack()
		byte()
		match()
		format()
		gsub()
	}
	require()
	pairs()
	next()
	jobject()
	math = {
		pi = 3.1415926535898
		rad()
		max()
		sqrt()
		random()
		floor()
		log()
		acos()
		fmod()
		mininteger = -9223372036854775808
		type()
		huge = inf
		randomseed()
		deg()
		exp()
		maxinteger = 9223372036854775807
		cos()
		min()
		tointeger()
		modf()
		asin()
		tan()
		atan()
		abs()
		sin()
		ult()
		ceil()
	}
	print()
	pcall()
	type()
	init()
	setmetatable()
	jresize()
	ic = {
		checkStack()
		itemAmount()
		stripColor()
		quickstack()
		itemConfig()
		amountEquipped()
		sortFunc()
		lock()
		giveBack()
		renameThis()
		sort()
		searchBox()
		sort_relative()
		clientVersion = 1
		renameButton()
		searchButton()
		getQuality()
	}
	player = {
		equippedTech()
		altHandItem()
		giveEssentialItem()
		consumeTaggedItem()
		setUniverseFlag()
		species()
		itemsWithTag()
		worldId()
		warp()
		completeMission()
		inventoryTags()
		upgradeShip()
		hasQuest()
		consumeItem()
		gender()
		primaryHandItem()
		essentialItem()
		equippedItem()
		setIntroComplete()
		playTime()
		enabledTechs()
		recordEvent()
		playCinematic()
		introComplete()
		hasCompletedQuest()
		makeTechAvailable()
		consumeItemWithParameter()
		startQuest()
		hasItemWithParameter()
		getItemWithParameter()
		lounge()
		enableTech()
		equipTech()
		enableMission()
		removeEssentialItem()
		isLounging()
		availableTechs()
		primaryHandItemTags()
		makeTechUnavailable()
		confirm()
		serverUuid()
		addBookmark()
		altHandItemTags()
		cleanupItems()
		radioMessage()
		setEquippedItem()
		ownShipWorldId()
		hasItem()
		canStartQuest()
		giveBlueprint()
		hasCountOfItem()
		shipUpgrades()
		giveItem()
	}
	config = {
		getParameter()
	}
	self = {
	}
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	world = {
		spawnItem()
		entityPosition()
		entityHealth()
		damageTileArea()
		day()
		placeMaterial()
		entityDescription()
		containerPutItemsAt()
		entityVelocity()
		damageTiles()
		entityHandItem()
		objectAt()
		setProperty()
		containerItemApply()
		containerClose()
		distance()
		findUniqueEntity()
		gravity()
		rectTileCollision()
		entitySpecies()
		platformerPathStart()
		containerOpen()
		containerTakeAll()
		breathable()
		npcType()
		containerAddItems()
		dayLength()
		loungeableOccupied()
		placeObject()
		isTileProtected()
		destroyLiquid()
		debugLine()
		spawnLiquid()
		entityCanDamage()
		containerItemsCanFit()
		xwrap()
		entityUniqueId()
		itemDropQuery()
		lightLevel()
		placeMod()
		spawnNpc()
		spawnTreasure()
		time()
		underground()
		spawnVehicle()
		spawnMonster()
		timeOfDay()
		findPlatformerPath()
		debugPoly()
		containerTakeNumItemsAt()
		isMonster()
		farmableStage()
		polyCollision()
		objectLineQuery()
		entityHasCountOfItem()
		entityHandItemDescriptor()
		tileIsOccupied()
		resolvePolyCollision()
		pointCollision()
		callScriptedEntity()
		collisionBlocksAlongLine()
		containerStackItems()
		objectSpaces()
		containerConsume()
		spawnStagehand()
		spawnProjectile()
		stagehandType()
		entityQuery()
		lineTileCollision()
		containerSwapItemsNoCombine()
		liquidAlongLine()
		playerQuery()
		objectQuery()
		entityGender()
		rectCollision()
		containerItemAt()
		polyContains()
		containerTakeAt()
		magnitude()
		mod()
		containerSwapItems()
		isNpc()
		lineCollision()
		getObjectParameter()
		debugPoint()
		pointTileCollision()
		containerItemsFitWhere()
		containerAvailable()
		getProperty()
		containerItems()
		threatLevel()
		entityType()
		sendEntityMessage()
		material()
		liquidAt()
		containerSize()
		debugText()
		monsterType()
		entityMoney()
		nearestTo()
		npcLineQuery()
		entityPortrait()
		entityName()
		entityDamageTeam()
		containerConsumeAt()
		entityAggressive()
		windLevel()
		monsterQuery()
		entityExists()
		loungeableQuery()
		npcQuery()
		entityLineQuery()
	}
	root = {
		createBiome()
		imageSpaces()
		createItem()
		loadVersionedJson()
		createTreasure()
		getMatchingTenants()
		monsterSkillParameter()
		getConfiguration()
		npcVariant()
		itemHasTag()
		imageSize()
		projectileGravityMultiplier()
		nonEmptyRegion()
		evalFunction2()
		projectileConfig()
		materialMiningSound()
		generateName()
		isTreasurePool()
		hasTech()
		behaviorModule()
		itemConfig()
		treeStemDirectory()
		evalFunction()
		techConfig()
		npcConfig()
		setConfigurationPath()
		getConfigurationPath()
		materialHealth()
		materialFootstepSound()
		monsterMovementSettings()
		materialPath()
		setConfiguration()
		monsterPortrait()
		itemType()
		questConfig()
		recipesForItem()
		assetJson()
		treeFoliageDirectory()
		techType()
		liquidStatusEffects()
		makeCurrentVersionedJson()
		itemTags()
		tenantConfig()
		npcPortrait()
	}
	jsize()
	status = {
		setResourceLocked()
		resourcePercentage()
		addPersistentEffects()
		removeEphemeralEffect()
		resource()
		setResourcePercentage()
		resourcePositive()
		damageTakenSince()
		statPositive()
		stat()
		statusProperty()
		activeUniqueStatusEffectSummary()
		inflictedHitsSince()
		resourceMax()
		setStatusProperty()
		setPersistentEffects()
		resetAllResources()
		addEphemeralEffects()
		overConsumeResource()
		modifyResource()
		addEphemeralEffect()
		getPersistentEffects()
		resetResource()
		consumeResource()
		clearPersistentEffects()
		modifyResourcePercentage()
		clearEphemeralEffects()
		resourceNames()
		addPersistentEffect()
		resourceLocked()
		clearAllPersistentEffects()
		inflictedDamageSince()
		isResource()
		setResource()
		giveResource()
	}
	xpcall()
	getmetatable()
	utf8 = {
		len()
		codepoint()
		offset()
		codes()
		charpattern = "[
[23:44:29.466] [Warn] 	select()
	rawequal()
	rawset()
	string = {
		gmatch()
		char()
		sub()
		unpack()
		upper()
		lower()
		find()
		rep()
		dump()
		len()
		reverse()
		packsize()
		pack()
		byte()
		match()
		format()
		gsub()
	}
	require()
	pairs()
	next()
	jobject()
	math = {
		pi = 3.1415926535898
		rad()
		max()
		sqrt()
		random()
		floor()
		log()
		acos()
		fmod()
		mininteger = -9223372036854775808
		type()
		huge = inf
		randomseed()
		deg()
		exp()
		maxinteger = 9223372036854775807
		cos()
		min()
		tointeger()
		modf()
		asin()
		tan()
		atan()
		abs()
		sin()
		ult()
		ceil()
	}
	print()
	pcall()
	type()
	init()
	setmetatable()
	jresize()
	ic = {
		checkStack()
		itemAmount()
		stripColor()
		quickstack()
		itemConfig()
		amountEquipped()
		sortFunc()
		lock()
		giveBack()
		renameThis()
		sort()
		searchBox()
		sort_relative()
		clientVersion = 1
		renameButton()
		searchButton()
		getQuality()
	}
	player = {
		equippedTech()
		altHandItem()
		giveEssentialItem()
		consumeTaggedItem()
		setUniverseFlag()
		species()
		itemsWithTag()
		worldId()
		warp()
		completeMission()
		inventoryTags()
		upgradeShip()
		hasQuest()
		consumeItem()
		gender()
		primaryHandItem()
		essentialItem()
		equippedItem()
		setIntroComplete()
		playTime()
		enabledTechs()
		recordEvent()
		playCinematic()
		introComplete()
		hasCompletedQuest()
		makeTechAvailable()
		consumeItemWithParameter()
		startQuest()
		hasItemWithParameter()
		getItemWithParameter()
		lounge()
		enableTech()
		equipTech()
		enableMission()
		removeEssentialItem()
		isLounging()
		availableTechs()
		primaryHandItemTags()
		makeTechUnavailable()
		confirm()
		serverUuid()
		addBookmark()
		altHandItemTags()
		cleanupItems()
		radioMessage()
		setEquippedItem()
		ownShipWorldId()
		hasItem()
		canStartQuest()
		giveBlueprint()
		hasCountOfItem()
		shipUpgrades()
		giveItem()
	}
	config = {
		getParameter()
	}
	self = {
	}
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	world = {
		spawnItem()
		entityPosition()
		entityHealth()
		damageTileArea()
		day()
		placeMaterial()
		entityDescription()
		containerPutItemsAt()
		entityVelocity()
		damageTiles()
		entityHandItem()
		objectAt()
		setProperty()
		containerItemApply()
		containerClose()
		distance()
		findUniqueEntity()
		gravity()
		rectTileCollision()
		entitySpecies()
		platformerPathStart()
		containerOpen()
		containerTakeAll()
		breathable()
		npcType()
		containerAddItems()
		dayLength()
		loungeableOccupied()
		placeObject()
		isTileProtected()
		destroyLiquid()
		debugLine()
		spawnLiquid()
		entityCanDamage()
		containerItemsCanFit()
		xwrap()
		entityUniqueId()
		itemDropQuery()
		lightLevel()
		placeMod()
		spawnNpc()
		spawnTreasure()
		time()
		underground()
		spawnVehicle()
		spawnMonster()
		timeOfDay()
		findPlatformerPath()
		debugPoly()
		containerTakeNumItemsAt()
		isMonster()
		farmableStage()
		polyCollision()
		objectLineQuery()
		entityHasCountOfItem()
		entityHandItemDescriptor()
		tileIsOccupied()
		resolvePolyCollision()
		pointCollision()
		callScriptedEntity()
		collisionBlocksAlongLine()
		containerStackItems()
		objectSpaces()
		containerConsume()
		spawnStagehand()
		spawnProjectile()
		stagehandType()
		entityQuery()
		lineTileCollision()
		containerSwapItemsNoCombine()
		liquidAlongLine()
		playerQuery()
		objectQuery()
		entityGender()
		rectCollision()
		containerItemAt()
		polyContains()
		containerTakeAt()
		magnitude()
		mod()
		containerSwapItems()
		isNpc()
		lineCollision()
		getObjectParameter()
		debugPoint()
		pointTileCollision()
		containerItemsFitWhere()
		containerAvailable()
		getProperty()
		containerItems()
		threatLevel()
		entityType()
		sendEntityMessage()
		material()
		liquidAt()
		containerSize()
		debugText()
		monsterType()
		entityMoney()
		nearestTo()
		npcLineQuery()
		entityPortrait()
		entityName()
		entityDamageTeam()
		containerConsumeAt()
		entityAggressive()
		windLevel()
		monsterQuery()
		entityExists()
		loungeableQuery()
		npcQuery()
		entityLineQuery()
	}
	root = {
		createBiome()
		imageSpaces()
		createItem()
		loadVersionedJson()
		createTreasure()
		getMatchingTenants()
		monsterSkillParameter()
		getConfiguration()
		npcVariant()
		itemHasTag()
		imageSize()
		projectileGravityMultiplier()
		nonEmptyRegion()
		evalFunction2()
		projectileConfig()
		materialMiningSound()
		generateName()
		isTreasurePool()
		hasTech()
		behaviorModule()
		itemConfig()
		treeStemDirectory()
		evalFunction()
		techConfig()
		npcConfig()
		setConfigurationPath()
		getConfigurationPath()
		materialHealth()
		materialFootstepSound()
		monsterMovementSettings()
		materialPath()
		setConfiguration()
		monsterPortrait()
		itemType()
		questConfig()
		recipesForItem()
		assetJson()
		treeFoliageDirectory()
		techType()
		liquidStatusEffects()
		makeCurrentVersionedJson()
		itemTags()
		tenantConfig()
		npcPortrait()
	}
	jsize()
	status = {
		setResourceLocked()
		resourcePercentage()
		addPersistentEffects()
		removeEphemeralEffect()
		resource()
		setResourcePercentage()
		resourcePositive()
		damageTakenSince()
		statPositive()
		stat()
		statusProperty()
		activeUniqueStatusEffectSummary()
		inflictedHitsSince()
		resourceMax()
		setStatusProperty()
		setPersistentEffects()
		resetAllResources()
		addEphemeralEffects()
		overConsumeResource()
		modifyResource()
		addEphemeralEffect()
		getPersistentEffects()
		resetResource()
		consumeResource()
		clearPersistentEffects()
		modifyResourcePercentage()
		clearEphemeralEffects()
		resourceNames()
		addPersistentEffect()
		resourceLocked()
		clearAllPersistentEffects()
		inflictedDamageSince()
		isResource()
		setResource()
		giveResource()
	}
	xpcall()
	getmetatable()
	utf8 = {
		len()
		codepoint()
		offset()
		codes()
		charpattern = "[
[23:44:58.833] [Warn] 	select()
	rawequal()
	rawset()
	string = {
		gmatch()
		char()
		sub()
		unpack()
		upper()
		lower()
		find()
		rep()
		dump()
		len()
		reverse()
		packsize()
		pack()
		byte()
		match()
		format()
		gsub()
	}
	require()
	pairs()
	next()
	jobject()
	math = {
		pi = 3.1415926535898
		rad()
		max()
		sqrt()
		random()
		floor()
		log()
		acos()
		fmod()
		mininteger = -9223372036854775808
		type()
		huge = inf
		randomseed()
		deg()
		exp()
		maxinteger = 9223372036854775807
		cos()
		min()
		tointeger()
		modf()
		asin()
		tan()
		atan()
		abs()
		sin()
		ult()
		ceil()
	}
	print()
	pcall()
	type()
	init()
	setmetatable()
	jresize()
	ic = {
		checkStack()
		itemAmount()
		stripColor()
		quickstack()
		itemConfig()
		amountEquipped()
		sortFunc()
		lock()
		giveBack()
		renameThis()
		sort()
		searchBox()
		sort_relative()
		clientVersion = 1
		renameButton()
		searchButton()
		getQuality()
	}
	player = {
		equippedTech()
		altHandItem()
		giveEssentialItem()
		consumeTaggedItem()
		setUniverseFlag()
		species()
		itemsWithTag()
		worldId()
		warp()
		completeMission()
		inventoryTags()
		upgradeShip()
		hasQuest()
		consumeItem()
		gender()
		primaryHandItem()
		essentialItem()
		equippedItem()
		setIntroComplete()
		playTime()
		enabledTechs()
		recordEvent()
		playCinematic()
		introComplete()
		hasCompletedQuest()
		makeTechAvailable()
		consumeItemWithParameter()
		startQuest()
		hasItemWithParameter()
		getItemWithParameter()
		lounge()
		enableTech()
		equipTech()
		enableMission()
		removeEssentialItem()
		isLounging()
		availableTechs()
		primaryHandItemTags()
		makeTechUnavailable()
		confirm()
		serverUuid()
		addBookmark()
		altHandItemTags()
		cleanupItems()
		radioMessage()
		setEquippedItem()
		ownShipWorldId()
		hasItem()
		canStartQuest()
		giveBlueprint()
		hasCountOfItem()
		shipUpgrades()
		giveItem()
	}
	config = {
		getParameter()
	}
	self = {
	}
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	world = {
		spawnItem()
		entityPosition()
		entityHealth()
		damageTileArea()
		day()
		placeMaterial()
		entityDescription()
		containerPutItemsAt()
		entityVelocity()
		damageTiles()
		entityHandItem()
		objectAt()
		setProperty()
		containerItemApply()
		containerClose()
		distance()
		findUniqueEntity()
		gravity()
		rectTileCollision()
		entitySpecies()
		platformerPathStart()
		containerOpen()
		containerTakeAll()
		breathable()
		npcType()
		containerAddItems()
		dayLength()
		loungeableOccupied()
		placeObject()
		isTileProtected()
		destroyLiquid()
		debugLine()
		spawnLiquid()
		entityCanDamage()
		containerItemsCanFit()
		xwrap()
		entityUniqueId()
		itemDropQuery()
		lightLevel()
		placeMod()
		spawnNpc()
		spawnTreasure()
		time()
		underground()
		spawnVehicle()
		spawnMonster()
		timeOfDay()
		findPlatformerPath()
		debugPoly()
		containerTakeNumItemsAt()
		isMonster()
		farmableStage()
		polyCollision()
		objectLineQuery()
		entityHasCountOfItem()
		entityHandItemDescriptor()
		tileIsOccupied()
		resolvePolyCollision()
		pointCollision()
		callScriptedEntity()
		collisionBlocksAlongLine()
		containerStackItems()
		objectSpaces()
		containerConsume()
		spawnStagehand()
		spawnProjectile()
		stagehandType()
		entityQuery()
		lineTileCollision()
		containerSwapItemsNoCombine()
		liquidAlongLine()
		playerQuery()
		objectQuery()
		entityGender()
		rectCollision()
		containerItemAt()
		polyContains()
		containerTakeAt()
		magnitude()
		mod()
		containerSwapItems()
		isNpc()
		lineCollision()
		getObjectParameter()
		debugPoint()
		pointTileCollision()
		containerItemsFitWhere()
		containerAvailable()
		getProperty()
		containerItems()
		threatLevel()
		entityType()
		sendEntityMessage()
		material()
		liquidAt()
		containerSize()
		debugText()
		monsterType()
		entityMoney()
		nearestTo()
		npcLineQuery()
		entityPortrait()
		entityName()
		entityDamageTeam()
		containerConsumeAt()
		entityAggressive()
		windLevel()
		monsterQuery()
		entityExists()
		loungeableQuery()
		npcQuery()
		entityLineQuery()
	}
	root = {
		createBiome()
		imageSpaces()
		createItem()
		loadVersionedJson()
		createTreasure()
		getMatchingTenants()
		monsterSkillParameter()
		getConfiguration()
		npcVariant()
		itemHasTag()
		imageSize()
		projectileGravityMultiplier()
		nonEmptyRegion()
		evalFunction2()
		projectileConfig()
		materialMiningSound()
		generateName()
		isTreasurePool()
		hasTech()
		behaviorModule()
		itemConfig()
		treeStemDirectory()
		evalFunction()
		techConfig()
		npcConfig()
		setConfigurationPath()
		getConfigurationPath()
		materialHealth()
		materialFootstepSound()
		monsterMovementSettings()
		materialPath()
		setConfiguration()
		monsterPortrait()
		itemType()
		questConfig()
		recipesForItem()
		assetJson()
		treeFoliageDirectory()
		techType()
		liquidStatusEffects()
		makeCurrentVersionedJson()
		itemTags()
		tenantConfig()
		npcPortrait()
	}
	jsize()
	status = {
		setResourceLocked()
		resourcePercentage()
		addPersistentEffects()
		removeEphemeralEffect()
		resource()
		setResourcePercentage()
		resourcePositive()
		damageTakenSince()
		statPositive()
		stat()
		statusProperty()
		activeUniqueStatusEffectSummary()
		inflictedHitsSince()
		resourceMax()
		setStatusProperty()
		setPersistentEffects()
		resetAllResources()
		addEphemeralEffects()
		overConsumeResource()
		modifyResource()
		addEphemeralEffect()
		getPersistentEffects()
		resetResource()
		consumeResource()
		clearPersistentEffects()
		modifyResourcePercentage()
		clearEphemeralEffects()
		resourceNames()
		addPersistentEffect()
		resourceLocked()
		clearAllPersistentEffects()
		inflictedDamageSince()
		isResource()
		setResource()
		giveResource()
	}
	xpcall()
	getmetatable()
	utf8 = {
		len()
		codepoint()
		offset()
		codes()
		charpattern = "[
[23:45:01.266] [Warn] 	select()
	rawequal()
	rawset()
	string = {
		gmatch()
		char()
		sub()
		unpack()
		upper()
		lower()
		find()
		rep()
		dump()
		len()
		reverse()
		packsize()
		pack()
		byte()
		match()
		format()
		gsub()
	}
	require()
	pairs()
	next()
	jobject()
	math = {
		pi = 3.1415926535898
		rad()
		max()
		sqrt()
		random()
		floor()
		log()
		acos()
		fmod()
		mininteger = -9223372036854775808
		type()
		huge = inf
		randomseed()
		deg()
		exp()
		maxinteger = 9223372036854775807
		cos()
		min()
		tointeger()
		modf()
		asin()
		tan()
		atan()
		abs()
		sin()
		ult()
		ceil()
	}
	print()
	pcall()
	type()
	init()
	setmetatable()
	jresize()
	ic = {
		checkStack()
		itemAmount()
		stripColor()
		quickstack()
		itemConfig()
		amountEquipped()
		sortFunc()
		lock()
		giveBack()
		renameThis()
		sort()
		searchBox()
		sort_relative()
		clientVersion = 1
		renameButton()
		searchButton()
		getQuality()
	}
	player = {
		equippedTech()
		altHandItem()
		giveEssentialItem()
		consumeTaggedItem()
		setUniverseFlag()
		species()
		itemsWithTag()
		worldId()
		warp()
		completeMission()
		inventoryTags()
		upgradeShip()
		hasQuest()
		consumeItem()
		gender()
		primaryHandItem()
		essentialItem()
		equippedItem()
		setIntroComplete()
		playTime()
		enabledTechs()
		recordEvent()
		playCinematic()
		introComplete()
		hasCompletedQuest()
		makeTechAvailable()
		consumeItemWithParameter()
		startQuest()
		hasItemWithParameter()
		getItemWithParameter()
		lounge()
		enableTech()
		equipTech()
		enableMission()
		removeEssentialItem()
		isLounging()
		availableTechs()
		primaryHandItemTags()
		makeTechUnavailable()
		confirm()
		serverUuid()
		addBookmark()
		altHandItemTags()
		cleanupItems()
		radioMessage()
		setEquippedItem()
		ownShipWorldId()
		hasItem()
		canStartQuest()
		giveBlueprint()
		hasCountOfItem()
		shipUpgrades()
		giveItem()
	}
	config = {
		getParameter()
	}
	self = {
	}
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	world = {
		spawnItem()
		entityPosition()
		entityHealth()
		damageTileArea()
		day()
		placeMaterial()
		entityDescription()
		containerPutItemsAt()
		entityVelocity()
		damageTiles()
		entityHandItem()
		objectAt()
		setProperty()
		containerItemApply()
		containerClose()
		distance()
		findUniqueEntity()
		gravity()
		rectTileCollision()
		entitySpecies()
		platformerPathStart()
		containerOpen()
		containerTakeAll()
		breathable()
		npcType()
		containerAddItems()
		dayLength()
		loungeableOccupied()
		placeObject()
		isTileProtected()
		destroyLiquid()
		debugLine()
		spawnLiquid()
		entityCanDamage()
		containerItemsCanFit()
		xwrap()
		entityUniqueId()
		itemDropQuery()
		lightLevel()
		placeMod()
		spawnNpc()
		spawnTreasure()
		time()
		underground()
		spawnVehicle()
		spawnMonster()
		timeOfDay()
		findPlatformerPath()
		debugPoly()
		containerTakeNumItemsAt()
		isMonster()
		farmableStage()
		polyCollision()
		objectLineQuery()
		entityHasCountOfItem()
		entityHandItemDescriptor()
		tileIsOccupied()
		resolvePolyCollision()
		pointCollision()
		callScriptedEntity()
		collisionBlocksAlongLine()
		containerStackItems()
		objectSpaces()
		containerConsume()
		spawnStagehand()
		spawnProjectile()
		stagehandType()
		entityQuery()
		lineTileCollision()
		containerSwapItemsNoCombine()
		liquidAlongLine()
		playerQuery()
		objectQuery()
		entityGender()
		rectCollision()
		containerItemAt()
		polyContains()
		containerTakeAt()
		magnitude()
		mod()
		containerSwapItems()
		isNpc()
		lineCollision()
		getObjectParameter()
		debugPoint()
		pointTileCollision()
		containerItemsFitWhere()
		containerAvailable()
		getProperty()
		containerItems()
		threatLevel()
		entityType()
		sendEntityMessage()
		material()
		liquidAt()
		containerSize()
		debugText()
		monsterType()
		entityMoney()
		nearestTo()
		npcLineQuery()
		entityPortrait()
		entityName()
		entityDamageTeam()
		containerConsumeAt()
		entityAggressive()
		windLevel()
		monsterQuery()
		entityExists()
		loungeableQuery()
		npcQuery()
		entityLineQuery()
	}
	root = {
		createBiome()
		imageSpaces()
		createItem()
		loadVersionedJson()
		createTreasure()
		getMatchingTenants()
		monsterSkillParameter()
		getConfiguration()
		npcVariant()
		itemHasTag()
		imageSize()
		projectileGravityMultiplier()
		nonEmptyRegion()
		evalFunction2()
		projectileConfig()
		materialMiningSound()
		generateName()
		isTreasurePool()
		hasTech()
		behaviorModule()
		itemConfig()
		treeStemDirectory()
		evalFunction()
		techConfig()
		npcConfig()
		setConfigurationPath()
		getConfigurationPath()
		materialHealth()
		materialFootstepSound()
		monsterMovementSettings()
		materialPath()
		setConfiguration()
		monsterPortrait()
		itemType()
		questConfig()
		recipesForItem()
		assetJson()
		treeFoliageDirectory()
		techType()
		liquidStatusEffects()
		makeCurrentVersionedJson()
		itemTags()
		tenantConfig()
		npcPortrait()
	}
	jsize()
	status = {
		setResourceLocked()
		resourcePercentage()
		addPersistentEffects()
		removeEphemeralEffect()
		resource()
		setResourcePercentage()
		resourcePositive()
		damageTakenSince()
		statPositive()
		stat()
		statusProperty()
		activeUniqueStatusEffectSummary()
		inflictedHitsSince()
		resourceMax()
		setStatusProperty()
		setPersistentEffects()
		resetAllResources()
		addEphemeralEffects()
		overConsumeResource()
		modifyResource()
		addEphemeralEffect()
		getPersistentEffects()
		resetResource()
		consumeResource()
		clearPersistentEffects()
		modifyResourcePercentage()
		clearEphemeralEffects()
		resourceNames()
		addPersistentEffect()
		resourceLocked()
		clearAllPersistentEffects()
		inflictedDamageSince()
		isResource()
		setResource()
		giveResource()
	}
	xpcall()
	getmetatable()
	utf8 = {
		len()
		codepoint()
		offset()
		codes()
		charpattern = "[
[23:45:03.852] [Warn] 	select()
	rawequal()
	rawset()
	string = {
		gmatch()
		char()
		sub()
		unpack()
		upper()
		lower()
		find()
		rep()
		dump()
		len()
		reverse()
		packsize()
		pack()
		byte()
		match()
		format()
		gsub()
	}
	require()
	pairs()
	next()
	jobject()
	math = {
		pi = 3.1415926535898
		rad()
		max()
		sqrt()
		random()
		floor()
		log()
		acos()
		fmod()
		mininteger = -9223372036854775808
		type()
		huge = inf
		randomseed()
		deg()
		exp()
		maxinteger = 9223372036854775807
		cos()
		min()
		tointeger()
		modf()
		asin()
		tan()
		atan()
		abs()
		sin()
		ult()
		ceil()
	}
	print()
	pcall()
	type()
	init()
	setmetatable()
	jresize()
	ic = {
		checkStack()
		itemAmount()
		stripColor()
		quickstack()
		itemConfig()
		amountEquipped()
		sortFunc()
		lock()
		giveBack()
		renameThis()
		sort()
		searchBox()
		sort_relative()
		clientVersion = 1
		renameButton()
		searchButton()
		getQuality()
	}
	player = {
		equippedTech()
		altHandItem()
		giveEssentialItem()
		consumeTaggedItem()
		setUniverseFlag()
		species()
		itemsWithTag()
		worldId()
		warp()
		completeMission()
		inventoryTags()
		upgradeShip()
		hasQuest()
		consumeItem()
		gender()
		primaryHandItem()
		essentialItem()
		equippedItem()
		setIntroComplete()
		playTime()
		enabledTechs()
		recordEvent()
		playCinematic()
		introComplete()
		hasCompletedQuest()
		makeTechAvailable()
		consumeItemWithParameter()
		startQuest()
		hasItemWithParameter()
		getItemWithParameter()
		lounge()
		enableTech()
		equipTech()
		enableMission()
		removeEssentialItem()
		isLounging()
		availableTechs()
		primaryHandItemTags()
		makeTechUnavailable()
		confirm()
		serverUuid()
		addBookmark()
		altHandItemTags()
		cleanupItems()
		radioMessage()
		setEquippedItem()
		ownShipWorldId()
		hasItem()
		canStartQuest()
		giveBlueprint()
		hasCountOfItem()
		shipUpgrades()
		giveItem()
	}
	config = {
		getParameter()
	}
	self = {
	}
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	world = {
		spawnItem()
		entityPosition()
		entityHealth()
		damageTileArea()
		day()
		placeMaterial()
		entityDescription()
		containerPutItemsAt()
		entityVelocity()
		damageTiles()
		entityHandItem()
		objectAt()
		setProperty()
		containerItemApply()
		containerClose()
		distance()
		findUniqueEntity()
		gravity()
		rectTileCollision()
		entitySpecies()
		platformerPathStart()
		containerOpen()
		containerTakeAll()
		breathable()
		npcType()
		containerAddItems()
		dayLength()
		loungeableOccupied()
		placeObject()
		isTileProtected()
		destroyLiquid()
		debugLine()
		spawnLiquid()
		entityCanDamage()
		containerItemsCanFit()
		xwrap()
		entityUniqueId()
		itemDropQuery()
		lightLevel()
		placeMod()
		spawnNpc()
		spawnTreasure()
		time()
		underground()
		spawnVehicle()
		spawnMonster()
		timeOfDay()
		findPlatformerPath()
		debugPoly()
		containerTakeNumItemsAt()
		isMonster()
		farmableStage()
		polyCollision()
		objectLineQuery()
		entityHasCountOfItem()
		entityHandItemDescriptor()
		tileIsOccupied()
		resolvePolyCollision()
		pointCollision()
		callScriptedEntity()
		collisionBlocksAlongLine()
		containerStackItems()
		objectSpaces()
		containerConsume()
		spawnStagehand()
		spawnProjectile()
		stagehandType()
		entityQuery()
		lineTileCollision()
		containerSwapItemsNoCombine()
		liquidAlongLine()
		playerQuery()
		objectQuery()
		entityGender()
		rectCollision()
		containerItemAt()
		polyContains()
		containerTakeAt()
		magnitude()
		mod()
		containerSwapItems()
		isNpc()
		lineCollision()
		getObjectParameter()
		debugPoint()
		pointTileCollision()
		containerItemsFitWhere()
		containerAvailable()
		getProperty()
		containerItems()
		threatLevel()
		entityType()
		sendEntityMessage()
		material()
		liquidAt()
		containerSize()
		debugText()
		monsterType()
		entityMoney()
		nearestTo()
		npcLineQuery()
		entityPortrait()
		entityName()
		entityDamageTeam()
		containerConsumeAt()
		entityAggressive()
		windLevel()
		monsterQuery()
		entityExists()
		loungeableQuery()
		npcQuery()
		entityLineQuery()
	}
	root = {
		createBiome()
		imageSpaces()
		createItem()
		loadVersionedJson()
		createTreasure()
		getMatchingTenants()
		monsterSkillParameter()
		getConfiguration()
		npcVariant()
		itemHasTag()
		imageSize()
		projectileGravityMultiplier()
		nonEmptyRegion()
		evalFunction2()
		projectileConfig()
		materialMiningSound()
		generateName()
		isTreasurePool()
		hasTech()
		behaviorModule()
		itemConfig()
		treeStemDirectory()
		evalFunction()
		techConfig()
		npcConfig()
		setConfigurationPath()
		getConfigurationPath()
		materialHealth()
		materialFootstepSound()
		monsterMovementSettings()
		materialPath()
		setConfiguration()
		monsterPortrait()
		itemType()
		questConfig()
		recipesForItem()
		assetJson()
		treeFoliageDirectory()
		techType()
		liquidStatusEffects()
		makeCurrentVersionedJson()
		itemTags()
		tenantConfig()
		npcPortrait()
	}
	jsize()
	status = {
		setResourceLocked()
		resourcePercentage()
		addPersistentEffects()
		removeEphemeralEffect()
		resource()
		setResourcePercentage()
		resourcePositive()
		damageTakenSince()
		statPositive()
		stat()
		statusProperty()
		activeUniqueStatusEffectSummary()
		inflictedHitsSince()
		resourceMax()
		setStatusProperty()
		setPersistentEffects()
		resetAllResources()
		addEphemeralEffects()
		overConsumeResource()
		modifyResource()
		addEphemeralEffect()
		getPersistentEffects()
		resetResource()
		consumeResource()
		clearPersistentEffects()
		modifyResourcePercentage()
		clearEphemeralEffects()
		resourceNames()
		addPersistentEffect()
		resourceLocked()
		clearAllPersistentEffects()
		inflictedDamageSince()
		isResource()
		setResource()
		giveResource()
	}
	xpcall()
	getmetatable()
	utf8 = {
		len()
		codepoint()
		offset()
		codes()
		charpattern = "[
[23:45:05.433] [Warn] 	select()
	rawequal()
	rawset()
	string = {
		gmatch()
		char()
		sub()
		unpack()
		upper()
		lower()
		find()
		rep()
		dump()
		len()
		reverse()
		packsize()
		pack()
		byte()
		match()
		format()
		gsub()
	}
	require()
	pairs()
	next()
	jobject()
	math = {
		pi = 3.1415926535898
		rad()
		max()
		sqrt()
		random()
		floor()
		log()
		acos()
		fmod()
		mininteger = -9223372036854775808
		type()
		huge = inf
		randomseed()
		deg()
		exp()
		maxinteger = 9223372036854775807
		cos()
		min()
		tointeger()
		modf()
		asin()
		tan()
		atan()
		abs()
		sin()
		ult()
		ceil()
	}
	print()
	pcall()
	type()
	init()
	setmetatable()
	jresize()
	ic = {
		checkStack()
		itemAmount()
		stripColor()
		quickstack()
		itemConfig()
		amountEquipped()
		sortFunc()
		lock()
		giveBack()
		renameThis()
		sort()
		searchBox()
		sort_relative()
		clientVersion = 1
		renameButton()
		searchButton()
		getQuality()
	}
	player = {
		equippedTech()
		altHandItem()
		giveEssentialItem()
		consumeTaggedItem()
		setUniverseFlag()
		species()
		itemsWithTag()
		worldId()
		warp()
		completeMission()
		inventoryTags()
		upgradeShip()
		hasQuest()
		consumeItem()
		gender()
		primaryHandItem()
		essentialItem()
		equippedItem()
		setIntroComplete()
		playTime()
		enabledTechs()
		recordEvent()
		playCinematic()
		introComplete()
		hasCompletedQuest()
		makeTechAvailable()
		consumeItemWithParameter()
		startQuest()
		hasItemWithParameter()
		getItemWithParameter()
		lounge()
		enableTech()
		equipTech()
		enableMission()
		removeEssentialItem()
		isLounging()
		availableTechs()
		primaryHandItemTags()
		makeTechUnavailable()
		confirm()
		serverUuid()
		addBookmark()
		altHandItemTags()
		cleanupItems()
		radioMessage()
		setEquippedItem()
		ownShipWorldId()
		hasItem()
		canStartQuest()
		giveBlueprint()
		hasCountOfItem()
		shipUpgrades()
		giveItem()
	}
	config = {
		getParameter()
	}
	self = {
	}
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	world = {
		spawnItem()
		entityPosition()
		entityHealth()
		damageTileArea()
		day()
		placeMaterial()
		entityDescription()
		containerPutItemsAt()
		entityVelocity()
		damageTiles()
		entityHandItem()
		objectAt()
		setProperty()
		containerItemApply()
		containerClose()
		distance()
		findUniqueEntity()
		gravity()
		rectTileCollision()
		entitySpecies()
		platformerPathStart()
		containerOpen()
		containerTakeAll()
		breathable()
		npcType()
		containerAddItems()
		dayLength()
		loungeableOccupied()
		placeObject()
		isTileProtected()
		destroyLiquid()
		debugLine()
		spawnLiquid()
		entityCanDamage()
		containerItemsCanFit()
		xwrap()
		entityUniqueId()
		itemDropQuery()
		lightLevel()
		placeMod()
		spawnNpc()
		spawnTreasure()
		time()
		underground()
		spawnVehicle()
		spawnMonster()
		timeOfDay()
		findPlatformerPath()
		debugPoly()
		containerTakeNumItemsAt()
		isMonster()
		farmableStage()
		polyCollision()
		objectLineQuery()
		entityHasCountOfItem()
		entityHandItemDescriptor()
		tileIsOccupied()
		resolvePolyCollision()
		pointCollision()
		callScriptedEntity()
		collisionBlocksAlongLine()
		containerStackItems()
		objectSpaces()
		containerConsume()
		spawnStagehand()
		spawnProjectile()
		stagehandType()
		entityQuery()
		lineTileCollision()
		containerSwapItemsNoCombine()
		liquidAlongLine()
		playerQuery()
		objectQuery()
		entityGender()
		rectCollision()
		containerItemAt()
		polyContains()
		containerTakeAt()
		magnitude()
		mod()
		containerSwapItems()
		isNpc()
		lineCollision()
		getObjectParameter()
		debugPoint()
		pointTileCollision()
		containerItemsFitWhere()
		containerAvailable()
		getProperty()
		containerItems()
		threatLevel()
		entityType()
		sendEntityMessage()
		material()
		liquidAt()
		containerSize()
		debugText()
		monsterType()
		entityMoney()
		nearestTo()
		npcLineQuery()
		entityPortrait()
		entityName()
		entityDamageTeam()
		containerConsumeAt()
		entityAggressive()
		windLevel()
		monsterQuery()
		entityExists()
		loungeableQuery()
		npcQuery()
		entityLineQuery()
	}
	root = {
		createBiome()
		imageSpaces()
		createItem()
		loadVersionedJson()
		createTreasure()
		getMatchingTenants()
		monsterSkillParameter()
		getConfiguration()
		npcVariant()
		itemHasTag()
		imageSize()
		projectileGravityMultiplier()
		nonEmptyRegion()
		evalFunction2()
		projectileConfig()
		materialMiningSound()
		generateName()
		isTreasurePool()
		hasTech()
		behaviorModule()
		itemConfig()
		treeStemDirectory()
		evalFunction()
		techConfig()
		npcConfig()
		setConfigurationPath()
		getConfigurationPath()
		materialHealth()
		materialFootstepSound()
		monsterMovementSettings()
		materialPath()
		setConfiguration()
		monsterPortrait()
		itemType()
		questConfig()
		recipesForItem()
		assetJson()
		treeFoliageDirectory()
		techType()
		liquidStatusEffects()
		makeCurrentVersionedJson()
		itemTags()
		tenantConfig()
		npcPortrait()
	}
	jsize()
	status = {
		setResourceLocked()
		resourcePercentage()
		addPersistentEffects()
		removeEphemeralEffect()
		resource()
		setResourcePercentage()
		resourcePositive()
		damageTakenSince()
		statPositive()
		stat()
		statusProperty()
		activeUniqueStatusEffectSummary()
		inflictedHitsSince()
		resourceMax()
		setStatusProperty()
		setPersistentEffects()
		resetAllResources()
		addEphemeralEffects()
		overConsumeResource()
		modifyResource()
		addEphemeralEffect()
		getPersistentEffects()
		resetResource()
		consumeResource()
		clearPersistentEffects()
		modifyResourcePercentage()
		clearEphemeralEffects()
		resourceNames()
		addPersistentEffect()
		resourceLocked()
		clearAllPersistentEffects()
		inflictedDamageSince()
		isResource()
		setResource()
		giveResource()
	}
	xpcall()
	getmetatable()
	utf8 = {
		len()
		codepoint()
		offset()
		codes()
		charpattern = "[
[23:45:09.316] [Warn] 	select()
	rawequal()
	rawset()
	string = {
		gmatch()
		char()
		sub()
		unpack()
		upper()
		lower()
		find()
		rep()
		dump()
		len()
		reverse()
		packsize()
		pack()
		byte()
		match()
		format()
		gsub()
	}
	require()
	pairs()
	next()
	jobject()
	math = {
		pi = 3.1415926535898
		rad()
		max()
		sqrt()
		random()
		floor()
		log()
		acos()
		fmod()
		mininteger = -9223372036854775808
		type()
		huge = inf
		randomseed()
		deg()
		exp()
		maxinteger = 9223372036854775807
		cos()
		min()
		tointeger()
		modf()
		asin()
		tan()
		atan()
		abs()
		sin()
		ult()
		ceil()
	}
	print()
	pcall()
	type()
	init()
	setmetatable()
	jresize()
	ic = {
		checkStack()
		itemAmount()
		stripColor()
		quickstack()
		itemConfig()
		amountEquipped()
		sortFunc()
		lock()
		giveBack()
		renameThis()
		sort()
		searchBox()
		sort_relative()
		clientVersion = 1
		renameButton()
		searchButton()
		getQuality()
	}
	player = {
		equippedTech()
		altHandItem()
		giveEssentialItem()
		consumeTaggedItem()
		setUniverseFlag()
		species()
		itemsWithTag()
		worldId()
		warp()
		completeMission()
		inventoryTags()
		upgradeShip()
		hasQuest()
		consumeItem()
		gender()
		primaryHandItem()
		essentialItem()
		equippedItem()
		setIntroComplete()
		playTime()
		enabledTechs()
		recordEvent()
		playCinematic()
		introComplete()
		hasCompletedQuest()
		makeTechAvailable()
		consumeItemWithParameter()
		startQuest()
		hasItemWithParameter()
		getItemWithParameter()
		lounge()
		enableTech()
		equipTech()
		enableMission()
		removeEssentialItem()
		isLounging()
		availableTechs()
		primaryHandItemTags()
		makeTechUnavailable()
		confirm()
		serverUuid()
		addBookmark()
		altHandItemTags()
		cleanupItems()
		radioMessage()
		setEquippedItem()
		ownShipWorldId()
		hasItem()
		canStartQuest()
		giveBlueprint()
		hasCountOfItem()
		shipUpgrades()
		giveItem()
	}
	config = {
		getParameter()
	}
	self = {
	}
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	world = {
		spawnItem()
		entityPosition()
		entityHealth()
		damageTileArea()
		day()
		placeMaterial()
		entityDescription()
		containerPutItemsAt()
		entityVelocity()
		damageTiles()
		entityHandItem()
		objectAt()
		setProperty()
		containerItemApply()
		containerClose()
		distance()
		findUniqueEntity()
		gravity()
		rectTileCollision()
		entitySpecies()
		platformerPathStart()
		containerOpen()
		containerTakeAll()
		breathable()
		npcType()
		containerAddItems()
		dayLength()
		loungeableOccupied()
		placeObject()
		isTileProtected()
		destroyLiquid()
		debugLine()
		spawnLiquid()
		entityCanDamage()
		containerItemsCanFit()
		xwrap()
		entityUniqueId()
		itemDropQuery()
		lightLevel()
		placeMod()
		spawnNpc()
		spawnTreasure()
		time()
		underground()
		spawnVehicle()
		spawnMonster()
		timeOfDay()
		findPlatformerPath()
		debugPoly()
		containerTakeNumItemsAt()
		isMonster()
		farmableStage()
		polyCollision()
		objectLineQuery()
		entityHasCountOfItem()
		entityHandItemDescriptor()
		tileIsOccupied()
		resolvePolyCollision()
		pointCollision()
		callScriptedEntity()
		collisionBlocksAlongLine()
		containerStackItems()
		objectSpaces()
		containerConsume()
		spawnStagehand()
		spawnProjectile()
		stagehandType()
		entityQuery()
		lineTileCollision()
		containerSwapItemsNoCombine()
		liquidAlongLine()
		playerQuery()
		objectQuery()
		entityGender()
		rectCollision()
		containerItemAt()
		polyContains()
		containerTakeAt()
		magnitude()
		mod()
		containerSwapItems()
		isNpc()
		lineCollision()
		getObjectParameter()
		debugPoint()
		pointTileCollision()
		containerItemsFitWhere()
		containerAvailable()
		getProperty()
		containerItems()
		threatLevel()
		entityType()
		sendEntityMessage()
		material()
		liquidAt()
		containerSize()
		debugText()
		monsterType()
		entityMoney()
		nearestTo()
		npcLineQuery()
		entityPortrait()
		entityName()
		entityDamageTeam()
		containerConsumeAt()
		entityAggressive()
		windLevel()
		monsterQuery()
		entityExists()
		loungeableQuery()
		npcQuery()
		entityLineQuery()
	}
	root = {
		createBiome()
		imageSpaces()
		createItem()
		loadVersionedJson()
		createTreasure()
		getMatchingTenants()
		monsterSkillParameter()
		getConfiguration()
		npcVariant()
		itemHasTag()
		imageSize()
		projectileGravityMultiplier()
		nonEmptyRegion()
		evalFunction2()
		projectileConfig()
		materialMiningSound()
		generateName()
		isTreasurePool()
		hasTech()
		behaviorModule()
		itemConfig()
		treeStemDirectory()
		evalFunction()
		techConfig()
		npcConfig()
		setConfigurationPath()
		getConfigurationPath()
		materialHealth()
		materialFootstepSound()
		monsterMovementSettings()
		materialPath()
		setConfiguration()
		monsterPortrait()
		itemType()
		questConfig()
		recipesForItem()
		assetJson()
		treeFoliageDirectory()
		techType()
		liquidStatusEffects()
		makeCurrentVersionedJson()
		itemTags()
		tenantConfig()
		npcPortrait()
	}
	jsize()
	status = {
		setResourceLocked()
		resourcePercentage()
		addPersistentEffects()
		removeEphemeralEffect()
		resource()
		setResourcePercentage()
		resourcePositive()
		damageTakenSince()
		statPositive()
		stat()
		statusProperty()
		activeUniqueStatusEffectSummary()
		inflictedHitsSince()
		resourceMax()
		setStatusProperty()
		setPersistentEffects()
		resetAllResources()
		addEphemeralEffects()
		overConsumeResource()
		modifyResource()
		addEphemeralEffect()
		getPersistentEffects()
		resetResource()
		consumeResource()
		clearPersistentEffects()
		modifyResourcePercentage()
		clearEphemeralEffects()
		resourceNames()
		addPersistentEffect()
		resourceLocked()
		clearAllPersistentEffects()
		inflictedDamageSince()
		isResource()
		setResource()
		giveResource()
	}
	xpcall()
	getmetatable()
	utf8 = {
		len()
		codepoint()
		offset()
		codes()
		charpattern = "[
[23:45:12.604] [Warn] 	select()
	rawequal()
	rawset()
	string = {
		gmatch()
		char()
		sub()
		unpack()
		upper()
		lower()
		find()
		rep()
		dump()
		len()
		reverse()
		packsize()
		pack()
		byte()
		match()
		format()
		gsub()
	}
	require()
	pairs()
	next()
	jobject()
	math = {
		pi = 3.1415926535898
		rad()
		max()
		sqrt()
		random()
		floor()
		log()
		acos()
		fmod()
		mininteger = -9223372036854775808
		type()
		huge = inf
		randomseed()
		deg()
		exp()
		maxinteger = 9223372036854775807
		cos()
		min()
		tointeger()
		modf()
		asin()
		tan()
		atan()
		abs()
		sin()
		ult()
		ceil()
	}
	print()
	pcall()
	type()
	init()
	setmetatable()
	jresize()
	ic = {
		checkStack()
		itemAmount()
		stripColor()
		quickstack()
		itemConfig()
		amountEquipped()
		sortFunc()
		lock()
		giveBack()
		renameThis()
		sort()
		searchBox()
		sort_relative()
		clientVersion = 1
		renameButton()
		searchButton()
		getQuality()
	}
	player = {
		equippedTech()
		altHandItem()
		giveEssentialItem()
		consumeTaggedItem()
		setUniverseFlag()
		species()
		itemsWithTag()
		worldId()
		warp()
		completeMission()
		inventoryTags()
		upgradeShip()
		hasQuest()
		consumeItem()
		gender()
		primaryHandItem()
		essentialItem()
		equippedItem()
		setIntroComplete()
		playTime()
		enabledTechs()
		recordEvent()
		playCinematic()
		introComplete()
		hasCompletedQuest()
		makeTechAvailable()
		consumeItemWithParameter()
		startQuest()
		hasItemWithParameter()
		getItemWithParameter()
		lounge()
		enableTech()
		equipTech()
		enableMission()
		removeEssentialItem()
		isLounging()
		availableTechs()
		primaryHandItemTags()
		makeTechUnavailable()
		confirm()
		serverUuid()
		addBookmark()
		altHandItemTags()
		cleanupItems()
		radioMessage()
		setEquippedItem()
		ownShipWorldId()
		hasItem()
		canStartQuest()
		giveBlueprint()
		hasCountOfItem()
		shipUpgrades()
		giveItem()
	}
	config = {
		getParameter()
	}
	self = {
	}
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	world = {
		spawnItem()
		entityPosition()
		entityHealth()
		damageTileArea()
		day()
		placeMaterial()
		entityDescription()
		containerPutItemsAt()
		entityVelocity()
		damageTiles()
		entityHandItem()
		objectAt()
		setProperty()
		containerItemApply()
		containerClose()
		distance()
		findUniqueEntity()
		gravity()
		rectTileCollision()
		entitySpecies()
		platformerPathStart()
		containerOpen()
		containerTakeAll()
		breathable()
		npcType()
		containerAddItems()
		dayLength()
		loungeableOccupied()
		placeObject()
		isTileProtected()
		destroyLiquid()
		debugLine()
		spawnLiquid()
		entityCanDamage()
		containerItemsCanFit()
		xwrap()
		entityUniqueId()
		itemDropQuery()
		lightLevel()
		placeMod()
		spawnNpc()
		spawnTreasure()
		time()
		underground()
		spawnVehicle()
		spawnMonster()
		timeOfDay()
		findPlatformerPath()
		debugPoly()
		containerTakeNumItemsAt()
		isMonster()
		farmableStage()
		polyCollision()
		objectLineQuery()
		entityHasCountOfItem()
		entityHandItemDescriptor()
		tileIsOccupied()
		resolvePolyCollision()
		pointCollision()
		callScriptedEntity()
		collisionBlocksAlongLine()
		containerStackItems()
		objectSpaces()
		containerConsume()
		spawnStagehand()
		spawnProjectile()
		stagehandType()
		entityQuery()
		lineTileCollision()
		containerSwapItemsNoCombine()
		liquidAlongLine()
		playerQuery()
		objectQuery()
		entityGender()
		rectCollision()
		containerItemAt()
		polyContains()
		containerTakeAt()
		magnitude()
		mod()
		containerSwapItems()
		isNpc()
		lineCollision()
		getObjectParameter()
		debugPoint()
		pointTileCollision()
		containerItemsFitWhere()
		containerAvailable()
		getProperty()
		containerItems()
		threatLevel()
		entityType()
		sendEntityMessage()
		material()
		liquidAt()
		containerSize()
		debugText()
		monsterType()
		entityMoney()
		nearestTo()
		npcLineQuery()
		entityPortrait()
		entityName()
		entityDamageTeam()
		containerConsumeAt()
		entityAggressive()
		windLevel()
		monsterQuery()
		entityExists()
		loungeableQuery()
		npcQuery()
		entityLineQuery()
	}
	root = {
		createBiome()
		imageSpaces()
		createItem()
		loadVersionedJson()
		createTreasure()
		getMatchingTenants()
		monsterSkillParameter()
		getConfiguration()
		npcVariant()
		itemHasTag()
		imageSize()
		projectileGravityMultiplier()
		nonEmptyRegion()
		evalFunction2()
		projectileConfig()
		materialMiningSound()
		generateName()
		isTreasurePool()
		hasTech()
		behaviorModule()
		itemConfig()
		treeStemDirectory()
		evalFunction()
		techConfig()
		npcConfig()
		setConfigurationPath()
		getConfigurationPath()
		materialHealth()
		materialFootstepSound()
		monsterMovementSettings()
		materialPath()
		setConfiguration()
		monsterPortrait()
		itemType()
		questConfig()
		recipesForItem()
		assetJson()
		treeFoliageDirectory()
		techType()
		liquidStatusEffects()
		makeCurrentVersionedJson()
		itemTags()
		tenantConfig()
		npcPortrait()
	}
	jsize()
	status = {
		setResourceLocked()
		resourcePercentage()
		addPersistentEffects()
		removeEphemeralEffect()
		resource()
		setResourcePercentage()
		resourcePositive()
		damageTakenSince()
		statPositive()
		stat()
		statusProperty()
		activeUniqueStatusEffectSummary()
		inflictedHitsSince()
		resourceMax()
		setStatusProperty()
		setPersistentEffects()
		resetAllResources()
		addEphemeralEffects()
		overConsumeResource()
		modifyResource()
		addEphemeralEffect()
		getPersistentEffects()
		resetResource()
		consumeResource()
		clearPersistentEffects()
		modifyResourcePercentage()
		clearEphemeralEffects()
		resourceNames()
		addPersistentEffect()
		resourceLocked()
		clearAllPersistentEffects()
		inflictedDamageSince()
		isResource()
		setResource()
		giveResource()
	}
	xpcall()
	getmetatable()
	utf8 = {
		len()
		codepoint()
		offset()
		codes()
		charpattern = "[
[23:45:13.850] [Warn] 	select()
	rawequal()
	rawset()
	string = {
		gmatch()
		char()
		sub()
		unpack()
		upper()
		lower()
		find()
		rep()
		dump()
		len()
		reverse()
		packsize()
		pack()
		byte()
		match()
		format()
		gsub()
	}
	require()
	pairs()
	next()
	jobject()
	math = {
		pi = 3.1415926535898
		rad()
		max()
		sqrt()
		random()
		floor()
		log()
		acos()
		fmod()
		mininteger = -9223372036854775808
		type()
		huge = inf
		randomseed()
		deg()
		exp()
		maxinteger = 9223372036854775807
		cos()
		min()
		tointeger()
		modf()
		asin()
		tan()
		atan()
		abs()
		sin()
		ult()
		ceil()
	}
	print()
	pcall()
	type()
	init()
	setmetatable()
	jresize()
	ic = {
		checkStack()
		itemAmount()
		stripColor()
		quickstack()
		itemConfig()
		amountEquipped()
		sortFunc()
		lock()
		giveBack()
		renameThis()
		sort()
		searchBox()
		sort_relative()
		clientVersion = 1
		renameButton()
		searchButton()
		getQuality()
	}
	player = {
		equippedTech()
		altHandItem()
		giveEssentialItem()
		consumeTaggedItem()
		setUniverseFlag()
		species()
		itemsWithTag()
		worldId()
		warp()
		completeMission()
		inventoryTags()
		upgradeShip()
		hasQuest()
		consumeItem()
		gender()
		primaryHandItem()
		essentialItem()
		equippedItem()
		setIntroComplete()
		playTime()
		enabledTechs()
		recordEvent()
		playCinematic()
		introComplete()
		hasCompletedQuest()
		makeTechAvailable()
		consumeItemWithParameter()
		startQuest()
		hasItemWithParameter()
		getItemWithParameter()
		lounge()
		enableTech()
		equipTech()
		enableMission()
		removeEssentialItem()
		isLounging()
		availableTechs()
		primaryHandItemTags()
		makeTechUnavailable()
		confirm()
		serverUuid()
		addBookmark()
		altHandItemTags()
		cleanupItems()
		radioMessage()
		setEquippedItem()
		ownShipWorldId()
		hasItem()
		canStartQuest()
		giveBlueprint()
		hasCountOfItem()
		shipUpgrades()
		giveItem()
	}
	config = {
		getParameter()
	}
	self = {
	}
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	world = {
		spawnItem()
		entityPosition()
		entityHealth()
		damageTileArea()
		day()
		placeMaterial()
		entityDescription()
		containerPutItemsAt()
		entityVelocity()
		damageTiles()
		entityHandItem()
		objectAt()
		setProperty()
		containerItemApply()
		containerClose()
		distance()
		findUniqueEntity()
		gravity()
		rectTileCollision()
		entitySpecies()
		platformerPathStart()
		containerOpen()
		containerTakeAll()
		breathable()
		npcType()
		containerAddItems()
		dayLength()
		loungeableOccupied()
		placeObject()
		isTileProtected()
		destroyLiquid()
		debugLine()
		spawnLiquid()
		entityCanDamage()
		containerItemsCanFit()
		xwrap()
		entityUniqueId()
		itemDropQuery()
		lightLevel()
		placeMod()
		spawnNpc()
		spawnTreasure()
		time()
		underground()
		spawnVehicle()
		spawnMonster()
		timeOfDay()
		findPlatformerPath()
		debugPoly()
		containerTakeNumItemsAt()
		isMonster()
		farmableStage()
		polyCollision()
		objectLineQuery()
		entityHasCountOfItem()
		entityHandItemDescriptor()
		tileIsOccupied()
		resolvePolyCollision()
		pointCollision()
		callScriptedEntity()
		collisionBlocksAlongLine()
		containerStackItems()
		objectSpaces()
		containerConsume()
		spawnStagehand()
		spawnProjectile()
		stagehandType()
		entityQuery()
		lineTileCollision()
		containerSwapItemsNoCombine()
		liquidAlongLine()
		playerQuery()
		objectQuery()
		entityGender()
		rectCollision()
		containerItemAt()
		polyContains()
		containerTakeAt()
		magnitude()
		mod()
		containerSwapItems()
		isNpc()
		lineCollision()
		getObjectParameter()
		debugPoint()
		pointTileCollision()
		containerItemsFitWhere()
		containerAvailable()
		getProperty()
		containerItems()
		threatLevel()
		entityType()
		sendEntityMessage()
		material()
		liquidAt()
		containerSize()
		debugText()
		monsterType()
		entityMoney()
		nearestTo()
		npcLineQuery()
		entityPortrait()
		entityName()
		entityDamageTeam()
		containerConsumeAt()
		entityAggressive()
		windLevel()
		monsterQuery()
		entityExists()
		loungeableQuery()
		npcQuery()
		entityLineQuery()
	}
	root = {
		createBiome()
		imageSpaces()
		createItem()
		loadVersionedJson()
		createTreasure()
		getMatchingTenants()
		monsterSkillParameter()
		getConfiguration()
		npcVariant()
		itemHasTag()
		imageSize()
		projectileGravityMultiplier()
		nonEmptyRegion()
		evalFunction2()
		projectileConfig()
		materialMiningSound()
		generateName()
		isTreasurePool()
		hasTech()
		behaviorModule()
		itemConfig()
		treeStemDirectory()
		evalFunction()
		techConfig()
		npcConfig()
		setConfigurationPath()
		getConfigurationPath()
		materialHealth()
		materialFootstepSound()
		monsterMovementSettings()
		materialPath()
		setConfiguration()
		monsterPortrait()
		itemType()
		questConfig()
		recipesForItem()
		assetJson()
		treeFoliageDirectory()
		techType()
		liquidStatusEffects()
		makeCurrentVersionedJson()
		itemTags()
		tenantConfig()
		npcPortrait()
	}
	jsize()
	status = {
		setResourceLocked()
		resourcePercentage()
		addPersistentEffects()
		removeEphemeralEffect()
		resource()
		setResourcePercentage()
		resourcePositive()
		damageTakenSince()
		statPositive()
		stat()
		statusProperty()
		activeUniqueStatusEffectSummary()
		inflictedHitsSince()
		resourceMax()
		setStatusProperty()
		setPersistentEffects()
		resetAllResources()
		addEphemeralEffects()
		overConsumeResource()
		modifyResource()
		addEphemeralEffect()
		getPersistentEffects()
		resetResource()
		consumeResource()
		clearPersistentEffects()
		modifyResourcePercentage()
		clearEphemeralEffects()
		resourceNames()
		addPersistentEffect()
		resourceLocked()
		clearAllPersistentEffects()
		inflictedDamageSince()
		isResource()
		setResource()
		giveResource()
	}
	xpcall()
	getmetatable()
	utf8 = {
		len()
		codepoint()
		offset()
		codes()
		charpattern = "[
[23:45:22.321] [Info] [IC] [Sort] Time elapsed: 0.011
[23:45:26.850] [Warn] 	select()
	rawequal()
	rawset()
	string = {
		gmatch()
		char()
		sub()
		unpack()
		upper()
		lower()
		find()
		rep()
		dump()
		len()
		reverse()
		packsize()
		pack()
		byte()
		match()
		format()
		gsub()
	}
	require()
	pairs()
	next()
	jobject()
	math = {
		pi = 3.1415926535898
		rad()
		max()
		sqrt()
		random()
		floor()
		log()
		acos()
		fmod()
		mininteger = -9223372036854775808
		type()
		huge = inf
		randomseed()
		deg()
		exp()
		maxinteger = 9223372036854775807
		cos()
		min()
		tointeger()
		modf()
		asin()
		tan()
		atan()
		abs()
		sin()
		ult()
		ceil()
	}
	print()
	pcall()
	type()
	init()
	setmetatable()
	jresize()
	ic = {
		checkStack()
		itemAmount()
		stripColor()
		quickstack()
		itemConfig()
		amountEquipped()
		sortFunc()
		lock()
		giveBack()
		renameThis()
		sort()
		searchBox()
		sort_relative()
		clientVersion = 1
		renameButton()
		searchButton()
		getQuality()
	}
	player = {
		equippedTech()
		altHandItem()
		giveEssentialItem()
		consumeTaggedItem()
		setUniverseFlag()
		species()
		itemsWithTag()
		worldId()
		warp()
		completeMission()
		inventoryTags()
		upgradeShip()
		hasQuest()
		consumeItem()
		gender()
		primaryHandItem()
		essentialItem()
		equippedItem()
		setIntroComplete()
		playTime()
		enabledTechs()
		recordEvent()
		playCinematic()
		introComplete()
		hasCompletedQuest()
		makeTechAvailable()
		consumeItemWithParameter()
		startQuest()
		hasItemWithParameter()
		getItemWithParameter()
		lounge()
		enableTech()
		equipTech()
		enableMission()
		removeEssentialItem()
		isLounging()
		availableTechs()
		primaryHandItemTags()
		makeTechUnavailable()
		confirm()
		serverUuid()
		addBookmark()
		altHandItemTags()
		cleanupItems()
		radioMessage()
		setEquippedItem()
		ownShipWorldId()
		hasItem()
		canStartQuest()
		giveBlueprint()
		hasCountOfItem()
		shipUpgrades()
		giveItem()
	}
	config = {
		getParameter()
	}
	self = {
	}
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	world = {
		spawnItem()
		entityPosition()
		entityHealth()
		damageTileArea()
		day()
		placeMaterial()
		entityDescription()
		containerPutItemsAt()
		entityVelocity()
		damageTiles()
		entityHandItem()
		objectAt()
		setProperty()
		containerItemApply()
		containerClose()
		distance()
		findUniqueEntity()
		gravity()
		rectTileCollision()
		entitySpecies()
		platformerPathStart()
		containerOpen()
		containerTakeAll()
		breathable()
		npcType()
		containerAddItems()
		dayLength()
		loungeableOccupied()
		placeObject()
		isTileProtected()
		destroyLiquid()
		debugLine()
		spawnLiquid()
		entityCanDamage()
		containerItemsCanFit()
		xwrap()
		entityUniqueId()
		itemDropQuery()
		lightLevel()
		placeMod()
		spawnNpc()
		spawnTreasure()
		time()
		underground()
		spawnVehicle()
		spawnMonster()
		timeOfDay()
		findPlatformerPath()
		debugPoly()
		containerTakeNumItemsAt()
		isMonster()
		farmableStage()
		polyCollision()
		objectLineQuery()
		entityHasCountOfItem()
		entityHandItemDescriptor()
		tileIsOccupied()
		resolvePolyCollision()
		pointCollision()
		callScriptedEntity()
		collisionBlocksAlongLine()
		containerStackItems()
		objectSpaces()
		containerConsume()
		spawnStagehand()
		spawnProjectile()
		stagehandType()
		entityQuery()
		lineTileCollision()
		containerSwapItemsNoCombine()
		liquidAlongLine()
		playerQuery()
		objectQuery()
		entityGender()
		rectCollision()
		containerItemAt()
		polyContains()
		containerTakeAt()
		magnitude()
		mod()
		containerSwapItems()
		isNpc()
		lineCollision()
		getObjectParameter()
		debugPoint()
		pointTileCollision()
		containerItemsFitWhere()
		containerAvailable()
		getProperty()
		containerItems()
		threatLevel()
		entityType()
		sendEntityMessage()
		material()
		liquidAt()
		containerSize()
		debugText()
		monsterType()
		entityMoney()
		nearestTo()
		npcLineQuery()
		entityPortrait()
		entityName()
		entityDamageTeam()
		containerConsumeAt()
		entityAggressive()
		windLevel()
		monsterQuery()
		entityExists()
		loungeableQuery()
		npcQuery()
		entityLineQuery()
	}
	root = {
		createBiome()
		imageSpaces()
		createItem()
		loadVersionedJson()
		createTreasure()
		getMatchingTenants()
		monsterSkillParameter()
		getConfiguration()
		npcVariant()
		itemHasTag()
		imageSize()
		projectileGravityMultiplier()
		nonEmptyRegion()
		evalFunction2()
		projectileConfig()
		materialMiningSound()
		generateName()
		isTreasurePool()
		hasTech()
		behaviorModule()
		itemConfig()
		treeStemDirectory()
		evalFunction()
		techConfig()
		npcConfig()
		setConfigurationPath()
		getConfigurationPath()
		materialHealth()
		materialFootstepSound()
		monsterMovementSettings()
		materialPath()
		setConfiguration()
		monsterPortrait()
		itemType()
		questConfig()
		recipesForItem()
		assetJson()
		treeFoliageDirectory()
		techType()
		liquidStatusEffects()
		makeCurrentVersionedJson()
		itemTags()
		tenantConfig()
		npcPortrait()
	}
	jsize()
	status = {
		setResourceLocked()
		resourcePercentage()
		addPersistentEffects()
		removeEphemeralEffect()
		resource()
		setResourcePercentage()
		resourcePositive()
		damageTakenSince()
		statPositive()
		stat()
		statusProperty()
		activeUniqueStatusEffectSummary()
		inflictedHitsSince()
		resourceMax()
		setStatusProperty()
		setPersistentEffects()
		resetAllResources()
		addEphemeralEffects()
		overConsumeResource()
		modifyResource()
		addEphemeralEffect()
		getPersistentEffects()
		resetResource()
		consumeResource()
		clearPersistentEffects()
		modifyResourcePercentage()
		clearEphemeralEffects()
		resourceNames()
		addPersistentEffect()
		resourceLocked()
		clearAllPersistentEffects()
		inflictedDamageSince()
		isResource()
		setResource()
		giveResource()
	}
	xpcall()
	getmetatable()
	utf8 = {
		len()
		codepoint()
		offset()
		codes()
		charpattern = "[
[23:45:55.783] [Warn] 	select()
	rawequal()
	rawset()
	string = {
		gmatch()
		char()
		sub()
		unpack()
		upper()
		lower()
		find()
		rep()
		dump()
		len()
		reverse()
		packsize()
		pack()
		byte()
		match()
		format()
		gsub()
	}
	require()
	pairs()
	next()
	jobject()
	math = {
		pi = 3.1415926535898
		rad()
		max()
		sqrt()
		random()
		floor()
		log()
		acos()
		fmod()
		mininteger = -9223372036854775808
		type()
		huge = inf
		randomseed()
		deg()
		exp()
		maxinteger = 9223372036854775807
		cos()
		min()
		tointeger()
		modf()
		asin()
		tan()
		atan()
		abs()
		sin()
		ult()
		ceil()
	}
	print()
	pcall()
	type()
	init()
	setmetatable()
	jresize()
	ic = {
		checkStack()
		itemAmount()
		stripColor()
		quickstack()
		itemConfig()
		amountEquipped()
		sortFunc()
		lock()
		giveBack()
		renameThis()
		sort()
		searchBox()
		sort_relative()
		clientVersion = 1
		renameButton()
		searchButton()
		getQuality()
	}
	player = {
		equippedTech()
		altHandItem()
		giveEssentialItem()
		consumeTaggedItem()
		setUniverseFlag()
		species()
		itemsWithTag()
		worldId()
		warp()
		completeMission()
		inventoryTags()
		upgradeShip()
		hasQuest()
		consumeItem()
		gender()
		primaryHandItem()
		essentialItem()
		equippedItem()
		setIntroComplete()
		playTime()
		enabledTechs()
		recordEvent()
		playCinematic()
		introComplete()
		hasCompletedQuest()
		makeTechAvailable()
		consumeItemWithParameter()
		startQuest()
		hasItemWithParameter()
		getItemWithParameter()
		lounge()
		enableTech()
		equipTech()
		enableMission()
		removeEssentialItem()
		isLounging()
		availableTechs()
		primaryHandItemTags()
		makeTechUnavailable()
		confirm()
		serverUuid()
		addBookmark()
		altHandItemTags()
		cleanupItems()
		radioMessage()
		setEquippedItem()
		ownShipWorldId()
		hasItem()
		canStartQuest()
		giveBlueprint()
		hasCountOfItem()
		shipUpgrades()
		giveItem()
	}
	config = {
		getParameter()
	}
	self = {
	}
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	world = {
		spawnItem()
		entityPosition()
		entityHealth()
		damageTileArea()
		day()
		placeMaterial()
		entityDescription()
		containerPutItemsAt()
		entityVelocity()
		damageTiles()
		entityHandItem()
		objectAt()
		setProperty()
		containerItemApply()
		containerClose()
		distance()
		findUniqueEntity()
		gravity()
		rectTileCollision()
		entitySpecies()
		platformerPathStart()
		containerOpen()
		containerTakeAll()
		breathable()
		npcType()
		containerAddItems()
		dayLength()
		loungeableOccupied()
		placeObject()
		isTileProtected()
		destroyLiquid()
		debugLine()
		spawnLiquid()
		entityCanDamage()
		containerItemsCanFit()
		xwrap()
		entityUniqueId()
		itemDropQuery()
		lightLevel()
		placeMod()
		spawnNpc()
		spawnTreasure()
		time()
		underground()
		spawnVehicle()
		spawnMonster()
		timeOfDay()
		findPlatformerPath()
		debugPoly()
		containerTakeNumItemsAt()
		isMonster()
		farmableStage()
		polyCollision()
		objectLineQuery()
		entityHasCountOfItem()
		entityHandItemDescriptor()
		tileIsOccupied()
		resolvePolyCollision()
		pointCollision()
		callScriptedEntity()
		collisionBlocksAlongLine()
		containerStackItems()
		objectSpaces()
		containerConsume()
		spawnStagehand()
		spawnProjectile()
		stagehandType()
		entityQuery()
		lineTileCollision()
		containerSwapItemsNoCombine()
		liquidAlongLine()
		playerQuery()
		objectQuery()
		entityGender()
		rectCollision()
		containerItemAt()
		polyContains()
		containerTakeAt()
		magnitude()
		mod()
		containerSwapItems()
		isNpc()
		lineCollision()
		getObjectParameter()
		debugPoint()
		pointTileCollision()
		containerItemsFitWhere()
		containerAvailable()
		getProperty()
		containerItems()
		threatLevel()
		entityType()
		sendEntityMessage()
		material()
		liquidAt()
		containerSize()
		debugText()
		monsterType()
		entityMoney()
		nearestTo()
		npcLineQuery()
		entityPortrait()
		entityName()
		entityDamageTeam()
		containerConsumeAt()
		entityAggressive()
		windLevel()
		monsterQuery()
		entityExists()
		loungeableQuery()
		npcQuery()
		entityLineQuery()
	}
	root = {
		createBiome()
		imageSpaces()
		createItem()
		loadVersionedJson()
		createTreasure()
		getMatchingTenants()
		monsterSkillParameter()
		getConfiguration()
		npcVariant()
		itemHasTag()
		imageSize()
		projectileGravityMultiplier()
		nonEmptyRegion()
		evalFunction2()
		projectileConfig()
		materialMiningSound()
		generateName()
		isTreasurePool()
		hasTech()
		behaviorModule()
		itemConfig()
		treeStemDirectory()
		evalFunction()
		techConfig()
		npcConfig()
		setConfigurationPath()
		getConfigurationPath()
		materialHealth()
		materialFootstepSound()
		monsterMovementSettings()
		materialPath()
		setConfiguration()
		monsterPortrait()
		itemType()
		questConfig()
		recipesForItem()
		assetJson()
		treeFoliageDirectory()
		techType()
		liquidStatusEffects()
		makeCurrentVersionedJson()
		itemTags()
		tenantConfig()
		npcPortrait()
	}
	jsize()
	status = {
		setResourceLocked()
		resourcePercentage()
		addPersistentEffects()
		removeEphemeralEffect()
		resource()
		setResourcePercentage()
		resourcePositive()
		damageTakenSince()
		statPositive()
		stat()
		statusProperty()
		activeUniqueStatusEffectSummary()
		inflictedHitsSince()
		resourceMax()
		setStatusProperty()
		setPersistentEffects()
		resetAllResources()
		addEphemeralEffects()
		overConsumeResource()
		modifyResource()
		addEphemeralEffect()
		getPersistentEffects()
		resetResource()
		consumeResource()
		clearPersistentEffects()
		modifyResourcePercentage()
		clearEphemeralEffects()
		resourceNames()
		addPersistentEffect()
		resourceLocked()
		clearAllPersistentEffects()
		inflictedDamageSince()
		isResource()
		setResource()
		giveResource()
	}
	xpcall()
	getmetatable()
	utf8 = {
		len()
		codepoint()
		offset()
		codes()
		charpattern = "[
[23:45:57.500] [Warn] 	select()
	rawequal()
	rawset()
	string = {
		gmatch()
		char()
		sub()
		unpack()
		upper()
		lower()
		find()
		rep()
		dump()
		len()
		reverse()
		packsize()
		pack()
		byte()
		match()
		format()
		gsub()
	}
	require()
	pairs()
	next()
	jobject()
	math = {
		pi = 3.1415926535898
		rad()
		max()
		sqrt()
		random()
		floor()
		log()
		acos()
		fmod()
		mininteger = -9223372036854775808
		type()
		huge = inf
		randomseed()
		deg()
		exp()
		maxinteger = 9223372036854775807
		cos()
		min()
		tointeger()
		modf()
		asin()
		tan()
		atan()
		abs()
		sin()
		ult()
		ceil()
	}
	print()
	pcall()
	type()
	init()
	setmetatable()
	jresize()
	ic = {
		checkStack()
		itemAmount()
		stripColor()
		quickstack()
		itemConfig()
		amountEquipped()
		sortFunc()
		lock()
		giveBack()
		renameThis()
		sort()
		searchBox()
		sort_relative()
		clientVersion = 1
		renameButton()
		searchButton()
		getQuality()
	}
	player = {
		equippedTech()
		altHandItem()
		giveEssentialItem()
		consumeTaggedItem()
		setUniverseFlag()
		species()
		itemsWithTag()
		worldId()
		warp()
		completeMission()
		inventoryTags()
		upgradeShip()
		hasQuest()
		consumeItem()
		gender()
		primaryHandItem()
		essentialItem()
		equippedItem()
		setIntroComplete()
		playTime()
		enabledTechs()
		recordEvent()
		playCinematic()
		introComplete()
		hasCompletedQuest()
		makeTechAvailable()
		consumeItemWithParameter()
		startQuest()
		hasItemWithParameter()
		getItemWithParameter()
		lounge()
		enableTech()
		equipTech()
		enableMission()
		removeEssentialItem()
		isLounging()
		availableTechs()
		primaryHandItemTags()
		makeTechUnavailable()
		confirm()
		serverUuid()
		addBookmark()
		altHandItemTags()
		cleanupItems()
		radioMessage()
		setEquippedItem()
		ownShipWorldId()
		hasItem()
		canStartQuest()
		giveBlueprint()
		hasCountOfItem()
		shipUpgrades()
		giveItem()
	}
	config = {
		getParameter()
	}
	self = {
	}
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	world = {
		spawnItem()
		entityPosition()
		entityHealth()
		damageTileArea()
		day()
		placeMaterial()
		entityDescription()
		containerPutItemsAt()
		entityVelocity()
		damageTiles()
		entityHandItem()
		objectAt()
		setProperty()
		containerItemApply()
		containerClose()
		distance()
		findUniqueEntity()
		gravity()
		rectTileCollision()
		entitySpecies()
		platformerPathStart()
		containerOpen()
		containerTakeAll()
		breathable()
		npcType()
		containerAddItems()
		dayLength()
		loungeableOccupied()
		placeObject()
		isTileProtected()
		destroyLiquid()
		debugLine()
		spawnLiquid()
		entityCanDamage()
		containerItemsCanFit()
		xwrap()
		entityUniqueId()
		itemDropQuery()
		lightLevel()
		placeMod()
		spawnNpc()
		spawnTreasure()
		time()
		underground()
		spawnVehicle()
		spawnMonster()
		timeOfDay()
		findPlatformerPath()
		debugPoly()
		containerTakeNumItemsAt()
		isMonster()
		farmableStage()
		polyCollision()
		objectLineQuery()
		entityHasCountOfItem()
		entityHandItemDescriptor()
		tileIsOccupied()
		resolvePolyCollision()
		pointCollision()
		callScriptedEntity()
		collisionBlocksAlongLine()
		containerStackItems()
		objectSpaces()
		containerConsume()
		spawnStagehand()
		spawnProjectile()
		stagehandType()
		entityQuery()
		lineTileCollision()
		containerSwapItemsNoCombine()
		liquidAlongLine()
		playerQuery()
		objectQuery()
		entityGender()
		rectCollision()
		containerItemAt()
		polyContains()
		containerTakeAt()
		magnitude()
		mod()
		containerSwapItems()
		isNpc()
		lineCollision()
		getObjectParameter()
		debugPoint()
		pointTileCollision()
		containerItemsFitWhere()
		containerAvailable()
		getProperty()
		containerItems()
		threatLevel()
		entityType()
		sendEntityMessage()
		material()
		liquidAt()
		containerSize()
		debugText()
		monsterType()
		entityMoney()
		nearestTo()
		npcLineQuery()
		entityPortrait()
		entityName()
		entityDamageTeam()
		containerConsumeAt()
		entityAggressive()
		windLevel()
		monsterQuery()
		entityExists()
		loungeableQuery()
		npcQuery()
		entityLineQuery()
	}
	root = {
		createBiome()
		imageSpaces()
		createItem()
		loadVersionedJson()
		createTreasure()
		getMatchingTenants()
		monsterSkillParameter()
		getConfiguration()
		npcVariant()
		itemHasTag()
		imageSize()
		projectileGravityMultiplier()
		nonEmptyRegion()
		evalFunction2()
		projectileConfig()
		materialMiningSound()
		generateName()
		isTreasurePool()
		hasTech()
		behaviorModule()
		itemConfig()
		treeStemDirectory()
		evalFunction()
		techConfig()
		npcConfig()
		setConfigurationPath()
		getConfigurationPath()
		materialHealth()
		materialFootstepSound()
		monsterMovementSettings()
		materialPath()
		setConfiguration()
		monsterPortrait()
		itemType()
		questConfig()
		recipesForItem()
		assetJson()
		treeFoliageDirectory()
		techType()
		liquidStatusEffects()
		makeCurrentVersionedJson()
		itemTags()
		tenantConfig()
		npcPortrait()
	}
	jsize()
	status = {
		setResourceLocked()
		resourcePercentage()
		addPersistentEffects()
		removeEphemeralEffect()
		resource()
		setResourcePercentage()
		resourcePositive()
		damageTakenSince()
		statPositive()
		stat()
		statusProperty()
		activeUniqueStatusEffectSummary()
		inflictedHitsSince()
		resourceMax()
		setStatusProperty()
		setPersistentEffects()
		resetAllResources()
		addEphemeralEffects()
		overConsumeResource()
		modifyResource()
		addEphemeralEffect()
		getPersistentEffects()
		resetResource()
		consumeResource()
		clearPersistentEffects()
		modifyResourcePercentage()
		clearEphemeralEffects()
		resourceNames()
		addPersistentEffect()
		resourceLocked()
		clearAllPersistentEffects()
		inflictedDamageSince()
		isResource()
		setResource()
		giveResource()
	}
	xpcall()
	getmetatable()
	utf8 = {
		len()
		codepoint()
		offset()
		codes()
		charpattern = "[
[23:45:58.982] [Warn] 	select()
	rawequal()
	rawset()
	string = {
		gmatch()
		char()
		sub()
		unpack()
		upper()
		lower()
		find()
		rep()
		dump()
		len()
		reverse()
		packsize()
		pack()
		byte()
		match()
		format()
		gsub()
	}
	require()
	pairs()
	next()
	jobject()
	math = {
		pi = 3.1415926535898
		rad()
		max()
		sqrt()
		random()
		floor()
		log()
		acos()
		fmod()
		mininteger = -9223372036854775808
		type()
		huge = inf
		randomseed()
		deg()
		exp()
		maxinteger = 9223372036854775807
		cos()
		min()
		tointeger()
		modf()
		asin()
		tan()
		atan()
		abs()
		sin()
		ult()
		ceil()
	}
	print()
	pcall()
	type()
	init()
	setmetatable()
	jresize()
	ic = {
		checkStack()
		itemAmount()
		stripColor()
		quickstack()
		itemConfig()
		amountEquipped()
		sortFunc()
		lock()
		giveBack()
		renameThis()
		sort()
		searchBox()
		sort_relative()
		clientVersion = 1
		renameButton()
		searchButton()
		getQuality()
	}
	player = {
		equippedTech()
		altHandItem()
		giveEssentialItem()
		consumeTaggedItem()
		setUniverseFlag()
		species()
		itemsWithTag()
		worldId()
		warp()
		completeMission()
		inventoryTags()
		upgradeShip()
		hasQuest()
		consumeItem()
		gender()
		primaryHandItem()
		essentialItem()
		equippedItem()
		setIntroComplete()
		playTime()
		enabledTechs()
		recordEvent()
		playCinematic()
		introComplete()
		hasCompletedQuest()
		makeTechAvailable()
		consumeItemWithParameter()
		startQuest()
		hasItemWithParameter()
		getItemWithParameter()
		lounge()
		enableTech()
		equipTech()
		enableMission()
		removeEssentialItem()
		isLounging()
		availableTechs()
		primaryHandItemTags()
		makeTechUnavailable()
		confirm()
		serverUuid()
		addBookmark()
		altHandItemTags()
		cleanupItems()
		radioMessage()
		setEquippedItem()
		ownShipWorldId()
		hasItem()
		canStartQuest()
		giveBlueprint()
		hasCountOfItem()
		shipUpgrades()
		giveItem()
	}
	config = {
		getParameter()
	}
	self = {
	}
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	world = {
		spawnItem()
		entityPosition()
		entityHealth()
		damageTileArea()
		day()
		placeMaterial()
		entityDescription()
		containerPutItemsAt()
		entityVelocity()
		damageTiles()
		entityHandItem()
		objectAt()
		setProperty()
		containerItemApply()
		containerClose()
		distance()
		findUniqueEntity()
		gravity()
		rectTileCollision()
		entitySpecies()
		platformerPathStart()
		containerOpen()
		containerTakeAll()
		breathable()
		npcType()
		containerAddItems()
		dayLength()
		loungeableOccupied()
		placeObject()
		isTileProtected()
		destroyLiquid()
		debugLine()
		spawnLiquid()
		entityCanDamage()
		containerItemsCanFit()
		xwrap()
		entityUniqueId()
		itemDropQuery()
		lightLevel()
		placeMod()
		spawnNpc()
		spawnTreasure()
		time()
		underground()
		spawnVehicle()
		spawnMonster()
		timeOfDay()
		findPlatformerPath()
		debugPoly()
		containerTakeNumItemsAt()
		isMonster()
		farmableStage()
		polyCollision()
		objectLineQuery()
		entityHasCountOfItem()
		entityHandItemDescriptor()
		tileIsOccupied()
		resolvePolyCollision()
		pointCollision()
		callScriptedEntity()
		collisionBlocksAlongLine()
		containerStackItems()
		objectSpaces()
		containerConsume()
		spawnStagehand()
		spawnProjectile()
		stagehandType()
		entityQuery()
		lineTileCollision()
		containerSwapItemsNoCombine()
		liquidAlongLine()
		playerQuery()
		objectQuery()
		entityGender()
		rectCollision()
		containerItemAt()
		polyContains()
		containerTakeAt()
		magnitude()
		mod()
		containerSwapItems()
		isNpc()
		lineCollision()
		getObjectParameter()
		debugPoint()
		pointTileCollision()
		containerItemsFitWhere()
		containerAvailable()
		getProperty()
		containerItems()
		threatLevel()
		entityType()
		sendEntityMessage()
		material()
		liquidAt()
		containerSize()
		debugText()
		monsterType()
		entityMoney()
		nearestTo()
		npcLineQuery()
		entityPortrait()
		entityName()
		entityDamageTeam()
		containerConsumeAt()
		entityAggressive()
		windLevel()
		monsterQuery()
		entityExists()
		loungeableQuery()
		npcQuery()
		entityLineQuery()
	}
	root = {
		createBiome()
		imageSpaces()
		createItem()
		loadVersionedJson()
		createTreasure()
		getMatchingTenants()
		monsterSkillParameter()
		getConfiguration()
		npcVariant()
		itemHasTag()
		imageSize()
		projectileGravityMultiplier()
		nonEmptyRegion()
		evalFunction2()
		projectileConfig()
		materialMiningSound()
		generateName()
		isTreasurePool()
		hasTech()
		behaviorModule()
		itemConfig()
		treeStemDirectory()
		evalFunction()
		techConfig()
		npcConfig()
		setConfigurationPath()
		getConfigurationPath()
		materialHealth()
		materialFootstepSound()
		monsterMovementSettings()
		materialPath()
		setConfiguration()
		monsterPortrait()
		itemType()
		questConfig()
		recipesForItem()
		assetJson()
		treeFoliageDirectory()
		techType()
		liquidStatusEffects()
		makeCurrentVersionedJson()
		itemTags()
		tenantConfig()
		npcPortrait()
	}
	jsize()
	status = {
		setResourceLocked()
		resourcePercentage()
		addPersistentEffects()
		removeEphemeralEffect()
		resource()
		setResourcePercentage()
		resourcePositive()
		damageTakenSince()
		statPositive()
		stat()
		statusProperty()
		activeUniqueStatusEffectSummary()
		inflictedHitsSince()
		resourceMax()
		setStatusProperty()
		setPersistentEffects()
		resetAllResources()
		addEphemeralEffects()
		overConsumeResource()
		modifyResource()
		addEphemeralEffect()
		getPersistentEffects()
		resetResource()
		consumeResource()
		clearPersistentEffects()
		modifyResourcePercentage()
		clearEphemeralEffects()
		resourceNames()
		addPersistentEffect()
		resourceLocked()
		clearAllPersistentEffects()
		inflictedDamageSince()
		isResource()
		setResource()
		giveResource()
	}
	xpcall()
	getmetatable()
	utf8 = {
		len()
		codepoint()
		offset()
		codes()
		charpattern = "[
[23:46:23.129] [Info] UniverseServer: Loading client ship world ClientShipWorld:40d0c64bbadbfcac62e62a636f4f2308
[23:46:24.118] [Info] UniverseServer: Warping player 1 to ClientShipWorld:40d0c64bbadbfcac62e62a636f4f2308
[23:46:24.199] [Info] UniverseServer: Stopping idle world CelestialWorld:-549421120:-174071947:-77840190:8
[23:46:24.270] [Info] Client received world stop packet, leaving: Removed
[23:46:30.352] [Warn] 	status = {
		resource()
		clearPersistentEffects()
		modifyResource()
		damageTakenSince()
		resourceLocked()
		resetResource()
		setResourceLocked()
		resourceMax()
		statusProperty()
		isResource()
		overConsumeResource()
		resourcePositive()
		resetAllResources()
		setResource()
		addEphemeralEffect()
		giveResource()
		addEphemeralEffects()
		modifyResourcePercentage()
		clearAllPersistentEffects()
		inflictedDamageSince()
		inflictedHitsSince()
		getPersistentEffects()
		addPersistentEffects()
		setStatusProperty()
		clearEphemeralEffects()
		resourcePercentage()
		statPositive()
		activeUniqueStatusEffectSummary()
		removeEphemeralEffect()
		addPersistentEffect()
		resourceNames()
		setPersistentEffects()
		setResourcePercentage()
		stat()
		consumeResource()
	}
	ic = {
		giveBack()
		renameButton()
		itemAmount()
		searchButton()
		quickstack()
		searchBox()
		itemConfig()
		sortFunc()
		stripColor()
		lock()
		getQuality()
		clientVersion = 1
		sort()
		checkStack()
		sort_relative()
		amountEquipped()
		renameThis()
	}
	select()
	config = {
		getParameter()
	}
	jremove()
	jobject()
	getmetatable()
	xpcall()
	math = {
		atan()
		fmod()
		huge = inf
		mininteger = -9223372036854775808
		rad()
		ult()
		acos()
		maxinteger = 9223372036854775807
		random()
		type()
		asin()
		sin()
		cos()
		max()
		pi = 3.1415926535898
		sqrt()
		log()
		ceil()
		tan()
		modf()
		abs()
		deg()
		floor()
		min()
		randomseed()
		tointeger()
		exp()
	}
	coroutine = {
		running()
		create()
		isyieldable()
		yield()
		wrap()
		status()
		resume()
	}
	root = {
		behaviorModule()
		recipesForItem()
		setConfiguration()
		createItem()
		tenantConfig()
		treeStemDirectory()
		itemConfig()
		getConfiguration()
		imageSpaces()
		questConfig()
		nonEmptyRegion()
		getMatchingTenants()
		getConfigurationPath()
		materialPath()
		monsterSkillParameter()
		npcConfig()
		makeCurrentVersionedJson()
		imageSize()
		npcPortrait()
		materialMiningSound()
		loadVersionedJson()
		evalFunction2()
		assetJson()
		generateName()
		materialHealth()
		liquidStatusEffects()
		treeFoliageDirectory()
		hasTech()
		setConfigurationPath()
		createBiome()
		monsterMovementSettings()
		materialFootstepSound()
		itemHasTag()
		techConfig()
		createTreasure()
		itemType()
		projectileGravityMultiplier()
		monsterPortrait()
		techType()
		isTreasurePool()
		evalFunction()
		npcVariant()
		itemTags()
		projectileConfig()
	}
	rawset()
	rawget()
	world = {
		containerConsume()
		time()
		lineCollision()
		setProperty()
		entityDamageTeam()
		containerItemApply()
		spawnItem()
		spawnVehicle()
		debugLine()
		containerOpen()
		getObjectParameter()
		windLevel()
		getProperty()
		entityUniqueId()
		rectCollision()
		objectAt()
		containerSwapItemsNoCombine()
		tileIsOccupied()
		objectSpaces()
		containerSize()
		entityAggressive()
		destroyLiquid()
		entityCanDamage()
		underground()
		npcType()
		platformerPathStart()
		entityPosition()
		entityHealth()
		entityHandItemDescriptor()
		entityDescription()
		isTileProtected()
		containerAvailable()
		debugPoly()
		spawnLiquid()
		containerTakeAt()
		containerConsumeAt()
		gravity()
		liquidAt()
		stagehandType()
		spawnNpc()
		xwrap()
		placeObject()
		objectQuery()
		containerStackItems()
		debugPoint()
		damageTiles()
		collisionBlocksAlongLine()
		loungeableQuery()
		liquidAlongLine()
		spawnMonster()
		rectTileCollision()
		nearestTo()
		containerItemsCanFit()
		containerTakeNumItemsAt()
		damageTileArea()
		monsterQuery()
		entityHandItem()
		threatLevel()
		spawnStagehand()
		polyCollision()
		pointCollision()
		entityVelocity()
		entitySpecies()
		spawnTreasure()
		lineTileCollision()
		polyContains()
		entityGender()
		spawnProjectile()
		day()
		distance()
		entityLineQuery()
		callScriptedEntity()
		isNpc()
		entityType()
		containerTakeAll()
		itemDropQuery()
		placeMod()
		isMonster()
		entityName()
		loungeableOccupied()
		entityMoney()
		findUniqueEntity()
		containerAddItems()
		npcLineQuery()
		containerItemsFitWhere()
		placeMaterial()
		containerItemAt()
		containerItems()
		farmableStage()
		timeOfDay()
		debugText()
		entityQuery()
		findPlatformerPath()
		entityPortrait()
		containerSwapItems()
		playerQuery()
		entityHasCountOfItem()
		resolvePolyCollision()
		pointTileCollision()
		entityExists()
		monsterType()
		magnitude()
		material()
		objectLineQuery()
		sendEntityMessage()
		dayLength()
		containerClose()
		npcQuery()
		breathable()
		mod()
		lightLevel()
		containerPutItemsAt()
	}
	jsize()
	update()
	next()
	pcall()
	pairs()
	rawlen()
	player = {
		itemsWithTag()
		getItemWithParameter()
		worldId()
		essentialItem()
		playCinematic()
		equippedItem()
		giveItem()
		upgradeShip()
		equippedTech()
		inventoryTags()
		removeEssentialItem()
		canStartQuest()
		species()
		enableMission()
		confirm()
		warp()
		setIntroComplete()
		hasItem()
		altHandItem()
		equipTech()
		lounge()
		hasCompletedQuest()
		shipUpgrades()
		recordEvent()
		giveBlueprint()
		serverUuid()
		giveEssentialItem()
		ownShipWorldId()
		startQuest()
		consumeTaggedItem()
		consumeItemWithParameter()
		primaryHandItemTags()
		primaryHandItem()
		consumeItem()
		isLounging()
		playTime()
		altHandItemTags()
		hasQuest()
		introComplete()
		enabledTechs()
		hasCountOfItem()
		makeTechUnavailable()
		availableTechs()
		addBookmark()
		setUniverseFlag()
		hasItemWithParameter()
		enableTech()
		setEquippedItem()
		gender()
		completeMission()
		makeTechAvailable()
		cleanupItems()
		radioMessage()
	}
	type()
	error()
	tostring()
	widget = {
		setSize()
		setData()
		getText()
		getListSelected()
		setFontColor()
		setButtonOverlayImage()
		playSound()
		setText()
		setSelectedOption()
		setVisible()
		blur()
		setImageScale()
		setButtonEnabled()
		setChecked()
		removeListItem()
		getSliderValue()
		setButtonImage()
		setProgress()
		setButtonCheckedImages()
		itemGridItems()
		focus()
		setImage()
		clearListItems()
		setButtonImages()
		setPosition()
		getData()
		getSelectedOption()
		addListItem()
		getPosition()
		setListSelected()
		setOptionVisible()
		getSize()
		getChecked()
		setImageRotation()
		setOptionEnabled()
	}
	pane = {
		dismiss()
		playerEntityId()
		containerEntityId()
	}
	sb = {
		staticRandomI32()
		printJson()
		jsonMerge()
		replaceTags()
		staticRandomDouble()
		logError()
		makeUuid()
		makeRandomSource()
		print()
		makePerlinSource()
		staticRandomDoubleRange()
		staticRandomI32Range()
		nrand()
		logInfo()
		logWarn()
		jsonQuery()
		interpolateSinEase()
		setLogMap()
	}
	script = {
		setUpdateDelta()
		updateDt()
	}
	self = {
	}
	require()
	p()
	_VERSION = "Lua 5.3"
	table = {
		move()
		sort()
		pack()
		remove()
		concat()
		insert()
		unpack()
	}
	init()
	ipairs()
	os = {
		clock()
		difftime()
		time()
	}
	jresize()
	jarray()
	setmetatable()
	assert()
	string = {
		format()
		rep()
		find()
		reverse()
		dump()
		match()
		byte()
		char()
		gmatch()
		packsize()
		pack()
		upper()
		sub()
		len()
		lower()
		unpack()
		gsub()
	}
	print()
	utf8 = {
		char()
		codes()
		len()
		codepoint()
		charpattern = "[
[23:46:33.116] [Warn] 	status = {
		resource()
		clearPersistentEffects()
		modifyResource()
		damageTakenSince()
		resourceLocked()
		resetResource()
		setResourceLocked()
		resourceMax()
		statusProperty()
		isResource()
		overConsumeResource()
		resourcePositive()
		resetAllResources()
		setResource()
		addEphemeralEffect()
		giveResource()
		addEphemeralEffects()
		modifyResourcePercentage()
		clearAllPersistentEffects()
		inflictedDamageSince()
		inflictedHitsSince()
		getPersistentEffects()
		addPersistentEffects()
		setStatusProperty()
		clearEphemeralEffects()
		resourcePercentage()
		statPositive()
		activeUniqueStatusEffectSummary()
		removeEphemeralEffect()
		addPersistentEffect()
		resourceNames()
		setPersistentEffects()
		setResourcePercentage()
		stat()
		consumeResource()
	}
	ic = {
		giveBack()
		renameButton()
		itemAmount()
		searchButton()
		quickstack()
		searchBox()
		itemConfig()
		sortFunc()
		stripColor()
		lock()
		getQuality()
		clientVersion = 1
		sort()
		checkStack()
		sort_relative()
		amountEquipped()
		renameThis()
	}
	select()
	config = {
		getParameter()
	}
	jremove()
	jobject()
	getmetatable()
	xpcall()
	math = {
		atan()
		fmod()
		huge = inf
		mininteger = -9223372036854775808
		rad()
		ult()
		acos()
		maxinteger = 9223372036854775807
		random()
		type()
		asin()
		sin()
		cos()
		max()
		pi = 3.1415926535898
		sqrt()
		log()
		ceil()
		tan()
		modf()
		abs()
		deg()
		floor()
		min()
		randomseed()
		tointeger()
		exp()
	}
	coroutine = {
		running()
		create()
		isyieldable()
		yield()
		wrap()
		status()
		resume()
	}
	root = {
		behaviorModule()
		recipesForItem()
		setConfiguration()
		createItem()
		tenantConfig()
		treeStemDirectory()
		itemConfig()
		getConfiguration()
		imageSpaces()
		questConfig()
		nonEmptyRegion()
		getMatchingTenants()
		getConfigurationPath()
		materialPath()
		monsterSkillParameter()
		npcConfig()
		makeCurrentVersionedJson()
		imageSize()
		npcPortrait()
		materialMiningSound()
		loadVersionedJson()
		evalFunction2()
		assetJson()
		generateName()
		materialHealth()
		liquidStatusEffects()
		treeFoliageDirectory()
		hasTech()
		setConfigurationPath()
		createBiome()
		monsterMovementSettings()
		materialFootstepSound()
		itemHasTag()
		techConfig()
		createTreasure()
		itemType()
		projectileGravityMultiplier()
		monsterPortrait()
		techType()
		isTreasurePool()
		evalFunction()
		npcVariant()
		itemTags()
		projectileConfig()
	}
	rawset()
	rawget()
	world = {
		containerConsume()
		time()
		lineCollision()
		setProperty()
		entityDamageTeam()
		containerItemApply()
		spawnItem()
		spawnVehicle()
		debugLine()
		containerOpen()
		getObjectParameter()
		windLevel()
		getProperty()
		entityUniqueId()
		rectCollision()
		objectAt()
		containerSwapItemsNoCombine()
		tileIsOccupied()
		objectSpaces()
		containerSize()
		entityAggressive()
		destroyLiquid()
		entityCanDamage()
		underground()
		npcType()
		platformerPathStart()
		entityPosition()
		entityHealth()
		entityHandItemDescriptor()
		entityDescription()
		isTileProtected()
		containerAvailable()
		debugPoly()
		spawnLiquid()
		containerTakeAt()
		containerConsumeAt()
		gravity()
		liquidAt()
		stagehandType()
		spawnNpc()
		xwrap()
		placeObject()
		objectQuery()
		containerStackItems()
		debugPoint()
		damageTiles()
		collisionBlocksAlongLine()
		loungeableQuery()
		liquidAlongLine()
		spawnMonster()
		rectTileCollision()
		nearestTo()
		containerItemsCanFit()
		containerTakeNumItemsAt()
		damageTileArea()
		monsterQuery()
		entityHandItem()
		threatLevel()
		spawnStagehand()
		polyCollision()
		pointCollision()
		entityVelocity()
		entitySpecies()
		spawnTreasure()
		lineTileCollision()
		polyContains()
		entityGender()
		spawnProjectile()
		day()
		distance()
		entityLineQuery()
		callScriptedEntity()
		isNpc()
		entityType()
		containerTakeAll()
		itemDropQuery()
		placeMod()
		isMonster()
		entityName()
		loungeableOccupied()
		entityMoney()
		findUniqueEntity()
		containerAddItems()
		npcLineQuery()
		containerItemsFitWhere()
		placeMaterial()
		containerItemAt()
		containerItems()
		farmableStage()
		timeOfDay()
		debugText()
		entityQuery()
		findPlatformerPath()
		entityPortrait()
		containerSwapItems()
		playerQuery()
		entityHasCountOfItem()
		resolvePolyCollision()
		pointTileCollision()
		entityExists()
		monsterType()
		magnitude()
		material()
		objectLineQuery()
		sendEntityMessage()
		dayLength()
		containerClose()
		npcQuery()
		breathable()
		mod()
		lightLevel()
		containerPutItemsAt()
	}
	jsize()
	update()
	next()
	pcall()
	pairs()
	rawlen()
	player = {
		itemsWithTag()
		getItemWithParameter()
		worldId()
		essentialItem()
		playCinematic()
		equippedItem()
		giveItem()
		upgradeShip()
		equippedTech()
		inventoryTags()
		removeEssentialItem()
		canStartQuest()
		species()
		enableMission()
		confirm()
		warp()
		setIntroComplete()
		hasItem()
		altHandItem()
		equipTech()
		lounge()
		hasCompletedQuest()
		shipUpgrades()
		recordEvent()
		giveBlueprint()
		serverUuid()
		giveEssentialItem()
		ownShipWorldId()
		startQuest()
		consumeTaggedItem()
		consumeItemWithParameter()
		primaryHandItemTags()
		primaryHandItem()
		consumeItem()
		isLounging()
		playTime()
		altHandItemTags()
		hasQuest()
		introComplete()
		enabledTechs()
		hasCountOfItem()
		makeTechUnavailable()
		availableTechs()
		addBookmark()
		setUniverseFlag()
		hasItemWithParameter()
		enableTech()
		setEquippedItem()
		gender()
		completeMission()
		makeTechAvailable()
		cleanupItems()
		radioMessage()
	}
	type()
	error()
	tostring()
	widget = {
		setSize()
		setData()
		getText()
		getListSelected()
		setFontColor()
		setButtonOverlayImage()
		playSound()
		setText()
		setSelectedOption()
		setVisible()
		blur()
		setImageScale()
		setButtonEnabled()
		setChecked()
		removeListItem()
		getSliderValue()
		setButtonImage()
		setProgress()
		setButtonCheckedImages()
		itemGridItems()
		focus()
		setImage()
		clearListItems()
		setButtonImages()
		setPosition()
		getData()
		getSelectedOption()
		addListItem()
		getPosition()
		setListSelected()
		setOptionVisible()
		getSize()
		getChecked()
		setImageRotation()
		setOptionEnabled()
	}
	pane = {
		dismiss()
		playerEntityId()
		containerEntityId()
	}
	sb = {
		staticRandomI32()
		printJson()
		jsonMerge()
		replaceTags()
		staticRandomDouble()
		logError()
		makeUuid()
		makeRandomSource()
		print()
		makePerlinSource()
		staticRandomDoubleRange()
		staticRandomI32Range()
		nrand()
		logInfo()
		logWarn()
		jsonQuery()
		interpolateSinEase()
		setLogMap()
	}
	script = {
		setUpdateDelta()
		updateDt()
	}
	self = {
	}
	require()
	p()
	_VERSION = "Lua 5.3"
	table = {
		move()
		sort()
		pack()
		remove()
		concat()
		insert()
		unpack()
	}
	init()
	ipairs()
	os = {
		clock()
		difftime()
		time()
	}
	jresize()
	jarray()
	setmetatable()
	assert()
	string = {
		format()
		rep()
		find()
		reverse()
		dump()
		match()
		byte()
		char()
		gmatch()
		packsize()
		pack()
		upper()
		sub()
		len()
		lower()
		unpack()
		gsub()
	}
	print()
	utf8 = {
		char()
		codes()
		len()
		codepoint()
		charpattern = "[
[23:46:45.098] [Info] [IC] [Sort] Time elapsed: 0
[23:46:46.014] [Warn] 	status = {
		resource()
		clearPersistentEffects()
		modifyResource()
		damageTakenSince()
		resourceLocked()
		resetResource()
		setResourceLocked()
		resourceMax()
		statusProperty()
		isResource()
		overConsumeResource()
		resourcePositive()
		resetAllResources()
		setResource()
		addEphemeralEffect()
		giveResource()
		addEphemeralEffects()
		modifyResourcePercentage()
		clearAllPersistentEffects()
		inflictedDamageSince()
		inflictedHitsSince()
		getPersistentEffects()
		addPersistentEffects()
		setStatusProperty()
		clearEphemeralEffects()
		resourcePercentage()
		statPositive()
		activeUniqueStatusEffectSummary()
		removeEphemeralEffect()
		addPersistentEffect()
		resourceNames()
		setPersistentEffects()
		setResourcePercentage()
		stat()
		consumeResource()
	}
	ic = {
		giveBack()
		renameButton()
		itemAmount()
		searchButton()
		quickstack()
		searchBox()
		itemConfig()
		sortFunc()
		stripColor()
		lock()
		getQuality()
		clientVersion = 1
		sort()
		checkStack()
		sort_relative()
		amountEquipped()
		renameThis()
	}
	select()
	config = {
		getParameter()
	}
	jremove()
	jobject()
	getmetatable()
	xpcall()
	math = {
		atan()
		fmod()
		huge = inf
		mininteger = -9223372036854775808
		rad()
		ult()
		acos()
		maxinteger = 9223372036854775807
		random()
		type()
		asin()
		sin()
		cos()
		max()
		pi = 3.1415926535898
		sqrt()
		log()
		ceil()
		tan()
		modf()
		abs()
		deg()
		floor()
		min()
		randomseed()
		tointeger()
		exp()
	}
	coroutine = {
		running()
		create()
		isyieldable()
		yield()
		wrap()
		status()
		resume()
	}
	root = {
		behaviorModule()
		recipesForItem()
		setConfiguration()
		createItem()
		tenantConfig()
		treeStemDirectory()
		itemConfig()
		getConfiguration()
		imageSpaces()
		questConfig()
		nonEmptyRegion()
		getMatchingTenants()
		getConfigurationPath()
		materialPath()
		monsterSkillParameter()
		npcConfig()
		makeCurrentVersionedJson()
		imageSize()
		npcPortrait()
		materialMiningSound()
		loadVersionedJson()
		evalFunction2()
		assetJson()
		generateName()
		materialHealth()
		liquidStatusEffects()
		treeFoliageDirectory()
		hasTech()
		setConfigurationPath()
		createBiome()
		monsterMovementSettings()
		materialFootstepSound()
		itemHasTag()
		techConfig()
		createTreasure()
		itemType()
		projectileGravityMultiplier()
		monsterPortrait()
		techType()
		isTreasurePool()
		evalFunction()
		npcVariant()
		itemTags()
		projectileConfig()
	}
	rawset()
	rawget()
	world = {
		containerConsume()
		time()
		lineCollision()
		setProperty()
		entityDamageTeam()
		containerItemApply()
		spawnItem()
		spawnVehicle()
		debugLine()
		containerOpen()
		getObjectParameter()
		windLevel()
		getProperty()
		entityUniqueId()
		rectCollision()
		objectAt()
		containerSwapItemsNoCombine()
		tileIsOccupied()
		objectSpaces()
		containerSize()
		entityAggressive()
		destroyLiquid()
		entityCanDamage()
		underground()
		npcType()
		platformerPathStart()
		entityPosition()
		entityHealth()
		entityHandItemDescriptor()
		entityDescription()
		isTileProtected()
		containerAvailable()
		debugPoly()
		spawnLiquid()
		containerTakeAt()
		containerConsumeAt()
		gravity()
		liquidAt()
		stagehandType()
		spawnNpc()
		xwrap()
		placeObject()
		objectQuery()
		containerStackItems()
		debugPoint()
		damageTiles()
		collisionBlocksAlongLine()
		loungeableQuery()
		liquidAlongLine()
		spawnMonster()
		rectTileCollision()
		nearestTo()
		containerItemsCanFit()
		containerTakeNumItemsAt()
		damageTileArea()
		monsterQuery()
		entityHandItem()
		threatLevel()
		spawnStagehand()
		polyCollision()
		pointCollision()
		entityVelocity()
		entitySpecies()
		spawnTreasure()
		lineTileCollision()
		polyContains()
		entityGender()
		spawnProjectile()
		day()
		distance()
		entityLineQuery()
		callScriptedEntity()
		isNpc()
		entityType()
		containerTakeAll()
		itemDropQuery()
		placeMod()
		isMonster()
		entityName()
		loungeableOccupied()
		entityMoney()
		findUniqueEntity()
		containerAddItems()
		npcLineQuery()
		containerItemsFitWhere()
		placeMaterial()
		containerItemAt()
		containerItems()
		farmableStage()
		timeOfDay()
		debugText()
		entityQuery()
		findPlatformerPath()
		entityPortrait()
		containerSwapItems()
		playerQuery()
		entityHasCountOfItem()
		resolvePolyCollision()
		pointTileCollision()
		entityExists()
		monsterType()
		magnitude()
		material()
		objectLineQuery()
		sendEntityMessage()
		dayLength()
		containerClose()
		npcQuery()
		breathable()
		mod()
		lightLevel()
		containerPutItemsAt()
	}
	jsize()
	update()
	next()
	pcall()
	pairs()
	rawlen()
	player = {
		itemsWithTag()
		getItemWithParameter()
		worldId()
		essentialItem()
		playCinematic()
		equippedItem()
		giveItem()
		upgradeShip()
		equippedTech()
		inventoryTags()
		removeEssentialItem()
		canStartQuest()
		species()
		enableMission()
		confirm()
		warp()
		setIntroComplete()
		hasItem()
		altHandItem()
		equipTech()
		lounge()
		hasCompletedQuest()
		shipUpgrades()
		recordEvent()
		giveBlueprint()
		serverUuid()
		giveEssentialItem()
		ownShipWorldId()
		startQuest()
		consumeTaggedItem()
		consumeItemWithParameter()
		primaryHandItemTags()
		primaryHandItem()
		consumeItem()
		isLounging()
		playTime()
		altHandItemTags()
		hasQuest()
		introComplete()
		enabledTechs()
		hasCountOfItem()
		makeTechUnavailable()
		availableTechs()
		addBookmark()
		setUniverseFlag()
		hasItemWithParameter()
		enableTech()
		setEquippedItem()
		gender()
		completeMission()
		makeTechAvailable()
		cleanupItems()
		radioMessage()
	}
	type()
	error()
	tostring()
	widget = {
		setSize()
		setData()
		getText()
		getListSelected()
		setFontColor()
		setButtonOverlayImage()
		playSound()
		setText()
		setSelectedOption()
		setVisible()
		blur()
		setImageScale()
		setButtonEnabled()
		setChecked()
		removeListItem()
		getSliderValue()
		setButtonImage()
		setProgress()
		setButtonCheckedImages()
		itemGridItems()
		focus()
		setImage()
		clearListItems()
		setButtonImages()
		setPosition()
		getData()
		getSelectedOption()
		addListItem()
		getPosition()
		setListSelected()
		setOptionVisible()
		getSize()
		getChecked()
		setImageRotation()
		setOptionEnabled()
	}
	pane = {
		dismiss()
		playerEntityId()
		containerEntityId()
	}
	sb = {
		staticRandomI32()
		printJson()
		jsonMerge()
		replaceTags()
		staticRandomDouble()
		logError()
		makeUuid()
		makeRandomSource()
		print()
		makePerlinSource()
		staticRandomDoubleRange()
		staticRandomI32Range()
		nrand()
		logInfo()
		logWarn()
		jsonQuery()
		interpolateSinEase()
		setLogMap()
	}
	script = {
		setUpdateDelta()
		updateDt()
	}
	self = {
	}
	require()
	p()
	_VERSION = "Lua 5.3"
	table = {
		move()
		sort()
		pack()
		remove()
		concat()
		insert()
		unpack()
	}
	init()
	ipairs()
	os = {
		clock()
		difftime()
		time()
	}
	jresize()
	jarray()
	setmetatable()
	assert()
	string = {
		format()
		rep()
		find()
		reverse()
		dump()
		match()
		byte()
		char()
		gmatch()
		packsize()
		pack()
		upper()
		sub()
		len()
		lower()
		unpack()
		gsub()
	}
	print()
	utf8 = {
		char()
		codes()
		len()
		codepoint()
		charpattern = "[
[23:46:53.438] [Info] [IC] [Sort] Time elapsed: 0.009
[23:46:56.202] [Info] [IC] [Sort] Time elapsed: 0.007
[23:47:04.571] [Info] UniverseServer: Loading celestial world -549421120:-174071947:-77840190:8
[23:47:04.776] [Info] UniverseServer: Warping player 1 to CelestialWorld:-549421120:-174071947:-77840190:8=65960b76dbc4345d6a78ca55b02f8224
[23:47:04.810] [Info] Client received world stop packet, leaving: Removed
[23:47:05.014] [Info] UniverseServer: Stopping idle world ClientShipWorld:40d0c64bbadbfcac62e62a636f4f2308
[23:47:37.987] [Warn] 	next()
	table = {
		unpack()
		sort()
		insert()
		concat()
		move()
		remove()
		pack()
	}
	getmetatable()
	error()
	string = {
		gmatch()
		dump()
		lower()
		rep()
		len()
		upper()
		pack()
		sub()
		find()
		char()
		unpack()
		packsize()
		match()
		reverse()
		byte()
		gsub()
		format()
	}
	root = {
		itemConfig()
		imageSpaces()
		materialFootstepSound()
		loadVersionedJson()
		monsterMovementSettings()
		npcConfig()
		recipesForItem()
		materialPath()
		makeCurrentVersionedJson()
		setConfiguration()
		evalFunction2()
		createBiome()
		projectileGravityMultiplier()
		createItem()
		itemHasTag()
		techType()
		hasTech()
		createTreasure()
		behaviorModule()
		evalFunction()
		getMatchingTenants()
		generateName()
		imageSize()
		questConfig()
		materialMiningSound()
		assetJson()
		treeStemDirectory()
		tenantConfig()
		isTreasurePool()
		npcVariant()
		getConfigurationPath()
		materialHealth()
		getConfiguration()
		monsterPortrait()
		monsterSkillParameter()
		itemType()
		setConfigurationPath()
		nonEmptyRegion()
		itemTags()
		npcPortrait()
		techConfig()
		treeFoliageDirectory()
		liquidStatusEffects()
		projectileConfig()
	}
	p()
	jresize()
	jremove()
	rawget()
	ipairs()
	rawequal()
	tonumber()
	_VERSION = "Lua 5.3"
	self = {
	}
	config = {
		getParameter()
	}
	widget = {
		clearListItems()
		setImageRotation()
		setVisible()
		setPosition()
		setData()
		blur()
		getPosition()
		getData()
		setProgress()
		setOptionEnabled()
		getSize()
		getSelectedOption()
		setChecked()
		setButtonEnabled()
		addListItem()
		itemGridItems()
		removeListItem()
		getSliderValue()
		playSound()
		setOptionVisible()
		setImageScale()
		setButtonImage()
		getListSelected()
		setListSelected()
		focus()
		setButtonImages()
		setButtonOverlayImage()
		setButtonCheckedImages()
		setSelectedOption()
		setSize()
		getChecked()
		getText()
		setText()
		setImage()
		setFontColor()
	}
	setmetatable()
	utf8 = {
		charpattern = "[
[23:47:42.966] [Warn] 	next()
	table = {
		unpack()
		sort()
		insert()
		concat()
		move()
		remove()
		pack()
	}
	getmetatable()
	error()
	string = {
		gmatch()
		dump()
		lower()
		rep()
		len()
		upper()
		pack()
		sub()
		find()
		char()
		unpack()
		packsize()
		match()
		reverse()
		byte()
		gsub()
		format()
	}
	root = {
		itemConfig()
		imageSpaces()
		materialFootstepSound()
		loadVersionedJson()
		monsterMovementSettings()
		npcConfig()
		recipesForItem()
		materialPath()
		makeCurrentVersionedJson()
		setConfiguration()
		evalFunction2()
		createBiome()
		projectileGravityMultiplier()
		createItem()
		itemHasTag()
		techType()
		hasTech()
		createTreasure()
		behaviorModule()
		evalFunction()
		getMatchingTenants()
		generateName()
		imageSize()
		questConfig()
		materialMiningSound()
		assetJson()
		treeStemDirectory()
		tenantConfig()
		isTreasurePool()
		npcVariant()
		getConfigurationPath()
		materialHealth()
		getConfiguration()
		monsterPortrait()
		monsterSkillParameter()
		itemType()
		setConfigurationPath()
		nonEmptyRegion()
		itemTags()
		npcPortrait()
		techConfig()
		treeFoliageDirectory()
		liquidStatusEffects()
		projectileConfig()
	}
	p()
	jresize()
	jremove()
	rawget()
	ipairs()
	rawequal()
	tonumber()
	_VERSION = "Lua 5.3"
	self = {
	}
	config = {
		getParameter()
	}
	widget = {
		clearListItems()
		setImageRotation()
		setVisible()
		setPosition()
		setData()
		blur()
		getPosition()
		getData()
		setProgress()
		setOptionEnabled()
		getSize()
		getSelectedOption()
		setChecked()
		setButtonEnabled()
		addListItem()
		itemGridItems()
		removeListItem()
		getSliderValue()
		playSound()
		setOptionVisible()
		setImageScale()
		setButtonImage()
		getListSelected()
		setListSelected()
		focus()
		setButtonImages()
		setButtonOverlayImage()
		setButtonCheckedImages()
		setSelectedOption()
		setSize()
		getChecked()
		getText()
		setText()
		setImage()
		setFontColor()
	}
	setmetatable()
	utf8 = {
		charpattern = "[
[23:47:44.284] [Warn] 	next()
	table = {
		unpack()
		sort()
		insert()
		concat()
		move()
		remove()
		pack()
	}
	getmetatable()
	error()
	string = {
		gmatch()
		dump()
		lower()
		rep()
		len()
		upper()
		pack()
		sub()
		find()
		char()
		unpack()
		packsize()
		match()
		reverse()
		byte()
		gsub()
		format()
	}
	root = {
		itemConfig()
		imageSpaces()
		materialFootstepSound()
		loadVersionedJson()
		monsterMovementSettings()
		npcConfig()
		recipesForItem()
		materialPath()
		makeCurrentVersionedJson()
		setConfiguration()
		evalFunction2()
		createBiome()
		projectileGravityMultiplier()
		createItem()
		itemHasTag()
		techType()
		hasTech()
		createTreasure()
		behaviorModule()
		evalFunction()
		getMatchingTenants()
		generateName()
		imageSize()
		questConfig()
		materialMiningSound()
		assetJson()
		treeStemDirectory()
		tenantConfig()
		isTreasurePool()
		npcVariant()
		getConfigurationPath()
		materialHealth()
		getConfiguration()
		monsterPortrait()
		monsterSkillParameter()
		itemType()
		setConfigurationPath()
		nonEmptyRegion()
		itemTags()
		npcPortrait()
		techConfig()
		treeFoliageDirectory()
		liquidStatusEffects()
		projectileConfig()
	}
	p()
	jresize()
	jremove()
	rawget()
	ipairs()
	rawequal()
	tonumber()
	_VERSION = "Lua 5.3"
	self = {
	}
	config = {
		getParameter()
	}
	widget = {
		clearListItems()
		setImageRotation()
		setVisible()
		setPosition()
		setData()
		blur()
		getPosition()
		getData()
		setProgress()
		setOptionEnabled()
		getSize()
		getSelectedOption()
		setChecked()
		setButtonEnabled()
		addListItem()
		itemGridItems()
		removeListItem()
		getSliderValue()
		playSound()
		setOptionVisible()
		setImageScale()
		setButtonImage()
		getListSelected()
		setListSelected()
		focus()
		setButtonImages()
		setButtonOverlayImage()
		setButtonCheckedImages()
		setSelectedOption()
		setSize()
		getChecked()
		getText()
		setText()
		setImage()
		setFontColor()
	}
	setmetatable()
	utf8 = {
		charpattern = "[
[23:47:49.416] [Warn] 	next()
	table = {
		unpack()
		sort()
		insert()
		concat()
		move()
		remove()
		pack()
	}
	getmetatable()
	error()
	string = {
		gmatch()
		dump()
		lower()
		rep()
		len()
		upper()
		pack()
		sub()
		find()
		char()
		unpack()
		packsize()
		match()
		reverse()
		byte()
		gsub()
		format()
	}
	root = {
		itemConfig()
		imageSpaces()
		materialFootstepSound()
		loadVersionedJson()
		monsterMovementSettings()
		npcConfig()
		recipesForItem()
		materialPath()
		makeCurrentVersionedJson()
		setConfiguration()
		evalFunction2()
		createBiome()
		projectileGravityMultiplier()
		createItem()
		itemHasTag()
		techType()
		hasTech()
		createTreasure()
		behaviorModule()
		evalFunction()
		getMatchingTenants()
		generateName()
		imageSize()
		questConfig()
		materialMiningSound()
		assetJson()
		treeStemDirectory()
		tenantConfig()
		isTreasurePool()
		npcVariant()
		getConfigurationPath()
		materialHealth()
		getConfiguration()
		monsterPortrait()
		monsterSkillParameter()
		itemType()
		setConfigurationPath()
		nonEmptyRegion()
		itemTags()
		npcPortrait()
		techConfig()
		treeFoliageDirectory()
		liquidStatusEffects()
		projectileConfig()
	}
	p()
	jresize()
	jremove()
	rawget()
	ipairs()
	rawequal()
	tonumber()
	_VERSION = "Lua 5.3"
	self = {
	}
	config = {
		getParameter()
	}
	widget = {
		clearListItems()
		setImageRotation()
		setVisible()
		setPosition()
		setData()
		blur()
		getPosition()
		getData()
		setProgress()
		setOptionEnabled()
		getSize()
		getSelectedOption()
		setChecked()
		setButtonEnabled()
		addListItem()
		itemGridItems()
		removeListItem()
		getSliderValue()
		playSound()
		setOptionVisible()
		setImageScale()
		setButtonImage()
		getListSelected()
		setListSelected()
		focus()
		setButtonImages()
		setButtonOverlayImage()
		setButtonCheckedImages()
		setSelectedOption()
		setSize()
		getChecked()
		getText()
		setText()
		setImage()
		setFontColor()
	}
	setmetatable()
	utf8 = {
		charpattern = "[
[23:47:51.665] [Warn] 	next()
	table = {
		unpack()
		sort()
		insert()
		concat()
		move()
		remove()
		pack()
	}
	getmetatable()
	error()
	string = {
		gmatch()
		dump()
		lower()
		rep()
		len()
		upper()
		pack()
		sub()
		find()
		char()
		unpack()
		packsize()
		match()
		reverse()
		byte()
		gsub()
		format()
	}
	root = {
		itemConfig()
		imageSpaces()
		materialFootstepSound()
		loadVersionedJson()
		monsterMovementSettings()
		npcConfig()
		recipesForItem()
		materialPath()
		makeCurrentVersionedJson()
		setConfiguration()
		evalFunction2()
		createBiome()
		projectileGravityMultiplier()
		createItem()
		itemHasTag()
		techType()
		hasTech()
		createTreasure()
		behaviorModule()
		evalFunction()
		getMatchingTenants()
		generateName()
		imageSize()
		questConfig()
		materialMiningSound()
		assetJson()
		treeStemDirectory()
		tenantConfig()
		isTreasurePool()
		npcVariant()
		getConfigurationPath()
		materialHealth()
		getConfiguration()
		monsterPortrait()
		monsterSkillParameter()
		itemType()
		setConfigurationPath()
		nonEmptyRegion()
		itemTags()
		npcPortrait()
		techConfig()
		treeFoliageDirectory()
		liquidStatusEffects()
		projectileConfig()
	}
	p()
	jresize()
	jremove()
	rawget()
	ipairs()
	rawequal()
	tonumber()
	_VERSION = "Lua 5.3"
	self = {
	}
	config = {
		getParameter()
	}
	widget = {
		clearListItems()
		setImageRotation()
		setVisible()
		setPosition()
		setData()
		blur()
		getPosition()
		getData()
		setProgress()
		setOptionEnabled()
		getSize()
		getSelectedOption()
		setChecked()
		setButtonEnabled()
		addListItem()
		itemGridItems()
		removeListItem()
		getSliderValue()
		playSound()
		setOptionVisible()
		setImageScale()
		setButtonImage()
		getListSelected()
		setListSelected()
		focus()
		setButtonImages()
		setButtonOverlayImage()
		setButtonCheckedImages()
		setSelectedOption()
		setSize()
		getChecked()
		getText()
		setText()
		setImage()
		setFontColor()
	}
	setmetatable()
	utf8 = {
		charpattern = "[
[23:47:53.649] [Warn] 	next()
	table = {
		unpack()
		sort()
		insert()
		concat()
		move()
		remove()
		pack()
	}
	getmetatable()
	error()
	string = {
		gmatch()
		dump()
		lower()
		rep()
		len()
		upper()
		pack()
		sub()
		find()
		char()
		unpack()
		packsize()
		match()
		reverse()
		byte()
		gsub()
		format()
	}
	root = {
		itemConfig()
		imageSpaces()
		materialFootstepSound()
		loadVersionedJson()
		monsterMovementSettings()
		npcConfig()
		recipesForItem()
		materialPath()
		makeCurrentVersionedJson()
		setConfiguration()
		evalFunction2()
		createBiome()
		projectileGravityMultiplier()
		createItem()
		itemHasTag()
		techType()
		hasTech()
		createTreasure()
		behaviorModule()
		evalFunction()
		getMatchingTenants()
		generateName()
		imageSize()
		questConfig()
		materialMiningSound()
		assetJson()
		treeStemDirectory()
		tenantConfig()
		isTreasurePool()
		npcVariant()
		getConfigurationPath()
		materialHealth()
		getConfiguration()
		monsterPortrait()
		monsterSkillParameter()
		itemType()
		setConfigurationPath()
		nonEmptyRegion()
		itemTags()
		npcPortrait()
		techConfig()
		treeFoliageDirectory()
		liquidStatusEffects()
		projectileConfig()
	}
	p()
	jresize()
	jremove()
	rawget()
	ipairs()
	rawequal()
	tonumber()
	_VERSION = "Lua 5.3"
	self = {
	}
	config = {
		getParameter()
	}
	widget = {
		clearListItems()
		setImageRotation()
		setVisible()
		setPosition()
		setData()
		blur()
		getPosition()
		getData()
		setProgress()
		setOptionEnabled()
		getSize()
		getSelectedOption()
		setChecked()
		setButtonEnabled()
		addListItem()
		itemGridItems()
		removeListItem()
		getSliderValue()
		playSound()
		setOptionVisible()
		setImageScale()
		setButtonImage()
		getListSelected()
		setListSelected()
		focus()
		setButtonImages()
		setButtonOverlayImage()
		setButtonCheckedImages()
		setSelectedOption()
		setSize()
		getChecked()
		getText()
		setText()
		setImage()
		setFontColor()
	}
	setmetatable()
	utf8 = {
		charpattern = "[
[23:47:58.533] [Warn] 	next()
	table = {
		unpack()
		sort()
		insert()
		concat()
		move()
		remove()
		pack()
	}
	getmetatable()
	error()
	string = {
		gmatch()
		dump()
		lower()
		rep()
		len()
		upper()
		pack()
		sub()
		find()
		char()
		unpack()
		packsize()
		match()
		reverse()
		byte()
		gsub()
		format()
	}
	root = {
		itemConfig()
		imageSpaces()
		materialFootstepSound()
		loadVersionedJson()
		monsterMovementSettings()
		npcConfig()
		recipesForItem()
		materialPath()
		makeCurrentVersionedJson()
		setConfiguration()
		evalFunction2()
		createBiome()
		projectileGravityMultiplier()
		createItem()
		itemHasTag()
		techType()
		hasTech()
		createTreasure()
		behaviorModule()
		evalFunction()
		getMatchingTenants()
		generateName()
		imageSize()
		questConfig()
		materialMiningSound()
		assetJson()
		treeStemDirectory()
		tenantConfig()
		isTreasurePool()
		npcVariant()
		getConfigurationPath()
		materialHealth()
		getConfiguration()
		monsterPortrait()
		monsterSkillParameter()
		itemType()
		setConfigurationPath()
		nonEmptyRegion()
		itemTags()
		npcPortrait()
		techConfig()
		treeFoliageDirectory()
		liquidStatusEffects()
		projectileConfig()
	}
	p()
	jresize()
	jremove()
	rawget()
	ipairs()
	rawequal()
	tonumber()
	_VERSION = "Lua 5.3"
	self = {
	}
	config = {
		getParameter()
	}
	widget = {
		clearListItems()
		setImageRotation()
		setVisible()
		setPosition()
		setData()
		blur()
		getPosition()
		getData()
		setProgress()
		setOptionEnabled()
		getSize()
		getSelectedOption()
		setChecked()
		setButtonEnabled()
		addListItem()
		itemGridItems()
		removeListItem()
		getSliderValue()
		playSound()
		setOptionVisible()
		setImageScale()
		setButtonImage()
		getListSelected()
		setListSelected()
		focus()
		setButtonImages()
		setButtonOverlayImage()
		setButtonCheckedImages()
		setSelectedOption()
		setSize()
		getChecked()
		getText()
		setText()
		setImage()
		setFontColor()
	}
	setmetatable()
	utf8 = {
		charpattern = "[
[23:48:02.151] [Warn] 	next()
	table = {
		unpack()
		sort()
		insert()
		concat()
		move()
		remove()
		pack()
	}
	getmetatable()
	error()
	string = {
		gmatch()
		dump()
		lower()
		rep()
		len()
		upper()
		pack()
		sub()
		find()
		char()
		unpack()
		packsize()
		match()
		reverse()
		byte()
		gsub()
		format()
	}
	root = {
		itemConfig()
		imageSpaces()
		materialFootstepSound()
		loadVersionedJson()
		monsterMovementSettings()
		npcConfig()
		recipesForItem()
		materialPath()
		makeCurrentVersionedJson()
		setConfiguration()
		evalFunction2()
		createBiome()
		projectileGravityMultiplier()
		createItem()
		itemHasTag()
		techType()
		hasTech()
		createTreasure()
		behaviorModule()
		evalFunction()
		getMatchingTenants()
		generateName()
		imageSize()
		questConfig()
		materialMiningSound()
		assetJson()
		treeStemDirectory()
		tenantConfig()
		isTreasurePool()
		npcVariant()
		getConfigurationPath()
		materialHealth()
		getConfiguration()
		monsterPortrait()
		monsterSkillParameter()
		itemType()
		setConfigurationPath()
		nonEmptyRegion()
		itemTags()
		npcPortrait()
		techConfig()
		treeFoliageDirectory()
		liquidStatusEffects()
		projectileConfig()
	}
	p()
	jresize()
	jremove()
	rawget()
	ipairs()
	rawequal()
	tonumber()
	_VERSION = "Lua 5.3"
	self = {
	}
	config = {
		getParameter()
	}
	widget = {
		clearListItems()
		setImageRotation()
		setVisible()
		setPosition()
		setData()
		blur()
		getPosition()
		getData()
		setProgress()
		setOptionEnabled()
		getSize()
		getSelectedOption()
		setChecked()
		setButtonEnabled()
		addListItem()
		itemGridItems()
		removeListItem()
		getSliderValue()
		playSound()
		setOptionVisible()
		setImageScale()
		setButtonImage()
		getListSelected()
		setListSelected()
		focus()
		setButtonImages()
		setButtonOverlayImage()
		setButtonCheckedImages()
		setSelectedOption()
		setSize()
		getChecked()
		getText()
		setText()
		setImage()
		setFontColor()
	}
	setmetatable()
	utf8 = {
		charpattern = "[
[23:48:08.902] [Warn] 	next()
	table = {
		unpack()
		sort()
		insert()
		concat()
		move()
		remove()
		pack()
	}
	getmetatable()
	error()
	string = {
		gmatch()
		dump()
		lower()
		rep()
		len()
		upper()
		pack()
		sub()
		find()
		char()
		unpack()
		packsize()
		match()
		reverse()
		byte()
		gsub()
		format()
	}
	root = {
		itemConfig()
		imageSpaces()
		materialFootstepSound()
		loadVersionedJson()
		monsterMovementSettings()
		npcConfig()
		recipesForItem()
		materialPath()
		makeCurrentVersionedJson()
		setConfiguration()
		evalFunction2()
		createBiome()
		projectileGravityMultiplier()
		createItem()
		itemHasTag()
		techType()
		hasTech()
		createTreasure()
		behaviorModule()
		evalFunction()
		getMatchingTenants()
		generateName()
		imageSize()
		questConfig()
		materialMiningSound()
		assetJson()
		treeStemDirectory()
		tenantConfig()
		isTreasurePool()
		npcVariant()
		getConfigurationPath()
		materialHealth()
		getConfiguration()
		monsterPortrait()
		monsterSkillParameter()
		itemType()
		setConfigurationPath()
		nonEmptyRegion()
		itemTags()
		npcPortrait()
		techConfig()
		treeFoliageDirectory()
		liquidStatusEffects()
		projectileConfig()
	}
	p()
	jresize()
	jremove()
	rawget()
	ipairs()
	rawequal()
	tonumber()
	_VERSION = "Lua 5.3"
	self = {
	}
	config = {
		getParameter()
	}
	widget = {
		clearListItems()
		setImageRotation()
		setVisible()
		setPosition()
		setData()
		blur()
		getPosition()
		getData()
		setProgress()
		setOptionEnabled()
		getSize()
		getSelectedOption()
		setChecked()
		setButtonEnabled()
		addListItem()
		itemGridItems()
		removeListItem()
		getSliderValue()
		playSound()
		setOptionVisible()
		setImageScale()
		setButtonImage()
		getListSelected()
		setListSelected()
		focus()
		setButtonImages()
		setButtonOverlayImage()
		setButtonCheckedImages()
		setSelectedOption()
		setSize()
		getChecked()
		getText()
		setText()
		setImage()
		setFontColor()
	}
	setmetatable()
	utf8 = {
		charpattern = "[
[23:48:39.217] [Warn] 	next()
	table = {
		unpack()
		sort()
		insert()
		concat()
		move()
		remove()
		pack()
	}
	getmetatable()
	error()
	string = {
		gmatch()
		dump()
		lower()
		rep()
		len()
		upper()
		pack()
		sub()
		find()
		char()
		unpack()
		packsize()
		match()
		reverse()
		byte()
		gsub()
		format()
	}
	root = {
		itemConfig()
		imageSpaces()
		materialFootstepSound()
		loadVersionedJson()
		monsterMovementSettings()
		npcConfig()
		recipesForItem()
		materialPath()
		makeCurrentVersionedJson()
		setConfiguration()
		evalFunction2()
		createBiome()
		projectileGravityMultiplier()
		createItem()
		itemHasTag()
		techType()
		hasTech()
		createTreasure()
		behaviorModule()
		evalFunction()
		getMatchingTenants()
		generateName()
		imageSize()
		questConfig()
		materialMiningSound()
		assetJson()
		treeStemDirectory()
		tenantConfig()
		isTreasurePool()
		npcVariant()
		getConfigurationPath()
		materialHealth()
		getConfiguration()
		monsterPortrait()
		monsterSkillParameter()
		itemType()
		setConfigurationPath()
		nonEmptyRegion()
		itemTags()
		npcPortrait()
		techConfig()
		treeFoliageDirectory()
		liquidStatusEffects()
		projectileConfig()
	}
	p()
	jresize()
	jremove()
	rawget()
	ipairs()
	rawequal()
	tonumber()
	_VERSION = "Lua 5.3"
	self = {
	}
	config = {
		getParameter()
	}
	widget = {
		clearListItems()
		setImageRotation()
		setVisible()
		setPosition()
		setData()
		blur()
		getPosition()
		getData()
		setProgress()
		setOptionEnabled()
		getSize()
		getSelectedOption()
		setChecked()
		setButtonEnabled()
		addListItem()
		itemGridItems()
		removeListItem()
		getSliderValue()
		playSound()
		setOptionVisible()
		setImageScale()
		setButtonImage()
		getListSelected()
		setListSelected()
		focus()
		setButtonImages()
		setButtonOverlayImage()
		setButtonCheckedImages()
		setSelectedOption()
		setSize()
		getChecked()
		getText()
		setText()
		setImage()
		setFontColor()
	}
	setmetatable()
	utf8 = {
		charpattern = "[
[23:48:55.301] [Warn] 	next()
	table = {
		unpack()
		sort()
		insert()
		concat()
		move()
		remove()
		pack()
	}
	getmetatable()
	error()
	string = {
		gmatch()
		dump()
		lower()
		rep()
		len()
		upper()
		pack()
		sub()
		find()
		char()
		unpack()
		packsize()
		match()
		reverse()
		byte()
		gsub()
		format()
	}
	root = {
		itemConfig()
		imageSpaces()
		materialFootstepSound()
		loadVersionedJson()
		monsterMovementSettings()
		npcConfig()
		recipesForItem()
		materialPath()
		makeCurrentVersionedJson()
		setConfiguration()
		evalFunction2()
		createBiome()
		projectileGravityMultiplier()
		createItem()
		itemHasTag()
		techType()
		hasTech()
		createTreasure()
		behaviorModule()
		evalFunction()
		getMatchingTenants()
		generateName()
		imageSize()
		questConfig()
		materialMiningSound()
		assetJson()
		treeStemDirectory()
		tenantConfig()
		isTreasurePool()
		npcVariant()
		getConfigurationPath()
		materialHealth()
		getConfiguration()
		monsterPortrait()
		monsterSkillParameter()
		itemType()
		setConfigurationPath()
		nonEmptyRegion()
		itemTags()
		npcPortrait()
		techConfig()
		treeFoliageDirectory()
		liquidStatusEffects()
		projectileConfig()
	}
	p()
	jresize()
	jremove()
	rawget()
	ipairs()
	rawequal()
	tonumber()
	_VERSION = "Lua 5.3"
	self = {
	}
	config = {
		getParameter()
	}
	widget = {
		clearListItems()
		setImageRotation()
		setVisible()
		setPosition()
		setData()
		blur()
		getPosition()
		getData()
		setProgress()
		setOptionEnabled()
		getSize()
		getSelectedOption()
		setChecked()
		setButtonEnabled()
		addListItem()
		itemGridItems()
		removeListItem()
		getSliderValue()
		playSound()
		setOptionVisible()
		setImageScale()
		setButtonImage()
		getListSelected()
		setListSelected()
		focus()
		setButtonImages()
		setButtonOverlayImage()
		setButtonCheckedImages()
		setSelectedOption()
		setSize()
		getChecked()
		getText()
		setText()
		setImage()
		setFontColor()
	}
	setmetatable()
	utf8 = {
		charpattern = "[
[23:49:27.935] [Warn] 	next()
	table = {
		unpack()
		sort()
		insert()
		concat()
		move()
		remove()
		pack()
	}
	getmetatable()
	error()
	string = {
		gmatch()
		dump()
		lower()
		rep()
		len()
		upper()
		pack()
		sub()
		find()
		char()
		unpack()
		packsize()
		match()
		reverse()
		byte()
		gsub()
		format()
	}
	root = {
		itemConfig()
		imageSpaces()
		materialFootstepSound()
		loadVersionedJson()
		monsterMovementSettings()
		npcConfig()
		recipesForItem()
		materialPath()
		makeCurrentVersionedJson()
		setConfiguration()
		evalFunction2()
		createBiome()
		projectileGravityMultiplier()
		createItem()
		itemHasTag()
		techType()
		hasTech()
		createTreasure()
		behaviorModule()
		evalFunction()
		getMatchingTenants()
		generateName()
		imageSize()
		questConfig()
		materialMiningSound()
		assetJson()
		treeStemDirectory()
		tenantConfig()
		isTreasurePool()
		npcVariant()
		getConfigurationPath()
		materialHealth()
		getConfiguration()
		monsterPortrait()
		monsterSkillParameter()
		itemType()
		setConfigurationPath()
		nonEmptyRegion()
		itemTags()
		npcPortrait()
		techConfig()
		treeFoliageDirectory()
		liquidStatusEffects()
		projectileConfig()
	}
	p()
	jresize()
	jremove()
	rawget()
	ipairs()
	rawequal()
	tonumber()
	_VERSION = "Lua 5.3"
	self = {
	}
	config = {
		getParameter()
	}
	widget = {
		clearListItems()
		setImageRotation()
		setVisible()
		setPosition()
		setData()
		blur()
		getPosition()
		getData()
		setProgress()
		setOptionEnabled()
		getSize()
		getSelectedOption()
		setChecked()
		setButtonEnabled()
		addListItem()
		itemGridItems()
		removeListItem()
		getSliderValue()
		playSound()
		setOptionVisible()
		setImageScale()
		setButtonImage()
		getListSelected()
		setListSelected()
		focus()
		setButtonImages()
		setButtonOverlayImage()
		setButtonCheckedImages()
		setSelectedOption()
		setSize()
		getChecked()
		getText()
		setText()
		setImage()
		setFontColor()
	}
	setmetatable()
	utf8 = {
		charpattern = "[
[23:50:19.911] [Warn] 	next()
	table = {
		unpack()
		sort()
		insert()
		concat()
		move()
		remove()
		pack()
	}
	getmetatable()
	error()
	string = {
		gmatch()
		dump()
		lower()
		rep()
		len()
		upper()
		pack()
		sub()
		find()
		char()
		unpack()
		packsize()
		match()
		reverse()
		byte()
		gsub()
		format()
	}
	root = {
		itemConfig()
		imageSpaces()
		materialFootstepSound()
		loadVersionedJson()
		monsterMovementSettings()
		npcConfig()
		recipesForItem()
		materialPath()
		makeCurrentVersionedJson()
		setConfiguration()
		evalFunction2()
		createBiome()
		projectileGravityMultiplier()
		createItem()
		itemHasTag()
		techType()
		hasTech()
		createTreasure()
		behaviorModule()
		evalFunction()
		getMatchingTenants()
		generateName()
		imageSize()
		questConfig()
		materialMiningSound()
		assetJson()
		treeStemDirectory()
		tenantConfig()
		isTreasurePool()
		npcVariant()
		getConfigurationPath()
		materialHealth()
		getConfiguration()
		monsterPortrait()
		monsterSkillParameter()
		itemType()
		setConfigurationPath()
		nonEmptyRegion()
		itemTags()
		npcPortrait()
		techConfig()
		treeFoliageDirectory()
		liquidStatusEffects()
		projectileConfig()
	}
	p()
	jresize()
	jremove()
	rawget()
	ipairs()
	rawequal()
	tonumber()
	_VERSION = "Lua 5.3"
	self = {
	}
	config = {
		getParameter()
	}
	widget = {
		clearListItems()
		setImageRotation()
		setVisible()
		setPosition()
		setData()
		blur()
		getPosition()
		getData()
		setProgress()
		setOptionEnabled()
		getSize()
		getSelectedOption()
		setChecked()
		setButtonEnabled()
		addListItem()
		itemGridItems()
		removeListItem()
		getSliderValue()
		playSound()
		setOptionVisible()
		setImageScale()
		setButtonImage()
		getListSelected()
		setListSelected()
		focus()
		setButtonImages()
		setButtonOverlayImage()
		setButtonCheckedImages()
		setSelectedOption()
		setSize()
		getChecked()
		getText()
		setText()
		setImage()
		setFontColor()
	}
	setmetatable()
	utf8 = {
		charpattern = "[
[23:52:31.136] [Warn] 	next()
	table = {
		unpack()
		sort()
		insert()
		concat()
		move()
		remove()
		pack()
	}
	getmetatable()
	error()
	string = {
		gmatch()
		dump()
		lower()
		rep()
		len()
		upper()
		pack()
		sub()
		find()
		char()
		unpack()
		packsize()
		match()
		reverse()
		byte()
		gsub()
		format()
	}
	root = {
		itemConfig()
		imageSpaces()
		materialFootstepSound()
		loadVersionedJson()
		monsterMovementSettings()
		npcConfig()
		recipesForItem()
		materialPath()
		makeCurrentVersionedJson()
		setConfiguration()
		evalFunction2()
		createBiome()
		projectileGravityMultiplier()
		createItem()
		itemHasTag()
		techType()
		hasTech()
		createTreasure()
		behaviorModule()
		evalFunction()
		getMatchingTenants()
		generateName()
		imageSize()
		questConfig()
		materialMiningSound()
		assetJson()
		treeStemDirectory()
		tenantConfig()
		isTreasurePool()
		npcVariant()
		getConfigurationPath()
		materialHealth()
		getConfiguration()
		monsterPortrait()
		monsterSkillParameter()
		itemType()
		setConfigurationPath()
		nonEmptyRegion()
		itemTags()
		npcPortrait()
		techConfig()
		treeFoliageDirectory()
		liquidStatusEffects()
		projectileConfig()
	}
	p()
	jresize()
	jremove()
	rawget()
	ipairs()
	rawequal()
	tonumber()
	_VERSION = "Lua 5.3"
	self = {
	}
	config = {
		getParameter()
	}
	widget = {
		clearListItems()
		setImageRotation()
		setVisible()
		setPosition()
		setData()
		blur()
		getPosition()
		getData()
		setProgress()
		setOptionEnabled()
		getSize()
		getSelectedOption()
		setChecked()
		setButtonEnabled()
		addListItem()
		itemGridItems()
		removeListItem()
		getSliderValue()
		playSound()
		setOptionVisible()
		setImageScale()
		setButtonImage()
		getListSelected()
		setListSelected()
		focus()
		setButtonImages()
		setButtonOverlayImage()
		setButtonCheckedImages()
		setSelectedOption()
		setSize()
		getChecked()
		getText()
		setText()
		setImage()
		setFontColor()
	}
	setmetatable()
	utf8 = {
		charpattern = "[
[23:52:42.279] [Warn] 	next()
	table = {
		unpack()
		sort()
		insert()
		concat()
		move()
		remove()
		pack()
	}
	getmetatable()
	error()
	string = {
		gmatch()
		dump()
		lower()
		rep()
		len()
		upper()
		pack()
		sub()
		find()
		char()
		unpack()
		packsize()
		match()
		reverse()
		byte()
		gsub()
		format()
	}
	root = {
		itemConfig()
		imageSpaces()
		materialFootstepSound()
		loadVersionedJson()
		monsterMovementSettings()
		npcConfig()
		recipesForItem()
		materialPath()
		makeCurrentVersionedJson()
		setConfiguration()
		evalFunction2()
		createBiome()
		projectileGravityMultiplier()
		createItem()
		itemHasTag()
		techType()
		hasTech()
		createTreasure()
		behaviorModule()
		evalFunction()
		getMatchingTenants()
		generateName()
		imageSize()
		questConfig()
		materialMiningSound()
		assetJson()
		treeStemDirectory()
		tenantConfig()
		isTreasurePool()
		npcVariant()
		getConfigurationPath()
		materialHealth()
		getConfiguration()
		monsterPortrait()
		monsterSkillParameter()
		itemType()
		setConfigurationPath()
		nonEmptyRegion()
		itemTags()
		npcPortrait()
		techConfig()
		treeFoliageDirectory()
		liquidStatusEffects()
		projectileConfig()
	}
	p()
	jresize()
	jremove()
	rawget()
	ipairs()
	rawequal()
	tonumber()
	_VERSION = "Lua 5.3"
	self = {
	}
	config = {
		getParameter()
	}
	widget = {
		clearListItems()
		setImageRotation()
		setVisible()
		setPosition()
		setData()
		blur()
		getPosition()
		getData()
		setProgress()
		setOptionEnabled()
		getSize()
		getSelectedOption()
		setChecked()
		setButtonEnabled()
		addListItem()
		itemGridItems()
		removeListItem()
		getSliderValue()
		playSound()
		setOptionVisible()
		setImageScale()
		setButtonImage()
		getListSelected()
		setListSelected()
		focus()
		setButtonImages()
		setButtonOverlayImage()
		setButtonCheckedImages()
		setSelectedOption()
		setSize()
		getChecked()
		getText()
		setText()
		setImage()
		setFontColor()
	}
	setmetatable()
	utf8 = {
		charpattern = "[
[23:52:46.558] [Warn] 	next()
	table = {
		unpack()
		sort()
		insert()
		concat()
		move()
		remove()
		pack()
	}
	getmetatable()
	error()
	string = {
		gmatch()
		dump()
		lower()
		rep()
		len()
		upper()
		pack()
		sub()
		find()
		char()
		unpack()
		packsize()
		match()
		reverse()
		byte()
		gsub()
		format()
	}
	root = {
		itemConfig()
		imageSpaces()
		materialFootstepSound()
		loadVersionedJson()
		monsterMovementSettings()
		npcConfig()
		recipesForItem()
		materialPath()
		makeCurrentVersionedJson()
		setConfiguration()
		evalFunction2()
		createBiome()
		projectileGravityMultiplier()
		createItem()
		itemHasTag()
		techType()
		hasTech()
		createTreasure()
		behaviorModule()
		evalFunction()
		getMatchingTenants()
		generateName()
		imageSize()
		questConfig()
		materialMiningSound()
		assetJson()
		treeStemDirectory()
		tenantConfig()
		isTreasurePool()
		npcVariant()
		getConfigurationPath()
		materialHealth()
		getConfiguration()
		monsterPortrait()
		monsterSkillParameter()
		itemType()
		setConfigurationPath()
		nonEmptyRegion()
		itemTags()
		npcPortrait()
		techConfig()
		treeFoliageDirectory()
		liquidStatusEffects()
		projectileConfig()
	}
	p()
	jresize()
	jremove()
	rawget()
	ipairs()
	rawequal()
	tonumber()
	_VERSION = "Lua 5.3"
	self = {
	}
	config = {
		getParameter()
	}
	widget = {
		clearListItems()
		setImageRotation()
		setVisible()
		setPosition()
		setData()
		blur()
		getPosition()
		getData()
		setProgress()
		setOptionEnabled()
		getSize()
		getSelectedOption()
		setChecked()
		setButtonEnabled()
		addListItem()
		itemGridItems()
		removeListItem()
		getSliderValue()
		playSound()
		setOptionVisible()
		setImageScale()
		setButtonImage()
		getListSelected()
		setListSelected()
		focus()
		setButtonImages()
		setButtonOverlayImage()
		setButtonCheckedImages()
		setSelectedOption()
		setSize()
		getChecked()
		getText()
		setText()
		setImage()
		setFontColor()
	}
	setmetatable()
	utf8 = {
		charpattern = "[
[23:52:49.075] [Warn] 	next()
	table = {
		unpack()
		sort()
		insert()
		concat()
		move()
		remove()
		pack()
	}
	getmetatable()
	error()
	string = {
		gmatch()
		dump()
		lower()
		rep()
		len()
		upper()
		pack()
		sub()
		find()
		char()
		unpack()
		packsize()
		match()
		reverse()
		byte()
		gsub()
		format()
	}
	root = {
		itemConfig()
		imageSpaces()
		materialFootstepSound()
		loadVersionedJson()
		monsterMovementSettings()
		npcConfig()
		recipesForItem()
		materialPath()
		makeCurrentVersionedJson()
		setConfiguration()
		evalFunction2()
		createBiome()
		projectileGravityMultiplier()
		createItem()
		itemHasTag()
		techType()
		hasTech()
		createTreasure()
		behaviorModule()
		evalFunction()
		getMatchingTenants()
		generateName()
		imageSize()
		questConfig()
		materialMiningSound()
		assetJson()
		treeStemDirectory()
		tenantConfig()
		isTreasurePool()
		npcVariant()
		getConfigurationPath()
		materialHealth()
		getConfiguration()
		monsterPortrait()
		monsterSkillParameter()
		itemType()
		setConfigurationPath()
		nonEmptyRegion()
		itemTags()
		npcPortrait()
		techConfig()
		treeFoliageDirectory()
		liquidStatusEffects()
		projectileConfig()
	}
	p()
	jresize()
	jremove()
	rawget()
	ipairs()
	rawequal()
	tonumber()
	_VERSION = "Lua 5.3"
	self = {
	}
	config = {
		getParameter()
	}
	widget = {
		clearListItems()
		setImageRotation()
		setVisible()
		setPosition()
		setData()
		blur()
		getPosition()
		getData()
		setProgress()
		setOptionEnabled()
		getSize()
		getSelectedOption()
		setChecked()
		setButtonEnabled()
		addListItem()
		itemGridItems()
		removeListItem()
		getSliderValue()
		playSound()
		setOptionVisible()
		setImageScale()
		setButtonImage()
		getListSelected()
		setListSelected()
		focus()
		setButtonImages()
		setButtonOverlayImage()
		setButtonCheckedImages()
		setSelectedOption()
		setSize()
		getChecked()
		getText()
		setText()
		setImage()
		setFontColor()
	}
	setmetatable()
	utf8 = {
		charpattern = "[
[23:52:51.085] [Warn] 	next()
	table = {
		unpack()
		sort()
		insert()
		concat()
		move()
		remove()
		pack()
	}
	getmetatable()
	error()
	string = {
		gmatch()
		dump()
		lower()
		rep()
		len()
		upper()
		pack()
		sub()
		find()
		char()
		unpack()
		packsize()
		match()
		reverse()
		byte()
		gsub()
		format()
	}
	root = {
		itemConfig()
		imageSpaces()
		materialFootstepSound()
		loadVersionedJson()
		monsterMovementSettings()
		npcConfig()
		recipesForItem()
		materialPath()
		makeCurrentVersionedJson()
		setConfiguration()
		evalFunction2()
		createBiome()
		projectileGravityMultiplier()
		createItem()
		itemHasTag()
		techType()
		hasTech()
		createTreasure()
		behaviorModule()
		evalFunction()
		getMatchingTenants()
		generateName()
		imageSize()
		questConfig()
		materialMiningSound()
		assetJson()
		treeStemDirectory()
		tenantConfig()
		isTreasurePool()
		npcVariant()
		getConfigurationPath()
		materialHealth()
		getConfiguration()
		monsterPortrait()
		monsterSkillParameter()
		itemType()
		setConfigurationPath()
		nonEmptyRegion()
		itemTags()
		npcPortrait()
		techConfig()
		treeFoliageDirectory()
		liquidStatusEffects()
		projectileConfig()
	}
	p()
	jresize()
	jremove()
	rawget()
	ipairs()
	rawequal()
	tonumber()
	_VERSION = "Lua 5.3"
	self = {
	}
	config = {
		getParameter()
	}
	widget = {
		clearListItems()
		setImageRotation()
		setVisible()
		setPosition()
		setData()
		blur()
		getPosition()
		getData()
		setProgress()
		setOptionEnabled()
		getSize()
		getSelectedOption()
		setChecked()
		setButtonEnabled()
		addListItem()
		itemGridItems()
		removeListItem()
		getSliderValue()
		playSound()
		setOptionVisible()
		setImageScale()
		setButtonImage()
		getListSelected()
		setListSelected()
		focus()
		setButtonImages()
		setButtonOverlayImage()
		setButtonCheckedImages()
		setSelectedOption()
		setSize()
		getChecked()
		getText()
		setText()
		setImage()
		setFontColor()
	}
	setmetatable()
	utf8 = {
		charpattern = "[
[23:53:36.520] [Warn] 	next()
	table = {
		unpack()
		sort()
		insert()
		concat()
		move()
		remove()
		pack()
	}
	getmetatable()
	error()
	string = {
		gmatch()
		dump()
		lower()
		rep()
		len()
		upper()
		pack()
		sub()
		find()
		char()
		unpack()
		packsize()
		match()
		reverse()
		byte()
		gsub()
		format()
	}
	root = {
		itemConfig()
		imageSpaces()
		materialFootstepSound()
		loadVersionedJson()
		monsterMovementSettings()
		npcConfig()
		recipesForItem()
		materialPath()
		makeCurrentVersionedJson()
		setConfiguration()
		evalFunction2()
		createBiome()
		projectileGravityMultiplier()
		createItem()
		itemHasTag()
		techType()
		hasTech()
		createTreasure()
		behaviorModule()
		evalFunction()
		getMatchingTenants()
		generateName()
		imageSize()
		questConfig()
		materialMiningSound()
		assetJson()
		treeStemDirectory()
		tenantConfig()
		isTreasurePool()
		npcVariant()
		getConfigurationPath()
		materialHealth()
		getConfiguration()
		monsterPortrait()
		monsterSkillParameter()
		itemType()
		setConfigurationPath()
		nonEmptyRegion()
		itemTags()
		npcPortrait()
		techConfig()
		treeFoliageDirectory()
		liquidStatusEffects()
		projectileConfig()
	}
	p()
	jresize()
	jremove()
	rawget()
	ipairs()
	rawequal()
	tonumber()
	_VERSION = "Lua 5.3"
	self = {
	}
	config = {
		getParameter()
	}
	widget = {
		clearListItems()
		setImageRotation()
		setVisible()
		setPosition()
		setData()
		blur()
		getPosition()
		getData()
		setProgress()
		setOptionEnabled()
		getSize()
		getSelectedOption()
		setChecked()
		setButtonEnabled()
		addListItem()
		itemGridItems()
		removeListItem()
		getSliderValue()
		playSound()
		setOptionVisible()
		setImageScale()
		setButtonImage()
		getListSelected()
		setListSelected()
		focus()
		setButtonImages()
		setButtonOverlayImage()
		setButtonCheckedImages()
		setSelectedOption()
		setSize()
		getChecked()
		getText()
		setText()
		setImage()
		setFontColor()
	}
	setmetatable()
	utf8 = {
		charpattern = "[
[23:54:31.737] [Warn] 	next()
	table = {
		unpack()
		sort()
		insert()
		concat()
		move()
		remove()
		pack()
	}
	getmetatable()
	error()
	string = {
		gmatch()
		dump()
		lower()
		rep()
		len()
		upper()
		pack()
		sub()
		find()
		char()
		unpack()
		packsize()
		match()
		reverse()
		byte()
		gsub()
		format()
	}
	root = {
		itemConfig()
		imageSpaces()
		materialFootstepSound()
		loadVersionedJson()
		monsterMovementSettings()
		npcConfig()
		recipesForItem()
		materialPath()
		makeCurrentVersionedJson()
		setConfiguration()
		evalFunction2()
		createBiome()
		projectileGravityMultiplier()
		createItem()
		itemHasTag()
		techType()
		hasTech()
		createTreasure()
		behaviorModule()
		evalFunction()
		getMatchingTenants()
		generateName()
		imageSize()
		questConfig()
		materialMiningSound()
		assetJson()
		treeStemDirectory()
		tenantConfig()
		isTreasurePool()
		npcVariant()
		getConfigurationPath()
		materialHealth()
		getConfiguration()
		monsterPortrait()
		monsterSkillParameter()
		itemType()
		setConfigurationPath()
		nonEmptyRegion()
		itemTags()
		npcPortrait()
		techConfig()
		treeFoliageDirectory()
		liquidStatusEffects()
		projectileConfig()
	}
	p()
	jresize()
	jremove()
	rawget()
	ipairs()
	rawequal()
	tonumber()
	_VERSION = "Lua 5.3"
	self = {
	}
	config = {
		getParameter()
	}
	widget = {
		clearListItems()
		setImageRotation()
		setVisible()
		setPosition()
		setData()
		blur()
		getPosition()
		getData()
		setProgress()
		setOptionEnabled()
		getSize()
		getSelectedOption()
		setChecked()
		setButtonEnabled()
		addListItem()
		itemGridItems()
		removeListItem()
		getSliderValue()
		playSound()
		setOptionVisible()
		setImageScale()
		setButtonImage()
		getListSelected()
		setListSelected()
		focus()
		setButtonImages()
		setButtonOverlayImage()
		setButtonCheckedImages()
		setSelectedOption()
		setSize()
		getChecked()
		getText()
		setText()
		setImage()
		setFontColor()
	}
	setmetatable()
	utf8 = {
		charpattern = "[
[23:54:53.485] [Info] [IC] [Sort] Time elapsed: 0.006
[23:55:05.458] [Warn] 	next()
	table = {
		unpack()
		sort()
		insert()
		concat()
		move()
		remove()
		pack()
	}
	getmetatable()
	error()
	string = {
		gmatch()
		dump()
		lower()
		rep()
		len()
		upper()
		pack()
		sub()
		find()
		char()
		unpack()
		packsize()
		match()
		reverse()
		byte()
		gsub()
		format()
	}
	root = {
		itemConfig()
		imageSpaces()
		materialFootstepSound()
		loadVersionedJson()
		monsterMovementSettings()
		npcConfig()
		recipesForItem()
		materialPath()
		makeCurrentVersionedJson()
		setConfiguration()
		evalFunction2()
		createBiome()
		projectileGravityMultiplier()
		createItem()
		itemHasTag()
		techType()
		hasTech()
		createTreasure()
		behaviorModule()
		evalFunction()
		getMatchingTenants()
		generateName()
		imageSize()
		questConfig()
		materialMiningSound()
		assetJson()
		treeStemDirectory()
		tenantConfig()
		isTreasurePool()
		npcVariant()
		getConfigurationPath()
		materialHealth()
		getConfiguration()
		monsterPortrait()
		monsterSkillParameter()
		itemType()
		setConfigurationPath()
		nonEmptyRegion()
		itemTags()
		npcPortrait()
		techConfig()
		treeFoliageDirectory()
		liquidStatusEffects()
		projectileConfig()
	}
	p()
	jresize()
	jremove()
	rawget()
	ipairs()
	rawequal()
	tonumber()
	_VERSION = "Lua 5.3"
	self = {
	}
	config = {
		getParameter()
	}
	widget = {
		clearListItems()
		setImageRotation()
		setVisible()
		setPosition()
		setData()
		blur()
		getPosition()
		getData()
		setProgress()
		setOptionEnabled()
		getSize()
		getSelectedOption()
		setChecked()
		setButtonEnabled()
		addListItem()
		itemGridItems()
		removeListItem()
		getSliderValue()
		playSound()
		setOptionVisible()
		setImageScale()
		setButtonImage()
		getListSelected()
		setListSelected()
		focus()
		setButtonImages()
		setButtonOverlayImage()
		setButtonCheckedImages()
		setSelectedOption()
		setSize()
		getChecked()
		getText()
		setText()
		setImage()
		setFontColor()
	}
	setmetatable()
	utf8 = {
		charpattern = "[
[23:55:11.567] [Warn] 	next()
	table = {
		unpack()
		sort()
		insert()
		concat()
		move()
		remove()
		pack()
	}
	getmetatable()
	error()
	string = {
		gmatch()
		dump()
		lower()
		rep()
		len()
		upper()
		pack()
		sub()
		find()
		char()
		unpack()
		packsize()
		match()
		reverse()
		byte()
		gsub()
		format()
	}
	root = {
		itemConfig()
		imageSpaces()
		materialFootstepSound()
		loadVersionedJson()
		monsterMovementSettings()
		npcConfig()
		recipesForItem()
		materialPath()
		makeCurrentVersionedJson()
		setConfiguration()
		evalFunction2()
		createBiome()
		projectileGravityMultiplier()
		createItem()
		itemHasTag()
		techType()
		hasTech()
		createTreasure()
		behaviorModule()
		evalFunction()
		getMatchingTenants()
		generateName()
		imageSize()
		questConfig()
		materialMiningSound()
		assetJson()
		treeStemDirectory()
		tenantConfig()
		isTreasurePool()
		npcVariant()
		getConfigurationPath()
		materialHealth()
		getConfiguration()
		monsterPortrait()
		monsterSkillParameter()
		itemType()
		setConfigurationPath()
		nonEmptyRegion()
		itemTags()
		npcPortrait()
		techConfig()
		treeFoliageDirectory()
		liquidStatusEffects()
		projectileConfig()
	}
	p()
	jresize()
	jremove()
	rawget()
	ipairs()
	rawequal()
	tonumber()
	_VERSION = "Lua 5.3"
	self = {
	}
	config = {
		getParameter()
	}
	widget = {
		clearListItems()
		setImageRotation()
		setVisible()
		setPosition()
		setData()
		blur()
		getPosition()
		getData()
		setProgress()
		setOptionEnabled()
		getSize()
		getSelectedOption()
		setChecked()
		setButtonEnabled()
		addListItem()
		itemGridItems()
		removeListItem()
		getSliderValue()
		playSound()
		setOptionVisible()
		setImageScale()
		setButtonImage()
		getListSelected()
		setListSelected()
		focus()
		setButtonImages()
		setButtonOverlayImage()
		setButtonCheckedImages()
		setSelectedOption()
		setSize()
		getChecked()
		getText()
		setText()
		setImage()
		setFontColor()
	}
	setmetatable()
	utf8 = {
		charpattern = "[
[23:55:18.872] [Info] [IC] [Sort] Time elapsed: 0.008
[23:55:41.316] [Warn] 	next()
	table = {
		unpack()
		sort()
		insert()
		concat()
		move()
		remove()
		pack()
	}
	getmetatable()
	error()
	string = {
		gmatch()
		dump()
		lower()
		rep()
		len()
		upper()
		pack()
		sub()
		find()
		char()
		unpack()
		packsize()
		match()
		reverse()
		byte()
		gsub()
		format()
	}
	root = {
		itemConfig()
		imageSpaces()
		materialFootstepSound()
		loadVersionedJson()
		monsterMovementSettings()
		npcConfig()
		recipesForItem()
		materialPath()
		makeCurrentVersionedJson()
		setConfiguration()
		evalFunction2()
		createBiome()
		projectileGravityMultiplier()
		createItem()
		itemHasTag()
		techType()
		hasTech()
		createTreasure()
		behaviorModule()
		evalFunction()
		getMatchingTenants()
		generateName()
		imageSize()
		questConfig()
		materialMiningSound()
		assetJson()
		treeStemDirectory()
		tenantConfig()
		isTreasurePool()
		npcVariant()
		getConfigurationPath()
		materialHealth()
		getConfiguration()
		monsterPortrait()
		monsterSkillParameter()
		itemType()
		setConfigurationPath()
		nonEmptyRegion()
		itemTags()
		npcPortrait()
		techConfig()
		treeFoliageDirectory()
		liquidStatusEffects()
		projectileConfig()
	}
	p()
	jresize()
	jremove()
	rawget()
	ipairs()
	rawequal()
	tonumber()
	_VERSION = "Lua 5.3"
	self = {
	}
	config = {
		getParameter()
	}
	widget = {
		clearListItems()
		setImageRotation()
		setVisible()
		setPosition()
		setData()
		blur()
		getPosition()
		getData()
		setProgress()
		setOptionEnabled()
		getSize()
		getSelectedOption()
		setChecked()
		setButtonEnabled()
		addListItem()
		itemGridItems()
		removeListItem()
		getSliderValue()
		playSound()
		setOptionVisible()
		setImageScale()
		setButtonImage()
		getListSelected()
		setListSelected()
		focus()
		setButtonImages()
		setButtonOverlayImage()
		setButtonCheckedImages()
		setSelectedOption()
		setSize()
		getChecked()
		getText()
		setText()
		setImage()
		setFontColor()
	}
	setmetatable()
	utf8 = {
		charpattern = "[
[23:55:50.511] [Warn] 	next()
	table = {
		unpack()
		sort()
		insert()
		concat()
		move()
		remove()
		pack()
	}
	getmetatable()
	error()
	string = {
		gmatch()
		dump()
		lower()
		rep()
		len()
		upper()
		pack()
		sub()
		find()
		char()
		unpack()
		packsize()
		match()
		reverse()
		byte()
		gsub()
		format()
	}
	root = {
		itemConfig()
		imageSpaces()
		materialFootstepSound()
		loadVersionedJson()
		monsterMovementSettings()
		npcConfig()
		recipesForItem()
		materialPath()
		makeCurrentVersionedJson()
		setConfiguration()
		evalFunction2()
		createBiome()
		projectileGravityMultiplier()
		createItem()
		itemHasTag()
		techType()
		hasTech()
		createTreasure()
		behaviorModule()
		evalFunction()
		getMatchingTenants()
		generateName()
		imageSize()
		questConfig()
		materialMiningSound()
		assetJson()
		treeStemDirectory()
		tenantConfig()
		isTreasurePool()
		npcVariant()
		getConfigurationPath()
		materialHealth()
		getConfiguration()
		monsterPortrait()
		monsterSkillParameter()
		itemType()
		setConfigurationPath()
		nonEmptyRegion()
		itemTags()
		npcPortrait()
		techConfig()
		treeFoliageDirectory()
		liquidStatusEffects()
		projectileConfig()
	}
	p()
	jresize()
	jremove()
	rawget()
	ipairs()
	rawequal()
	tonumber()
	_VERSION = "Lua 5.3"
	self = {
	}
	config = {
		getParameter()
	}
	widget = {
		clearListItems()
		setImageRotation()
		setVisible()
		setPosition()
		setData()
		blur()
		getPosition()
		getData()
		setProgress()
		setOptionEnabled()
		getSize()
		getSelectedOption()
		setChecked()
		setButtonEnabled()
		addListItem()
		itemGridItems()
		removeListItem()
		getSliderValue()
		playSound()
		setOptionVisible()
		setImageScale()
		setButtonImage()
		getListSelected()
		setListSelected()
		focus()
		setButtonImages()
		setButtonOverlayImage()
		setButtonCheckedImages()
		setSelectedOption()
		setSize()
		getChecked()
		getText()
		setText()
		setImage()
		setFontColor()
	}
	setmetatable()
	utf8 = {
		charpattern = "[
[23:55:54.411] [Warn] 	next()
	table = {
		unpack()
		sort()
		insert()
		concat()
		move()
		remove()
		pack()
	}
	getmetatable()
	error()
	string = {
		gmatch()
		dump()
		lower()
		rep()
		len()
		upper()
		pack()
		sub()
		find()
		char()
		unpack()
		packsize()
		match()
		reverse()
		byte()
		gsub()
		format()
	}
	root = {
		itemConfig()
		imageSpaces()
		materialFootstepSound()
		loadVersionedJson()
		monsterMovementSettings()
		npcConfig()
		recipesForItem()
		materialPath()
		makeCurrentVersionedJson()
		setConfiguration()
		evalFunction2()
		createBiome()
		projectileGravityMultiplier()
		createItem()
		itemHasTag()
		techType()
		hasTech()
		createTreasure()
		behaviorModule()
		evalFunction()
		getMatchingTenants()
		generateName()
		imageSize()
		questConfig()
		materialMiningSound()
		assetJson()
		treeStemDirectory()
		tenantConfig()
		isTreasurePool()
		npcVariant()
		getConfigurationPath()
		materialHealth()
		getConfiguration()
		monsterPortrait()
		monsterSkillParameter()
		itemType()
		setConfigurationPath()
		nonEmptyRegion()
		itemTags()
		npcPortrait()
		techConfig()
		treeFoliageDirectory()
		liquidStatusEffects()
		projectileConfig()
	}
	p()
	jresize()
	jremove()
	rawget()
	ipairs()
	rawequal()
	tonumber()
	_VERSION = "Lua 5.3"
	self = {
	}
	config = {
		getParameter()
	}
	widget = {
		clearListItems()
		setImageRotation()
		setVisible()
		setPosition()
		setData()
		blur()
		getPosition()
		getData()
		setProgress()
		setOptionEnabled()
		getSize()
		getSelectedOption()
		setChecked()
		setButtonEnabled()
		addListItem()
		itemGridItems()
		removeListItem()
		getSliderValue()
		playSound()
		setOptionVisible()
		setImageScale()
		setButtonImage()
		getListSelected()
		setListSelected()
		focus()
		setButtonImages()
		setButtonOverlayImage()
		setButtonCheckedImages()
		setSelectedOption()
		setSize()
		getChecked()
		getText()
		setText()
		setImage()
		setFontColor()
	}
	setmetatable()
	utf8 = {
		charpattern = "[
[23:55:58.755] [Warn] 	next()
	table = {
		unpack()
		sort()
		insert()
		concat()
		move()
		remove()
		pack()
	}
	getmetatable()
	error()
	string = {
		gmatch()
		dump()
		lower()
		rep()
		len()
		upper()
		pack()
		sub()
		find()
		char()
		unpack()
		packsize()
		match()
		reverse()
		byte()
		gsub()
		format()
	}
	root = {
		itemConfig()
		imageSpaces()
		materialFootstepSound()
		loadVersionedJson()
		monsterMovementSettings()
		npcConfig()
		recipesForItem()
		materialPath()
		makeCurrentVersionedJson()
		setConfiguration()
		evalFunction2()
		createBiome()
		projectileGravityMultiplier()
		createItem()
		itemHasTag()
		techType()
		hasTech()
		createTreasure()
		behaviorModule()
		evalFunction()
		getMatchingTenants()
		generateName()
		imageSize()
		questConfig()
		materialMiningSound()
		assetJson()
		treeStemDirectory()
		tenantConfig()
		isTreasurePool()
		npcVariant()
		getConfigurationPath()
		materialHealth()
		getConfiguration()
		monsterPortrait()
		monsterSkillParameter()
		itemType()
		setConfigurationPath()
		nonEmptyRegion()
		itemTags()
		npcPortrait()
		techConfig()
		treeFoliageDirectory()
		liquidStatusEffects()
		projectileConfig()
	}
	p()
	jresize()
	jremove()
	rawget()
	ipairs()
	rawequal()
	tonumber()
	_VERSION = "Lua 5.3"
	self = {
	}
	config = {
		getParameter()
	}
	widget = {
		clearListItems()
		setImageRotation()
		setVisible()
		setPosition()
		setData()
		blur()
		getPosition()
		getData()
		setProgress()
		setOptionEnabled()
		getSize()
		getSelectedOption()
		setChecked()
		setButtonEnabled()
		addListItem()
		itemGridItems()
		removeListItem()
		getSliderValue()
		playSound()
		setOptionVisible()
		setImageScale()
		setButtonImage()
		getListSelected()
		setListSelected()
		focus()
		setButtonImages()
		setButtonOverlayImage()
		setButtonCheckedImages()
		setSelectedOption()
		setSize()
		getChecked()
		getText()
		setText()
		setImage()
		setFontColor()
	}
	setmetatable()
	utf8 = {
		charpattern = "[
[23:55:59.884] [Warn] 	next()
	table = {
		unpack()
		sort()
		insert()
		concat()
		move()
		remove()
		pack()
	}
	getmetatable()
	error()
	string = {
		gmatch()
		dump()
		lower()
		rep()
		len()
		upper()
		pack()
		sub()
		find()
		char()
		unpack()
		packsize()
		match()
		reverse()
		byte()
		gsub()
		format()
	}
	root = {
		itemConfig()
		imageSpaces()
		materialFootstepSound()
		loadVersionedJson()
		monsterMovementSettings()
		npcConfig()
		recipesForItem()
		materialPath()
		makeCurrentVersionedJson()
		setConfiguration()
		evalFunction2()
		createBiome()
		projectileGravityMultiplier()
		createItem()
		itemHasTag()
		techType()
		hasTech()
		createTreasure()
		behaviorModule()
		evalFunction()
		getMatchingTenants()
		generateName()
		imageSize()
		questConfig()
		materialMiningSound()
		assetJson()
		treeStemDirectory()
		tenantConfig()
		isTreasurePool()
		npcVariant()
		getConfigurationPath()
		materialHealth()
		getConfiguration()
		monsterPortrait()
		monsterSkillParameter()
		itemType()
		setConfigurationPath()
		nonEmptyRegion()
		itemTags()
		npcPortrait()
		techConfig()
		treeFoliageDirectory()
		liquidStatusEffects()
		projectileConfig()
	}
	p()
	jresize()
	jremove()
	rawget()
	ipairs()
	rawequal()
	tonumber()
	_VERSION = "Lua 5.3"
	self = {
	}
	config = {
		getParameter()
	}
	widget = {
		clearListItems()
		setImageRotation()
		setVisible()
		setPosition()
		setData()
		blur()
		getPosition()
		getData()
		setProgress()
		setOptionEnabled()
		getSize()
		getSelectedOption()
		setChecked()
		setButtonEnabled()
		addListItem()
		itemGridItems()
		removeListItem()
		getSliderValue()
		playSound()
		setOptionVisible()
		setImageScale()
		setButtonImage()
		getListSelected()
		setListSelected()
		focus()
		setButtonImages()
		setButtonOverlayImage()
		setButtonCheckedImages()
		setSelectedOption()
		setSize()
		getChecked()
		getText()
		setText()
		setImage()
		setFontColor()
	}
	setmetatable()
	utf8 = {
		charpattern = "[
[23:56:05.520] [Warn] 	next()
	table = {
		unpack()
		sort()
		insert()
		concat()
		move()
		remove()
		pack()
	}
	getmetatable()
	error()
	string = {
		gmatch()
		dump()
		lower()
		rep()
		len()
		upper()
		pack()
		sub()
		find()
		char()
		unpack()
		packsize()
		match()
		reverse()
		byte()
		gsub()
		format()
	}
	root = {
		itemConfig()
		imageSpaces()
		materialFootstepSound()
		loadVersionedJson()
		monsterMovementSettings()
		npcConfig()
		recipesForItem()
		materialPath()
		makeCurrentVersionedJson()
		setConfiguration()
		evalFunction2()
		createBiome()
		projectileGravityMultiplier()
		createItem()
		itemHasTag()
		techType()
		hasTech()
		createTreasure()
		behaviorModule()
		evalFunction()
		getMatchingTenants()
		generateName()
		imageSize()
		questConfig()
		materialMiningSound()
		assetJson()
		treeStemDirectory()
		tenantConfig()
		isTreasurePool()
		npcVariant()
		getConfigurationPath()
		materialHealth()
		getConfiguration()
		monsterPortrait()
		monsterSkillParameter()
		itemType()
		setConfigurationPath()
		nonEmptyRegion()
		itemTags()
		npcPortrait()
		techConfig()
		treeFoliageDirectory()
		liquidStatusEffects()
		projectileConfig()
	}
	p()
	jresize()
	jremove()
	rawget()
	ipairs()
	rawequal()
	tonumber()
	_VERSION = "Lua 5.3"
	self = {
	}
	config = {
		getParameter()
	}
	widget = {
		clearListItems()
		setImageRotation()
		setVisible()
		setPosition()
		setData()
		blur()
		getPosition()
		getData()
		setProgress()
		setOptionEnabled()
		getSize()
		getSelectedOption()
		setChecked()
		setButtonEnabled()
		addListItem()
		itemGridItems()
		removeListItem()
		getSliderValue()
		playSound()
		setOptionVisible()
		setImageScale()
		setButtonImage()
		getListSelected()
		setListSelected()
		focus()
		setButtonImages()
		setButtonOverlayImage()
		setButtonCheckedImages()
		setSelectedOption()
		setSize()
		getChecked()
		getText()
		setText()
		setImage()
		setFontColor()
	}
	setmetatable()
	utf8 = {
		charpattern = "[
[23:56:14.328] [Warn] 	next()
	table = {
		unpack()
		sort()
		insert()
		concat()
		move()
		remove()
		pack()
	}
	getmetatable()
	error()
	string = {
		gmatch()
		dump()
		lower()
		rep()
		len()
		upper()
		pack()
		sub()
		find()
		char()
		unpack()
		packsize()
		match()
		reverse()
		byte()
		gsub()
		format()
	}
	root = {
		itemConfig()
		imageSpaces()
		materialFootstepSound()
		loadVersionedJson()
		monsterMovementSettings()
		npcConfig()
		recipesForItem()
		materialPath()
		makeCurrentVersionedJson()
		setConfiguration()
		evalFunction2()
		createBiome()
		projectileGravityMultiplier()
		createItem()
		itemHasTag()
		techType()
		hasTech()
		createTreasure()
		behaviorModule()
		evalFunction()
		getMatchingTenants()
		generateName()
		imageSize()
		questConfig()
		materialMiningSound()
		assetJson()
		treeStemDirectory()
		tenantConfig()
		isTreasurePool()
		npcVariant()
		getConfigurationPath()
		materialHealth()
		getConfiguration()
		monsterPortrait()
		monsterSkillParameter()
		itemType()
		setConfigurationPath()
		nonEmptyRegion()
		itemTags()
		npcPortrait()
		techConfig()
		treeFoliageDirectory()
		liquidStatusEffects()
		projectileConfig()
	}
	p()
	jresize()
	jremove()
	rawget()
	ipairs()
	rawequal()
	tonumber()
	_VERSION = "Lua 5.3"
	self = {
	}
	config = {
		getParameter()
	}
	widget = {
		clearListItems()
		setImageRotation()
		setVisible()
		setPosition()
		setData()
		blur()
		getPosition()
		getData()
		setProgress()
		setOptionEnabled()
		getSize()
		getSelectedOption()
		setChecked()
		setButtonEnabled()
		addListItem()
		itemGridItems()
		removeListItem()
		getSliderValue()
		playSound()
		setOptionVisible()
		setImageScale()
		setButtonImage()
		getListSelected()
		setListSelected()
		focus()
		setButtonImages()
		setButtonOverlayImage()
		setButtonCheckedImages()
		setSelectedOption()
		setSize()
		getChecked()
		getText()
		setText()
		setImage()
		setFontColor()
	}
	setmetatable()
	utf8 = {
		charpattern = "[
[23:56:19.453] [Warn] 	next()
	table = {
		unpack()
		sort()
		insert()
		concat()
		move()
		remove()
		pack()
	}
	getmetatable()
	error()
	string = {
		gmatch()
		dump()
		lower()
		rep()
		len()
		upper()
		pack()
		sub()
		find()
		char()
		unpack()
		packsize()
		match()
		reverse()
		byte()
		gsub()
		format()
	}
	root = {
		itemConfig()
		imageSpaces()
		materialFootstepSound()
		loadVersionedJson()
		monsterMovementSettings()
		npcConfig()
		recipesForItem()
		materialPath()
		makeCurrentVersionedJson()
		setConfiguration()
		evalFunction2()
		createBiome()
		projectileGravityMultiplier()
		createItem()
		itemHasTag()
		techType()
		hasTech()
		createTreasure()
		behaviorModule()
		evalFunction()
		getMatchingTenants()
		generateName()
		imageSize()
		questConfig()
		materialMiningSound()
		assetJson()
		treeStemDirectory()
		tenantConfig()
		isTreasurePool()
		npcVariant()
		getConfigurationPath()
		materialHealth()
		getConfiguration()
		monsterPortrait()
		monsterSkillParameter()
		itemType()
		setConfigurationPath()
		nonEmptyRegion()
		itemTags()
		npcPortrait()
		techConfig()
		treeFoliageDirectory()
		liquidStatusEffects()
		projectileConfig()
	}
	p()
	jresize()
	jremove()
	rawget()
	ipairs()
	rawequal()
	tonumber()
	_VERSION = "Lua 5.3"
	self = {
	}
	config = {
		getParameter()
	}
	widget = {
		clearListItems()
		setImageRotation()
		setVisible()
		setPosition()
		setData()
		blur()
		getPosition()
		getData()
		setProgress()
		setOptionEnabled()
		getSize()
		getSelectedOption()
		setChecked()
		setButtonEnabled()
		addListItem()
		itemGridItems()
		removeListItem()
		getSliderValue()
		playSound()
		setOptionVisible()
		setImageScale()
		setButtonImage()
		getListSelected()
		setListSelected()
		focus()
		setButtonImages()
		setButtonOverlayImage()
		setButtonCheckedImages()
		setSelectedOption()
		setSize()
		getChecked()
		getText()
		setText()
		setImage()
		setFontColor()
	}
	setmetatable()
	utf8 = {
		charpattern = "[
[23:56:30.193] [Warn] 	next()
	table = {
		unpack()
		sort()
		insert()
		concat()
		move()
		remove()
		pack()
	}
	getmetatable()
	error()
	string = {
		gmatch()
		dump()
		lower()
		rep()
		len()
		upper()
		pack()
		sub()
		find()
		char()
		unpack()
		packsize()
		match()
		reverse()
		byte()
		gsub()
		format()
	}
	root = {
		itemConfig()
		imageSpaces()
		materialFootstepSound()
		loadVersionedJson()
		monsterMovementSettings()
		npcConfig()
		recipesForItem()
		materialPath()
		makeCurrentVersionedJson()
		setConfiguration()
		evalFunction2()
		createBiome()
		projectileGravityMultiplier()
		createItem()
		itemHasTag()
		techType()
		hasTech()
		createTreasure()
		behaviorModule()
		evalFunction()
		getMatchingTenants()
		generateName()
		imageSize()
		questConfig()
		materialMiningSound()
		assetJson()
		treeStemDirectory()
		tenantConfig()
		isTreasurePool()
		npcVariant()
		getConfigurationPath()
		materialHealth()
		getConfiguration()
		monsterPortrait()
		monsterSkillParameter()
		itemType()
		setConfigurationPath()
		nonEmptyRegion()
		itemTags()
		npcPortrait()
		techConfig()
		treeFoliageDirectory()
		liquidStatusEffects()
		projectileConfig()
	}
	p()
	jresize()
	jremove()
	rawget()
	ipairs()
	rawequal()
	tonumber()
	_VERSION = "Lua 5.3"
	self = {
	}
	config = {
		getParameter()
	}
	widget = {
		clearListItems()
		setImageRotation()
		setVisible()
		setPosition()
		setData()
		blur()
		getPosition()
		getData()
		setProgress()
		setOptionEnabled()
		getSize()
		getSelectedOption()
		setChecked()
		setButtonEnabled()
		addListItem()
		itemGridItems()
		removeListItem()
		getSliderValue()
		playSound()
		setOptionVisible()
		setImageScale()
		setButtonImage()
		getListSelected()
		setListSelected()
		focus()
		setButtonImages()
		setButtonOverlayImage()
		setButtonCheckedImages()
		setSelectedOption()
		setSize()
		getChecked()
		getText()
		setText()
		setImage()
		setFontColor()
	}
	setmetatable()
	utf8 = {
		charpattern = "[
[23:56:31.443] [Warn] 	next()
	table = {
		unpack()
		sort()
		insert()
		concat()
		move()
		remove()
		pack()
	}
	getmetatable()
	error()
	string = {
		gmatch()
		dump()
		lower()
		rep()
		len()
		upper()
		pack()
		sub()
		find()
		char()
		unpack()
		packsize()
		match()
		reverse()
		byte()
		gsub()
		format()
	}
	root = {
		itemConfig()
		imageSpaces()
		materialFootstepSound()
		loadVersionedJson()
		monsterMovementSettings()
		npcConfig()
		recipesForItem()
		materialPath()
		makeCurrentVersionedJson()
		setConfiguration()
		evalFunction2()
		createBiome()
		projectileGravityMultiplier()
		createItem()
		itemHasTag()
		techType()
		hasTech()
		createTreasure()
		behaviorModule()
		evalFunction()
		getMatchingTenants()
		generateName()
		imageSize()
		questConfig()
		materialMiningSound()
		assetJson()
		treeStemDirectory()
		tenantConfig()
		isTreasurePool()
		npcVariant()
		getConfigurationPath()
		materialHealth()
		getConfiguration()
		monsterPortrait()
		monsterSkillParameter()
		itemType()
		setConfigurationPath()
		nonEmptyRegion()
		itemTags()
		npcPortrait()
		techConfig()
		treeFoliageDirectory()
		liquidStatusEffects()
		projectileConfig()
	}
	p()
	jresize()
	jremove()
	rawget()
	ipairs()
	rawequal()
	tonumber()
	_VERSION = "Lua 5.3"
	self = {
	}
	config = {
		getParameter()
	}
	widget = {
		clearListItems()
		setImageRotation()
		setVisible()
		setPosition()
		setData()
		blur()
		getPosition()
		getData()
		setProgress()
		setOptionEnabled()
		getSize()
		getSelectedOption()
		setChecked()
		setButtonEnabled()
		addListItem()
		itemGridItems()
		removeListItem()
		getSliderValue()
		playSound()
		setOptionVisible()
		setImageScale()
		setButtonImage()
		getListSelected()
		setListSelected()
		focus()
		setButtonImages()
		setButtonOverlayImage()
		setButtonCheckedImages()
		setSelectedOption()
		setSize()
		getChecked()
		getText()
		setText()
		setImage()
		setFontColor()
	}
	setmetatable()
	utf8 = {
		charpattern = "[
[23:56:32.446] [Info] [IC] [Sort] Time elapsed: 0.011
[23:56:33.348] [Warn] 	next()
	table = {
		unpack()
		sort()
		insert()
		concat()
		move()
		remove()
		pack()
	}
	getmetatable()
	error()
	string = {
		gmatch()
		dump()
		lower()
		rep()
		len()
		upper()
		pack()
		sub()
		find()
		char()
		unpack()
		packsize()
		match()
		reverse()
		byte()
		gsub()
		format()
	}
	root = {
		itemConfig()
		imageSpaces()
		materialFootstepSound()
		loadVersionedJson()
		monsterMovementSettings()
		npcConfig()
		recipesForItem()
		materialPath()
		makeCurrentVersionedJson()
		setConfiguration()
		evalFunction2()
		createBiome()
		projectileGravityMultiplier()
		createItem()
		itemHasTag()
		techType()
		hasTech()
		createTreasure()
		behaviorModule()
		evalFunction()
		getMatchingTenants()
		generateName()
		imageSize()
		questConfig()
		materialMiningSound()
		assetJson()
		treeStemDirectory()
		tenantConfig()
		isTreasurePool()
		npcVariant()
		getConfigurationPath()
		materialHealth()
		getConfiguration()
		monsterPortrait()
		monsterSkillParameter()
		itemType()
		setConfigurationPath()
		nonEmptyRegion()
		itemTags()
		npcPortrait()
		techConfig()
		treeFoliageDirectory()
		liquidStatusEffects()
		projectileConfig()
	}
	p()
	jresize()
	jremove()
	rawget()
	ipairs()
	rawequal()
	tonumber()
	_VERSION = "Lua 5.3"
	self = {
	}
	config = {
		getParameter()
	}
	widget = {
		clearListItems()
		setImageRotation()
		setVisible()
		setPosition()
		setData()
		blur()
		getPosition()
		getData()
		setProgress()
		setOptionEnabled()
		getSize()
		getSelectedOption()
		setChecked()
		setButtonEnabled()
		addListItem()
		itemGridItems()
		removeListItem()
		getSliderValue()
		playSound()
		setOptionVisible()
		setImageScale()
		setButtonImage()
		getListSelected()
		setListSelected()
		focus()
		setButtonImages()
		setButtonOverlayImage()
		setButtonCheckedImages()
		setSelectedOption()
		setSize()
		getChecked()
		getText()
		setText()
		setImage()
		setFontColor()
	}
	setmetatable()
	utf8 = {
		charpattern = "[
[23:56:34.682] [Warn] 	next()
	table = {
		unpack()
		sort()
		insert()
		concat()
		move()
		remove()
		pack()
	}
	getmetatable()
	error()
	string = {
		gmatch()
		dump()
		lower()
		rep()
		len()
		upper()
		pack()
		sub()
		find()
		char()
		unpack()
		packsize()
		match()
		reverse()
		byte()
		gsub()
		format()
	}
	root = {
		itemConfig()
		imageSpaces()
		materialFootstepSound()
		loadVersionedJson()
		monsterMovementSettings()
		npcConfig()
		recipesForItem()
		materialPath()
		makeCurrentVersionedJson()
		setConfiguration()
		evalFunction2()
		createBiome()
		projectileGravityMultiplier()
		createItem()
		itemHasTag()
		techType()
		hasTech()
		createTreasure()
		behaviorModule()
		evalFunction()
		getMatchingTenants()
		generateName()
		imageSize()
		questConfig()
		materialMiningSound()
		assetJson()
		treeStemDirectory()
		tenantConfig()
		isTreasurePool()
		npcVariant()
		getConfigurationPath()
		materialHealth()
		getConfiguration()
		monsterPortrait()
		monsterSkillParameter()
		itemType()
		setConfigurationPath()
		nonEmptyRegion()
		itemTags()
		npcPortrait()
		techConfig()
		treeFoliageDirectory()
		liquidStatusEffects()
		projectileConfig()
	}
	p()
	jresize()
	jremove()
	rawget()
	ipairs()
	rawequal()
	tonumber()
	_VERSION = "Lua 5.3"
	self = {
	}
	config = {
		getParameter()
	}
	widget = {
		clearListItems()
		setImageRotation()
		setVisible()
		setPosition()
		setData()
		blur()
		getPosition()
		getData()
		setProgress()
		setOptionEnabled()
		getSize()
		getSelectedOption()
		setChecked()
		setButtonEnabled()
		addListItem()
		itemGridItems()
		removeListItem()
		getSliderValue()
		playSound()
		setOptionVisible()
		setImageScale()
		setButtonImage()
		getListSelected()
		setListSelected()
		focus()
		setButtonImages()
		setButtonOverlayImage()
		setButtonCheckedImages()
		setSelectedOption()
		setSize()
		getChecked()
		getText()
		setText()
		setImage()
		setFontColor()
	}
	setmetatable()
	utf8 = {
		charpattern = "[
[23:56:39.853] [Warn] 	next()
	table = {
		unpack()
		sort()
		insert()
		concat()
		move()
		remove()
		pack()
	}
	getmetatable()
	error()
	string = {
		gmatch()
		dump()
		lower()
		rep()
		len()
		upper()
		pack()
		sub()
		find()
		char()
		unpack()
		packsize()
		match()
		reverse()
		byte()
		gsub()
		format()
	}
	root = {
		itemConfig()
		imageSpaces()
		materialFootstepSound()
		loadVersionedJson()
		monsterMovementSettings()
		npcConfig()
		recipesForItem()
		materialPath()
		makeCurrentVersionedJson()
		setConfiguration()
		evalFunction2()
		createBiome()
		projectileGravityMultiplier()
		createItem()
		itemHasTag()
		techType()
		hasTech()
		createTreasure()
		behaviorModule()
		evalFunction()
		getMatchingTenants()
		generateName()
		imageSize()
		questConfig()
		materialMiningSound()
		assetJson()
		treeStemDirectory()
		tenantConfig()
		isTreasurePool()
		npcVariant()
		getConfigurationPath()
		materialHealth()
		getConfiguration()
		monsterPortrait()
		monsterSkillParameter()
		itemType()
		setConfigurationPath()
		nonEmptyRegion()
		itemTags()
		npcPortrait()
		techConfig()
		treeFoliageDirectory()
		liquidStatusEffects()
		projectileConfig()
	}
	p()
	jresize()
	jremove()
	rawget()
	ipairs()
	rawequal()
	tonumber()
	_VERSION = "Lua 5.3"
	self = {
	}
	config = {
		getParameter()
	}
	widget = {
		clearListItems()
		setImageRotation()
		setVisible()
		setPosition()
		setData()
		blur()
		getPosition()
		getData()
		setProgress()
		setOptionEnabled()
		getSize()
		getSelectedOption()
		setChecked()
		setButtonEnabled()
		addListItem()
		itemGridItems()
		removeListItem()
		getSliderValue()
		playSound()
		setOptionVisible()
		setImageScale()
		setButtonImage()
		getListSelected()
		setListSelected()
		focus()
		setButtonImages()
		setButtonOverlayImage()
		setButtonCheckedImages()
		setSelectedOption()
		setSize()
		getChecked()
		getText()
		setText()
		setImage()
		setFontColor()
	}
	setmetatable()
	utf8 = {
		charpattern = "[
[23:56:40.935] [Warn] 	next()
	table = {
		unpack()
		sort()
		insert()
		concat()
		move()
		remove()
		pack()
	}
	getmetatable()
	error()
	string = {
		gmatch()
		dump()
		lower()
		rep()
		len()
		upper()
		pack()
		sub()
		find()
		char()
		unpack()
		packsize()
		match()
		reverse()
		byte()
		gsub()
		format()
	}
	root = {
		itemConfig()
		imageSpaces()
		materialFootstepSound()
		loadVersionedJson()
		monsterMovementSettings()
		npcConfig()
		recipesForItem()
		materialPath()
		makeCurrentVersionedJson()
		setConfiguration()
		evalFunction2()
		createBiome()
		projectileGravityMultiplier()
		createItem()
		itemHasTag()
		techType()
		hasTech()
		createTreasure()
		behaviorModule()
		evalFunction()
		getMatchingTenants()
		generateName()
		imageSize()
		questConfig()
		materialMiningSound()
		assetJson()
		treeStemDirectory()
		tenantConfig()
		isTreasurePool()
		npcVariant()
		getConfigurationPath()
		materialHealth()
		getConfiguration()
		monsterPortrait()
		monsterSkillParameter()
		itemType()
		setConfigurationPath()
		nonEmptyRegion()
		itemTags()
		npcPortrait()
		techConfig()
		treeFoliageDirectory()
		liquidStatusEffects()
		projectileConfig()
	}
	p()
	jresize()
	jremove()
	rawget()
	ipairs()
	rawequal()
	tonumber()
	_VERSION = "Lua 5.3"
	self = {
	}
	config = {
		getParameter()
	}
	widget = {
		clearListItems()
		setImageRotation()
		setVisible()
		setPosition()
		setData()
		blur()
		getPosition()
		getData()
		setProgress()
		setOptionEnabled()
		getSize()
		getSelectedOption()
		setChecked()
		setButtonEnabled()
		addListItem()
		itemGridItems()
		removeListItem()
		getSliderValue()
		playSound()
		setOptionVisible()
		setImageScale()
		setButtonImage()
		getListSelected()
		setListSelected()
		focus()
		setButtonImages()
		setButtonOverlayImage()
		setButtonCheckedImages()
		setSelectedOption()
		setSize()
		getChecked()
		getText()
		setText()
		setImage()
		setFontColor()
	}
	setmetatable()
	utf8 = {
		charpattern = "[
[23:56:44.734] [Warn] 	next()
	table = {
		unpack()
		sort()
		insert()
		concat()
		move()
		remove()
		pack()
	}
	getmetatable()
	error()
	string = {
		gmatch()
		dump()
		lower()
		rep()
		len()
		upper()
		pack()
		sub()
		find()
		char()
		unpack()
		packsize()
		match()
		reverse()
		byte()
		gsub()
		format()
	}
	root = {
		itemConfig()
		imageSpaces()
		materialFootstepSound()
		loadVersionedJson()
		monsterMovementSettings()
		npcConfig()
		recipesForItem()
		materialPath()
		makeCurrentVersionedJson()
		setConfiguration()
		evalFunction2()
		createBiome()
		projectileGravityMultiplier()
		createItem()
		itemHasTag()
		techType()
		hasTech()
		createTreasure()
		behaviorModule()
		evalFunction()
		getMatchingTenants()
		generateName()
		imageSize()
		questConfig()
		materialMiningSound()
		assetJson()
		treeStemDirectory()
		tenantConfig()
		isTreasurePool()
		npcVariant()
		getConfigurationPath()
		materialHealth()
		getConfiguration()
		monsterPortrait()
		monsterSkillParameter()
		itemType()
		setConfigurationPath()
		nonEmptyRegion()
		itemTags()
		npcPortrait()
		techConfig()
		treeFoliageDirectory()
		liquidStatusEffects()
		projectileConfig()
	}
	p()
	jresize()
	jremove()
	rawget()
	ipairs()
	rawequal()
	tonumber()
	_VERSION = "Lua 5.3"
	self = {
	}
	config = {
		getParameter()
	}
	widget = {
		clearListItems()
		setImageRotation()
		setVisible()
		setPosition()
		setData()
		blur()
		getPosition()
		getData()
		setProgress()
		setOptionEnabled()
		getSize()
		getSelectedOption()
		setChecked()
		setButtonEnabled()
		addListItem()
		itemGridItems()
		removeListItem()
		getSliderValue()
		playSound()
		setOptionVisible()
		setImageScale()
		setButtonImage()
		getListSelected()
		setListSelected()
		focus()
		setButtonImages()
		setButtonOverlayImage()
		setButtonCheckedImages()
		setSelectedOption()
		setSize()
		getChecked()
		getText()
		setText()
		setImage()
		setFontColor()
	}
	setmetatable()
	utf8 = {
		charpattern = "[
[23:56:46.284] [Warn] 	next()
	table = {
		unpack()
		sort()
		insert()
		concat()
		move()
		remove()
		pack()
	}
	getmetatable()
	error()
	string = {
		gmatch()
		dump()
		lower()
		rep()
		len()
		upper()
		pack()
		sub()
		find()
		char()
		unpack()
		packsize()
		match()
		reverse()
		byte()
		gsub()
		format()
	}
	root = {
		itemConfig()
		imageSpaces()
		materialFootstepSound()
		loadVersionedJson()
		monsterMovementSettings()
		npcConfig()
		recipesForItem()
		materialPath()
		makeCurrentVersionedJson()
		setConfiguration()
		evalFunction2()
		createBiome()
		projectileGravityMultiplier()
		createItem()
		itemHasTag()
		techType()
		hasTech()
		createTreasure()
		behaviorModule()
		evalFunction()
		getMatchingTenants()
		generateName()
		imageSize()
		questConfig()
		materialMiningSound()
		assetJson()
		treeStemDirectory()
		tenantConfig()
		isTreasurePool()
		npcVariant()
		getConfigurationPath()
		materialHealth()
		getConfiguration()
		monsterPortrait()
		monsterSkillParameter()
		itemType()
		setConfigurationPath()
		nonEmptyRegion()
		itemTags()
		npcPortrait()
		techConfig()
		treeFoliageDirectory()
		liquidStatusEffects()
		projectileConfig()
	}
	p()
	jresize()
	jremove()
	rawget()
	ipairs()
	rawequal()
	tonumber()
	_VERSION = "Lua 5.3"
	self = {
	}
	config = {
		getParameter()
	}
	widget = {
		clearListItems()
		setImageRotation()
		setVisible()
		setPosition()
		setData()
		blur()
		getPosition()
		getData()
		setProgress()
		setOptionEnabled()
		getSize()
		getSelectedOption()
		setChecked()
		setButtonEnabled()
		addListItem()
		itemGridItems()
		removeListItem()
		getSliderValue()
		playSound()
		setOptionVisible()
		setImageScale()
		setButtonImage()
		getListSelected()
		setListSelected()
		focus()
		setButtonImages()
		setButtonOverlayImage()
		setButtonCheckedImages()
		setSelectedOption()
		setSize()
		getChecked()
		getText()
		setText()
		setImage()
		setFontColor()
	}
	setmetatable()
	utf8 = {
		charpattern = "[
[23:56:47.886] [Warn] 	next()
	table = {
		unpack()
		sort()
		insert()
		concat()
		move()
		remove()
		pack()
	}
	getmetatable()
	error()
	string = {
		gmatch()
		dump()
		lower()
		rep()
		len()
		upper()
		pack()
		sub()
		find()
		char()
		unpack()
		packsize()
		match()
		reverse()
		byte()
		gsub()
		format()
	}
	root = {
		itemConfig()
		imageSpaces()
		materialFootstepSound()
		loadVersionedJson()
		monsterMovementSettings()
		npcConfig()
		recipesForItem()
		materialPath()
		makeCurrentVersionedJson()
		setConfiguration()
		evalFunction2()
		createBiome()
		projectileGravityMultiplier()
		createItem()
		itemHasTag()
		techType()
		hasTech()
		createTreasure()
		behaviorModule()
		evalFunction()
		getMatchingTenants()
		generateName()
		imageSize()
		questConfig()
		materialMiningSound()
		assetJson()
		treeStemDirectory()
		tenantConfig()
		isTreasurePool()
		npcVariant()
		getConfigurationPath()
		materialHealth()
		getConfiguration()
		monsterPortrait()
		monsterSkillParameter()
		itemType()
		setConfigurationPath()
		nonEmptyRegion()
		itemTags()
		npcPortrait()
		techConfig()
		treeFoliageDirectory()
		liquidStatusEffects()
		projectileConfig()
	}
	p()
	jresize()
	jremove()
	rawget()
	ipairs()
	rawequal()
	tonumber()
	_VERSION = "Lua 5.3"
	self = {
	}
	config = {
		getParameter()
	}
	widget = {
		clearListItems()
		setImageRotation()
		setVisible()
		setPosition()
		setData()
		blur()
		getPosition()
		getData()
		setProgress()
		setOptionEnabled()
		getSize()
		getSelectedOption()
		setChecked()
		setButtonEnabled()
		addListItem()
		itemGridItems()
		removeListItem()
		getSliderValue()
		playSound()
		setOptionVisible()
		setImageScale()
		setButtonImage()
		getListSelected()
		setListSelected()
		focus()
		setButtonImages()
		setButtonOverlayImage()
		setButtonCheckedImages()
		setSelectedOption()
		setSize()
		getChecked()
		getText()
		setText()
		setImage()
		setFontColor()
	}
	setmetatable()
	utf8 = {
		charpattern = "[
[23:56:49.201] [Warn] 	next()
	table = {
		unpack()
		sort()
		insert()
		concat()
		move()
		remove()
		pack()
	}
	getmetatable()
	error()
	string = {
		gmatch()
		dump()
		lower()
		rep()
		len()
		upper()
		pack()
		sub()
		find()
		char()
		unpack()
		packsize()
		match()
		reverse()
		byte()
		gsub()
		format()
	}
	root = {
		itemConfig()
		imageSpaces()
		materialFootstepSound()
		loadVersionedJson()
		monsterMovementSettings()
		npcConfig()
		recipesForItem()
		materialPath()
		makeCurrentVersionedJson()
		setConfiguration()
		evalFunction2()
		createBiome()
		projectileGravityMultiplier()
		createItem()
		itemHasTag()
		techType()
		hasTech()
		createTreasure()
		behaviorModule()
		evalFunction()
		getMatchingTenants()
		generateName()
		imageSize()
		questConfig()
		materialMiningSound()
		assetJson()
		treeStemDirectory()
		tenantConfig()
		isTreasurePool()
		npcVariant()
		getConfigurationPath()
		materialHealth()
		getConfiguration()
		monsterPortrait()
		monsterSkillParameter()
		itemType()
		setConfigurationPath()
		nonEmptyRegion()
		itemTags()
		npcPortrait()
		techConfig()
		treeFoliageDirectory()
		liquidStatusEffects()
		projectileConfig()
	}
	p()
	jresize()
	jremove()
	rawget()
	ipairs()
	rawequal()
	tonumber()
	_VERSION = "Lua 5.3"
	self = {
	}
	config = {
		getParameter()
	}
	widget = {
		clearListItems()
		setImageRotation()
		setVisible()
		setPosition()
		setData()
		blur()
		getPosition()
		getData()
		setProgress()
		setOptionEnabled()
		getSize()
		getSelectedOption()
		setChecked()
		setButtonEnabled()
		addListItem()
		itemGridItems()
		removeListItem()
		getSliderValue()
		playSound()
		setOptionVisible()
		setImageScale()
		setButtonImage()
		getListSelected()
		setListSelected()
		focus()
		setButtonImages()
		setButtonOverlayImage()
		setButtonCheckedImages()
		setSelectedOption()
		setSize()
		getChecked()
		getText()
		setText()
		setImage()
		setFontColor()
	}
	setmetatable()
	utf8 = {
		charpattern = "[
[23:57:01.686] [Warn] 	next()
	table = {
		unpack()
		sort()
		insert()
		concat()
		move()
		remove()
		pack()
	}
	getmetatable()
	error()
	string = {
		gmatch()
		dump()
		lower()
		rep()
		len()
		upper()
		pack()
		sub()
		find()
		char()
		unpack()
		packsize()
		match()
		reverse()
		byte()
		gsub()
		format()
	}
	root = {
		itemConfig()
		imageSpaces()
		materialFootstepSound()
		loadVersionedJson()
		monsterMovementSettings()
		npcConfig()
		recipesForItem()
		materialPath()
		makeCurrentVersionedJson()
		setConfiguration()
		evalFunction2()
		createBiome()
		projectileGravityMultiplier()
		createItem()
		itemHasTag()
		techType()
		hasTech()
		createTreasure()
		behaviorModule()
		evalFunction()
		getMatchingTenants()
		generateName()
		imageSize()
		questConfig()
		materialMiningSound()
		assetJson()
		treeStemDirectory()
		tenantConfig()
		isTreasurePool()
		npcVariant()
		getConfigurationPath()
		materialHealth()
		getConfiguration()
		monsterPortrait()
		monsterSkillParameter()
		itemType()
		setConfigurationPath()
		nonEmptyRegion()
		itemTags()
		npcPortrait()
		techConfig()
		treeFoliageDirectory()
		liquidStatusEffects()
		projectileConfig()
	}
	p()
	jresize()
	jremove()
	rawget()
	ipairs()
	rawequal()
	tonumber()
	_VERSION = "Lua 5.3"
	self = {
	}
	config = {
		getParameter()
	}
	widget = {
		clearListItems()
		setImageRotation()
		setVisible()
		setPosition()
		setData()
		blur()
		getPosition()
		getData()
		setProgress()
		setOptionEnabled()
		getSize()
		getSelectedOption()
		setChecked()
		setButtonEnabled()
		addListItem()
		itemGridItems()
		removeListItem()
		getSliderValue()
		playSound()
		setOptionVisible()
		setImageScale()
		setButtonImage()
		getListSelected()
		setListSelected()
		focus()
		setButtonImages()
		setButtonOverlayImage()
		setButtonCheckedImages()
		setSelectedOption()
		setSize()
		getChecked()
		getText()
		setText()
		setImage()
		setFontColor()
	}
	setmetatable()
	utf8 = {
		charpattern = "[
[23:57:08.470] [Warn] 	next()
	table = {
		unpack()
		sort()
		insert()
		concat()
		move()
		remove()
		pack()
	}
	getmetatable()
	error()
	string = {
		gmatch()
		dump()
		lower()
		rep()
		len()
		upper()
		pack()
		sub()
		find()
		char()
		unpack()
		packsize()
		match()
		reverse()
		byte()
		gsub()
		format()
	}
	root = {
		itemConfig()
		imageSpaces()
		materialFootstepSound()
		loadVersionedJson()
		monsterMovementSettings()
		npcConfig()
		recipesForItem()
		materialPath()
		makeCurrentVersionedJson()
		setConfiguration()
		evalFunction2()
		createBiome()
		projectileGravityMultiplier()
		createItem()
		itemHasTag()
		techType()
		hasTech()
		createTreasure()
		behaviorModule()
		evalFunction()
		getMatchingTenants()
		generateName()
		imageSize()
		questConfig()
		materialMiningSound()
		assetJson()
		treeStemDirectory()
		tenantConfig()
		isTreasurePool()
		npcVariant()
		getConfigurationPath()
		materialHealth()
		getConfiguration()
		monsterPortrait()
		monsterSkillParameter()
		itemType()
		setConfigurationPath()
		nonEmptyRegion()
		itemTags()
		npcPortrait()
		techConfig()
		treeFoliageDirectory()
		liquidStatusEffects()
		projectileConfig()
	}
	p()
	jresize()
	jremove()
	rawget()
	ipairs()
	rawequal()
	tonumber()
	_VERSION = "Lua 5.3"
	self = {
	}
	config = {
		getParameter()
	}
	widget = {
		clearListItems()
		setImageRotation()
		setVisible()
		setPosition()
		setData()
		blur()
		getPosition()
		getData()
		setProgress()
		setOptionEnabled()
		getSize()
		getSelectedOption()
		setChecked()
		setButtonEnabled()
		addListItem()
		itemGridItems()
		removeListItem()
		getSliderValue()
		playSound()
		setOptionVisible()
		setImageScale()
		setButtonImage()
		getListSelected()
		setListSelected()
		focus()
		setButtonImages()
		setButtonOverlayImage()
		setButtonCheckedImages()
		setSelectedOption()
		setSize()
		getChecked()
		getText()
		setText()
		setImage()
		setFontColor()
	}
	setmetatable()
	utf8 = {
		charpattern = "[
[23:57:30.704] [Warn] 	next()
	table = {
		unpack()
		sort()
		insert()
		concat()
		move()
		remove()
		pack()
	}
	getmetatable()
	error()
	string = {
		gmatch()
		dump()
		lower()
		rep()
		len()
		upper()
		pack()
		sub()
		find()
		char()
		unpack()
		packsize()
		match()
		reverse()
		byte()
		gsub()
		format()
	}
	root = {
		itemConfig()
		imageSpaces()
		materialFootstepSound()
		loadVersionedJson()
		monsterMovementSettings()
		npcConfig()
		recipesForItem()
		materialPath()
		makeCurrentVersionedJson()
		setConfiguration()
		evalFunction2()
		createBiome()
		projectileGravityMultiplier()
		createItem()
		itemHasTag()
		techType()
		hasTech()
		createTreasure()
		behaviorModule()
		evalFunction()
		getMatchingTenants()
		generateName()
		imageSize()
		questConfig()
		materialMiningSound()
		assetJson()
		treeStemDirectory()
		tenantConfig()
		isTreasurePool()
		npcVariant()
		getConfigurationPath()
		materialHealth()
		getConfiguration()
		monsterPortrait()
		monsterSkillParameter()
		itemType()
		setConfigurationPath()
		nonEmptyRegion()
		itemTags()
		npcPortrait()
		techConfig()
		treeFoliageDirectory()
		liquidStatusEffects()
		projectileConfig()
	}
	p()
	jresize()
	jremove()
	rawget()
	ipairs()
	rawequal()
	tonumber()
	_VERSION = "Lua 5.3"
	self = {
	}
	config = {
		getParameter()
	}
	widget = {
		clearListItems()
		setImageRotation()
		setVisible()
		setPosition()
		setData()
		blur()
		getPosition()
		getData()
		setProgress()
		setOptionEnabled()
		getSize()
		getSelectedOption()
		setChecked()
		setButtonEnabled()
		addListItem()
		itemGridItems()
		removeListItem()
		getSliderValue()
		playSound()
		setOptionVisible()
		setImageScale()
		setButtonImage()
		getListSelected()
		setListSelected()
		focus()
		setButtonImages()
		setButtonOverlayImage()
		setButtonCheckedImages()
		setSelectedOption()
		setSize()
		getChecked()
		getText()
		setText()
		setImage()
		setFontColor()
	}
	setmetatable()
	utf8 = {
		charpattern = "[
[23:57:32.150] [Warn] 	next()
	table = {
		unpack()
		sort()
		insert()
		concat()
		move()
		remove()
		pack()
	}
	getmetatable()
	error()
	string = {
		gmatch()
		dump()
		lower()
		rep()
		len()
		upper()
		pack()
		sub()
		find()
		char()
		unpack()
		packsize()
		match()
		reverse()
		byte()
		gsub()
		format()
	}
	root = {
		itemConfig()
		imageSpaces()
		materialFootstepSound()
		loadVersionedJson()
		monsterMovementSettings()
		npcConfig()
		recipesForItem()
		materialPath()
		makeCurrentVersionedJson()
		setConfiguration()
		evalFunction2()
		createBiome()
		projectileGravityMultiplier()
		createItem()
		itemHasTag()
		techType()
		hasTech()
		createTreasure()
		behaviorModule()
		evalFunction()
		getMatchingTenants()
		generateName()
		imageSize()
		questConfig()
		materialMiningSound()
		assetJson()
		treeStemDirectory()
		tenantConfig()
		isTreasurePool()
		npcVariant()
		getConfigurationPath()
		materialHealth()
		getConfiguration()
		monsterPortrait()
		monsterSkillParameter()
		itemType()
		setConfigurationPath()
		nonEmptyRegion()
		itemTags()
		npcPortrait()
		techConfig()
		treeFoliageDirectory()
		liquidStatusEffects()
		projectileConfig()
	}
	p()
	jresize()
	jremove()
	rawget()
	ipairs()
	rawequal()
	tonumber()
	_VERSION = "Lua 5.3"
	self = {
	}
	config = {
		getParameter()
	}
	widget = {
		clearListItems()
		setImageRotation()
		setVisible()
		setPosition()
		setData()
		blur()
		getPosition()
		getData()
		setProgress()
		setOptionEnabled()
		getSize()
		getSelectedOption()
		setChecked()
		setButtonEnabled()
		addListItem()
		itemGridItems()
		removeListItem()
		getSliderValue()
		playSound()
		setOptionVisible()
		setImageScale()
		setButtonImage()
		getListSelected()
		setListSelected()
		focus()
		setButtonImages()
		setButtonOverlayImage()
		setButtonCheckedImages()
		setSelectedOption()
		setSize()
		getChecked()
		getText()
		setText()
		setImage()
		setFontColor()
	}
	setmetatable()
	utf8 = {
		charpattern = "[
[23:57:33.135] [Warn] 	next()
	table = {
		unpack()
		sort()
		insert()
		concat()
		move()
		remove()
		pack()
	}
	getmetatable()
	error()
	string = {
		gmatch()
		dump()
		lower()
		rep()
		len()
		upper()
		pack()
		sub()
		find()
		char()
		unpack()
		packsize()
		match()
		reverse()
		byte()
		gsub()
		format()
	}
	root = {
		itemConfig()
		imageSpaces()
		materialFootstepSound()
		loadVersionedJson()
		monsterMovementSettings()
		npcConfig()
		recipesForItem()
		materialPath()
		makeCurrentVersionedJson()
		setConfiguration()
		evalFunction2()
		createBiome()
		projectileGravityMultiplier()
		createItem()
		itemHasTag()
		techType()
		hasTech()
		createTreasure()
		behaviorModule()
		evalFunction()
		getMatchingTenants()
		generateName()
		imageSize()
		questConfig()
		materialMiningSound()
		assetJson()
		treeStemDirectory()
		tenantConfig()
		isTreasurePool()
		npcVariant()
		getConfigurationPath()
		materialHealth()
		getConfiguration()
		monsterPortrait()
		monsterSkillParameter()
		itemType()
		setConfigurationPath()
		nonEmptyRegion()
		itemTags()
		npcPortrait()
		techConfig()
		treeFoliageDirectory()
		liquidStatusEffects()
		projectileConfig()
	}
	p()
	jresize()
	jremove()
	rawget()
	ipairs()
	rawequal()
	tonumber()
	_VERSION = "Lua 5.3"
	self = {
	}
	config = {
		getParameter()
	}
	widget = {
		clearListItems()
		setImageRotation()
		setVisible()
		setPosition()
		setData()
		blur()
		getPosition()
		getData()
		setProgress()
		setOptionEnabled()
		getSize()
		getSelectedOption()
		setChecked()
		setButtonEnabled()
		addListItem()
		itemGridItems()
		removeListItem()
		getSliderValue()
		playSound()
		setOptionVisible()
		setImageScale()
		setButtonImage()
		getListSelected()
		setListSelected()
		focus()
		setButtonImages()
		setButtonOverlayImage()
		setButtonCheckedImages()
		setSelectedOption()
		setSize()
		getChecked()
		getText()
		setText()
		setImage()
		setFontColor()
	}
	setmetatable()
	utf8 = {
		charpattern = "[
[23:57:45.086] [Warn] 	next()
	table = {
		unpack()
		sort()
		insert()
		concat()
		move()
		remove()
		pack()
	}
	getmetatable()
	error()
	string = {
		gmatch()
		dump()
		lower()
		rep()
		len()
		upper()
		pack()
		sub()
		find()
		char()
		unpack()
		packsize()
		match()
		reverse()
		byte()
		gsub()
		format()
	}
	root = {
		itemConfig()
		imageSpaces()
		materialFootstepSound()
		loadVersionedJson()
		monsterMovementSettings()
		npcConfig()
		recipesForItem()
		materialPath()
		makeCurrentVersionedJson()
		setConfiguration()
		evalFunction2()
		createBiome()
		projectileGravityMultiplier()
		createItem()
		itemHasTag()
		techType()
		hasTech()
		createTreasure()
		behaviorModule()
		evalFunction()
		getMatchingTenants()
		generateName()
		imageSize()
		questConfig()
		materialMiningSound()
		assetJson()
		treeStemDirectory()
		tenantConfig()
		isTreasurePool()
		npcVariant()
		getConfigurationPath()
		materialHealth()
		getConfiguration()
		monsterPortrait()
		monsterSkillParameter()
		itemType()
		setConfigurationPath()
		nonEmptyRegion()
		itemTags()
		npcPortrait()
		techConfig()
		treeFoliageDirectory()
		liquidStatusEffects()
		projectileConfig()
	}
	p()
	jresize()
	jremove()
	rawget()
	ipairs()
	rawequal()
	tonumber()
	_VERSION = "Lua 5.3"
	self = {
	}
	config = {
		getParameter()
	}
	widget = {
		clearListItems()
		setImageRotation()
		setVisible()
		setPosition()
		setData()
		blur()
		getPosition()
		getData()
		setProgress()
		setOptionEnabled()
		getSize()
		getSelectedOption()
		setChecked()
		setButtonEnabled()
		addListItem()
		itemGridItems()
		removeListItem()
		getSliderValue()
		playSound()
		setOptionVisible()
		setImageScale()
		setButtonImage()
		getListSelected()
		setListSelected()
		focus()
		setButtonImages()
		setButtonOverlayImage()
		setButtonCheckedImages()
		setSelectedOption()
		setSize()
		getChecked()
		getText()
		setText()
		setImage()
		setFontColor()
	}
	setmetatable()
	utf8 = {
		charpattern = "[
[23:58:01.568] [Warn] 	next()
	table = {
		unpack()
		sort()
		insert()
		concat()
		move()
		remove()
		pack()
	}
	getmetatable()
	error()
	string = {
		gmatch()
		dump()
		lower()
		rep()
		len()
		upper()
		pack()
		sub()
		find()
		char()
		unpack()
		packsize()
		match()
		reverse()
		byte()
		gsub()
		format()
	}
	root = {
		itemConfig()
		imageSpaces()
		materialFootstepSound()
		loadVersionedJson()
		monsterMovementSettings()
		npcConfig()
		recipesForItem()
		materialPath()
		makeCurrentVersionedJson()
		setConfiguration()
		evalFunction2()
		createBiome()
		projectileGravityMultiplier()
		createItem()
		itemHasTag()
		techType()
		hasTech()
		createTreasure()
		behaviorModule()
		evalFunction()
		getMatchingTenants()
		generateName()
		imageSize()
		questConfig()
		materialMiningSound()
		assetJson()
		treeStemDirectory()
		tenantConfig()
		isTreasurePool()
		npcVariant()
		getConfigurationPath()
		materialHealth()
		getConfiguration()
		monsterPortrait()
		monsterSkillParameter()
		itemType()
		setConfigurationPath()
		nonEmptyRegion()
		itemTags()
		npcPortrait()
		techConfig()
		treeFoliageDirectory()
		liquidStatusEffects()
		projectileConfig()
	}
	p()
	jresize()
	jremove()
	rawget()
	ipairs()
	rawequal()
	tonumber()
	_VERSION = "Lua 5.3"
	self = {
	}
	config = {
		getParameter()
	}
	widget = {
		clearListItems()
		setImageRotation()
		setVisible()
		setPosition()
		setData()
		blur()
		getPosition()
		getData()
		setProgress()
		setOptionEnabled()
		getSize()
		getSelectedOption()
		setChecked()
		setButtonEnabled()
		addListItem()
		itemGridItems()
		removeListItem()
		getSliderValue()
		playSound()
		setOptionVisible()
		setImageScale()
		setButtonImage()
		getListSelected()
		setListSelected()
		focus()
		setButtonImages()
		setButtonOverlayImage()
		setButtonCheckedImages()
		setSelectedOption()
		setSize()
		getChecked()
		getText()
		setText()
		setImage()
		setFontColor()
	}
	setmetatable()
	utf8 = {
		charpattern = "[
[23:58:07.164] [Info] [IC] [Sort] Time elapsed: 0.013
[23:58:21.122] [Info] [IC] [Sort] Time elapsed: 0.01
[00:04:15.680] [Info] Skipped event recording for nonexistent entity 27739
[00:07:28.098] [Info] UniverseServer: Loading client ship world ClientShipWorld:40d0c64bbadbfcac62e62a636f4f2308
[00:07:29.133] [Info] UniverseServer: Warping player 1 to ClientShipWorld:40d0c64bbadbfcac62e62a636f4f2308
[00:07:29.222] [Info] UniverseServer: Stopping idle world CelestialWorld:-549421120:-174071947:-77840190:8
[00:07:29.262] [Info] Client received world stop packet, leaving: Removed
[00:08:22.953] [Warn] 	print()
	jremove()
	widget = {
		getChecked()
		setSelectedOption()
		setChecked()
		setImage()
		getSelectedOption()
		setImageRotation()
		setButtonImages()
		getData()
		setImageScale()
		getSliderValue()
		itemGridItems()
		blur()
		setButtonImage()
		setData()
		getListSelected()
		setButtonOverlayImage()
		setListSelected()
		setButtonCheckedImages()
		setPosition()
		setSize()
		setOptionEnabled()
		getPosition()
		removeListItem()
		setText()
		addListItem()
		focus()
		setButtonEnabled()
		getText()
		setProgress()
		getSize()
		playSound()
		setFontColor()
		setOptionVisible()
		clearListItems()
		setVisible()
	}
	type()
	world = {
		destroyLiquid()
		pointTileCollision()
		isNpc()
		entityHealth()
		entityAggressive()
		containerTakeAll()
		entityName()
		objectSpaces()
		containerAddItems()
		platformerPathStart()
		containerItemAt()
		lineTileCollision()
		entityExists()
		playerQuery()
		entityQuery()
		npcLineQuery()
		pointCollision()
		debugLine()
		placeMaterial()
		debugPoint()
		containerItemsCanFit()
		containerClose()
		resolvePolyCollision()
		findPlatformerPath()
		entityVelocity()
		nearestTo()
		spawnStagehand()
		entityMoney()
		mod()
		containerPutItemsAt()
		isTileProtected()
		containerOpen()
		damageTileArea()
		gravity()
		rectCollision()
		sendEntityMessage()
		setProperty()
		timeOfDay()
		spawnProjectile()
		monsterQuery()
		polyCollision()
		debugPoly()
		time()
		entityLineQuery()
		threatLevel()
		spawnVehicle()
		entitySpecies()
		spawnMonster()
		day()
		farmableStage()
		rectTileCollision()
		entityPortrait()
		dayLength()
		containerAvailable()
		containerItemApply()
		entityGender()
		collisionBlocksAlongLine()
		callScriptedEntity()
		spawnTreasure()
		entityDescription()
		entityDamageTeam()
		npcQuery()
		objectQuery()
		tileIsOccupied()
		spawnItem()
		liquidAt()
		entityType()
		xwrap()
		entityUniqueId()
		polyContains()
		containerTakeAt()
		npcType()
		findUniqueEntity()
		loungeableQuery()
		containerStackItems()
		containerConsume()
		lightLevel()
		objectLineQuery()
		stagehandType()
		monsterType()
		spawnNpc()
		entityHandItem()
		itemDropQuery()
		containerItemsFitWhere()
		placeObject()
		getObjectParameter()
		entityHasCountOfItem()
		isMonster()
		containerItems()
		windLevel()
		magnitude()
		distance()
		containerSwapItems()
		breathable()
		getProperty()
		entityPosition()
		underground()
		entityHandItemDescriptor()
		liquidAlongLine()
		containerConsumeAt()
		lineCollision()
		spawnLiquid()
		containerSwapItemsNoCombine()
		placeMod()
		debugText()
		entityCanDamage()
		containerTakeNumItemsAt()
		loungeableOccupied()
		damageTiles()
		containerSize()
		material()
		objectAt()
	}
	utf8 = {
		offset()
		codepoint()
		codes()
		char()
		charpattern = "[
[00:08:25.108] [Info] [IC] [Sort] Time elapsed: 0.011
[00:08:31.606] [Warn] 	print()
	jremove()
	widget = {
		getChecked()
		setSelectedOption()
		setChecked()
		setImage()
		getSelectedOption()
		setImageRotation()
		setButtonImages()
		getData()
		setImageScale()
		getSliderValue()
		itemGridItems()
		blur()
		setButtonImage()
		setData()
		getListSelected()
		setButtonOverlayImage()
		setListSelected()
		setButtonCheckedImages()
		setPosition()
		setSize()
		setOptionEnabled()
		getPosition()
		removeListItem()
		setText()
		addListItem()
		focus()
		setButtonEnabled()
		getText()
		setProgress()
		getSize()
		playSound()
		setFontColor()
		setOptionVisible()
		clearListItems()
		setVisible()
	}
	type()
	world = {
		destroyLiquid()
		pointTileCollision()
		isNpc()
		entityHealth()
		entityAggressive()
		containerTakeAll()
		entityName()
		objectSpaces()
		containerAddItems()
		platformerPathStart()
		containerItemAt()
		lineTileCollision()
		entityExists()
		playerQuery()
		entityQuery()
		npcLineQuery()
		pointCollision()
		debugLine()
		placeMaterial()
		debugPoint()
		containerItemsCanFit()
		containerClose()
		resolvePolyCollision()
		findPlatformerPath()
		entityVelocity()
		nearestTo()
		spawnStagehand()
		entityMoney()
		mod()
		containerPutItemsAt()
		isTileProtected()
		containerOpen()
		damageTileArea()
		gravity()
		rectCollision()
		sendEntityMessage()
		setProperty()
		timeOfDay()
		spawnProjectile()
		monsterQuery()
		polyCollision()
		debugPoly()
		time()
		entityLineQuery()
		threatLevel()
		spawnVehicle()
		entitySpecies()
		spawnMonster()
		day()
		farmableStage()
		rectTileCollision()
		entityPortrait()
		dayLength()
		containerAvailable()
		containerItemApply()
		entityGender()
		collisionBlocksAlongLine()
		callScriptedEntity()
		spawnTreasure()
		entityDescription()
		entityDamageTeam()
		npcQuery()
		objectQuery()
		tileIsOccupied()
		spawnItem()
		liquidAt()
		entityType()
		xwrap()
		entityUniqueId()
		polyContains()
		containerTakeAt()
		npcType()
		findUniqueEntity()
		loungeableQuery()
		containerStackItems()
		containerConsume()
		lightLevel()
		objectLineQuery()
		stagehandType()
		monsterType()
		spawnNpc()
		entityHandItem()
		itemDropQuery()
		containerItemsFitWhere()
		placeObject()
		getObjectParameter()
		entityHasCountOfItem()
		isMonster()
		containerItems()
		windLevel()
		magnitude()
		distance()
		containerSwapItems()
		breathable()
		getProperty()
		entityPosition()
		underground()
		entityHandItemDescriptor()
		liquidAlongLine()
		containerConsumeAt()
		lineCollision()
		spawnLiquid()
		containerSwapItemsNoCombine()
		placeMod()
		debugText()
		entityCanDamage()
		containerTakeNumItemsAt()
		loungeableOccupied()
		damageTiles()
		containerSize()
		material()
		objectAt()
	}
	utf8 = {
		offset()
		codepoint()
		codes()
		char()
		charpattern = "[
[00:08:39.043] [Warn] 	print()
	jremove()
	widget = {
		getChecked()
		setSelectedOption()
		setChecked()
		setImage()
		getSelectedOption()
		setImageRotation()
		setButtonImages()
		getData()
		setImageScale()
		getSliderValue()
		itemGridItems()
		blur()
		setButtonImage()
		setData()
		getListSelected()
		setButtonOverlayImage()
		setListSelected()
		setButtonCheckedImages()
		setPosition()
		setSize()
		setOptionEnabled()
		getPosition()
		removeListItem()
		setText()
		addListItem()
		focus()
		setButtonEnabled()
		getText()
		setProgress()
		getSize()
		playSound()
		setFontColor()
		setOptionVisible()
		clearListItems()
		setVisible()
	}
	type()
	world = {
		destroyLiquid()
		pointTileCollision()
		isNpc()
		entityHealth()
		entityAggressive()
		containerTakeAll()
		entityName()
		objectSpaces()
		containerAddItems()
		platformerPathStart()
		containerItemAt()
		lineTileCollision()
		entityExists()
		playerQuery()
		entityQuery()
		npcLineQuery()
		pointCollision()
		debugLine()
		placeMaterial()
		debugPoint()
		containerItemsCanFit()
		containerClose()
		resolvePolyCollision()
		findPlatformerPath()
		entityVelocity()
		nearestTo()
		spawnStagehand()
		entityMoney()
		mod()
		containerPutItemsAt()
		isTileProtected()
		containerOpen()
		damageTileArea()
		gravity()
		rectCollision()
		sendEntityMessage()
		setProperty()
		timeOfDay()
		spawnProjectile()
		monsterQuery()
		polyCollision()
		debugPoly()
		time()
		entityLineQuery()
		threatLevel()
		spawnVehicle()
		entitySpecies()
		spawnMonster()
		day()
		farmableStage()
		rectTileCollision()
		entityPortrait()
		dayLength()
		containerAvailable()
		containerItemApply()
		entityGender()
		collisionBlocksAlongLine()
		callScriptedEntity()
		spawnTreasure()
		entityDescription()
		entityDamageTeam()
		npcQuery()
		objectQuery()
		tileIsOccupied()
		spawnItem()
		liquidAt()
		entityType()
		xwrap()
		entityUniqueId()
		polyContains()
		containerTakeAt()
		npcType()
		findUniqueEntity()
		loungeableQuery()
		containerStackItems()
		containerConsume()
		lightLevel()
		objectLineQuery()
		stagehandType()
		monsterType()
		spawnNpc()
		entityHandItem()
		itemDropQuery()
		containerItemsFitWhere()
		placeObject()
		getObjectParameter()
		entityHasCountOfItem()
		isMonster()
		containerItems()
		windLevel()
		magnitude()
		distance()
		containerSwapItems()
		breathable()
		getProperty()
		entityPosition()
		underground()
		entityHandItemDescriptor()
		liquidAlongLine()
		containerConsumeAt()
		lineCollision()
		spawnLiquid()
		containerSwapItemsNoCombine()
		placeMod()
		debugText()
		entityCanDamage()
		containerTakeNumItemsAt()
		loungeableOccupied()
		damageTiles()
		containerSize()
		material()
		objectAt()
	}
	utf8 = {
		offset()
		codepoint()
		codes()
		char()
		charpattern = "[
[00:08:58.552] [Info] UniverseServer: Loading celestial world -549421120:-174071947:-77840190:8
[00:08:58.756] [Info] UniverseServer: Warping player 1 to CelestialWorld:-549421120:-174071947:-77840190:8=65960b76dbc4345d6a78ca55b02f8224
[00:08:58.829] [Info] Client received world stop packet, leaving: Removed
[00:08:59.040] [Info] UniverseServer: Stopping idle world ClientShipWorld:40d0c64bbadbfcac62e62a636f4f2308
[00:11:43.813] [Info] UniverseServer: Loading client ship world ClientShipWorld:40d0c64bbadbfcac62e62a636f4f2308
[00:11:44.819] [Info] UniverseServer: Warping player 1 to ClientShipWorld:40d0c64bbadbfcac62e62a636f4f2308
[00:11:44.917] [Info] UniverseServer: Stopping idle world CelestialWorld:-549421120:-174071947:-77840190:8
[00:11:44.950] [Info] Client received world stop packet, leaving: Removed
[00:12:30.864] [Warn] 	_VERSION = "Lua 5.3"
	jremove()
	rawset()
	sb = {
		makeUuid()
		staticRandomDouble()
		replaceTags()
		staticRandomI32()
		setLogMap()
		logInfo()
		printJson()
		makeRandomSource()
		staticRandomI32Range()
		staticRandomDoubleRange()
		makePerlinSource()
		logError()
		jsonMerge()
		interpolateSinEase()
		logWarn()
		print()
		nrand()
		jsonQuery()
	}
	xpcall()
	tostring()
	jobject()
	utf8 = {
		offset()
		charpattern = "[
[00:12:33.656] [Info] [IC] [Sort] Time elapsed: 0.004
[00:12:47.926] [Info] UniverseServer: Loading celestial world -549421120:-174071947:-77840190:8
[00:12:48.127] [Info] UniverseServer: Warping player 1 to CelestialWorld:-549421120:-174071947:-77840190:8=65960b76dbc4345d6a78ca55b02f8224
[00:12:48.195] [Info] Client received world stop packet, leaving: Removed
[00:12:48.393] [Info] UniverseServer: Stopping idle world ClientShipWorld:40d0c64bbadbfcac62e62a636f4f2308
[00:14:35.274] [Warn] 	script = {
		setUpdateDelta()
		updateDt()
	}
	math = {
		ceil()
		acos()
		rad()
		log()
		sin()
		pi = 3.1415926535898
		maxinteger = 9223372036854775807
		randomseed()
		cos()
		huge = inf
		mininteger = -9223372036854775808
		type()
		floor()
		tointeger()
		abs()
		atan()
		tan()
		sqrt()
		ult()
		asin()
		min()
		modf()
		exp()
		random()
		fmod()
		max()
		deg()
	}
	pairs()
	rawget()
	os = {
		difftime()
		clock()
		time()
	}
	jarray()
	jsize()
	jobject()
	jremove()
	next()
	update()
	type()
	assert()
	player = {
		ownShipWorldId()
		consumeItemWithParameter()
		startQuest()
		giveEssentialItem()
		availableTechs()
		equippedItem()
		setEquippedItem()
		inventoryTags()
		upgradeShip()
		equipTech()
		warp()
		gender()
		enableMission()
		itemsWithTag()
		hasCompletedQuest()
		radioMessage()
		confirm()
		essentialItem()
		getItemWithParameter()
		introComplete()
		recordEvent()
		altHandItemTags()
		addBookmark()
		playTime()
		serverUuid()
		makeTechUnavailable()
		canStartQuest()
		primaryHandItemTags()
		isLounging()
		consumeItem()
		shipUpgrades()
		lounge()
		playCinematic()
		altHandItem()
		primaryHandItem()
		consumeTaggedItem()
		hasItemWithParameter()
		hasQuest()
		hasCountOfItem()
		makeTechAvailable()
		setUniverseFlag()
		hasItem()
		completeMission()
		removeEssentialItem()
		species()
		worldId()
		giveBlueprint()
		giveItem()
		setIntroComplete()
		equippedTech()
		enabledTechs()
		enableTech()
		cleanupItems()
	}
	config = {
		getParameter()
	}
	widget = {
		setImage()
		setOptionVisible()
		setImageRotation()
		blur()
		setSelectedOption()
		getText()
		setVisible()
		setButtonCheckedImages()
		getChecked()
		setButtonImage()
		getSelectedOption()
		setData()
		setImageScale()
		setChecked()
		setText()
		itemGridItems()
		getData()
		getListSelected()
		setSize()
		removeListItem()
		setButtonImages()
		setListSelected()
		addListItem()
		getSliderValue()
		clearListItems()
		focus()
		setProgress()
		setPosition()
		playSound()
		getPosition()
		setOptionEnabled()
		setButtonEnabled()
		setFontColor()
		setButtonOverlayImage()
		getSize()
	}
	ipairs()
	utf8 = {
		offset()
		charpattern = "[
[00:14:55.869] [Warn] 	script = {
		setUpdateDelta()
		updateDt()
	}
	math = {
		ceil()
		acos()
		rad()
		log()
		sin()
		pi = 3.1415926535898
		maxinteger = 9223372036854775807
		randomseed()
		cos()
		huge = inf
		mininteger = -9223372036854775808
		type()
		floor()
		tointeger()
		abs()
		atan()
		tan()
		sqrt()
		ult()
		asin()
		min()
		modf()
		exp()
		random()
		fmod()
		max()
		deg()
	}
	pairs()
	rawget()
	os = {
		difftime()
		clock()
		time()
	}
	jarray()
	jsize()
	jobject()
	jremove()
	next()
	update()
	type()
	assert()
	player = {
		ownShipWorldId()
		consumeItemWithParameter()
		startQuest()
		giveEssentialItem()
		availableTechs()
		equippedItem()
		setEquippedItem()
		inventoryTags()
		upgradeShip()
		equipTech()
		warp()
		gender()
		enableMission()
		itemsWithTag()
		hasCompletedQuest()
		radioMessage()
		confirm()
		essentialItem()
		getItemWithParameter()
		introComplete()
		recordEvent()
		altHandItemTags()
		addBookmark()
		playTime()
		serverUuid()
		makeTechUnavailable()
		canStartQuest()
		primaryHandItemTags()
		isLounging()
		consumeItem()
		shipUpgrades()
		lounge()
		playCinematic()
		altHandItem()
		primaryHandItem()
		consumeTaggedItem()
		hasItemWithParameter()
		hasQuest()
		hasCountOfItem()
		makeTechAvailable()
		setUniverseFlag()
		hasItem()
		completeMission()
		removeEssentialItem()
		species()
		worldId()
		giveBlueprint()
		giveItem()
		setIntroComplete()
		equippedTech()
		enabledTechs()
		enableTech()
		cleanupItems()
	}
	config = {
		getParameter()
	}
	widget = {
		setImage()
		setOptionVisible()
		setImageRotation()
		blur()
		setSelectedOption()
		getText()
		setVisible()
		setButtonCheckedImages()
		getChecked()
		setButtonImage()
		getSelectedOption()
		setData()
		setImageScale()
		setChecked()
		setText()
		itemGridItems()
		getData()
		getListSelected()
		setSize()
		removeListItem()
		setButtonImages()
		setListSelected()
		addListItem()
		getSliderValue()
		clearListItems()
		focus()
		setProgress()
		setPosition()
		playSound()
		getPosition()
		setOptionEnabled()
		setButtonEnabled()
		setFontColor()
		setButtonOverlayImage()
		getSize()
	}
	ipairs()
	utf8 = {
		offset()
		charpattern = "[
[00:15:07.877] [Warn] 	script = {
		setUpdateDelta()
		updateDt()
	}
	math = {
		ceil()
		acos()
		rad()
		log()
		sin()
		pi = 3.1415926535898
		maxinteger = 9223372036854775807
		randomseed()
		cos()
		huge = inf
		mininteger = -9223372036854775808
		type()
		floor()
		tointeger()
		abs()
		atan()
		tan()
		sqrt()
		ult()
		asin()
		min()
		modf()
		exp()
		random()
		fmod()
		max()
		deg()
	}
	pairs()
	rawget()
	os = {
		difftime()
		clock()
		time()
	}
	jarray()
	jsize()
	jobject()
	jremove()
	next()
	update()
	type()
	assert()
	player = {
		ownShipWorldId()
		consumeItemWithParameter()
		startQuest()
		giveEssentialItem()
		availableTechs()
		equippedItem()
		setEquippedItem()
		inventoryTags()
		upgradeShip()
		equipTech()
		warp()
		gender()
		enableMission()
		itemsWithTag()
		hasCompletedQuest()
		radioMessage()
		confirm()
		essentialItem()
		getItemWithParameter()
		introComplete()
		recordEvent()
		altHandItemTags()
		addBookmark()
		playTime()
		serverUuid()
		makeTechUnavailable()
		canStartQuest()
		primaryHandItemTags()
		isLounging()
		consumeItem()
		shipUpgrades()
		lounge()
		playCinematic()
		altHandItem()
		primaryHandItem()
		consumeTaggedItem()
		hasItemWithParameter()
		hasQuest()
		hasCountOfItem()
		makeTechAvailable()
		setUniverseFlag()
		hasItem()
		completeMission()
		removeEssentialItem()
		species()
		worldId()
		giveBlueprint()
		giveItem()
		setIntroComplete()
		equippedTech()
		enabledTechs()
		enableTech()
		cleanupItems()
	}
	config = {
		getParameter()
	}
	widget = {
		setImage()
		setOptionVisible()
		setImageRotation()
		blur()
		setSelectedOption()
		getText()
		setVisible()
		setButtonCheckedImages()
		getChecked()
		setButtonImage()
		getSelectedOption()
		setData()
		setImageScale()
		setChecked()
		setText()
		itemGridItems()
		getData()
		getListSelected()
		setSize()
		removeListItem()
		setButtonImages()
		setListSelected()
		addListItem()
		getSliderValue()
		clearListItems()
		focus()
		setProgress()
		setPosition()
		playSound()
		getPosition()
		setOptionEnabled()
		setButtonEnabled()
		setFontColor()
		setButtonOverlayImage()
		getSize()
	}
	ipairs()
	utf8 = {
		offset()
		charpattern = "[
[00:15:18.035] [Warn] 	script = {
		setUpdateDelta()
		updateDt()
	}
	math = {
		ceil()
		acos()
		rad()
		log()
		sin()
		pi = 3.1415926535898
		maxinteger = 9223372036854775807
		randomseed()
		cos()
		huge = inf
		mininteger = -9223372036854775808
		type()
		floor()
		tointeger()
		abs()
		atan()
		tan()
		sqrt()
		ult()
		asin()
		min()
		modf()
		exp()
		random()
		fmod()
		max()
		deg()
	}
	pairs()
	rawget()
	os = {
		difftime()
		clock()
		time()
	}
	jarray()
	jsize()
	jobject()
	jremove()
	next()
	update()
	type()
	assert()
	player = {
		ownShipWorldId()
		consumeItemWithParameter()
		startQuest()
		giveEssentialItem()
		availableTechs()
		equippedItem()
		setEquippedItem()
		inventoryTags()
		upgradeShip()
		equipTech()
		warp()
		gender()
		enableMission()
		itemsWithTag()
		hasCompletedQuest()
		radioMessage()
		confirm()
		essentialItem()
		getItemWithParameter()
		introComplete()
		recordEvent()
		altHandItemTags()
		addBookmark()
		playTime()
		serverUuid()
		makeTechUnavailable()
		canStartQuest()
		primaryHandItemTags()
		isLounging()
		consumeItem()
		shipUpgrades()
		lounge()
		playCinematic()
		altHandItem()
		primaryHandItem()
		consumeTaggedItem()
		hasItemWithParameter()
		hasQuest()
		hasCountOfItem()
		makeTechAvailable()
		setUniverseFlag()
		hasItem()
		completeMission()
		removeEssentialItem()
		species()
		worldId()
		giveBlueprint()
		giveItem()
		setIntroComplete()
		equippedTech()
		enabledTechs()
		enableTech()
		cleanupItems()
	}
	config = {
		getParameter()
	}
	widget = {
		setImage()
		setOptionVisible()
		setImageRotation()
		blur()
		setSelectedOption()
		getText()
		setVisible()
		setButtonCheckedImages()
		getChecked()
		setButtonImage()
		getSelectedOption()
		setData()
		setImageScale()
		setChecked()
		setText()
		itemGridItems()
		getData()
		getListSelected()
		setSize()
		removeListItem()
		setButtonImages()
		setListSelected()
		addListItem()
		getSliderValue()
		clearListItems()
		focus()
		setProgress()
		setPosition()
		playSound()
		getPosition()
		setOptionEnabled()
		setButtonEnabled()
		setFontColor()
		setButtonOverlayImage()
		getSize()
	}
	ipairs()
	utf8 = {
		offset()
		charpattern = "[
[00:15:20.321] [Warn] 	script = {
		setUpdateDelta()
		updateDt()
	}
	math = {
		ceil()
		acos()
		rad()
		log()
		sin()
		pi = 3.1415926535898
		maxinteger = 9223372036854775807
		randomseed()
		cos()
		huge = inf
		mininteger = -9223372036854775808
		type()
		floor()
		tointeger()
		abs()
		atan()
		tan()
		sqrt()
		ult()
		asin()
		min()
		modf()
		exp()
		random()
		fmod()
		max()
		deg()
	}
	pairs()
	rawget()
	os = {
		difftime()
		clock()
		time()
	}
	jarray()
	jsize()
	jobject()
	jremove()
	next()
	update()
	type()
	assert()
	player = {
		ownShipWorldId()
		consumeItemWithParameter()
		startQuest()
		giveEssentialItem()
		availableTechs()
		equippedItem()
		setEquippedItem()
		inventoryTags()
		upgradeShip()
		equipTech()
		warp()
		gender()
		enableMission()
		itemsWithTag()
		hasCompletedQuest()
		radioMessage()
		confirm()
		essentialItem()
		getItemWithParameter()
		introComplete()
		recordEvent()
		altHandItemTags()
		addBookmark()
		playTime()
		serverUuid()
		makeTechUnavailable()
		canStartQuest()
		primaryHandItemTags()
		isLounging()
		consumeItem()
		shipUpgrades()
		lounge()
		playCinematic()
		altHandItem()
		primaryHandItem()
		consumeTaggedItem()
		hasItemWithParameter()
		hasQuest()
		hasCountOfItem()
		makeTechAvailable()
		setUniverseFlag()
		hasItem()
		completeMission()
		removeEssentialItem()
		species()
		worldId()
		giveBlueprint()
		giveItem()
		setIntroComplete()
		equippedTech()
		enabledTechs()
		enableTech()
		cleanupItems()
	}
	config = {
		getParameter()
	}
	widget = {
		setImage()
		setOptionVisible()
		setImageRotation()
		blur()
		setSelectedOption()
		getText()
		setVisible()
		setButtonCheckedImages()
		getChecked()
		setButtonImage()
		getSelectedOption()
		setData()
		setImageScale()
		setChecked()
		setText()
		itemGridItems()
		getData()
		getListSelected()
		setSize()
		removeListItem()
		setButtonImages()
		setListSelected()
		addListItem()
		getSliderValue()
		clearListItems()
		focus()
		setProgress()
		setPosition()
		playSound()
		getPosition()
		setOptionEnabled()
		setButtonEnabled()
		setFontColor()
		setButtonOverlayImage()
		getSize()
	}
	ipairs()
	utf8 = {
		offset()
		charpattern = "[
[00:15:38.696] [Warn] 	script = {
		setUpdateDelta()
		updateDt()
	}
	math = {
		ceil()
		acos()
		rad()
		log()
		sin()
		pi = 3.1415926535898
		maxinteger = 9223372036854775807
		randomseed()
		cos()
		huge = inf
		mininteger = -9223372036854775808
		type()
		floor()
		tointeger()
		abs()
		atan()
		tan()
		sqrt()
		ult()
		asin()
		min()
		modf()
		exp()
		random()
		fmod()
		max()
		deg()
	}
	pairs()
	rawget()
	os = {
		difftime()
		clock()
		time()
	}
	jarray()
	jsize()
	jobject()
	jremove()
	next()
	update()
	type()
	assert()
	player = {
		ownShipWorldId()
		consumeItemWithParameter()
		startQuest()
		giveEssentialItem()
		availableTechs()
		equippedItem()
		setEquippedItem()
		inventoryTags()
		upgradeShip()
		equipTech()
		warp()
		gender()
		enableMission()
		itemsWithTag()
		hasCompletedQuest()
		radioMessage()
		confirm()
		essentialItem()
		getItemWithParameter()
		introComplete()
		recordEvent()
		altHandItemTags()
		addBookmark()
		playTime()
		serverUuid()
		makeTechUnavailable()
		canStartQuest()
		primaryHandItemTags()
		isLounging()
		consumeItem()
		shipUpgrades()
		lounge()
		playCinematic()
		altHandItem()
		primaryHandItem()
		consumeTaggedItem()
		hasItemWithParameter()
		hasQuest()
		hasCountOfItem()
		makeTechAvailable()
		setUniverseFlag()
		hasItem()
		completeMission()
		removeEssentialItem()
		species()
		worldId()
		giveBlueprint()
		giveItem()
		setIntroComplete()
		equippedTech()
		enabledTechs()
		enableTech()
		cleanupItems()
	}
	config = {
		getParameter()
	}
	widget = {
		setImage()
		setOptionVisible()
		setImageRotation()
		blur()
		setSelectedOption()
		getText()
		setVisible()
		setButtonCheckedImages()
		getChecked()
		setButtonImage()
		getSelectedOption()
		setData()
		setImageScale()
		setChecked()
		setText()
		itemGridItems()
		getData()
		getListSelected()
		setSize()
		removeListItem()
		setButtonImages()
		setListSelected()
		addListItem()
		getSliderValue()
		clearListItems()
		focus()
		setProgress()
		setPosition()
		playSound()
		getPosition()
		setOptionEnabled()
		setButtonEnabled()
		setFontColor()
		setButtonOverlayImage()
		getSize()
	}
	ipairs()
	utf8 = {
		offset()
		charpattern = "[
[00:15:59.603] [Warn] 	script = {
		setUpdateDelta()
		updateDt()
	}
	math = {
		ceil()
		acos()
		rad()
		log()
		sin()
		pi = 3.1415926535898
		maxinteger = 9223372036854775807
		randomseed()
		cos()
		huge = inf
		mininteger = -9223372036854775808
		type()
		floor()
		tointeger()
		abs()
		atan()
		tan()
		sqrt()
		ult()
		asin()
		min()
		modf()
		exp()
		random()
		fmod()
		max()
		deg()
	}
	pairs()
	rawget()
	os = {
		difftime()
		clock()
		time()
	}
	jarray()
	jsize()
	jobject()
	jremove()
	next()
	update()
	type()
	assert()
	player = {
		ownShipWorldId()
		consumeItemWithParameter()
		startQuest()
		giveEssentialItem()
		availableTechs()
		equippedItem()
		setEquippedItem()
		inventoryTags()
		upgradeShip()
		equipTech()
		warp()
		gender()
		enableMission()
		itemsWithTag()
		hasCompletedQuest()
		radioMessage()
		confirm()
		essentialItem()
		getItemWithParameter()
		introComplete()
		recordEvent()
		altHandItemTags()
		addBookmark()
		playTime()
		serverUuid()
		makeTechUnavailable()
		canStartQuest()
		primaryHandItemTags()
		isLounging()
		consumeItem()
		shipUpgrades()
		lounge()
		playCinematic()
		altHandItem()
		primaryHandItem()
		consumeTaggedItem()
		hasItemWithParameter()
		hasQuest()
		hasCountOfItem()
		makeTechAvailable()
		setUniverseFlag()
		hasItem()
		completeMission()
		removeEssentialItem()
		species()
		worldId()
		giveBlueprint()
		giveItem()
		setIntroComplete()
		equippedTech()
		enabledTechs()
		enableTech()
		cleanupItems()
	}
	config = {
		getParameter()
	}
	widget = {
		setImage()
		setOptionVisible()
		setImageRotation()
		blur()
		setSelectedOption()
		getText()
		setVisible()
		setButtonCheckedImages()
		getChecked()
		setButtonImage()
		getSelectedOption()
		setData()
		setImageScale()
		setChecked()
		setText()
		itemGridItems()
		getData()
		getListSelected()
		setSize()
		removeListItem()
		setButtonImages()
		setListSelected()
		addListItem()
		getSliderValue()
		clearListItems()
		focus()
		setProgress()
		setPosition()
		playSound()
		getPosition()
		setOptionEnabled()
		setButtonEnabled()
		setFontColor()
		setButtonOverlayImage()
		getSize()
	}
	ipairs()
	utf8 = {
		offset()
		charpattern = "[
[00:16:01.423] [Warn] 	script = {
		setUpdateDelta()
		updateDt()
	}
	math = {
		ceil()
		acos()
		rad()
		log()
		sin()
		pi = 3.1415926535898
		maxinteger = 9223372036854775807
		randomseed()
		cos()
		huge = inf
		mininteger = -9223372036854775808
		type()
		floor()
		tointeger()
		abs()
		atan()
		tan()
		sqrt()
		ult()
		asin()
		min()
		modf()
		exp()
		random()
		fmod()
		max()
		deg()
	}
	pairs()
	rawget()
	os = {
		difftime()
		clock()
		time()
	}
	jarray()
	jsize()
	jobject()
	jremove()
	next()
	update()
	type()
	assert()
	player = {
		ownShipWorldId()
		consumeItemWithParameter()
		startQuest()
		giveEssentialItem()
		availableTechs()
		equippedItem()
		setEquippedItem()
		inventoryTags()
		upgradeShip()
		equipTech()
		warp()
		gender()
		enableMission()
		itemsWithTag()
		hasCompletedQuest()
		radioMessage()
		confirm()
		essentialItem()
		getItemWithParameter()
		introComplete()
		recordEvent()
		altHandItemTags()
		addBookmark()
		playTime()
		serverUuid()
		makeTechUnavailable()
		canStartQuest()
		primaryHandItemTags()
		isLounging()
		consumeItem()
		shipUpgrades()
		lounge()
		playCinematic()
		altHandItem()
		primaryHandItem()
		consumeTaggedItem()
		hasItemWithParameter()
		hasQuest()
		hasCountOfItem()
		makeTechAvailable()
		setUniverseFlag()
		hasItem()
		completeMission()
		removeEssentialItem()
		species()
		worldId()
		giveBlueprint()
		giveItem()
		setIntroComplete()
		equippedTech()
		enabledTechs()
		enableTech()
		cleanupItems()
	}
	config = {
		getParameter()
	}
	widget = {
		setImage()
		setOptionVisible()
		setImageRotation()
		blur()
		setSelectedOption()
		getText()
		setVisible()
		setButtonCheckedImages()
		getChecked()
		setButtonImage()
		getSelectedOption()
		setData()
		setImageScale()
		setChecked()
		setText()
		itemGridItems()
		getData()
		getListSelected()
		setSize()
		removeListItem()
		setButtonImages()
		setListSelected()
		addListItem()
		getSliderValue()
		clearListItems()
		focus()
		setProgress()
		setPosition()
		playSound()
		getPosition()
		setOptionEnabled()
		setButtonEnabled()
		setFontColor()
		setButtonOverlayImage()
		getSize()
	}
	ipairs()
	utf8 = {
		offset()
		charpattern = "[
[00:16:03.101] [Warn] 	script = {
		setUpdateDelta()
		updateDt()
	}
	math = {
		ceil()
		acos()
		rad()
		log()
		sin()
		pi = 3.1415926535898
		maxinteger = 9223372036854775807
		randomseed()
		cos()
		huge = inf
		mininteger = -9223372036854775808
		type()
		floor()
		tointeger()
		abs()
		atan()
		tan()
		sqrt()
		ult()
		asin()
		min()
		modf()
		exp()
		random()
		fmod()
		max()
		deg()
	}
	pairs()
	rawget()
	os = {
		difftime()
		clock()
		time()
	}
	jarray()
	jsize()
	jobject()
	jremove()
	next()
	update()
	type()
	assert()
	player = {
		ownShipWorldId()
		consumeItemWithParameter()
		startQuest()
		giveEssentialItem()
		availableTechs()
		equippedItem()
		setEquippedItem()
		inventoryTags()
		upgradeShip()
		equipTech()
		warp()
		gender()
		enableMission()
		itemsWithTag()
		hasCompletedQuest()
		radioMessage()
		confirm()
		essentialItem()
		getItemWithParameter()
		introComplete()
		recordEvent()
		altHandItemTags()
		addBookmark()
		playTime()
		serverUuid()
		makeTechUnavailable()
		canStartQuest()
		primaryHandItemTags()
		isLounging()
		consumeItem()
		shipUpgrades()
		lounge()
		playCinematic()
		altHandItem()
		primaryHandItem()
		consumeTaggedItem()
		hasItemWithParameter()
		hasQuest()
		hasCountOfItem()
		makeTechAvailable()
		setUniverseFlag()
		hasItem()
		completeMission()
		removeEssentialItem()
		species()
		worldId()
		giveBlueprint()
		giveItem()
		setIntroComplete()
		equippedTech()
		enabledTechs()
		enableTech()
		cleanupItems()
	}
	config = {
		getParameter()
	}
	widget = {
		setImage()
		setOptionVisible()
		setImageRotation()
		blur()
		setSelectedOption()
		getText()
		setVisible()
		setButtonCheckedImages()
		getChecked()
		setButtonImage()
		getSelectedOption()
		setData()
		setImageScale()
		setChecked()
		setText()
		itemGridItems()
		getData()
		getListSelected()
		setSize()
		removeListItem()
		setButtonImages()
		setListSelected()
		addListItem()
		getSliderValue()
		clearListItems()
		focus()
		setProgress()
		setPosition()
		playSound()
		getPosition()
		setOptionEnabled()
		setButtonEnabled()
		setFontColor()
		setButtonOverlayImage()
		getSize()
	}
	ipairs()
	utf8 = {
		offset()
		charpattern = "[
[00:16:05.129] [Warn] 	script = {
		setUpdateDelta()
		updateDt()
	}
	math = {
		ceil()
		acos()
		rad()
		log()
		sin()
		pi = 3.1415926535898
		maxinteger = 9223372036854775807
		randomseed()
		cos()
		huge = inf
		mininteger = -9223372036854775808
		type()
		floor()
		tointeger()
		abs()
		atan()
		tan()
		sqrt()
		ult()
		asin()
		min()
		modf()
		exp()
		random()
		fmod()
		max()
		deg()
	}
	pairs()
	rawget()
	os = {
		difftime()
		clock()
		time()
	}
	jarray()
	jsize()
	jobject()
	jremove()
	next()
	update()
	type()
	assert()
	player = {
		ownShipWorldId()
		consumeItemWithParameter()
		startQuest()
		giveEssentialItem()
		availableTechs()
		equippedItem()
		setEquippedItem()
		inventoryTags()
		upgradeShip()
		equipTech()
		warp()
		gender()
		enableMission()
		itemsWithTag()
		hasCompletedQuest()
		radioMessage()
		confirm()
		essentialItem()
		getItemWithParameter()
		introComplete()
		recordEvent()
		altHandItemTags()
		addBookmark()
		playTime()
		serverUuid()
		makeTechUnavailable()
		canStartQuest()
		primaryHandItemTags()
		isLounging()
		consumeItem()
		shipUpgrades()
		lounge()
		playCinematic()
		altHandItem()
		primaryHandItem()
		consumeTaggedItem()
		hasItemWithParameter()
		hasQuest()
		hasCountOfItem()
		makeTechAvailable()
		setUniverseFlag()
		hasItem()
		completeMission()
		removeEssentialItem()
		species()
		worldId()
		giveBlueprint()
		giveItem()
		setIntroComplete()
		equippedTech()
		enabledTechs()
		enableTech()
		cleanupItems()
	}
	config = {
		getParameter()
	}
	widget = {
		setImage()
		setOptionVisible()
		setImageRotation()
		blur()
		setSelectedOption()
		getText()
		setVisible()
		setButtonCheckedImages()
		getChecked()
		setButtonImage()
		getSelectedOption()
		setData()
		setImageScale()
		setChecked()
		setText()
		itemGridItems()
		getData()
		getListSelected()
		setSize()
		removeListItem()
		setButtonImages()
		setListSelected()
		addListItem()
		getSliderValue()
		clearListItems()
		focus()
		setProgress()
		setPosition()
		playSound()
		getPosition()
		setOptionEnabled()
		setButtonEnabled()
		setFontColor()
		setButtonOverlayImage()
		getSize()
	}
	ipairs()
	utf8 = {
		offset()
		charpattern = "[
[00:16:49.676] [Warn] 	script = {
		setUpdateDelta()
		updateDt()
	}
	math = {
		ceil()
		acos()
		rad()
		log()
		sin()
		pi = 3.1415926535898
		maxinteger = 9223372036854775807
		randomseed()
		cos()
		huge = inf
		mininteger = -9223372036854775808
		type()
		floor()
		tointeger()
		abs()
		atan()
		tan()
		sqrt()
		ult()
		asin()
		min()
		modf()
		exp()
		random()
		fmod()
		max()
		deg()
	}
	pairs()
	rawget()
	os = {
		difftime()
		clock()
		time()
	}
	jarray()
	jsize()
	jobject()
	jremove()
	next()
	update()
	type()
	assert()
	player = {
		ownShipWorldId()
		consumeItemWithParameter()
		startQuest()
		giveEssentialItem()
		availableTechs()
		equippedItem()
		setEquippedItem()
		inventoryTags()
		upgradeShip()
		equipTech()
		warp()
		gender()
		enableMission()
		itemsWithTag()
		hasCompletedQuest()
		radioMessage()
		confirm()
		essentialItem()
		getItemWithParameter()
		introComplete()
		recordEvent()
		altHandItemTags()
		addBookmark()
		playTime()
		serverUuid()
		makeTechUnavailable()
		canStartQuest()
		primaryHandItemTags()
		isLounging()
		consumeItem()
		shipUpgrades()
		lounge()
		playCinematic()
		altHandItem()
		primaryHandItem()
		consumeTaggedItem()
		hasItemWithParameter()
		hasQuest()
		hasCountOfItem()
		makeTechAvailable()
		setUniverseFlag()
		hasItem()
		completeMission()
		removeEssentialItem()
		species()
		worldId()
		giveBlueprint()
		giveItem()
		setIntroComplete()
		equippedTech()
		enabledTechs()
		enableTech()
		cleanupItems()
	}
	config = {
		getParameter()
	}
	widget = {
		setImage()
		setOptionVisible()
		setImageRotation()
		blur()
		setSelectedOption()
		getText()
		setVisible()
		setButtonCheckedImages()
		getChecked()
		setButtonImage()
		getSelectedOption()
		setData()
		setImageScale()
		setChecked()
		setText()
		itemGridItems()
		getData()
		getListSelected()
		setSize()
		removeListItem()
		setButtonImages()
		setListSelected()
		addListItem()
		getSliderValue()
		clearListItems()
		focus()
		setProgress()
		setPosition()
		playSound()
		getPosition()
		setOptionEnabled()
		setButtonEnabled()
		setFontColor()
		setButtonOverlayImage()
		getSize()
	}
	ipairs()
	utf8 = {
		offset()
		charpattern = "[
[00:16:57.801] [Warn] 	script = {
		setUpdateDelta()
		updateDt()
	}
	math = {
		ceil()
		acos()
		rad()
		log()
		sin()
		pi = 3.1415926535898
		maxinteger = 9223372036854775807
		randomseed()
		cos()
		huge = inf
		mininteger = -9223372036854775808
		type()
		floor()
		tointeger()
		abs()
		atan()
		tan()
		sqrt()
		ult()
		asin()
		min()
		modf()
		exp()
		random()
		fmod()
		max()
		deg()
	}
	pairs()
	rawget()
	os = {
		difftime()
		clock()
		time()
	}
	jarray()
	jsize()
	jobject()
	jremove()
	next()
	update()
	type()
	assert()
	player = {
		ownShipWorldId()
		consumeItemWithParameter()
		startQuest()
		giveEssentialItem()
		availableTechs()
		equippedItem()
		setEquippedItem()
		inventoryTags()
		upgradeShip()
		equipTech()
		warp()
		gender()
		enableMission()
		itemsWithTag()
		hasCompletedQuest()
		radioMessage()
		confirm()
		essentialItem()
		getItemWithParameter()
		introComplete()
		recordEvent()
		altHandItemTags()
		addBookmark()
		playTime()
		serverUuid()
		makeTechUnavailable()
		canStartQuest()
		primaryHandItemTags()
		isLounging()
		consumeItem()
		shipUpgrades()
		lounge()
		playCinematic()
		altHandItem()
		primaryHandItem()
		consumeTaggedItem()
		hasItemWithParameter()
		hasQuest()
		hasCountOfItem()
		makeTechAvailable()
		setUniverseFlag()
		hasItem()
		completeMission()
		removeEssentialItem()
		species()
		worldId()
		giveBlueprint()
		giveItem()
		setIntroComplete()
		equippedTech()
		enabledTechs()
		enableTech()
		cleanupItems()
	}
	config = {
		getParameter()
	}
	widget = {
		setImage()
		setOptionVisible()
		setImageRotation()
		blur()
		setSelectedOption()
		getText()
		setVisible()
		setButtonCheckedImages()
		getChecked()
		setButtonImage()
		getSelectedOption()
		setData()
		setImageScale()
		setChecked()
		setText()
		itemGridItems()
		getData()
		getListSelected()
		setSize()
		removeListItem()
		setButtonImages()
		setListSelected()
		addListItem()
		getSliderValue()
		clearListItems()
		focus()
		setProgress()
		setPosition()
		playSound()
		getPosition()
		setOptionEnabled()
		setButtonEnabled()
		setFontColor()
		setButtonOverlayImage()
		getSize()
	}
	ipairs()
	utf8 = {
		offset()
		charpattern = "[
[00:17:02.119] [Warn] 	script = {
		setUpdateDelta()
		updateDt()
	}
	math = {
		ceil()
		acos()
		rad()
		log()
		sin()
		pi = 3.1415926535898
		maxinteger = 9223372036854775807
		randomseed()
		cos()
		huge = inf
		mininteger = -9223372036854775808
		type()
		floor()
		tointeger()
		abs()
		atan()
		tan()
		sqrt()
		ult()
		asin()
		min()
		modf()
		exp()
		random()
		fmod()
		max()
		deg()
	}
	pairs()
	rawget()
	os = {
		difftime()
		clock()
		time()
	}
	jarray()
	jsize()
	jobject()
	jremove()
	next()
	update()
	type()
	assert()
	player = {
		ownShipWorldId()
		consumeItemWithParameter()
		startQuest()
		giveEssentialItem()
		availableTechs()
		equippedItem()
		setEquippedItem()
		inventoryTags()
		upgradeShip()
		equipTech()
		warp()
		gender()
		enableMission()
		itemsWithTag()
		hasCompletedQuest()
		radioMessage()
		confirm()
		essentialItem()
		getItemWithParameter()
		introComplete()
		recordEvent()
		altHandItemTags()
		addBookmark()
		playTime()
		serverUuid()
		makeTechUnavailable()
		canStartQuest()
		primaryHandItemTags()
		isLounging()
		consumeItem()
		shipUpgrades()
		lounge()
		playCinematic()
		altHandItem()
		primaryHandItem()
		consumeTaggedItem()
		hasItemWithParameter()
		hasQuest()
		hasCountOfItem()
		makeTechAvailable()
		setUniverseFlag()
		hasItem()
		completeMission()
		removeEssentialItem()
		species()
		worldId()
		giveBlueprint()
		giveItem()
		setIntroComplete()
		equippedTech()
		enabledTechs()
		enableTech()
		cleanupItems()
	}
	config = {
		getParameter()
	}
	widget = {
		setImage()
		setOptionVisible()
		setImageRotation()
		blur()
		setSelectedOption()
		getText()
		setVisible()
		setButtonCheckedImages()
		getChecked()
		setButtonImage()
		getSelectedOption()
		setData()
		setImageScale()
		setChecked()
		setText()
		itemGridItems()
		getData()
		getListSelected()
		setSize()
		removeListItem()
		setButtonImages()
		setListSelected()
		addListItem()
		getSliderValue()
		clearListItems()
		focus()
		setProgress()
		setPosition()
		playSound()
		getPosition()
		setOptionEnabled()
		setButtonEnabled()
		setFontColor()
		setButtonOverlayImage()
		getSize()
	}
	ipairs()
	utf8 = {
		offset()
		charpattern = "[
[00:17:03.300] [Warn] 	script = {
		setUpdateDelta()
		updateDt()
	}
	math = {
		ceil()
		acos()
		rad()
		log()
		sin()
		pi = 3.1415926535898
		maxinteger = 9223372036854775807
		randomseed()
		cos()
		huge = inf
		mininteger = -9223372036854775808
		type()
		floor()
		tointeger()
		abs()
		atan()
		tan()
		sqrt()
		ult()
		asin()
		min()
		modf()
		exp()
		random()
		fmod()
		max()
		deg()
	}
	pairs()
	rawget()
	os = {
		difftime()
		clock()
		time()
	}
	jarray()
	jsize()
	jobject()
	jremove()
	next()
	update()
	type()
	assert()
	player = {
		ownShipWorldId()
		consumeItemWithParameter()
		startQuest()
		giveEssentialItem()
		availableTechs()
		equippedItem()
		setEquippedItem()
		inventoryTags()
		upgradeShip()
		equipTech()
		warp()
		gender()
		enableMission()
		itemsWithTag()
		hasCompletedQuest()
		radioMessage()
		confirm()
		essentialItem()
		getItemWithParameter()
		introComplete()
		recordEvent()
		altHandItemTags()
		addBookmark()
		playTime()
		serverUuid()
		makeTechUnavailable()
		canStartQuest()
		primaryHandItemTags()
		isLounging()
		consumeItem()
		shipUpgrades()
		lounge()
		playCinematic()
		altHandItem()
		primaryHandItem()
		consumeTaggedItem()
		hasItemWithParameter()
		hasQuest()
		hasCountOfItem()
		makeTechAvailable()
		setUniverseFlag()
		hasItem()
		completeMission()
		removeEssentialItem()
		species()
		worldId()
		giveBlueprint()
		giveItem()
		setIntroComplete()
		equippedTech()
		enabledTechs()
		enableTech()
		cleanupItems()
	}
	config = {
		getParameter()
	}
	widget = {
		setImage()
		setOptionVisible()
		setImageRotation()
		blur()
		setSelectedOption()
		getText()
		setVisible()
		setButtonCheckedImages()
		getChecked()
		setButtonImage()
		getSelectedOption()
		setData()
		setImageScale()
		setChecked()
		setText()
		itemGridItems()
		getData()
		getListSelected()
		setSize()
		removeListItem()
		setButtonImages()
		setListSelected()
		addListItem()
		getSliderValue()
		clearListItems()
		focus()
		setProgress()
		setPosition()
		playSound()
		getPosition()
		setOptionEnabled()
		setButtonEnabled()
		setFontColor()
		setButtonOverlayImage()
		getSize()
	}
	ipairs()
	utf8 = {
		offset()
		charpattern = "[
[00:17:04.733] [Warn] 	script = {
		setUpdateDelta()
		updateDt()
	}
	math = {
		ceil()
		acos()
		rad()
		log()
		sin()
		pi = 3.1415926535898
		maxinteger = 9223372036854775807
		randomseed()
		cos()
		huge = inf
		mininteger = -9223372036854775808
		type()
		floor()
		tointeger()
		abs()
		atan()
		tan()
		sqrt()
		ult()
		asin()
		min()
		modf()
		exp()
		random()
		fmod()
		max()
		deg()
	}
	pairs()
	rawget()
	os = {
		difftime()
		clock()
		time()
	}
	jarray()
	jsize()
	jobject()
	jremove()
	next()
	update()
	type()
	assert()
	player = {
		ownShipWorldId()
		consumeItemWithParameter()
		startQuest()
		giveEssentialItem()
		availableTechs()
		equippedItem()
		setEquippedItem()
		inventoryTags()
		upgradeShip()
		equipTech()
		warp()
		gender()
		enableMission()
		itemsWithTag()
		hasCompletedQuest()
		radioMessage()
		confirm()
		essentialItem()
		getItemWithParameter()
		introComplete()
		recordEvent()
		altHandItemTags()
		addBookmark()
		playTime()
		serverUuid()
		makeTechUnavailable()
		canStartQuest()
		primaryHandItemTags()
		isLounging()
		consumeItem()
		shipUpgrades()
		lounge()
		playCinematic()
		altHandItem()
		primaryHandItem()
		consumeTaggedItem()
		hasItemWithParameter()
		hasQuest()
		hasCountOfItem()
		makeTechAvailable()
		setUniverseFlag()
		hasItem()
		completeMission()
		removeEssentialItem()
		species()
		worldId()
		giveBlueprint()
		giveItem()
		setIntroComplete()
		equippedTech()
		enabledTechs()
		enableTech()
		cleanupItems()
	}
	config = {
		getParameter()
	}
	widget = {
		setImage()
		setOptionVisible()
		setImageRotation()
		blur()
		setSelectedOption()
		getText()
		setVisible()
		setButtonCheckedImages()
		getChecked()
		setButtonImage()
		getSelectedOption()
		setData()
		setImageScale()
		setChecked()
		setText()
		itemGridItems()
		getData()
		getListSelected()
		setSize()
		removeListItem()
		setButtonImages()
		setListSelected()
		addListItem()
		getSliderValue()
		clearListItems()
		focus()
		setProgress()
		setPosition()
		playSound()
		getPosition()
		setOptionEnabled()
		setButtonEnabled()
		setFontColor()
		setButtonOverlayImage()
		getSize()
	}
	ipairs()
	utf8 = {
		offset()
		charpattern = "[
[00:17:09.084] [Warn] 	script = {
		setUpdateDelta()
		updateDt()
	}
	math = {
		ceil()
		acos()
		rad()
		log()
		sin()
		pi = 3.1415926535898
		maxinteger = 9223372036854775807
		randomseed()
		cos()
		huge = inf
		mininteger = -9223372036854775808
		type()
		floor()
		tointeger()
		abs()
		atan()
		tan()
		sqrt()
		ult()
		asin()
		min()
		modf()
		exp()
		random()
		fmod()
		max()
		deg()
	}
	pairs()
	rawget()
	os = {
		difftime()
		clock()
		time()
	}
	jarray()
	jsize()
	jobject()
	jremove()
	next()
	update()
	type()
	assert()
	player = {
		ownShipWorldId()
		consumeItemWithParameter()
		startQuest()
		giveEssentialItem()
		availableTechs()
		equippedItem()
		setEquippedItem()
		inventoryTags()
		upgradeShip()
		equipTech()
		warp()
		gender()
		enableMission()
		itemsWithTag()
		hasCompletedQuest()
		radioMessage()
		confirm()
		essentialItem()
		getItemWithParameter()
		introComplete()
		recordEvent()
		altHandItemTags()
		addBookmark()
		playTime()
		serverUuid()
		makeTechUnavailable()
		canStartQuest()
		primaryHandItemTags()
		isLounging()
		consumeItem()
		shipUpgrades()
		lounge()
		playCinematic()
		altHandItem()
		primaryHandItem()
		consumeTaggedItem()
		hasItemWithParameter()
		hasQuest()
		hasCountOfItem()
		makeTechAvailable()
		setUniverseFlag()
		hasItem()
		completeMission()
		removeEssentialItem()
		species()
		worldId()
		giveBlueprint()
		giveItem()
		setIntroComplete()
		equippedTech()
		enabledTechs()
		enableTech()
		cleanupItems()
	}
	config = {
		getParameter()
	}
	widget = {
		setImage()
		setOptionVisible()
		setImageRotation()
		blur()
		setSelectedOption()
		getText()
		setVisible()
		setButtonCheckedImages()
		getChecked()
		setButtonImage()
		getSelectedOption()
		setData()
		setImageScale()
		setChecked()
		setText()
		itemGridItems()
		getData()
		getListSelected()
		setSize()
		removeListItem()
		setButtonImages()
		setListSelected()
		addListItem()
		getSliderValue()
		clearListItems()
		focus()
		setProgress()
		setPosition()
		playSound()
		getPosition()
		setOptionEnabled()
		setButtonEnabled()
		setFontColor()
		setButtonOverlayImage()
		getSize()
	}
	ipairs()
	utf8 = {
		offset()
		charpattern = "[
[00:17:10.552] [Warn] 	script = {
		setUpdateDelta()
		updateDt()
	}
	math = {
		ceil()
		acos()
		rad()
		log()
		sin()
		pi = 3.1415926535898
		maxinteger = 9223372036854775807
		randomseed()
		cos()
		huge = inf
		mininteger = -9223372036854775808
		type()
		floor()
		tointeger()
		abs()
		atan()
		tan()
		sqrt()
		ult()
		asin()
		min()
		modf()
		exp()
		random()
		fmod()
		max()
		deg()
	}
	pairs()
	rawget()
	os = {
		difftime()
		clock()
		time()
	}
	jarray()
	jsize()
	jobject()
	jremove()
	next()
	update()
	type()
	assert()
	player = {
		ownShipWorldId()
		consumeItemWithParameter()
		startQuest()
		giveEssentialItem()
		availableTechs()
		equippedItem()
		setEquippedItem()
		inventoryTags()
		upgradeShip()
		equipTech()
		warp()
		gender()
		enableMission()
		itemsWithTag()
		hasCompletedQuest()
		radioMessage()
		confirm()
		essentialItem()
		getItemWithParameter()
		introComplete()
		recordEvent()
		altHandItemTags()
		addBookmark()
		playTime()
		serverUuid()
		makeTechUnavailable()
		canStartQuest()
		primaryHandItemTags()
		isLounging()
		consumeItem()
		shipUpgrades()
		lounge()
		playCinematic()
		altHandItem()
		primaryHandItem()
		consumeTaggedItem()
		hasItemWithParameter()
		hasQuest()
		hasCountOfItem()
		makeTechAvailable()
		setUniverseFlag()
		hasItem()
		completeMission()
		removeEssentialItem()
		species()
		worldId()
		giveBlueprint()
		giveItem()
		setIntroComplete()
		equippedTech()
		enabledTechs()
		enableTech()
		cleanupItems()
	}
	config = {
		getParameter()
	}
	widget = {
		setImage()
		setOptionVisible()
		setImageRotation()
		blur()
		setSelectedOption()
		getText()
		setVisible()
		setButtonCheckedImages()
		getChecked()
		setButtonImage()
		getSelectedOption()
		setData()
		setImageScale()
		setChecked()
		setText()
		itemGridItems()
		getData()
		getListSelected()
		setSize()
		removeListItem()
		setButtonImages()
		setListSelected()
		addListItem()
		getSliderValue()
		clearListItems()
		focus()
		setProgress()
		setPosition()
		playSound()
		getPosition()
		setOptionEnabled()
		setButtonEnabled()
		setFontColor()
		setButtonOverlayImage()
		getSize()
	}
	ipairs()
	utf8 = {
		offset()
		charpattern = "[
[00:17:11.950] [Warn] 	script = {
		setUpdateDelta()
		updateDt()
	}
	math = {
		ceil()
		acos()
		rad()
		log()
		sin()
		pi = 3.1415926535898
		maxinteger = 9223372036854775807
		randomseed()
		cos()
		huge = inf
		mininteger = -9223372036854775808
		type()
		floor()
		tointeger()
		abs()
		atan()
		tan()
		sqrt()
		ult()
		asin()
		min()
		modf()
		exp()
		random()
		fmod()
		max()
		deg()
	}
	pairs()
	rawget()
	os = {
		difftime()
		clock()
		time()
	}
	jarray()
	jsize()
	jobject()
	jremove()
	next()
	update()
	type()
	assert()
	player = {
		ownShipWorldId()
		consumeItemWithParameter()
		startQuest()
		giveEssentialItem()
		availableTechs()
		equippedItem()
		setEquippedItem()
		inventoryTags()
		upgradeShip()
		equipTech()
		warp()
		gender()
		enableMission()
		itemsWithTag()
		hasCompletedQuest()
		radioMessage()
		confirm()
		essentialItem()
		getItemWithParameter()
		introComplete()
		recordEvent()
		altHandItemTags()
		addBookmark()
		playTime()
		serverUuid()
		makeTechUnavailable()
		canStartQuest()
		primaryHandItemTags()
		isLounging()
		consumeItem()
		shipUpgrades()
		lounge()
		playCinematic()
		altHandItem()
		primaryHandItem()
		consumeTaggedItem()
		hasItemWithParameter()
		hasQuest()
		hasCountOfItem()
		makeTechAvailable()
		setUniverseFlag()
		hasItem()
		completeMission()
		removeEssentialItem()
		species()
		worldId()
		giveBlueprint()
		giveItem()
		setIntroComplete()
		equippedTech()
		enabledTechs()
		enableTech()
		cleanupItems()
	}
	config = {
		getParameter()
	}
	widget = {
		setImage()
		setOptionVisible()
		setImageRotation()
		blur()
		setSelectedOption()
		getText()
		setVisible()
		setButtonCheckedImages()
		getChecked()
		setButtonImage()
		getSelectedOption()
		setData()
		setImageScale()
		setChecked()
		setText()
		itemGridItems()
		getData()
		getListSelected()
		setSize()
		removeListItem()
		setButtonImages()
		setListSelected()
		addListItem()
		getSliderValue()
		clearListItems()
		focus()
		setProgress()
		setPosition()
		playSound()
		getPosition()
		setOptionEnabled()
		setButtonEnabled()
		setFontColor()
		setButtonOverlayImage()
		getSize()
	}
	ipairs()
	utf8 = {
		offset()
		charpattern = "[
[00:17:13.184] [Warn] 	script = {
		setUpdateDelta()
		updateDt()
	}
	math = {
		ceil()
		acos()
		rad()
		log()
		sin()
		pi = 3.1415926535898
		maxinteger = 9223372036854775807
		randomseed()
		cos()
		huge = inf
		mininteger = -9223372036854775808
		type()
		floor()
		tointeger()
		abs()
		atan()
		tan()
		sqrt()
		ult()
		asin()
		min()
		modf()
		exp()
		random()
		fmod()
		max()
		deg()
	}
	pairs()
	rawget()
	os = {
		difftime()
		clock()
		time()
	}
	jarray()
	jsize()
	jobject()
	jremove()
	next()
	update()
	type()
	assert()
	player = {
		ownShipWorldId()
		consumeItemWithParameter()
		startQuest()
		giveEssentialItem()
		availableTechs()
		equippedItem()
		setEquippedItem()
		inventoryTags()
		upgradeShip()
		equipTech()
		warp()
		gender()
		enableMission()
		itemsWithTag()
		hasCompletedQuest()
		radioMessage()
		confirm()
		essentialItem()
		getItemWithParameter()
		introComplete()
		recordEvent()
		altHandItemTags()
		addBookmark()
		playTime()
		serverUuid()
		makeTechUnavailable()
		canStartQuest()
		primaryHandItemTags()
		isLounging()
		consumeItem()
		shipUpgrades()
		lounge()
		playCinematic()
		altHandItem()
		primaryHandItem()
		consumeTaggedItem()
		hasItemWithParameter()
		hasQuest()
		hasCountOfItem()
		makeTechAvailable()
		setUniverseFlag()
		hasItem()
		completeMission()
		removeEssentialItem()
		species()
		worldId()
		giveBlueprint()
		giveItem()
		setIntroComplete()
		equippedTech()
		enabledTechs()
		enableTech()
		cleanupItems()
	}
	config = {
		getParameter()
	}
	widget = {
		setImage()
		setOptionVisible()
		setImageRotation()
		blur()
		setSelectedOption()
		getText()
		setVisible()
		setButtonCheckedImages()
		getChecked()
		setButtonImage()
		getSelectedOption()
		setData()
		setImageScale()
		setChecked()
		setText()
		itemGridItems()
		getData()
		getListSelected()
		setSize()
		removeListItem()
		setButtonImages()
		setListSelected()
		addListItem()
		getSliderValue()
		clearListItems()
		focus()
		setProgress()
		setPosition()
		playSound()
		getPosition()
		setOptionEnabled()
		setButtonEnabled()
		setFontColor()
		setButtonOverlayImage()
		getSize()
	}
	ipairs()
	utf8 = {
		offset()
		charpattern = "[
[00:17:15.088] [Warn] 	script = {
		setUpdateDelta()
		updateDt()
	}
	math = {
		ceil()
		acos()
		rad()
		log()
		sin()
		pi = 3.1415926535898
		maxinteger = 9223372036854775807
		randomseed()
		cos()
		huge = inf
		mininteger = -9223372036854775808
		type()
		floor()
		tointeger()
		abs()
		atan()
		tan()
		sqrt()
		ult()
		asin()
		min()
		modf()
		exp()
		random()
		fmod()
		max()
		deg()
	}
	pairs()
	rawget()
	os = {
		difftime()
		clock()
		time()
	}
	jarray()
	jsize()
	jobject()
	jremove()
	next()
	update()
	type()
	assert()
	player = {
		ownShipWorldId()
		consumeItemWithParameter()
		startQuest()
		giveEssentialItem()
		availableTechs()
		equippedItem()
		setEquippedItem()
		inventoryTags()
		upgradeShip()
		equipTech()
		warp()
		gender()
		enableMission()
		itemsWithTag()
		hasCompletedQuest()
		radioMessage()
		confirm()
		essentialItem()
		getItemWithParameter()
		introComplete()
		recordEvent()
		altHandItemTags()
		addBookmark()
		playTime()
		serverUuid()
		makeTechUnavailable()
		canStartQuest()
		primaryHandItemTags()
		isLounging()
		consumeItem()
		shipUpgrades()
		lounge()
		playCinematic()
		altHandItem()
		primaryHandItem()
		consumeTaggedItem()
		hasItemWithParameter()
		hasQuest()
		hasCountOfItem()
		makeTechAvailable()
		setUniverseFlag()
		hasItem()
		completeMission()
		removeEssentialItem()
		species()
		worldId()
		giveBlueprint()
		giveItem()
		setIntroComplete()
		equippedTech()
		enabledTechs()
		enableTech()
		cleanupItems()
	}
	config = {
		getParameter()
	}
	widget = {
		setImage()
		setOptionVisible()
		setImageRotation()
		blur()
		setSelectedOption()
		getText()
		setVisible()
		setButtonCheckedImages()
		getChecked()
		setButtonImage()
		getSelectedOption()
		setData()
		setImageScale()
		setChecked()
		setText()
		itemGridItems()
		getData()
		getListSelected()
		setSize()
		removeListItem()
		setButtonImages()
		setListSelected()
		addListItem()
		getSliderValue()
		clearListItems()
		focus()
		setProgress()
		setPosition()
		playSound()
		getPosition()
		setOptionEnabled()
		setButtonEnabled()
		setFontColor()
		setButtonOverlayImage()
		getSize()
	}
	ipairs()
	utf8 = {
		offset()
		charpattern = "[
[00:17:18.003] [Warn] 	script = {
		setUpdateDelta()
		updateDt()
	}
	math = {
		ceil()
		acos()
		rad()
		log()
		sin()
		pi = 3.1415926535898
		maxinteger = 9223372036854775807
		randomseed()
		cos()
		huge = inf
		mininteger = -9223372036854775808
		type()
		floor()
		tointeger()
		abs()
		atan()
		tan()
		sqrt()
		ult()
		asin()
		min()
		modf()
		exp()
		random()
		fmod()
		max()
		deg()
	}
	pairs()
	rawget()
	os = {
		difftime()
		clock()
		time()
	}
	jarray()
	jsize()
	jobject()
	jremove()
	next()
	update()
	type()
	assert()
	player = {
		ownShipWorldId()
		consumeItemWithParameter()
		startQuest()
		giveEssentialItem()
		availableTechs()
		equippedItem()
		setEquippedItem()
		inventoryTags()
		upgradeShip()
		equipTech()
		warp()
		gender()
		enableMission()
		itemsWithTag()
		hasCompletedQuest()
		radioMessage()
		confirm()
		essentialItem()
		getItemWithParameter()
		introComplete()
		recordEvent()
		altHandItemTags()
		addBookmark()
		playTime()
		serverUuid()
		makeTechUnavailable()
		canStartQuest()
		primaryHandItemTags()
		isLounging()
		consumeItem()
		shipUpgrades()
		lounge()
		playCinematic()
		altHandItem()
		primaryHandItem()
		consumeTaggedItem()
		hasItemWithParameter()
		hasQuest()
		hasCountOfItem()
		makeTechAvailable()
		setUniverseFlag()
		hasItem()
		completeMission()
		removeEssentialItem()
		species()
		worldId()
		giveBlueprint()
		giveItem()
		setIntroComplete()
		equippedTech()
		enabledTechs()
		enableTech()
		cleanupItems()
	}
	config = {
		getParameter()
	}
	widget = {
		setImage()
		setOptionVisible()
		setImageRotation()
		blur()
		setSelectedOption()
		getText()
		setVisible()
		setButtonCheckedImages()
		getChecked()
		setButtonImage()
		getSelectedOption()
		setData()
		setImageScale()
		setChecked()
		setText()
		itemGridItems()
		getData()
		getListSelected()
		setSize()
		removeListItem()
		setButtonImages()
		setListSelected()
		addListItem()
		getSliderValue()
		clearListItems()
		focus()
		setProgress()
		setPosition()
		playSound()
		getPosition()
		setOptionEnabled()
		setButtonEnabled()
		setFontColor()
		setButtonOverlayImage()
		getSize()
	}
	ipairs()
	utf8 = {
		offset()
		charpattern = "[
[00:17:55.504] [Warn] 	script = {
		setUpdateDelta()
		updateDt()
	}
	math = {
		ceil()
		acos()
		rad()
		log()
		sin()
		pi = 3.1415926535898
		maxinteger = 9223372036854775807
		randomseed()
		cos()
		huge = inf
		mininteger = -9223372036854775808
		type()
		floor()
		tointeger()
		abs()
		atan()
		tan()
		sqrt()
		ult()
		asin()
		min()
		modf()
		exp()
		random()
		fmod()
		max()
		deg()
	}
	pairs()
	rawget()
	os = {
		difftime()
		clock()
		time()
	}
	jarray()
	jsize()
	jobject()
	jremove()
	next()
	update()
	type()
	assert()
	player = {
		ownShipWorldId()
		consumeItemWithParameter()
		startQuest()
		giveEssentialItem()
		availableTechs()
		equippedItem()
		setEquippedItem()
		inventoryTags()
		upgradeShip()
		equipTech()
		warp()
		gender()
		enableMission()
		itemsWithTag()
		hasCompletedQuest()
		radioMessage()
		confirm()
		essentialItem()
		getItemWithParameter()
		introComplete()
		recordEvent()
		altHandItemTags()
		addBookmark()
		playTime()
		serverUuid()
		makeTechUnavailable()
		canStartQuest()
		primaryHandItemTags()
		isLounging()
		consumeItem()
		shipUpgrades()
		lounge()
		playCinematic()
		altHandItem()
		primaryHandItem()
		consumeTaggedItem()
		hasItemWithParameter()
		hasQuest()
		hasCountOfItem()
		makeTechAvailable()
		setUniverseFlag()
		hasItem()
		completeMission()
		removeEssentialItem()
		species()
		worldId()
		giveBlueprint()
		giveItem()
		setIntroComplete()
		equippedTech()
		enabledTechs()
		enableTech()
		cleanupItems()
	}
	config = {
		getParameter()
	}
	widget = {
		setImage()
		setOptionVisible()
		setImageRotation()
		blur()
		setSelectedOption()
		getText()
		setVisible()
		setButtonCheckedImages()
		getChecked()
		setButtonImage()
		getSelectedOption()
		setData()
		setImageScale()
		setChecked()
		setText()
		itemGridItems()
		getData()
		getListSelected()
		setSize()
		removeListItem()
		setButtonImages()
		setListSelected()
		addListItem()
		getSliderValue()
		clearListItems()
		focus()
		setProgress()
		setPosition()
		playSound()
		getPosition()
		setOptionEnabled()
		setButtonEnabled()
		setFontColor()
		setButtonOverlayImage()
		getSize()
	}
	ipairs()
	utf8 = {
		offset()
		charpattern = "[
[00:17:56.968] [Warn] 	script = {
		setUpdateDelta()
		updateDt()
	}
	math = {
		ceil()
		acos()
		rad()
		log()
		sin()
		pi = 3.1415926535898
		maxinteger = 9223372036854775807
		randomseed()
		cos()
		huge = inf
		mininteger = -9223372036854775808
		type()
		floor()
		tointeger()
		abs()
		atan()
		tan()
		sqrt()
		ult()
		asin()
		min()
		modf()
		exp()
		random()
		fmod()
		max()
		deg()
	}
	pairs()
	rawget()
	os = {
		difftime()
		clock()
		time()
	}
	jarray()
	jsize()
	jobject()
	jremove()
	next()
	update()
	type()
	assert()
	player = {
		ownShipWorldId()
		consumeItemWithParameter()
		startQuest()
		giveEssentialItem()
		availableTechs()
		equippedItem()
		setEquippedItem()
		inventoryTags()
		upgradeShip()
		equipTech()
		warp()
		gender()
		enableMission()
		itemsWithTag()
		hasCompletedQuest()
		radioMessage()
		confirm()
		essentialItem()
		getItemWithParameter()
		introComplete()
		recordEvent()
		altHandItemTags()
		addBookmark()
		playTime()
		serverUuid()
		makeTechUnavailable()
		canStartQuest()
		primaryHandItemTags()
		isLounging()
		consumeItem()
		shipUpgrades()
		lounge()
		playCinematic()
		altHandItem()
		primaryHandItem()
		consumeTaggedItem()
		hasItemWithParameter()
		hasQuest()
		hasCountOfItem()
		makeTechAvailable()
		setUniverseFlag()
		hasItem()
		completeMission()
		removeEssentialItem()
		species()
		worldId()
		giveBlueprint()
		giveItem()
		setIntroComplete()
		equippedTech()
		enabledTechs()
		enableTech()
		cleanupItems()
	}
	config = {
		getParameter()
	}
	widget = {
		setImage()
		setOptionVisible()
		setImageRotation()
		blur()
		setSelectedOption()
		getText()
		setVisible()
		setButtonCheckedImages()
		getChecked()
		setButtonImage()
		getSelectedOption()
		setData()
		setImageScale()
		setChecked()
		setText()
		itemGridItems()
		getData()
		getListSelected()
		setSize()
		removeListItem()
		setButtonImages()
		setListSelected()
		addListItem()
		getSliderValue()
		clearListItems()
		focus()
		setProgress()
		setPosition()
		playSound()
		getPosition()
		setOptionEnabled()
		setButtonEnabled()
		setFontColor()
		setButtonOverlayImage()
		getSize()
	}
	ipairs()
	utf8 = {
		offset()
		charpattern = "[
[00:17:58.155] [Warn] 	script = {
		setUpdateDelta()
		updateDt()
	}
	math = {
		ceil()
		acos()
		rad()
		log()
		sin()
		pi = 3.1415926535898
		maxinteger = 9223372036854775807
		randomseed()
		cos()
		huge = inf
		mininteger = -9223372036854775808
		type()
		floor()
		tointeger()
		abs()
		atan()
		tan()
		sqrt()
		ult()
		asin()
		min()
		modf()
		exp()
		random()
		fmod()
		max()
		deg()
	}
	pairs()
	rawget()
	os = {
		difftime()
		clock()
		time()
	}
	jarray()
	jsize()
	jobject()
	jremove()
	next()
	update()
	type()
	assert()
	player = {
		ownShipWorldId()
		consumeItemWithParameter()
		startQuest()
		giveEssentialItem()
		availableTechs()
		equippedItem()
		setEquippedItem()
		inventoryTags()
		upgradeShip()
		equipTech()
		warp()
		gender()
		enableMission()
		itemsWithTag()
		hasCompletedQuest()
		radioMessage()
		confirm()
		essentialItem()
		getItemWithParameter()
		introComplete()
		recordEvent()
		altHandItemTags()
		addBookmark()
		playTime()
		serverUuid()
		makeTechUnavailable()
		canStartQuest()
		primaryHandItemTags()
		isLounging()
		consumeItem()
		shipUpgrades()
		lounge()
		playCinematic()
		altHandItem()
		primaryHandItem()
		consumeTaggedItem()
		hasItemWithParameter()
		hasQuest()
		hasCountOfItem()
		makeTechAvailable()
		setUniverseFlag()
		hasItem()
		completeMission()
		removeEssentialItem()
		species()
		worldId()
		giveBlueprint()
		giveItem()
		setIntroComplete()
		equippedTech()
		enabledTechs()
		enableTech()
		cleanupItems()
	}
	config = {
		getParameter()
	}
	widget = {
		setImage()
		setOptionVisible()
		setImageRotation()
		blur()
		setSelectedOption()
		getText()
		setVisible()
		setButtonCheckedImages()
		getChecked()
		setButtonImage()
		getSelectedOption()
		setData()
		setImageScale()
		setChecked()
		setText()
		itemGridItems()
		getData()
		getListSelected()
		setSize()
		removeListItem()
		setButtonImages()
		setListSelected()
		addListItem()
		getSliderValue()
		clearListItems()
		focus()
		setProgress()
		setPosition()
		playSound()
		getPosition()
		setOptionEnabled()
		setButtonEnabled()
		setFontColor()
		setButtonOverlayImage()
		getSize()
	}
	ipairs()
	utf8 = {
		offset()
		charpattern = "[
[00:18:07.619] [Warn] 	script = {
		setUpdateDelta()
		updateDt()
	}
	math = {
		ceil()
		acos()
		rad()
		log()
		sin()
		pi = 3.1415926535898
		maxinteger = 9223372036854775807
		randomseed()
		cos()
		huge = inf
		mininteger = -9223372036854775808
		type()
		floor()
		tointeger()
		abs()
		atan()
		tan()
		sqrt()
		ult()
		asin()
		min()
		modf()
		exp()
		random()
		fmod()
		max()
		deg()
	}
	pairs()
	rawget()
	os = {
		difftime()
		clock()
		time()
	}
	jarray()
	jsize()
	jobject()
	jremove()
	next()
	update()
	type()
	assert()
	player = {
		ownShipWorldId()
		consumeItemWithParameter()
		startQuest()
		giveEssentialItem()
		availableTechs()
		equippedItem()
		setEquippedItem()
		inventoryTags()
		upgradeShip()
		equipTech()
		warp()
		gender()
		enableMission()
		itemsWithTag()
		hasCompletedQuest()
		radioMessage()
		confirm()
		essentialItem()
		getItemWithParameter()
		introComplete()
		recordEvent()
		altHandItemTags()
		addBookmark()
		playTime()
		serverUuid()
		makeTechUnavailable()
		canStartQuest()
		primaryHandItemTags()
		isLounging()
		consumeItem()
		shipUpgrades()
		lounge()
		playCinematic()
		altHandItem()
		primaryHandItem()
		consumeTaggedItem()
		hasItemWithParameter()
		hasQuest()
		hasCountOfItem()
		makeTechAvailable()
		setUniverseFlag()
		hasItem()
		completeMission()
		removeEssentialItem()
		species()
		worldId()
		giveBlueprint()
		giveItem()
		setIntroComplete()
		equippedTech()
		enabledTechs()
		enableTech()
		cleanupItems()
	}
	config = {
		getParameter()
	}
	widget = {
		setImage()
		setOptionVisible()
		setImageRotation()
		blur()
		setSelectedOption()
		getText()
		setVisible()
		setButtonCheckedImages()
		getChecked()
		setButtonImage()
		getSelectedOption()
		setData()
		setImageScale()
		setChecked()
		setText()
		itemGridItems()
		getData()
		getListSelected()
		setSize()
		removeListItem()
		setButtonImages()
		setListSelected()
		addListItem()
		getSliderValue()
		clearListItems()
		focus()
		setProgress()
		setPosition()
		playSound()
		getPosition()
		setOptionEnabled()
		setButtonEnabled()
		setFontColor()
		setButtonOverlayImage()
		getSize()
	}
	ipairs()
	utf8 = {
		offset()
		charpattern = "[
[00:18:30.952] [Warn] 	script = {
		setUpdateDelta()
		updateDt()
	}
	math = {
		ceil()
		acos()
		rad()
		log()
		sin()
		pi = 3.1415926535898
		maxinteger = 9223372036854775807
		randomseed()
		cos()
		huge = inf
		mininteger = -9223372036854775808
		type()
		floor()
		tointeger()
		abs()
		atan()
		tan()
		sqrt()
		ult()
		asin()
		min()
		modf()
		exp()
		random()
		fmod()
		max()
		deg()
	}
	pairs()
	rawget()
	os = {
		difftime()
		clock()
		time()
	}
	jarray()
	jsize()
	jobject()
	jremove()
	next()
	update()
	type()
	assert()
	player = {
		ownShipWorldId()
		consumeItemWithParameter()
		startQuest()
		giveEssentialItem()
		availableTechs()
		equippedItem()
		setEquippedItem()
		inventoryTags()
		upgradeShip()
		equipTech()
		warp()
		gender()
		enableMission()
		itemsWithTag()
		hasCompletedQuest()
		radioMessage()
		confirm()
		essentialItem()
		getItemWithParameter()
		introComplete()
		recordEvent()
		altHandItemTags()
		addBookmark()
		playTime()
		serverUuid()
		makeTechUnavailable()
		canStartQuest()
		primaryHandItemTags()
		isLounging()
		consumeItem()
		shipUpgrades()
		lounge()
		playCinematic()
		altHandItem()
		primaryHandItem()
		consumeTaggedItem()
		hasItemWithParameter()
		hasQuest()
		hasCountOfItem()
		makeTechAvailable()
		setUniverseFlag()
		hasItem()
		completeMission()
		removeEssentialItem()
		species()
		worldId()
		giveBlueprint()
		giveItem()
		setIntroComplete()
		equippedTech()
		enabledTechs()
		enableTech()
		cleanupItems()
	}
	config = {
		getParameter()
	}
	widget = {
		setImage()
		setOptionVisible()
		setImageRotation()
		blur()
		setSelectedOption()
		getText()
		setVisible()
		setButtonCheckedImages()
		getChecked()
		setButtonImage()
		getSelectedOption()
		setData()
		setImageScale()
		setChecked()
		setText()
		itemGridItems()
		getData()
		getListSelected()
		setSize()
		removeListItem()
		setButtonImages()
		setListSelected()
		addListItem()
		getSliderValue()
		clearListItems()
		focus()
		setProgress()
		setPosition()
		playSound()
		getPosition()
		setOptionEnabled()
		setButtonEnabled()
		setFontColor()
		setButtonOverlayImage()
		getSize()
	}
	ipairs()
	utf8 = {
		offset()
		charpattern = "[
[00:18:36.900] [Warn] 	script = {
		setUpdateDelta()
		updateDt()
	}
	math = {
		ceil()
		acos()
		rad()
		log()
		sin()
		pi = 3.1415926535898
		maxinteger = 9223372036854775807
		randomseed()
		cos()
		huge = inf
		mininteger = -9223372036854775808
		type()
		floor()
		tointeger()
		abs()
		atan()
		tan()
		sqrt()
		ult()
		asin()
		min()
		modf()
		exp()
		random()
		fmod()
		max()
		deg()
	}
	pairs()
	rawget()
	os = {
		difftime()
		clock()
		time()
	}
	jarray()
	jsize()
	jobject()
	jremove()
	next()
	update()
	type()
	assert()
	player = {
		ownShipWorldId()
		consumeItemWithParameter()
		startQuest()
		giveEssentialItem()
		availableTechs()
		equippedItem()
		setEquippedItem()
		inventoryTags()
		upgradeShip()
		equipTech()
		warp()
		gender()
		enableMission()
		itemsWithTag()
		hasCompletedQuest()
		radioMessage()
		confirm()
		essentialItem()
		getItemWithParameter()
		introComplete()
		recordEvent()
		altHandItemTags()
		addBookmark()
		playTime()
		serverUuid()
		makeTechUnavailable()
		canStartQuest()
		primaryHandItemTags()
		isLounging()
		consumeItem()
		shipUpgrades()
		lounge()
		playCinematic()
		altHandItem()
		primaryHandItem()
		consumeTaggedItem()
		hasItemWithParameter()
		hasQuest()
		hasCountOfItem()
		makeTechAvailable()
		setUniverseFlag()
		hasItem()
		completeMission()
		removeEssentialItem()
		species()
		worldId()
		giveBlueprint()
		giveItem()
		setIntroComplete()
		equippedTech()
		enabledTechs()
		enableTech()
		cleanupItems()
	}
	config = {
		getParameter()
	}
	widget = {
		setImage()
		setOptionVisible()
		setImageRotation()
		blur()
		setSelectedOption()
		getText()
		setVisible()
		setButtonCheckedImages()
		getChecked()
		setButtonImage()
		getSelectedOption()
		setData()
		setImageScale()
		setChecked()
		setText()
		itemGridItems()
		getData()
		getListSelected()
		setSize()
		removeListItem()
		setButtonImages()
		setListSelected()
		addListItem()
		getSliderValue()
		clearListItems()
		focus()
		setProgress()
		setPosition()
		playSound()
		getPosition()
		setOptionEnabled()
		setButtonEnabled()
		setFontColor()
		setButtonOverlayImage()
		getSize()
	}
	ipairs()
	utf8 = {
		offset()
		charpattern = "[
[00:18:39.884] [Warn] 	script = {
		setUpdateDelta()
		updateDt()
	}
	math = {
		ceil()
		acos()
		rad()
		log()
		sin()
		pi = 3.1415926535898
		maxinteger = 9223372036854775807
		randomseed()
		cos()
		huge = inf
		mininteger = -9223372036854775808
		type()
		floor()
		tointeger()
		abs()
		atan()
		tan()
		sqrt()
		ult()
		asin()
		min()
		modf()
		exp()
		random()
		fmod()
		max()
		deg()
	}
	pairs()
	rawget()
	os = {
		difftime()
		clock()
		time()
	}
	jarray()
	jsize()
	jobject()
	jremove()
	next()
	update()
	type()
	assert()
	player = {
		ownShipWorldId()
		consumeItemWithParameter()
		startQuest()
		giveEssentialItem()
		availableTechs()
		equippedItem()
		setEquippedItem()
		inventoryTags()
		upgradeShip()
		equipTech()
		warp()
		gender()
		enableMission()
		itemsWithTag()
		hasCompletedQuest()
		radioMessage()
		confirm()
		essentialItem()
		getItemWithParameter()
		introComplete()
		recordEvent()
		altHandItemTags()
		addBookmark()
		playTime()
		serverUuid()
		makeTechUnavailable()
		canStartQuest()
		primaryHandItemTags()
		isLounging()
		consumeItem()
		shipUpgrades()
		lounge()
		playCinematic()
		altHandItem()
		primaryHandItem()
		consumeTaggedItem()
		hasItemWithParameter()
		hasQuest()
		hasCountOfItem()
		makeTechAvailable()
		setUniverseFlag()
		hasItem()
		completeMission()
		removeEssentialItem()
		species()
		worldId()
		giveBlueprint()
		giveItem()
		setIntroComplete()
		equippedTech()
		enabledTechs()
		enableTech()
		cleanupItems()
	}
	config = {
		getParameter()
	}
	widget = {
		setImage()
		setOptionVisible()
		setImageRotation()
		blur()
		setSelectedOption()
		getText()
		setVisible()
		setButtonCheckedImages()
		getChecked()
		setButtonImage()
		getSelectedOption()
		setData()
		setImageScale()
		setChecked()
		setText()
		itemGridItems()
		getData()
		getListSelected()
		setSize()
		removeListItem()
		setButtonImages()
		setListSelected()
		addListItem()
		getSliderValue()
		clearListItems()
		focus()
		setProgress()
		setPosition()
		playSound()
		getPosition()
		setOptionEnabled()
		setButtonEnabled()
		setFontColor()
		setButtonOverlayImage()
		getSize()
	}
	ipairs()
	utf8 = {
		offset()
		charpattern = "[
[00:18:42.207] [Info] [IC] [Sort] Time elapsed: 0.011
[00:18:43.102] [Warn] 	script = {
		setUpdateDelta()
		updateDt()
	}
	math = {
		ceil()
		acos()
		rad()
		log()
		sin()
		pi = 3.1415926535898
		maxinteger = 9223372036854775807
		randomseed()
		cos()
		huge = inf
		mininteger = -9223372036854775808
		type()
		floor()
		tointeger()
		abs()
		atan()
		tan()
		sqrt()
		ult()
		asin()
		min()
		modf()
		exp()
		random()
		fmod()
		max()
		deg()
	}
	pairs()
	rawget()
	os = {
		difftime()
		clock()
		time()
	}
	jarray()
	jsize()
	jobject()
	jremove()
	next()
	update()
	type()
	assert()
	player = {
		ownShipWorldId()
		consumeItemWithParameter()
		startQuest()
		giveEssentialItem()
		availableTechs()
		equippedItem()
		setEquippedItem()
		inventoryTags()
		upgradeShip()
		equipTech()
		warp()
		gender()
		enableMission()
		itemsWithTag()
		hasCompletedQuest()
		radioMessage()
		confirm()
		essentialItem()
		getItemWithParameter()
		introComplete()
		recordEvent()
		altHandItemTags()
		addBookmark()
		playTime()
		serverUuid()
		makeTechUnavailable()
		canStartQuest()
		primaryHandItemTags()
		isLounging()
		consumeItem()
		shipUpgrades()
		lounge()
		playCinematic()
		altHandItem()
		primaryHandItem()
		consumeTaggedItem()
		hasItemWithParameter()
		hasQuest()
		hasCountOfItem()
		makeTechAvailable()
		setUniverseFlag()
		hasItem()
		completeMission()
		removeEssentialItem()
		species()
		worldId()
		giveBlueprint()
		giveItem()
		setIntroComplete()
		equippedTech()
		enabledTechs()
		enableTech()
		cleanupItems()
	}
	config = {
		getParameter()
	}
	widget = {
		setImage()
		setOptionVisible()
		setImageRotation()
		blur()
		setSelectedOption()
		getText()
		setVisible()
		setButtonCheckedImages()
		getChecked()
		setButtonImage()
		getSelectedOption()
		setData()
		setImageScale()
		setChecked()
		setText()
		itemGridItems()
		getData()
		getListSelected()
		setSize()
		removeListItem()
		setButtonImages()
		setListSelected()
		addListItem()
		getSliderValue()
		clearListItems()
		focus()
		setProgress()
		setPosition()
		playSound()
		getPosition()
		setOptionEnabled()
		setButtonEnabled()
		setFontColor()
		setButtonOverlayImage()
		getSize()
	}
	ipairs()
	utf8 = {
		offset()
		charpattern = "[
[00:18:45.105] [Warn] 	script = {
		setUpdateDelta()
		updateDt()
	}
	math = {
		ceil()
		acos()
		rad()
		log()
		sin()
		pi = 3.1415926535898
		maxinteger = 9223372036854775807
		randomseed()
		cos()
		huge = inf
		mininteger = -9223372036854775808
		type()
		floor()
		tointeger()
		abs()
		atan()
		tan()
		sqrt()
		ult()
		asin()
		min()
		modf()
		exp()
		random()
		fmod()
		max()
		deg()
	}
	pairs()
	rawget()
	os = {
		difftime()
		clock()
		time()
	}
	jarray()
	jsize()
	jobject()
	jremove()
	next()
	update()
	type()
	assert()
	player = {
		ownShipWorldId()
		consumeItemWithParameter()
		startQuest()
		giveEssentialItem()
		availableTechs()
		equippedItem()
		setEquippedItem()
		inventoryTags()
		upgradeShip()
		equipTech()
		warp()
		gender()
		enableMission()
		itemsWithTag()
		hasCompletedQuest()
		radioMessage()
		confirm()
		essentialItem()
		getItemWithParameter()
		introComplete()
		recordEvent()
		altHandItemTags()
		addBookmark()
		playTime()
		serverUuid()
		makeTechUnavailable()
		canStartQuest()
		primaryHandItemTags()
		isLounging()
		consumeItem()
		shipUpgrades()
		lounge()
		playCinematic()
		altHandItem()
		primaryHandItem()
		consumeTaggedItem()
		hasItemWithParameter()
		hasQuest()
		hasCountOfItem()
		makeTechAvailable()
		setUniverseFlag()
		hasItem()
		completeMission()
		removeEssentialItem()
		species()
		worldId()
		giveBlueprint()
		giveItem()
		setIntroComplete()
		equippedTech()
		enabledTechs()
		enableTech()
		cleanupItems()
	}
	config = {
		getParameter()
	}
	widget = {
		setImage()
		setOptionVisible()
		setImageRotation()
		blur()
		setSelectedOption()
		getText()
		setVisible()
		setButtonCheckedImages()
		getChecked()
		setButtonImage()
		getSelectedOption()
		setData()
		setImageScale()
		setChecked()
		setText()
		itemGridItems()
		getData()
		getListSelected()
		setSize()
		removeListItem()
		setButtonImages()
		setListSelected()
		addListItem()
		getSliderValue()
		clearListItems()
		focus()
		setProgress()
		setPosition()
		playSound()
		getPosition()
		setOptionEnabled()
		setButtonEnabled()
		setFontColor()
		setButtonOverlayImage()
		getSize()
	}
	ipairs()
	utf8 = {
		offset()
		charpattern = "[
[00:18:46.752] [Warn] 	script = {
		setUpdateDelta()
		updateDt()
	}
	math = {
		ceil()
		acos()
		rad()
		log()
		sin()
		pi = 3.1415926535898
		maxinteger = 9223372036854775807
		randomseed()
		cos()
		huge = inf
		mininteger = -9223372036854775808
		type()
		floor()
		tointeger()
		abs()
		atan()
		tan()
		sqrt()
		ult()
		asin()
		min()
		modf()
		exp()
		random()
		fmod()
		max()
		deg()
	}
	pairs()
	rawget()
	os = {
		difftime()
		clock()
		time()
	}
	jarray()
	jsize()
	jobject()
	jremove()
	next()
	update()
	type()
	assert()
	player = {
		ownShipWorldId()
		consumeItemWithParameter()
		startQuest()
		giveEssentialItem()
		availableTechs()
		equippedItem()
		setEquippedItem()
		inventoryTags()
		upgradeShip()
		equipTech()
		warp()
		gender()
		enableMission()
		itemsWithTag()
		hasCompletedQuest()
		radioMessage()
		confirm()
		essentialItem()
		getItemWithParameter()
		introComplete()
		recordEvent()
		altHandItemTags()
		addBookmark()
		playTime()
		serverUuid()
		makeTechUnavailable()
		canStartQuest()
		primaryHandItemTags()
		isLounging()
		consumeItem()
		shipUpgrades()
		lounge()
		playCinematic()
		altHandItem()
		primaryHandItem()
		consumeTaggedItem()
		hasItemWithParameter()
		hasQuest()
		hasCountOfItem()
		makeTechAvailable()
		setUniverseFlag()
		hasItem()
		completeMission()
		removeEssentialItem()
		species()
		worldId()
		giveBlueprint()
		giveItem()
		setIntroComplete()
		equippedTech()
		enabledTechs()
		enableTech()
		cleanupItems()
	}
	config = {
		getParameter()
	}
	widget = {
		setImage()
		setOptionVisible()
		setImageRotation()
		blur()
		setSelectedOption()
		getText()
		setVisible()
		setButtonCheckedImages()
		getChecked()
		setButtonImage()
		getSelectedOption()
		setData()
		setImageScale()
		setChecked()
		setText()
		itemGridItems()
		getData()
		getListSelected()
		setSize()
		removeListItem()
		setButtonImages()
		setListSelected()
		addListItem()
		getSliderValue()
		clearListItems()
		focus()
		setProgress()
		setPosition()
		playSound()
		getPosition()
		setOptionEnabled()
		setButtonEnabled()
		setFontColor()
		setButtonOverlayImage()
		getSize()
	}
	ipairs()
	utf8 = {
		offset()
		charpattern = "[
[00:18:58.120] [Warn] 	script = {
		setUpdateDelta()
		updateDt()
	}
	math = {
		ceil()
		acos()
		rad()
		log()
		sin()
		pi = 3.1415926535898
		maxinteger = 9223372036854775807
		randomseed()
		cos()
		huge = inf
		mininteger = -9223372036854775808
		type()
		floor()
		tointeger()
		abs()
		atan()
		tan()
		sqrt()
		ult()
		asin()
		min()
		modf()
		exp()
		random()
		fmod()
		max()
		deg()
	}
	pairs()
	rawget()
	os = {
		difftime()
		clock()
		time()
	}
	jarray()
	jsize()
	jobject()
	jremove()
	next()
	update()
	type()
	assert()
	player = {
		ownShipWorldId()
		consumeItemWithParameter()
		startQuest()
		giveEssentialItem()
		availableTechs()
		equippedItem()
		setEquippedItem()
		inventoryTags()
		upgradeShip()
		equipTech()
		warp()
		gender()
		enableMission()
		itemsWithTag()
		hasCompletedQuest()
		radioMessage()
		confirm()
		essentialItem()
		getItemWithParameter()
		introComplete()
		recordEvent()
		altHandItemTags()
		addBookmark()
		playTime()
		serverUuid()
		makeTechUnavailable()
		canStartQuest()
		primaryHandItemTags()
		isLounging()
		consumeItem()
		shipUpgrades()
		lounge()
		playCinematic()
		altHandItem()
		primaryHandItem()
		consumeTaggedItem()
		hasItemWithParameter()
		hasQuest()
		hasCountOfItem()
		makeTechAvailable()
		setUniverseFlag()
		hasItem()
		completeMission()
		removeEssentialItem()
		species()
		worldId()
		giveBlueprint()
		giveItem()
		setIntroComplete()
		equippedTech()
		enabledTechs()
		enableTech()
		cleanupItems()
	}
	config = {
		getParameter()
	}
	widget = {
		setImage()
		setOptionVisible()
		setImageRotation()
		blur()
		setSelectedOption()
		getText()
		setVisible()
		setButtonCheckedImages()
		getChecked()
		setButtonImage()
		getSelectedOption()
		setData()
		setImageScale()
		setChecked()
		setText()
		itemGridItems()
		getData()
		getListSelected()
		setSize()
		removeListItem()
		setButtonImages()
		setListSelected()
		addListItem()
		getSliderValue()
		clearListItems()
		focus()
		setProgress()
		setPosition()
		playSound()
		getPosition()
		setOptionEnabled()
		setButtonEnabled()
		setFontColor()
		setButtonOverlayImage()
		getSize()
	}
	ipairs()
	utf8 = {
		offset()
		charpattern = "[
[00:19:10.645] [Warn] 	script = {
		setUpdateDelta()
		updateDt()
	}
	math = {
		ceil()
		acos()
		rad()
		log()
		sin()
		pi = 3.1415926535898
		maxinteger = 9223372036854775807
		randomseed()
		cos()
		huge = inf
		mininteger = -9223372036854775808
		type()
		floor()
		tointeger()
		abs()
		atan()
		tan()
		sqrt()
		ult()
		asin()
		min()
		modf()
		exp()
		random()
		fmod()
		max()
		deg()
	}
	pairs()
	rawget()
	os = {
		difftime()
		clock()
		time()
	}
	jarray()
	jsize()
	jobject()
	jremove()
	next()
	update()
	type()
	assert()
	player = {
		ownShipWorldId()
		consumeItemWithParameter()
		startQuest()
		giveEssentialItem()
		availableTechs()
		equippedItem()
		setEquippedItem()
		inventoryTags()
		upgradeShip()
		equipTech()
		warp()
		gender()
		enableMission()
		itemsWithTag()
		hasCompletedQuest()
		radioMessage()
		confirm()
		essentialItem()
		getItemWithParameter()
		introComplete()
		recordEvent()
		altHandItemTags()
		addBookmark()
		playTime()
		serverUuid()
		makeTechUnavailable()
		canStartQuest()
		primaryHandItemTags()
		isLounging()
		consumeItem()
		shipUpgrades()
		lounge()
		playCinematic()
		altHandItem()
		primaryHandItem()
		consumeTaggedItem()
		hasItemWithParameter()
		hasQuest()
		hasCountOfItem()
		makeTechAvailable()
		setUniverseFlag()
		hasItem()
		completeMission()
		removeEssentialItem()
		species()
		worldId()
		giveBlueprint()
		giveItem()
		setIntroComplete()
		equippedTech()
		enabledTechs()
		enableTech()
		cleanupItems()
	}
	config = {
		getParameter()
	}
	widget = {
		setImage()
		setOptionVisible()
		setImageRotation()
		blur()
		setSelectedOption()
		getText()
		setVisible()
		setButtonCheckedImages()
		getChecked()
		setButtonImage()
		getSelectedOption()
		setData()
		setImageScale()
		setChecked()
		setText()
		itemGridItems()
		getData()
		getListSelected()
		setSize()
		removeListItem()
		setButtonImages()
		setListSelected()
		addListItem()
		getSliderValue()
		clearListItems()
		focus()
		setProgress()
		setPosition()
		playSound()
		getPosition()
		setOptionEnabled()
		setButtonEnabled()
		setFontColor()
		setButtonOverlayImage()
		getSize()
	}
	ipairs()
	utf8 = {
		offset()
		charpattern = "[
[00:19:18.302] [Warn] 	script = {
		setUpdateDelta()
		updateDt()
	}
	math = {
		ceil()
		acos()
		rad()
		log()
		sin()
		pi = 3.1415926535898
		maxinteger = 9223372036854775807
		randomseed()
		cos()
		huge = inf
		mininteger = -9223372036854775808
		type()
		floor()
		tointeger()
		abs()
		atan()
		tan()
		sqrt()
		ult()
		asin()
		min()
		modf()
		exp()
		random()
		fmod()
		max()
		deg()
	}
	pairs()
	rawget()
	os = {
		difftime()
		clock()
		time()
	}
	jarray()
	jsize()
	jobject()
	jremove()
	next()
	update()
	type()
	assert()
	player = {
		ownShipWorldId()
		consumeItemWithParameter()
		startQuest()
		giveEssentialItem()
		availableTechs()
		equippedItem()
		setEquippedItem()
		inventoryTags()
		upgradeShip()
		equipTech()
		warp()
		gender()
		enableMission()
		itemsWithTag()
		hasCompletedQuest()
		radioMessage()
		confirm()
		essentialItem()
		getItemWithParameter()
		introComplete()
		recordEvent()
		altHandItemTags()
		addBookmark()
		playTime()
		serverUuid()
		makeTechUnavailable()
		canStartQuest()
		primaryHandItemTags()
		isLounging()
		consumeItem()
		shipUpgrades()
		lounge()
		playCinematic()
		altHandItem()
		primaryHandItem()
		consumeTaggedItem()
		hasItemWithParameter()
		hasQuest()
		hasCountOfItem()
		makeTechAvailable()
		setUniverseFlag()
		hasItem()
		completeMission()
		removeEssentialItem()
		species()
		worldId()
		giveBlueprint()
		giveItem()
		setIntroComplete()
		equippedTech()
		enabledTechs()
		enableTech()
		cleanupItems()
	}
	config = {
		getParameter()
	}
	widget = {
		setImage()
		setOptionVisible()
		setImageRotation()
		blur()
		setSelectedOption()
		getText()
		setVisible()
		setButtonCheckedImages()
		getChecked()
		setButtonImage()
		getSelectedOption()
		setData()
		setImageScale()
		setChecked()
		setText()
		itemGridItems()
		getData()
		getListSelected()
		setSize()
		removeListItem()
		setButtonImages()
		setListSelected()
		addListItem()
		getSliderValue()
		clearListItems()
		focus()
		setProgress()
		setPosition()
		playSound()
		getPosition()
		setOptionEnabled()
		setButtonEnabled()
		setFontColor()
		setButtonOverlayImage()
		getSize()
	}
	ipairs()
	utf8 = {
		offset()
		charpattern = "[
[00:19:22.105] [Info] [IC] [Sort] Time elapsed: 0.009
[00:19:46.786] [Warn] 	script = {
		setUpdateDelta()
		updateDt()
	}
	math = {
		ceil()
		acos()
		rad()
		log()
		sin()
		pi = 3.1415926535898
		maxinteger = 9223372036854775807
		randomseed()
		cos()
		huge = inf
		mininteger = -9223372036854775808
		type()
		floor()
		tointeger()
		abs()
		atan()
		tan()
		sqrt()
		ult()
		asin()
		min()
		modf()
		exp()
		random()
		fmod()
		max()
		deg()
	}
	pairs()
	rawget()
	os = {
		difftime()
		clock()
		time()
	}
	jarray()
	jsize()
	jobject()
	jremove()
	next()
	update()
	type()
	assert()
	player = {
		ownShipWorldId()
		consumeItemWithParameter()
		startQuest()
		giveEssentialItem()
		availableTechs()
		equippedItem()
		setEquippedItem()
		inventoryTags()
		upgradeShip()
		equipTech()
		warp()
		gender()
		enableMission()
		itemsWithTag()
		hasCompletedQuest()
		radioMessage()
		confirm()
		essentialItem()
		getItemWithParameter()
		introComplete()
		recordEvent()
		altHandItemTags()
		addBookmark()
		playTime()
		serverUuid()
		makeTechUnavailable()
		canStartQuest()
		primaryHandItemTags()
		isLounging()
		consumeItem()
		shipUpgrades()
		lounge()
		playCinematic()
		altHandItem()
		primaryHandItem()
		consumeTaggedItem()
		hasItemWithParameter()
		hasQuest()
		hasCountOfItem()
		makeTechAvailable()
		setUniverseFlag()
		hasItem()
		completeMission()
		removeEssentialItem()
		species()
		worldId()
		giveBlueprint()
		giveItem()
		setIntroComplete()
		equippedTech()
		enabledTechs()
		enableTech()
		cleanupItems()
	}
	config = {
		getParameter()
	}
	widget = {
		setImage()
		setOptionVisible()
		setImageRotation()
		blur()
		setSelectedOption()
		getText()
		setVisible()
		setButtonCheckedImages()
		getChecked()
		setButtonImage()
		getSelectedOption()
		setData()
		setImageScale()
		setChecked()
		setText()
		itemGridItems()
		getData()
		getListSelected()
		setSize()
		removeListItem()
		setButtonImages()
		setListSelected()
		addListItem()
		getSliderValue()
		clearListItems()
		focus()
		setProgress()
		setPosition()
		playSound()
		getPosition()
		setOptionEnabled()
		setButtonEnabled()
		setFontColor()
		setButtonOverlayImage()
		getSize()
	}
	ipairs()
	utf8 = {
		offset()
		charpattern = "[
[00:20:08.655] [Warn] 	script = {
		setUpdateDelta()
		updateDt()
	}
	math = {
		ceil()
		acos()
		rad()
		log()
		sin()
		pi = 3.1415926535898
		maxinteger = 9223372036854775807
		randomseed()
		cos()
		huge = inf
		mininteger = -9223372036854775808
		type()
		floor()
		tointeger()
		abs()
		atan()
		tan()
		sqrt()
		ult()
		asin()
		min()
		modf()
		exp()
		random()
		fmod()
		max()
		deg()
	}
	pairs()
	rawget()
	os = {
		difftime()
		clock()
		time()
	}
	jarray()
	jsize()
	jobject()
	jremove()
	next()
	update()
	type()
	assert()
	player = {
		ownShipWorldId()
		consumeItemWithParameter()
		startQuest()
		giveEssentialItem()
		availableTechs()
		equippedItem()
		setEquippedItem()
		inventoryTags()
		upgradeShip()
		equipTech()
		warp()
		gender()
		enableMission()
		itemsWithTag()
		hasCompletedQuest()
		radioMessage()
		confirm()
		essentialItem()
		getItemWithParameter()
		introComplete()
		recordEvent()
		altHandItemTags()
		addBookmark()
		playTime()
		serverUuid()
		makeTechUnavailable()
		canStartQuest()
		primaryHandItemTags()
		isLounging()
		consumeItem()
		shipUpgrades()
		lounge()
		playCinematic()
		altHandItem()
		primaryHandItem()
		consumeTaggedItem()
		hasItemWithParameter()
		hasQuest()
		hasCountOfItem()
		makeTechAvailable()
		setUniverseFlag()
		hasItem()
		completeMission()
		removeEssentialItem()
		species()
		worldId()
		giveBlueprint()
		giveItem()
		setIntroComplete()
		equippedTech()
		enabledTechs()
		enableTech()
		cleanupItems()
	}
	config = {
		getParameter()
	}
	widget = {
		setImage()
		setOptionVisible()
		setImageRotation()
		blur()
		setSelectedOption()
		getText()
		setVisible()
		setButtonCheckedImages()
		getChecked()
		setButtonImage()
		getSelectedOption()
		setData()
		setImageScale()
		setChecked()
		setText()
		itemGridItems()
		getData()
		getListSelected()
		setSize()
		removeListItem()
		setButtonImages()
		setListSelected()
		addListItem()
		getSliderValue()
		clearListItems()
		focus()
		setProgress()
		setPosition()
		playSound()
		getPosition()
		setOptionEnabled()
		setButtonEnabled()
		setFontColor()
		setButtonOverlayImage()
		getSize()
	}
	ipairs()
	utf8 = {
		offset()
		charpattern = "[
[00:20:11.351] [Warn] 	script = {
		setUpdateDelta()
		updateDt()
	}
	math = {
		ceil()
		acos()
		rad()
		log()
		sin()
		pi = 3.1415926535898
		maxinteger = 9223372036854775807
		randomseed()
		cos()
		huge = inf
		mininteger = -9223372036854775808
		type()
		floor()
		tointeger()
		abs()
		atan()
		tan()
		sqrt()
		ult()
		asin()
		min()
		modf()
		exp()
		random()
		fmod()
		max()
		deg()
	}
	pairs()
	rawget()
	os = {
		difftime()
		clock()
		time()
	}
	jarray()
	jsize()
	jobject()
	jremove()
	next()
	update()
	type()
	assert()
	player = {
		ownShipWorldId()
		consumeItemWithParameter()
		startQuest()
		giveEssentialItem()
		availableTechs()
		equippedItem()
		setEquippedItem()
		inventoryTags()
		upgradeShip()
		equipTech()
		warp()
		gender()
		enableMission()
		itemsWithTag()
		hasCompletedQuest()
		radioMessage()
		confirm()
		essentialItem()
		getItemWithParameter()
		introComplete()
		recordEvent()
		altHandItemTags()
		addBookmark()
		playTime()
		serverUuid()
		makeTechUnavailable()
		canStartQuest()
		primaryHandItemTags()
		isLounging()
		consumeItem()
		shipUpgrades()
		lounge()
		playCinematic()
		altHandItem()
		primaryHandItem()
		consumeTaggedItem()
		hasItemWithParameter()
		hasQuest()
		hasCountOfItem()
		makeTechAvailable()
		setUniverseFlag()
		hasItem()
		completeMission()
		removeEssentialItem()
		species()
		worldId()
		giveBlueprint()
		giveItem()
		setIntroComplete()
		equippedTech()
		enabledTechs()
		enableTech()
		cleanupItems()
	}
	config = {
		getParameter()
	}
	widget = {
		setImage()
		setOptionVisible()
		setImageRotation()
		blur()
		setSelectedOption()
		getText()
		setVisible()
		setButtonCheckedImages()
		getChecked()
		setButtonImage()
		getSelectedOption()
		setData()
		setImageScale()
		setChecked()
		setText()
		itemGridItems()
		getData()
		getListSelected()
		setSize()
		removeListItem()
		setButtonImages()
		setListSelected()
		addListItem()
		getSliderValue()
		clearListItems()
		focus()
		setProgress()
		setPosition()
		playSound()
		getPosition()
		setOptionEnabled()
		setButtonEnabled()
		setFontColor()
		setButtonOverlayImage()
		getSize()
	}
	ipairs()
	utf8 = {
		offset()
		charpattern = "[
[00:20:19.884] [Warn] 	script = {
		setUpdateDelta()
		updateDt()
	}
	math = {
		ceil()
		acos()
		rad()
		log()
		sin()
		pi = 3.1415926535898
		maxinteger = 9223372036854775807
		randomseed()
		cos()
		huge = inf
		mininteger = -9223372036854775808
		type()
		floor()
		tointeger()
		abs()
		atan()
		tan()
		sqrt()
		ult()
		asin()
		min()
		modf()
		exp()
		random()
		fmod()
		max()
		deg()
	}
	pairs()
	rawget()
	os = {
		difftime()
		clock()
		time()
	}
	jarray()
	jsize()
	jobject()
	jremove()
	next()
	update()
	type()
	assert()
	player = {
		ownShipWorldId()
		consumeItemWithParameter()
		startQuest()
		giveEssentialItem()
		availableTechs()
		equippedItem()
		setEquippedItem()
		inventoryTags()
		upgradeShip()
		equipTech()
		warp()
		gender()
		enableMission()
		itemsWithTag()
		hasCompletedQuest()
		radioMessage()
		confirm()
		essentialItem()
		getItemWithParameter()
		introComplete()
		recordEvent()
		altHandItemTags()
		addBookmark()
		playTime()
		serverUuid()
		makeTechUnavailable()
		canStartQuest()
		primaryHandItemTags()
		isLounging()
		consumeItem()
		shipUpgrades()
		lounge()
		playCinematic()
		altHandItem()
		primaryHandItem()
		consumeTaggedItem()
		hasItemWithParameter()
		hasQuest()
		hasCountOfItem()
		makeTechAvailable()
		setUniverseFlag()
		hasItem()
		completeMission()
		removeEssentialItem()
		species()
		worldId()
		giveBlueprint()
		giveItem()
		setIntroComplete()
		equippedTech()
		enabledTechs()
		enableTech()
		cleanupItems()
	}
	config = {
		getParameter()
	}
	widget = {
		setImage()
		setOptionVisible()
		setImageRotation()
		blur()
		setSelectedOption()
		getText()
		setVisible()
		setButtonCheckedImages()
		getChecked()
		setButtonImage()
		getSelectedOption()
		setData()
		setImageScale()
		setChecked()
		setText()
		itemGridItems()
		getData()
		getListSelected()
		setSize()
		removeListItem()
		setButtonImages()
		setListSelected()
		addListItem()
		getSliderValue()
		clearListItems()
		focus()
		setProgress()
		setPosition()
		playSound()
		getPosition()
		setOptionEnabled()
		setButtonEnabled()
		setFontColor()
		setButtonOverlayImage()
		getSize()
	}
	ipairs()
	utf8 = {
		offset()
		charpattern = "[
[00:20:21.990] [Info] [IC] [Sort] Time elapsed: 0.008
[00:20:31.188] [Warn] 	script = {
		setUpdateDelta()
		updateDt()
	}
	math = {
		ceil()
		acos()
		rad()
		log()
		sin()
		pi = 3.1415926535898
		maxinteger = 9223372036854775807
		randomseed()
		cos()
		huge = inf
		mininteger = -9223372036854775808
		type()
		floor()
		tointeger()
		abs()
		atan()
		tan()
		sqrt()
		ult()
		asin()
		min()
		modf()
		exp()
		random()
		fmod()
		max()
		deg()
	}
	pairs()
	rawget()
	os = {
		difftime()
		clock()
		time()
	}
	jarray()
	jsize()
	jobject()
	jremove()
	next()
	update()
	type()
	assert()
	player = {
		ownShipWorldId()
		consumeItemWithParameter()
		startQuest()
		giveEssentialItem()
		availableTechs()
		equippedItem()
		setEquippedItem()
		inventoryTags()
		upgradeShip()
		equipTech()
		warp()
		gender()
		enableMission()
		itemsWithTag()
		hasCompletedQuest()
		radioMessage()
		confirm()
		essentialItem()
		getItemWithParameter()
		introComplete()
		recordEvent()
		altHandItemTags()
		addBookmark()
		playTime()
		serverUuid()
		makeTechUnavailable()
		canStartQuest()
		primaryHandItemTags()
		isLounging()
		consumeItem()
		shipUpgrades()
		lounge()
		playCinematic()
		altHandItem()
		primaryHandItem()
		consumeTaggedItem()
		hasItemWithParameter()
		hasQuest()
		hasCountOfItem()
		makeTechAvailable()
		setUniverseFlag()
		hasItem()
		completeMission()
		removeEssentialItem()
		species()
		worldId()
		giveBlueprint()
		giveItem()
		setIntroComplete()
		equippedTech()
		enabledTechs()
		enableTech()
		cleanupItems()
	}
	config = {
		getParameter()
	}
	widget = {
		setImage()
		setOptionVisible()
		setImageRotation()
		blur()
		setSelectedOption()
		getText()
		setVisible()
		setButtonCheckedImages()
		getChecked()
		setButtonImage()
		getSelectedOption()
		setData()
		setImageScale()
		setChecked()
		setText()
		itemGridItems()
		getData()
		getListSelected()
		setSize()
		removeListItem()
		setButtonImages()
		setListSelected()
		addListItem()
		getSliderValue()
		clearListItems()
		focus()
		setProgress()
		setPosition()
		playSound()
		getPosition()
		setOptionEnabled()
		setButtonEnabled()
		setFontColor()
		setButtonOverlayImage()
		getSize()
	}
	ipairs()
	utf8 = {
		offset()
		charpattern = "[
[00:20:36.874] [Info] [IC] [Sort] Time elapsed: 0.011
[00:20:58.419] [Info] UniverseServer: Loading client ship world ClientShipWorld:40d0c64bbadbfcac62e62a636f4f2308
[00:20:59.363] [Info] UniverseServer: Warping player 1 to ClientShipWorld:40d0c64bbadbfcac62e62a636f4f2308
[00:20:59.476] [Info] UniverseServer: Stopping idle world CelestialWorld:-549421120:-174071947:-77840190:8
[00:20:59.535] [Info] Client received world stop packet, leaving: Removed
[00:23:03.273] [Info] UniverseServer: Loading celestial world -549421001:-174071997:73115888:11
[00:23:03.883] [Info] UniverseServer: Warping player 1 to CelestialWorld:-549421001:-174071997:73115888:11=c70c9c341f137e6bb697fde680d6c23d
[00:23:03.974] [Info] Client received world stop packet, leaving: Removed
[00:23:04.158] [Info] UniverseServer: Stopping idle world ClientShipWorld:40d0c64bbadbfcac62e62a636f4f2308
[00:25:01.408] [Info] UniverseServer: Warping player 1 to CelestialWorld:-549421001:-174071997:73115888:11=5f8c95c2333e8078cf269b11371c5ef7
[00:25:01.425] [Info] Client received world stop packet, leaving: Removed
[00:26:38.521] [Warn] 	pcall()
	xpcall()
	error()
	table = {
		remove()
		sort()
		unpack()
		move()
		insert()
		pack()
		concat()
	}
	jremove()
	jresize()
	status = {
		resetResource()
		removeEphemeralEffect()
		inflictedHitsSince()
		addPersistentEffect()
		consumeResource()
		statusProperty()
		addEphemeralEffects()
		addPersistentEffects()
		resourcePercentage()
		clearEphemeralEffects()
		getPersistentEffects()
		resourceMax()
		activeUniqueStatusEffectSummary()
		modifyResource()
		giveResource()
		resetAllResources()
		resourceLocked()
		addEphemeralEffect()
		inflictedDamageSince()
		setResourcePercentage()
		overConsumeResource()
		clearPersistentEffects()
		resourcePositive()
		resourceNames()
		isResource()
		damageTakenSince()
		setResource()
		setPersistentEffects()
		statPositive()
		setResourceLocked()
		clearAllPersistentEffects()
		setStatusProperty()
		resource()
		modifyResourcePercentage()
		stat()
	}
	jsize()
	type()
	utf8 = {
		codepoint()
		offset()
		len()
		char()
		charpattern = "[
[00:27:07.102] [Info] UniverseServer: Loading client ship world ClientShipWorld:40d0c64bbadbfcac62e62a636f4f2308
[00:27:08.012] [Info] UniverseServer: Warping player 1 to ClientShipWorld:40d0c64bbadbfcac62e62a636f4f2308
[00:27:08.063] [Info] Client received world stop packet, leaving: Removed
[00:27:08.134] [Info] UniverseServer: Stopping idle world CelestialWorld:-549421001:-174071997:73115888:11
[00:27:40.260] [Warn] 	xpcall()
	pane = {
		dismiss()
		playerEntityId()
		containerEntityId()
	}
	error()
	_VERSION = "Lua 5.3"
	jremove()
	jarray()
	rawlen()
	coroutine = {
		status()
		resume()
		isyieldable()
		wrap()
		running()
		yield()
		create()
	}
	root = {
		questConfig()
		createBiome()
		materialHealth()
		monsterSkillParameter()
		npcVariant()
		imageSize()
		monsterMovementSettings()
		getMatchingTenants()
		getConfigurationPath()
		hasTech()
		recipesForItem()
		imageSpaces()
		tenantConfig()
		behaviorModule()
		itemConfig()
		generateName()
		projectileGravityMultiplier()
		npcConfig()
		assetJson()
		isTreasurePool()
		setConfiguration()
		treeStemDirectory()
		createItem()
		nonEmptyRegion()
		treeFoliageDirectory()
		setConfigurationPath()
		loadVersionedJson()
		techType()
		techConfig()
		monsterPortrait()
		getConfiguration()
		npcPortrait()
		materialFootstepSound()
		createTreasure()
		itemType()
		materialPath()
		makeCurrentVersionedJson()
		liquidStatusEffects()
		materialMiningSound()
		itemTags()
		projectileConfig()
		evalFunction()
		itemHasTag()
		evalFunction2()
	}
	widget = {
		setOptionVisible()
		getSliderValue()
		removeListItem()
		setButtonEnabled()
		focus()
		setChecked()
		setButtonOverlayImage()
		blur()
		getData()
		getChecked()
		setSize()
		getListSelected()
		getPosition()
		setButtonImage()
		setPosition()
		setButtonImages()
		playSound()
		getSelectedOption()
		setImageScale()
		setListSelected()
		getSize()
		setImageRotation()
		setFontColor()
		setOptionEnabled()
		itemGridItems()
		setProgress()
		setData()
		clearListItems()
		setVisible()
		setButtonCheckedImages()
		setSelectedOption()
		getText()
		addListItem()
		setImage()
		setText()
	}
	string = {
		unpack()
		rep()
		format()
		byte()
		dump()
		gmatch()
		upper()
		match()
		gsub()
		char()
		packsize()
		lower()
		pack()
		sub()
		reverse()
		find()
		len()
	}
	rawset()
	self = {
	}
	rawget()
	jresize()
	utf8 = {
		char()
		codes()
		codepoint()
		charpattern = "[
[00:27:46.862] [Info] [IC] [Sort] Time elapsed: 0.004
[00:27:58.982] [Info] UniverseServer: Loading celestial world -549421001:-174071997:73115888:11
[00:27:59.287] [Info] UniverseServer: Warping player 1 to CelestialWorld:-549421001:-174071997:73115888:11=a8e1ba73b1a2174239364daaf5b77ffc
[00:27:59.329] [Info] Client received world stop packet, leaving: Removed
[00:27:59.449] [Info] UniverseServer: Stopping idle world ClientShipWorld:40d0c64bbadbfcac62e62a636f4f2308
[00:29:07.933] [Info] Skipped event recording for nonexistent entity 389
[00:29:27.752] [Info] UniverseServer: Loading client ship world ClientShipWorld:40d0c64bbadbfcac62e62a636f4f2308
[00:29:28.677] [Info] UniverseServer: Warping player 1 to ClientShipWorld:40d0c64bbadbfcac62e62a636f4f2308
[00:29:28.771] [Info] UniverseServer: Stopping idle world CelestialWorld:-549421001:-174071997:73115888:11
[00:29:28.851] [Info] Client received world stop packet, leaving: Removed
[00:29:35.293] [Info] UniverseServer: Loading celestial world -549421001:-174071997:73115888:11
[00:29:35.703] [Info] UniverseServer: Warping player 1 to CelestialWorld:-549421001:-174071997:73115888:11=c70c9c341f137e6bb697fde680d6c23d
[00:29:35.858] [Info] Client received world stop packet, leaving: Removed
[00:29:36.039] [Info] UniverseServer: Stopping idle world ClientShipWorld:40d0c64bbadbfcac62e62a636f4f2308
[00:32:38.043] [Warn] 	tonumber()
	rawset()
	jobject()
	getmetatable()
	select()
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	p()
	jsize()
	setmetatable()
	print()
	update()
	rawlen()
	pairs()
	error()
	xpcall()
	_VERSION = "Lua 5.3"
	sb = {
		logError()
		logWarn()
		makePerlinSource()
		jsonMerge()
		interpolateSinEase()
		staticRandomDouble()
		print()
		staticRandomDoubleRange()
		nrand()
		staticRandomI32Range()
		replaceTags()
		setLogMap()
		staticRandomI32()
		printJson()
		makeRandomSource()
		makeUuid()
		jsonQuery()
		logInfo()
	}
	ipairs()
	pcall()
	config = {
		getParameter()
	}
	tostring()
	utf8 = {
		len()
		char()
		charpattern = "[
[00:32:52.477] [Info] UniverseServer: Loading client ship world ClientShipWorld:40d0c64bbadbfcac62e62a636f4f2308
[00:32:53.444] [Info] UniverseServer: Warping player 1 to ClientShipWorld:40d0c64bbadbfcac62e62a636f4f2308
[00:32:53.548] [Info] UniverseServer: Stopping idle world CelestialWorld:-549421001:-174071997:73115888:11
[00:32:53.587] [Info] Client received world stop packet, leaving: Removed
[00:33:32.141] [Info] UniverseServer: Loading celestial world -549421120:-174071947:-77840190:8
[00:33:32.344] [Info] UniverseServer: Warping player 1 to CelestialWorld:-549421120:-174071947:-77840190:8=6a0159452985405b6d4e98d282c3ef2b
[00:33:32.365] [Info] Client received world stop packet, leaving: Removed
[00:33:32.409] [Info] UniverseServer: Stopping idle world ClientShipWorld:40d0c64bbadbfcac62e62a636f4f2308
[00:34:26.547] [Info] UniverseServer: Loading client ship world ClientShipWorld:40d0c64bbadbfcac62e62a636f4f2308
[00:34:27.501] [Info] UniverseServer: Warping player 1 to ClientShipWorld:40d0c64bbadbfcac62e62a636f4f2308
[00:34:27.601] [Info] UniverseServer: Stopping idle world CelestialWorld:-549421120:-174071947:-77840190:8
[00:34:27.642] [Info] Client received world stop packet, leaving: Removed
[00:34:36.220] [Info] UniverseServer: Loading celestial world -549421120:-174071947:-77840190:8
[00:34:36.420] [Info] UniverseServer: Warping player 1 to CelestialWorld:-549421120:-174071947:-77840190:8=65960b76dbc4345d6a78ca55b02f8224
[00:34:36.445] [Info] Client received world stop packet, leaving: Removed
[00:34:36.623] [Info] UniverseServer: Stopping idle world ClientShipWorld:40d0c64bbadbfcac62e62a636f4f2308
[00:35:17.607] [Warn] 	print()
	select()
	ipairs()
	pairs()
	config = {
		getParameter()
	}
	utf8 = {
		char()
		offset()
		len()
		codepoint()
		codes()
		charpattern = "[
[00:35:56.707] [Info] Root: Loaded TenantDatabase in 0.0036934 seconds
[00:39:43.209] [Warn] 	print()
	select()
	ipairs()
	pairs()
	config = {
		getParameter()
	}
	utf8 = {
		char()
		offset()
		len()
		codepoint()
		codes()
		charpattern = "[
[00:39:44.875] [Warn] 	print()
	select()
	ipairs()
	pairs()
	config = {
		getParameter()
	}
	utf8 = {
		char()
		offset()
		len()
		codepoint()
		codes()
		charpattern = "[
[00:39:45.784] [Warn] 	print()
	select()
	ipairs()
	pairs()
	config = {
		getParameter()
	}
	utf8 = {
		char()
		offset()
		len()
		codepoint()
		codes()
		charpattern = "[
[00:39:53.371] [Warn] 	print()
	select()
	ipairs()
	pairs()
	config = {
		getParameter()
	}
	utf8 = {
		char()
		offset()
		len()
		codepoint()
		codes()
		charpattern = "[
[00:41:08.839] [Warn] 	print()
	select()
	ipairs()
	pairs()
	config = {
		getParameter()
	}
	utf8 = {
		char()
		offset()
		len()
		codepoint()
		codes()
		charpattern = "[
[00:41:09.821] [Warn] 	print()
	select()
	ipairs()
	pairs()
	config = {
		getParameter()
	}
	utf8 = {
		char()
		offset()
		len()
		codepoint()
		codes()
		charpattern = "[
[00:41:24.255] [Warn] 	print()
	select()
	ipairs()
	pairs()
	config = {
		getParameter()
	}
	utf8 = {
		char()
		offset()
		len()
		codepoint()
		codes()
		charpattern = "[
[00:41:42.371] [Warn] 	print()
	select()
	ipairs()
	pairs()
	config = {
		getParameter()
	}
	utf8 = {
		char()
		offset()
		len()
		codepoint()
		codes()
		charpattern = "[
[00:41:50.836] [Warn] 	print()
	select()
	ipairs()
	pairs()
	config = {
		getParameter()
	}
	utf8 = {
		char()
		offset()
		len()
		codepoint()
		codes()
		charpattern = "[
[00:42:25.760] [Warn] 	print()
	select()
	ipairs()
	pairs()
	config = {
		getParameter()
	}
	utf8 = {
		char()
		offset()
		len()
		codepoint()
		codes()
		charpattern = "[
[00:42:26.603] [Warn] 	print()
	select()
	ipairs()
	pairs()
	config = {
		getParameter()
	}
	utf8 = {
		char()
		offset()
		len()
		codepoint()
		codes()
		charpattern = "[
[00:42:31.498] [Warn] 	print()
	select()
	ipairs()
	pairs()
	config = {
		getParameter()
	}
	utf8 = {
		char()
		offset()
		len()
		codepoint()
		codes()
		charpattern = "[
[00:42:37.670] [Info] [IC] [Sort] Time elapsed: 0.006
[00:43:10.410] [Warn] 	print()
	select()
	ipairs()
	pairs()
	config = {
		getParameter()
	}
	utf8 = {
		char()
		offset()
		len()
		codepoint()
		codes()
		charpattern = "[
[00:44:22.178] [Warn] 	print()
	select()
	ipairs()
	pairs()
	config = {
		getParameter()
	}
	utf8 = {
		char()
		offset()
		len()
		codepoint()
		codes()
		charpattern = "[
[00:44:23.102] [Warn] 	print()
	select()
	ipairs()
	pairs()
	config = {
		getParameter()
	}
	utf8 = {
		char()
		offset()
		len()
		codepoint()
		codes()
		charpattern = "[
[00:44:24.220] [Warn] 	print()
	select()
	ipairs()
	pairs()
	config = {
		getParameter()
	}
	utf8 = {
		char()
		offset()
		len()
		codepoint()
		codes()
		charpattern = "[
[00:44:25.469] [Warn] 	print()
	select()
	ipairs()
	pairs()
	config = {
		getParameter()
	}
	utf8 = {
		char()
		offset()
		len()
		codepoint()
		codes()
		charpattern = "[
[00:44:31.036] [Warn] 	print()
	select()
	ipairs()
	pairs()
	config = {
		getParameter()
	}
	utf8 = {
		char()
		offset()
		len()
		codepoint()
		codes()
		charpattern = "[
[00:45:16.531] [Warn] 	print()
	select()
	ipairs()
	pairs()
	config = {
		getParameter()
	}
	utf8 = {
		char()
		offset()
		len()
		codepoint()
		codes()
		charpattern = "[
[00:45:18.488] [Warn] 	print()
	select()
	ipairs()
	pairs()
	config = {
		getParameter()
	}
	utf8 = {
		char()
		offset()
		len()
		codepoint()
		codes()
		charpattern = "[
[00:45:19.772] [Warn] 	print()
	select()
	ipairs()
	pairs()
	config = {
		getParameter()
	}
	utf8 = {
		char()
		offset()
		len()
		codepoint()
		codes()
		charpattern = "[
[00:51:49.798] [Warn] 	print()
	select()
	ipairs()
	pairs()
	config = {
		getParameter()
	}
	utf8 = {
		char()
		offset()
		len()
		codepoint()
		codes()
		charpattern = "[
[00:51:51.236] [Warn] 	print()
	select()
	ipairs()
	pairs()
	config = {
		getParameter()
	}
	utf8 = {
		char()
		offset()
		len()
		codepoint()
		codes()
		charpattern = "[
[00:51:53.240] [Warn] 	print()
	select()
	ipairs()
	pairs()
	config = {
		getParameter()
	}
	utf8 = {
		char()
		offset()
		len()
		codepoint()
		codes()
		charpattern = "[
[00:51:54.305] [Warn] 	print()
	select()
	ipairs()
	pairs()
	config = {
		getParameter()
	}
	utf8 = {
		char()
		offset()
		len()
		codepoint()
		codes()
		charpattern = "[
[00:51:57.827] [Warn] 	print()
	select()
	ipairs()
	pairs()
	config = {
		getParameter()
	}
	utf8 = {
		char()
		offset()
		len()
		codepoint()
		codes()
		charpattern = "[
[00:51:58.639] [Warn] 	print()
	select()
	ipairs()
	pairs()
	config = {
		getParameter()
	}
	utf8 = {
		char()
		offset()
		len()
		codepoint()
		codes()
		charpattern = "[
[00:52:03.639] [Info] [IC] [Sort] Time elapsed: 0.008
[00:52:07.902] [Warn] 	print()
	select()
	ipairs()
	pairs()
	config = {
		getParameter()
	}
	utf8 = {
		char()
		offset()
		len()
		codepoint()
		codes()
		charpattern = "[
[00:52:08.805] [Warn] 	print()
	select()
	ipairs()
	pairs()
	config = {
		getParameter()
	}
	utf8 = {
		char()
		offset()
		len()
		codepoint()
		codes()
		charpattern = "[
[00:52:12.203] [Warn] 	print()
	select()
	ipairs()
	pairs()
	config = {
		getParameter()
	}
	utf8 = {
		char()
		offset()
		len()
		codepoint()
		codes()
		charpattern = "[
[00:52:13.187] [Warn] 	print()
	select()
	ipairs()
	pairs()
	config = {
		getParameter()
	}
	utf8 = {
		char()
		offset()
		len()
		codepoint()
		codes()
		charpattern = "[
[00:52:14.105] [Warn] 	print()
	select()
	ipairs()
	pairs()
	config = {
		getParameter()
	}
	utf8 = {
		char()
		offset()
		len()
		codepoint()
		codes()
		charpattern = "[
[00:52:15.070] [Warn] 	print()
	select()
	ipairs()
	pairs()
	config = {
		getParameter()
	}
	utf8 = {
		char()
		offset()
		len()
		codepoint()
		codes()
		charpattern = "[
[00:52:17.088] [Warn] 	print()
	select()
	ipairs()
	pairs()
	config = {
		getParameter()
	}
	utf8 = {
		char()
		offset()
		len()
		codepoint()
		codes()
		charpattern = "[
[00:52:38.055] [Warn] 	print()
	select()
	ipairs()
	pairs()
	config = {
		getParameter()
	}
	utf8 = {
		char()
		offset()
		len()
		codepoint()
		codes()
		charpattern = "[
[00:52:52.205] [Warn] 	print()
	select()
	ipairs()
	pairs()
	config = {
		getParameter()
	}
	utf8 = {
		char()
		offset()
		len()
		codepoint()
		codes()
		charpattern = "[
[00:53:09.505] [Warn] 	print()
	select()
	ipairs()
	pairs()
	config = {
		getParameter()
	}
	utf8 = {
		char()
		offset()
		len()
		codepoint()
		codes()
		charpattern = "[
[00:53:19.242] [Warn] 	print()
	select()
	ipairs()
	pairs()
	config = {
		getParameter()
	}
	utf8 = {
		char()
		offset()
		len()
		codepoint()
		codes()
		charpattern = "[
[00:53:20.252] [Warn] 	print()
	select()
	ipairs()
	pairs()
	config = {
		getParameter()
	}
	utf8 = {
		char()
		offset()
		len()
		codepoint()
		codes()
		charpattern = "[
[00:55:44.134] [Info] Skipped event recording for nonexistent entity 29558
[01:16:47.217] [Error] Cannot set Steam achievement capturepoptop
[01:20:23.775] [Warn] 	print()
	select()
	ipairs()
	pairs()
	config = {
		getParameter()
	}
	utf8 = {
		char()
		offset()
		len()
		codepoint()
		codes()
		charpattern = "[
[01:21:01.797] [Warn] 	print()
	select()
	ipairs()
	pairs()
	config = {
		getParameter()
	}
	utf8 = {
		char()
		offset()
		len()
		codepoint()
		codes()
		charpattern = "[
[01:21:09.868] [Info] [IC] [Sort] Time elapsed: 0.016
[01:21:12.839] [Warn] 	print()
	select()
	ipairs()
	pairs()
	config = {
		getParameter()
	}
	utf8 = {
		char()
		offset()
		len()
		codepoint()
		codes()
		charpattern = "[
[01:21:20.923] [Warn] 	print()
	select()
	ipairs()
	pairs()
	config = {
		getParameter()
	}
	utf8 = {
		char()
		offset()
		len()
		codepoint()
		codes()
		charpattern = "[
[01:21:44.857] [Warn] 	print()
	select()
	ipairs()
	pairs()
	config = {
		getParameter()
	}
	utf8 = {
		char()
		offset()
		len()
		codepoint()
		codes()
		charpattern = "[
[01:21:49.141] [Info] [IC] [Sort] Time elapsed: 0.005
[01:21:58.672] [Warn] 	print()
	select()
	ipairs()
	pairs()
	config = {
		getParameter()
	}
	utf8 = {
		char()
		offset()
		len()
		codepoint()
		codes()
		charpattern = "[
[01:22:00.822] [Warn] 	print()
	select()
	ipairs()
	pairs()
	config = {
		getParameter()
	}
	utf8 = {
		char()
		offset()
		len()
		codepoint()
		codes()
		charpattern = "[
[01:22:01.904] [Warn] 	print()
	select()
	ipairs()
	pairs()
	config = {
		getParameter()
	}
	utf8 = {
		char()
		offset()
		len()
		codepoint()
		codes()
		charpattern = "[
[01:22:03.171] [Warn] 	print()
	select()
	ipairs()
	pairs()
	config = {
		getParameter()
	}
	utf8 = {
		char()
		offset()
		len()
		codepoint()
		codes()
		charpattern = "[
[01:22:09.788] [Warn] 	print()
	select()
	ipairs()
	pairs()
	config = {
		getParameter()
	}
	utf8 = {
		char()
		offset()
		len()
		codepoint()
		codes()
		charpattern = "[
[01:22:13.809] [Info] [IC] [Sort] Time elapsed: 0.009
[01:22:17.754] [Warn] 	print()
	select()
	ipairs()
	pairs()
	config = {
		getParameter()
	}
	utf8 = {
		char()
		offset()
		len()
		codepoint()
		codes()
		charpattern = "[
[01:22:18.504] [Warn] 	print()
	select()
	ipairs()
	pairs()
	config = {
		getParameter()
	}
	utf8 = {
		char()
		offset()
		len()
		codepoint()
		codes()
		charpattern = "[
[01:22:34.607] [Warn] 	print()
	select()
	ipairs()
	pairs()
	config = {
		getParameter()
	}
	utf8 = {
		char()
		offset()
		len()
		codepoint()
		codes()
		charpattern = "[
[01:23:13.344] [Warn] 	print()
	select()
	ipairs()
	pairs()
	config = {
		getParameter()
	}
	utf8 = {
		char()
		offset()
		len()
		codepoint()
		codes()
		charpattern = "[
[01:23:22.773] [Warn] 	print()
	select()
	ipairs()
	pairs()
	config = {
		getParameter()
	}
	utf8 = {
		char()
		offset()
		len()
		codepoint()
		codes()
		charpattern = "[
[01:23:39.722] [Info] [IC] [Sort] Time elapsed: 0.011
[01:23:56.232] [Error] Exception while calling script uninit: (LuaException) Error code 2, [string "/stats/effects/beamout/beamout.lua"]:14: (StarException) Entity 83492 does not exist or is not a local master scripted entity
[0] 7ff6c55b1ee3 Star::captureStack
[1] 7ff6c55b0c6e Star::StarException::StarException
[2] 7ff6c55b0fb5 Star::StarException::StarException
[3] 7ff6c5bcbbf6 Star::StarException::format<int>
[4] 7ff6c5bf351b Star::LuaBindings::WorldEntityCallbacks::callScriptedEntity
[5] 7ff6c5bb9855 std::_Invoker_functor::_Call<Star::Maybe<Star::Variant<Star::Empty,bool,__int64,double,Star::String,Star::LuaTable,Star::LuaFunction,Star::LuaThread,Star::LuaUserData> > (__cdecl*const & __ptr64)(Star::World * __ptr64,int,Star::String const & __ptr64,Star::LuaVariadic<Star::Variant<Star::Empty,bool,__int64,double,Star::String,Star::LuaTable,Star::LuaFunction,Star::LuaThread,Star::LuaUserData> > const & __ptr64),Star::World * __ptr64 const & __ptr64,int,Star::String,Star::LuaVariadic<Star::Variant<Star::Empty,bool,__int64,double,Star::String,Star::LuaTable,Star::LuaFunction,Star::LuaThread,Star::LuaUserData> > >
[6] 7ff6c5bcdd2a std::invoke<Star::Maybe<Star::Variant<Star::Empty,bool,__int64,double,Star::String,Star::LuaTable,Star::LuaFunction,Star::LuaThread,Star::LuaUserData> > (__cdecl*const & __ptr64)(Star::World * __ptr64,int,Star::String const & __ptr64,Star::LuaVariadic<Star::Variant<Star::Empty,bool,__int64,double,Star::String,Star::LuaTable,Star::LuaFunction,Star::LuaThread,Star::LuaUserData> > const & __ptr64),Star::World * __ptr64 const & __ptr64,int,Star::String,Star::LuaVariadic<Star::Variant<Star::Empty,bool,__int64,double,Star::String,Star::LuaTable,Star::LuaFunction,Star::LuaThread,Star::LuaUserData> > >
[7] 7ff6c5bbdf5b std::_Invoke_ret<Star::Maybe<Star::Variant<Star::Empty,bool,__int64,double,Star::String,Star::LuaTable,Star::LuaFunction,Star::LuaThread,Star::LuaUserData> > (__cdecl*const & __ptr64)(Star::World * __ptr64,int,Star::String const & __ptr64,Star::LuaVariadic<Star::Variant<Star::Empty,bool,__int64,double,Star::String,Star::LuaTable,Star::LuaFunction,Star::LuaThread,Star::LuaUserData> > const & __ptr64),Star::World * __ptr64 const & __ptr64,int,Star::String,Star::LuaVariadic<Star::Variant<Star::Empty,bool,__int64,double,Star::String,Star::LuaTable,Star::LuaFunction,Star::LuaThread,Star::LuaUserData> > >
[8] 7ff6c5bbb3aa std::_Call_binder<std::_Unforced,0,1,2,3,Star::Maybe<Star::Variant<Star::Empty,bool,__int64,double,Star::String,Star::LuaTable,Star::LuaFunction,Star::LuaThread,Star::LuaUserData> > (__cdecl*const)(Star::World * __ptr64,int,Star::String const & __ptr64,Star::LuaVariadic<Star::Variant<Star::Empty,bool,__int64,double,Star::String,Star::LuaTable,Star::LuaFunction,Star::LuaThread,Star::LuaUserData> > const & __ptr64),std::tuple<Star::World * __ptr64,std::_Ph<1>,std::_Ph<2>,std::_Ph<3> > const ,std::tuple<int && __ptr64,Star::String && __ptr64,Star::LuaVariadic<Star::Variant<Star::Empty,bool,__int64,double,Star::String,Star::LuaTable,Star::LuaFunction,Star::LuaThread,Star::LuaUserData> > && __ptr64> >
[9] 7ff6c5bb675f std::_Binder<std::_Unforced,Star::Maybe<Star::Variant<Star::Empty,bool,__int64,double,Star::String,Star::LuaTable,Star::LuaFunction,Star::LuaThread,Star::LuaUserData> > (__cdecl&)(Star::World * __ptr64,int,Star::String const & __ptr64,Star::LuaVariadic<Star::Variant<Star::Empty,bool,__int64,double,Star::String,Star::LuaTable,Star::LuaFunction,Star::LuaThread,Star::LuaUserData> > const & __ptr64),Star::World * __ptr64 & __ptr64,std::_Ph<1> const & __ptr64,std::_Ph<2> const & __ptr64,std::_Ph<3> const & __ptr64>::operator()<int,Star::String,Star::LuaVariadic<Star::Variant<Star::Empty,bool,__int64,double,Star::String,Star::LuaTable,Star::LuaFunction,Star::LuaThread,Star::LuaUserData> > >
[10] 7ff6c5be8d2c <lambda_cf8e2fc210c152351a677d981806b1c3>::operator()
[11] 7ff6c5bb899f std::_Invoker_functor::_Call<<lambda_cf8e2fc210c152351a677d981806b1c3> & __ptr64,Star::LuaEngine & __ptr64,unsigned __int64,Star::Variant<Star::Empty,bool,__int64,double,Star::String,Star::LuaTable,Star::LuaFunction,Star::LuaThread,Star::LuaUserData> * __ptr64>
[12] 7ff6c5bcd640 std::invoke<<lambda_cf8e2fc210c152351a677d981806b1c3> & __ptr64,Star::LuaEngine & __ptr64,unsigned __int64,Star::Variant<Star::Empty,bool,__int64,double,Star::String,Star::LuaTable,Star::LuaFunction,Star::LuaThread,Star::LuaUserData> * __ptr64>
[13] 7ff6c5bc0e79 std::_Invoke_ret<Star::Variant<Star::Variant<Star::Empty,bool,__int64,double,Star::String,Star::LuaTable,Star::LuaFunction,Star::LuaThread,Star::LuaUserData>,Star::LuaVariadic<Star::Variant<Star::Empty,bool,__int64,double,Star::String,Star::LuaTable,Star::LuaFunction,Star::LuaThread,Star::LuaUserData> > >,<lambda_cf8e2fc210c152351a677d981806b1c3> & __ptr64,Star::LuaEngine & __ptr64,unsigned __int64,Star::Variant<Star::Empty,bool,__int64,double,Star::String,Star::LuaTable,Star::LuaFunction,Star::LuaThread,Star::LuaUserData> * __ptr64>
[14] 7ff6c5beed8b std::_Func_impl<<lambda_cf8e2fc210c152351a677d981806b1c3>,std::allocator<int>,Star::Variant<Star::Variant<Star::Empty,bool,__int64,double,Star::String,Star::LuaTable,Star::LuaFunction,Star::LuaThread,Star::LuaUserData>,Star::LuaVariadic<Star::Variant<Star::Empty,bool,__int64,double,Star::String,Star::LuaTable,Star::LuaFunction,Star::LuaThread,Star::LuaUserData> > >,Star::LuaEngine & __ptr64,unsigned __int64,Star::Variant<Star::Empty,bool,__int64,double,Star::String,Star::LuaTable,Star::LuaFunction,Star::LuaThread,Star::LuaUserData> * __ptr64>::_Do_call
[15] 7ff6c55804bd std::_Func_class<Star::Variant<Star::Variant<Star::Empty,bool,__int64,double,Star::String,Star::LuaTable,Star::LuaFunction,Star::LuaThread,Star::LuaUserData>,Star::LuaVariadic<Star::Variant<Star::Empty,bool,__int64,double,Star::String,Star::LuaTable,Star::LuaFunction,Star::LuaThread,Star::LuaUserData> > >,Star::LuaEngine & __ptr64,unsigned __int64,Star::Variant<Star::Empty,bool,__int64,double,Star::String,Star::LuaTable,Star::LuaFunction,Star::LuaThread,Star::LuaUserData> * __ptr64>::operator()
[16] 7ff6c557f554 <lambda_a03bcae4599b53751a446949639a4d5e>::operator()
[17] 7ff6c550a798 luaD_precall
[18] 7ff6c5523541 luaV_execute
[19] 7ff6c550a2a3 luaD_call
[20] 7ff6c550aa7b luaD_rawrunprotected
[21] 7ff6c550a4b0 luaD_pcall
[22] 7ff6c55009d4 lua_pcallk
[23] 7ff6c5587530 Star::LuaEngine::pcallWithTraceback
[24] 7ff6c5739844 Star::LuaEngine::callFunction<>
[25] 7ff6c573c6b1 Star::LuaFunction::invoke<Star::Variant<Star::Empty,bool,__int64,double,Star::String,Star::LuaTable,Star::LuaFunction,Star::LuaThread,Star::LuaUserData> >
[26] 7ff6c5b6e793 Star::LuaContext::invokePath<Star::Variant<Star::Empty,bool,__int64,double,Star::String,Star::LuaTable,Star::LuaFunction,Star::LuaThread,Star::LuaUserData> >
[27] 7ff6c5b70ac0 Star::LuaBaseComponent::uninit
[28] 7ff6c59901a7 Star::StatusController::uninitUniqueEffectScript
[29] 7ff6c599002c Star::StatusController::uninit
[30] 7ff6c57e3af8 Star::Npc::uninit
[31] 7ff6c5af259f Star::WorldStorage::unloadSectorToLevel
[32] 7ff6c5af10d3 Star::WorldStorage::tick
[33] 7ff6c5ade2f3 Star::WorldServer::update
[34] 7ff6c5ae5762 Star::WorldServerThread::update
[35] 7ff6c5ae51c8 Star::WorldServerThread::run
[36] 7ff6c55aea0e Star::ThreadImpl::runThread
[37] 7ffae0088102 BaseThreadInitThunk
[38] 7ffae163c5b4 RtlUserThreadStart
stack traceback:
	[C]: in ?
	[C]: in field 'callScriptedEntity'
	[string "/stats/effects/beamout/beamout.lua"]:14: in function <[string "/stats/effects/beamout/beamout.lua"]:12>
[0] 7ff6c55b1ee3 Star::captureStack
[1] 7ff6c55b0c6e Star::StarException::StarException
[2] 7ff6c55860a1 Star::LuaEngine::handleError
[3] 7ff6c573985d Star::LuaEngine::callFunction<>
[4] 7ff6c573c6b1 Star::LuaFunction::invoke<Star::Variant<Star::Empty,bool,__int64,double,Star::String,Star::LuaTable,Star::LuaFunction,Star::LuaThread,Star::LuaUserData> >
[5] 7ff6c5b6e793 Star::LuaContext::invokePath<Star::Variant<Star::Empty,bool,__int64,double,Star::String,Star::LuaTable,Star::LuaFunction,Star::LuaThread,Star::LuaUserData> >
[6] 7ff6c5b70ac0 Star::LuaBaseComponent::uninit
[7] 7ff6c59901a7 Star::StatusController::uninitUniqueEffectScript
[8] 7ff6c599002c Star::StatusController::uninit
[9] 7ff6c57e3af8 Star::Npc::uninit
[10] 7ff6c5af259f Star::WorldStorage::unloadSectorToLevel
[11] 7ff6c5af10d3 Star::WorldStorage::tick
[12] 7ff6c5ade2f3 Star::WorldServer::update
[13] 7ff6c5ae5762 Star::WorldServerThread::update
[14] 7ff6c5ae51c8 Star::WorldServerThread::run
[15] 7ff6c55aea0e Star::ThreadImpl::runThread
[16] 7ffae0088102 BaseThreadInitThunk
[17] 7ffae163c5b4 RtlUserThreadStart
[01:24:09.196] [Warn] 	print()
	select()
	ipairs()
	pairs()
	config = {
		getParameter()
	}
	utf8 = {
		char()
		offset()
		len()
		codepoint()
		codes()
		charpattern = "[
[01:24:29.356] [Warn] 	print()
	select()
	ipairs()
	pairs()
	config = {
		getParameter()
	}
	utf8 = {
		char()
		offset()
		len()
		codepoint()
		codes()
		charpattern = "[
[01:24:32.183] [Info] [IC] [Sort] Time elapsed: 0.014
[01:25:09.040] [Warn] 	print()
	select()
	ipairs()
	pairs()
	config = {
		getParameter()
	}
	utf8 = {
		char()
		offset()
		len()
		codepoint()
		codes()
		charpattern = "[
[01:25:10.975] [Warn] 	print()
	select()
	ipairs()
	pairs()
	config = {
		getParameter()
	}
	utf8 = {
		char()
		offset()
		len()
		codepoint()
		codes()
		charpattern = "[
[01:25:24.807] [Warn] 	print()
	select()
	ipairs()
	pairs()
	config = {
		getParameter()
	}
	utf8 = {
		char()
		offset()
		len()
		codepoint()
		codes()
		charpattern = "[
[01:25:28.907] [Warn] 	print()
	select()
	ipairs()
	pairs()
	config = {
		getParameter()
	}
	utf8 = {
		char()
		offset()
		len()
		codepoint()
		codes()
		charpattern = "[
[01:25:36.362] [Warn] 	print()
	select()
	ipairs()
	pairs()
	config = {
		getParameter()
	}
	utf8 = {
		char()
		offset()
		len()
		codepoint()
		codes()
		charpattern = "[
[01:25:39.718] [Warn] 	print()
	select()
	ipairs()
	pairs()
	config = {
		getParameter()
	}
	utf8 = {
		char()
		offset()
		len()
		codepoint()
		codes()
		charpattern = "[
[01:26:05.626] [Warn] 	print()
	select()
	ipairs()
	pairs()
	config = {
		getParameter()
	}
	utf8 = {
		char()
		offset()
		len()
		codepoint()
		codes()
		charpattern = "[
[01:26:10.197] [Info] [IC] [Sort] Time elapsed: 0.012
[01:26:15.714] [Info] [IC] [Sort] Time elapsed: 0.012
[01:26:57.374] [Warn] 	print()
	select()
	ipairs()
	pairs()
	config = {
		getParameter()
	}
	utf8 = {
		char()
		offset()
		len()
		codepoint()
		codes()
		charpattern = "[
[01:27:02.396] [Info] [IC] [Sort] Time elapsed: 0.012
[01:27:48.393] [Warn] 	print()
	select()
	ipairs()
	pairs()
	config = {
		getParameter()
	}
	utf8 = {
		char()
		offset()
		len()
		codepoint()
		codes()
		charpattern = "[
[01:27:54.575] [Warn] 	print()
	select()
	ipairs()
	pairs()
	config = {
		getParameter()
	}
	utf8 = {
		char()
		offset()
		len()
		codepoint()
		codes()
		charpattern = "[
[01:28:02.048] [Warn] 	print()
	select()
	ipairs()
	pairs()
	config = {
		getParameter()
	}
	utf8 = {
		char()
		offset()
		len()
		codepoint()
		codes()
		charpattern = "[
[01:31:49.460] [Warn] 	print()
	select()
	ipairs()
	pairs()
	config = {
		getParameter()
	}
	utf8 = {
		char()
		offset()
		len()
		codepoint()
		codes()
		charpattern = "[
[01:32:23.399] [Warn] 	print()
	select()
	ipairs()
	pairs()
	config = {
		getParameter()
	}
	utf8 = {
		char()
		offset()
		len()
		codepoint()
		codes()
		charpattern = "[
[01:32:24.990] [Warn] 	print()
	select()
	ipairs()
	pairs()
	config = {
		getParameter()
	}
	utf8 = {
		char()
		offset()
		len()
		codepoint()
		codes()
		charpattern = "[
[01:32:29.050] [Info] [IC] [Sort] Time elapsed: 0.014
[01:32:31.014] [Info] [IC] [Sort] Time elapsed: 0.011
[01:33:13.583] [Warn] 	print()
	select()
	ipairs()
	pairs()
	config = {
		getParameter()
	}
	utf8 = {
		char()
		offset()
		len()
		codepoint()
		codes()
		charpattern = "[
[01:33:14.857] [Warn] 	print()
	select()
	ipairs()
	pairs()
	config = {
		getParameter()
	}
	utf8 = {
		char()
		offset()
		len()
		codepoint()
		codes()
		charpattern = "[
[01:33:19.191] [Warn] 	print()
	select()
	ipairs()
	pairs()
	config = {
		getParameter()
	}
	utf8 = {
		char()
		offset()
		len()
		codepoint()
		codes()
		charpattern = "[
[01:34:52.567] [Info] UniverseServer: Loading client ship world ClientShipWorld:40d0c64bbadbfcac62e62a636f4f2308
[01:34:53.541] [Info] UniverseServer: Warping player 1 to ClientShipWorld:40d0c64bbadbfcac62e62a636f4f2308
[01:34:53.626] [Info] UniverseServer: Stopping idle world CelestialWorld:-549421120:-174071947:-77840190:8
[01:34:53.837] [Info] Client received world stop packet, leaving: Removed
[01:35:56.290] [Info] UniverseServer: Flying player 1 ship to starter world -549420991:-174072043:5760844:8
[01:35:56.290] [Info] UniverseServer: Creating celestial world -549420991:-174072043:5760844:8
[01:35:56.605] [Info] Placing dungeon naturalcave
[01:35:56.605] [Info] Forcing generation of dungeon naturalcave
[01:35:56.606] [Info] Placing dungeon at (255, 1000)
[01:35:56.862] [Warn] Failed to place dungeon object: metalbarrel1 direction: 0 position: (556, 884)
[01:35:56.875] [Warn] Failed to place dungeon object: metalbarrel1 direction: 1 position: (694, 893)
[01:35:56.927] [Warn] Failed to place dungeon object: metalbarrel1 direction: 0 position: (613, 911)
[01:35:56.951] [Warn] Failed to place dungeon object: metalbarrel1 direction: 0 position: (503, 930)
[01:35:56.965] [Warn] Failed to place dungeon object: metalbarrel1 direction: 1 position: (299, 949)
[01:35:56.981] [Warn] Failed to place dungeon object: metalbarrel1 direction: 1 position: (236, 1000)
[01:35:57.160] [Info] Placing dungeon gardengate
[01:35:57.160] [Info] Forcing generation of dungeon gardengate
[01:35:57.161] [Info] Placing dungeon at (2314, 1000)
[01:35:57.229] [Info] Protected dungeonIds for world set to (1)
[01:35:58.623] [Info] UniverseServer: Arriving ship for player 1 at -549420991:-174072043:5760844:8
[01:35:58.631] [Info] UniverseServer: Stopping idle world CelestialWorld:-549420991:-174072043:5760844:8
[01:39:22.104] [Info] Chat: <SAIL> You've reached the limit of how many crew members you can bring with you. Drop some off on your ship to expand your crew further.
[01:40:26.568] [Info] UniverseServer: Loading celestial world -549420991:-174072043:5760844:8
[01:40:26.777] [Info] UniverseServer: Warping player 1 to CelestialWorld:-549420991:-174072043:5760844:8
[01:40:26.790] [Info] UniverseServer: Stopping idle world ClientShipWorld:40d0c64bbadbfcac62e62a636f4f2308
[01:40:26.792] [Info] Client received world stop packet, leaving: Removed
[01:42:09.209] [Warn] 	widget = {
		setButtonOverlayImage()
		addListItem()
		getData()
		setData()
		setVisible()
		getSelectedOption()
		setProgress()
		getSliderValue()
		setText()
		setButtonImage()
		removeListItem()
		itemGridItems()
		getPosition()
		setPosition()
		setOptionEnabled()
		setOptionVisible()
		getListSelected()
		setButtonImages()
		playSound()
		getSize()
		setImageScale()
		setImageRotation()
		clearListItems()
		setSize()
		setImage()
		setListSelected()
		setButtonEnabled()
		setButtonCheckedImages()
		focus()
		getChecked()
		setSelectedOption()
		blur()
		setChecked()
		setFontColor()
		getText()
	}
	_VERSION = "Lua 5.3"
	pcall()
	pairs()
	math = {
		abs()
		atan()
		fmod()
		log()
		random()
		asin()
		sin()
		ceil()
		huge = inf
		randomseed()
		exp()
		floor()
		acos()
		pi = 3.1415926535898
		mininteger = -9223372036854775808
		sqrt()
		type()
		tan()
		rad()
		modf()
		min()
		max()
		ult()
		tointeger()
		cos()
		deg()
		maxinteger = 9223372036854775807
	}
	rawset()
	script = {
		setUpdateDelta()
		updateDt()
	}
	coroutine = {
		status()
		running()
		wrap()
		create()
		yield()
		resume()
		isyieldable()
	}
	world = {
		underground()
		entityCanDamage()
		npcQuery()
		containerAddItems()
		monsterType()
		material()
		monsterQuery()
		loungeableQuery()
		entityMoney()
		containerTakeAt()
		placeMaterial()
		objectAt()
		breathable()
		damageTiles()
		entityHealth()
		objectSpaces()
		containerConsumeAt()
		sendEntityMessage()
		isMonster()
		liquidAt()
		xwrap()
		spawnStagehand()
		containerConsume()
		collisionBlocksAlongLine()
		containerSwapItems()
		loungeableOccupied()
		platformerPathStart()
		findPlatformerPath()
		entityUniqueId()
		containerPutItemsAt()
		isTileProtected()
		time()
		containerItems()
		destroyLiquid()
		spawnLiquid()
		gravity()
		entitySpecies()
		rectTileCollision()
		containerAvailable()
		liquidAlongLine()
		farmableStage()
		entityType()
		objectQuery()
		resolvePolyCollision()
		lineTileCollision()
		pointTileCollision()
		containerStackItems()
		spawnVehicle()
		spawnMonster()
		placeMod()
		day()
		objectLineQuery()
		placeObject()
		spawnProjectile()
		tileIsOccupied()
		stagehandType()
		containerItemsCanFit()
		polyCollision()
		debugPoly()
		timeOfDay()
		getProperty()
		dayLength()
		entityHasCountOfItem()
		debugPoint()
		lineCollision()
		damageTileArea()
		containerTakeAll()
		mod()
		entityQuery()
		entityHandItemDescriptor()
		distance()
		itemDropQuery()
		setProperty()
		debugText()
		containerSwapItemsNoCombine()
		threatLevel()
		spawnNpc()
		windLevel()
		entityLineQuery()
		spawnItem()
		npcType()
		getObjectParameter()
		playerQuery()
		containerItemApply()
		containerOpen()
		nearestTo()
		polyContains()
		magnitude()
		npcLineQuery()
		entityDescription()
		entityExists()
		isNpc()
		entityPortrait()
		entityHandItem()
		containerClose()
		lightLevel()
		containerTakeNumItemsAt()
		spawnTreasure()
		entityPosition()
		pointCollision()
		rectCollision()
		entityGender()
		containerItemAt()
		findUniqueEntity()
		debugLine()
		entityDamageTeam()
		entityVelocity()
		entityAggressive()
		containerItemsFitWhere()
		containerSize()
		callScriptedEntity()
		entityName()
	}
	p()
	pane = {
		containerEntityId()
		dismiss()
		playerEntityId()
	}
	jsize()
	root = {
		assetJson()
		materialMiningSound()
		evalFunction2()
		createItem()
		itemType()
		recipesForItem()
		getMatchingTenants()
		loadVersionedJson()
		evalFunction()
		hasTech()
		treeStemDirectory()
		itemTags()
		materialFootstepSound()
		materialHealth()
		behaviorModule()
		nonEmptyRegion()
		itemConfig()
		npcPortrait()
		monsterPortrait()
		generateName()
		createBiome()
		getConfigurationPath()
		techType()
		setConfigurationPath()
		npcConfig()
		treeFoliageDirectory()
		getConfiguration()
		monsterMovementSettings()
		createTreasure()
		projectileConfig()
		isTreasurePool()
		monsterSkillParameter()
		materialPath()
		setConfiguration()
		imageSpaces()
		tenantConfig()
		imageSize()
		techConfig()
		questConfig()
		npcVariant()
		liquidStatusEffects()
		makeCurrentVersionedJson()
		projectileGravityMultiplier()
		itemHasTag()
	}
	sb = {
		makeUuid()
		interpolateSinEase()
		makeRandomSource()
		logError()
		printJson()
		staticRandomDoubleRange()
		staticRandomDouble()
		nrand()
		logInfo()
		jsonQuery()
		logWarn()
		makePerlinSource()
		setLogMap()
		print()
		staticRandomI32()
		replaceTags()
		staticRandomI32Range()
		jsonMerge()
	}
	setmetatable()
	next()
	player = {
		getItemWithParameter()
		recordEvent()
		inventoryTags()
		shipUpgrades()
		essentialItem()
		hasItem()
		setIntroComplete()
		lounge()
		species()
		altHandItemTags()
		setUniverseFlag()
		playTime()
		hasCountOfItem()
		ownShipWorldId()
		isLounging()
		enableTech()
		primaryHandItem()
		warp()
		addBookmark()
		enabledTechs()
		giveBlueprint()
		hasQuest()
		serverUuid()
		startQuest()
		upgradeShip()
		equipTech()
		removeEssentialItem()
		canStartQuest()
		radioMessage()
		consumeItemWithParameter()
		makeTechUnavailable()
		consumeItem()
		confirm()
		consumeTaggedItem()
		cleanupItems()
		itemsWithTag()
		makeTechAvailable()
		worldId()
		introComplete()
		availableTechs()
		altHandItem()
		primaryHandItemTags()
		enableMission()
		playCinematic()
		hasCompletedQuest()
		setEquippedItem()
		equippedItem()
		completeMission()
		hasItemWithParameter()
		equippedTech()
		giveEssentialItem()
		giveItem()
		gender()
	}
	config = {
		getParameter()
	}
	jresize()
	table = {
		concat()
		insert()
		pack()
		move()
		sort()
		remove()
		unpack()
	}
	rawequal()
	jobject()
	status = {
		activeUniqueStatusEffectSummary()
		stat()
		resourcePercentage()
		overConsumeResource()
		addEphemeralEffects()
		resetResource()
		consumeResource()
		isResource()
		resource()
		resourceMax()
		setPersistentEffects()
		clearAllPersistentEffects()
		giveResource()
		damageTakenSince()
		resourceLocked()
		modifyResourcePercentage()
		getPersistentEffects()
		resourceNames()
		addEphemeralEffect()
		inflictedHitsSince()
		setResourcePercentage()
		setResource()
		resourcePositive()
		clearEphemeralEffects()
		addPersistentEffects()
		inflictedDamageSince()
		setResourceLocked()
		modifyResource()
		addPersistentEffect()
		statusProperty()
		removeEphemeralEffect()
		setStatusProperty()
		clearPersistentEffects()
		statPositive()
		resetAllResources()
	}
	update()
	init()
	tostring()
	type()
	select()
	tonumber()
	rawget()
	jarray()
	require()
	utf8 = {
		char()
		codepoint()
		charpattern = "[
[01:42:11.257] [Warn] 	widget = {
		setButtonOverlayImage()
		addListItem()
		getData()
		setData()
		setVisible()
		getSelectedOption()
		setProgress()
		getSliderValue()
		setText()
		setButtonImage()
		removeListItem()
		itemGridItems()
		getPosition()
		setPosition()
		setOptionEnabled()
		setOptionVisible()
		getListSelected()
		setButtonImages()
		playSound()
		getSize()
		setImageScale()
		setImageRotation()
		clearListItems()
		setSize()
		setImage()
		setListSelected()
		setButtonEnabled()
		setButtonCheckedImages()
		focus()
		getChecked()
		setSelectedOption()
		blur()
		setChecked()
		setFontColor()
		getText()
	}
	_VERSION = "Lua 5.3"
	pcall()
	pairs()
	math = {
		abs()
		atan()
		fmod()
		log()
		random()
		asin()
		sin()
		ceil()
		huge = inf
		randomseed()
		exp()
		floor()
		acos()
		pi = 3.1415926535898
		mininteger = -9223372036854775808
		sqrt()
		type()
		tan()
		rad()
		modf()
		min()
		max()
		ult()
		tointeger()
		cos()
		deg()
		maxinteger = 9223372036854775807
	}
	rawset()
	script = {
		setUpdateDelta()
		updateDt()
	}
	coroutine = {
		status()
		running()
		wrap()
		create()
		yield()
		resume()
		isyieldable()
	}
	world = {
		underground()
		entityCanDamage()
		npcQuery()
		containerAddItems()
		monsterType()
		material()
		monsterQuery()
		loungeableQuery()
		entityMoney()
		containerTakeAt()
		placeMaterial()
		objectAt()
		breathable()
		damageTiles()
		entityHealth()
		objectSpaces()
		containerConsumeAt()
		sendEntityMessage()
		isMonster()
		liquidAt()
		xwrap()
		spawnStagehand()
		containerConsume()
		collisionBlocksAlongLine()
		containerSwapItems()
		loungeableOccupied()
		platformerPathStart()
		findPlatformerPath()
		entityUniqueId()
		containerPutItemsAt()
		isTileProtected()
		time()
		containerItems()
		destroyLiquid()
		spawnLiquid()
		gravity()
		entitySpecies()
		rectTileCollision()
		containerAvailable()
		liquidAlongLine()
		farmableStage()
		entityType()
		objectQuery()
		resolvePolyCollision()
		lineTileCollision()
		pointTileCollision()
		containerStackItems()
		spawnVehicle()
		spawnMonster()
		placeMod()
		day()
		objectLineQuery()
		placeObject()
		spawnProjectile()
		tileIsOccupied()
		stagehandType()
		containerItemsCanFit()
		polyCollision()
		debugPoly()
		timeOfDay()
		getProperty()
		dayLength()
		entityHasCountOfItem()
		debugPoint()
		lineCollision()
		damageTileArea()
		containerTakeAll()
		mod()
		entityQuery()
		entityHandItemDescriptor()
		distance()
		itemDropQuery()
		setProperty()
		debugText()
		containerSwapItemsNoCombine()
		threatLevel()
		spawnNpc()
		windLevel()
		entityLineQuery()
		spawnItem()
		npcType()
		getObjectParameter()
		playerQuery()
		containerItemApply()
		containerOpen()
		nearestTo()
		polyContains()
		magnitude()
		npcLineQuery()
		entityDescription()
		entityExists()
		isNpc()
		entityPortrait()
		entityHandItem()
		containerClose()
		lightLevel()
		containerTakeNumItemsAt()
		spawnTreasure()
		entityPosition()
		pointCollision()
		rectCollision()
		entityGender()
		containerItemAt()
		findUniqueEntity()
		debugLine()
		entityDamageTeam()
		entityVelocity()
		entityAggressive()
		containerItemsFitWhere()
		containerSize()
		callScriptedEntity()
		entityName()
	}
	p()
	pane = {
		containerEntityId()
		dismiss()
		playerEntityId()
	}
	jsize()
	root = {
		assetJson()
		materialMiningSound()
		evalFunction2()
		createItem()
		itemType()
		recipesForItem()
		getMatchingTenants()
		loadVersionedJson()
		evalFunction()
		hasTech()
		treeStemDirectory()
		itemTags()
		materialFootstepSound()
		materialHealth()
		behaviorModule()
		nonEmptyRegion()
		itemConfig()
		npcPortrait()
		monsterPortrait()
		generateName()
		createBiome()
		getConfigurationPath()
		techType()
		setConfigurationPath()
		npcConfig()
		treeFoliageDirectory()
		getConfiguration()
		monsterMovementSettings()
		createTreasure()
		projectileConfig()
		isTreasurePool()
		monsterSkillParameter()
		materialPath()
		setConfiguration()
		imageSpaces()
		tenantConfig()
		imageSize()
		techConfig()
		questConfig()
		npcVariant()
		liquidStatusEffects()
		makeCurrentVersionedJson()
		projectileGravityMultiplier()
		itemHasTag()
	}
	sb = {
		makeUuid()
		interpolateSinEase()
		makeRandomSource()
		logError()
		printJson()
		staticRandomDoubleRange()
		staticRandomDouble()
		nrand()
		logInfo()
		jsonQuery()
		logWarn()
		makePerlinSource()
		setLogMap()
		print()
		staticRandomI32()
		replaceTags()
		staticRandomI32Range()
		jsonMerge()
	}
	setmetatable()
	next()
	player = {
		getItemWithParameter()
		recordEvent()
		inventoryTags()
		shipUpgrades()
		essentialItem()
		hasItem()
		setIntroComplete()
		lounge()
		species()
		altHandItemTags()
		setUniverseFlag()
		playTime()
		hasCountOfItem()
		ownShipWorldId()
		isLounging()
		enableTech()
		primaryHandItem()
		warp()
		addBookmark()
		enabledTechs()
		giveBlueprint()
		hasQuest()
		serverUuid()
		startQuest()
		upgradeShip()
		equipTech()
		removeEssentialItem()
		canStartQuest()
		radioMessage()
		consumeItemWithParameter()
		makeTechUnavailable()
		consumeItem()
		confirm()
		consumeTaggedItem()
		cleanupItems()
		itemsWithTag()
		makeTechAvailable()
		worldId()
		introComplete()
		availableTechs()
		altHandItem()
		primaryHandItemTags()
		enableMission()
		playCinematic()
		hasCompletedQuest()
		setEquippedItem()
		equippedItem()
		completeMission()
		hasItemWithParameter()
		equippedTech()
		giveEssentialItem()
		giveItem()
		gender()
	}
	config = {
		getParameter()
	}
	jresize()
	table = {
		concat()
		insert()
		pack()
		move()
		sort()
		remove()
		unpack()
	}
	rawequal()
	jobject()
	status = {
		activeUniqueStatusEffectSummary()
		stat()
		resourcePercentage()
		overConsumeResource()
		addEphemeralEffects()
		resetResource()
		consumeResource()
		isResource()
		resource()
		resourceMax()
		setPersistentEffects()
		clearAllPersistentEffects()
		giveResource()
		damageTakenSince()
		resourceLocked()
		modifyResourcePercentage()
		getPersistentEffects()
		resourceNames()
		addEphemeralEffect()
		inflictedHitsSince()
		setResourcePercentage()
		setResource()
		resourcePositive()
		clearEphemeralEffects()
		addPersistentEffects()
		inflictedDamageSince()
		setResourceLocked()
		modifyResource()
		addPersistentEffect()
		statusProperty()
		removeEphemeralEffect()
		setStatusProperty()
		clearPersistentEffects()
		statPositive()
		resetAllResources()
	}
	update()
	init()
	tostring()
	type()
	select()
	tonumber()
	rawget()
	jarray()
	require()
	utf8 = {
		char()
		codepoint()
		charpattern = "[
[01:42:19.387] [Info] [IC] [Sort] Time elapsed: 0
[01:42:20.040] [Warn] 	widget = {
		setButtonOverlayImage()
		addListItem()
		getData()
		setData()
		setVisible()
		getSelectedOption()
		setProgress()
		getSliderValue()
		setText()
		setButtonImage()
		removeListItem()
		itemGridItems()
		getPosition()
		setPosition()
		setOptionEnabled()
		setOptionVisible()
		getListSelected()
		setButtonImages()
		playSound()
		getSize()
		setImageScale()
		setImageRotation()
		clearListItems()
		setSize()
		setImage()
		setListSelected()
		setButtonEnabled()
		setButtonCheckedImages()
		focus()
		getChecked()
		setSelectedOption()
		blur()
		setChecked()
		setFontColor()
		getText()
	}
	_VERSION = "Lua 5.3"
	pcall()
	pairs()
	math = {
		abs()
		atan()
		fmod()
		log()
		random()
		asin()
		sin()
		ceil()
		huge = inf
		randomseed()
		exp()
		floor()
		acos()
		pi = 3.1415926535898
		mininteger = -9223372036854775808
		sqrt()
		type()
		tan()
		rad()
		modf()
		min()
		max()
		ult()
		tointeger()
		cos()
		deg()
		maxinteger = 9223372036854775807
	}
	rawset()
	script = {
		setUpdateDelta()
		updateDt()
	}
	coroutine = {
		status()
		running()
		wrap()
		create()
		yield()
		resume()
		isyieldable()
	}
	world = {
		underground()
		entityCanDamage()
		npcQuery()
		containerAddItems()
		monsterType()
		material()
		monsterQuery()
		loungeableQuery()
		entityMoney()
		containerTakeAt()
		placeMaterial()
		objectAt()
		breathable()
		damageTiles()
		entityHealth()
		objectSpaces()
		containerConsumeAt()
		sendEntityMessage()
		isMonster()
		liquidAt()
		xwrap()
		spawnStagehand()
		containerConsume()
		collisionBlocksAlongLine()
		containerSwapItems()
		loungeableOccupied()
		platformerPathStart()
		findPlatformerPath()
		entityUniqueId()
		containerPutItemsAt()
		isTileProtected()
		time()
		containerItems()
		destroyLiquid()
		spawnLiquid()
		gravity()
		entitySpecies()
		rectTileCollision()
		containerAvailable()
		liquidAlongLine()
		farmableStage()
		entityType()
		objectQuery()
		resolvePolyCollision()
		lineTileCollision()
		pointTileCollision()
		containerStackItems()
		spawnVehicle()
		spawnMonster()
		placeMod()
		day()
		objectLineQuery()
		placeObject()
		spawnProjectile()
		tileIsOccupied()
		stagehandType()
		containerItemsCanFit()
		polyCollision()
		debugPoly()
		timeOfDay()
		getProperty()
		dayLength()
		entityHasCountOfItem()
		debugPoint()
		lineCollision()
		damageTileArea()
		containerTakeAll()
		mod()
		entityQuery()
		entityHandItemDescriptor()
		distance()
		itemDropQuery()
		setProperty()
		debugText()
		containerSwapItemsNoCombine()
		threatLevel()
		spawnNpc()
		windLevel()
		entityLineQuery()
		spawnItem()
		npcType()
		getObjectParameter()
		playerQuery()
		containerItemApply()
		containerOpen()
		nearestTo()
		polyContains()
		magnitude()
		npcLineQuery()
		entityDescription()
		entityExists()
		isNpc()
		entityPortrait()
		entityHandItem()
		containerClose()
		lightLevel()
		containerTakeNumItemsAt()
		spawnTreasure()
		entityPosition()
		pointCollision()
		rectCollision()
		entityGender()
		containerItemAt()
		findUniqueEntity()
		debugLine()
		entityDamageTeam()
		entityVelocity()
		entityAggressive()
		containerItemsFitWhere()
		containerSize()
		callScriptedEntity()
		entityName()
	}
	p()
	pane = {
		containerEntityId()
		dismiss()
		playerEntityId()
	}
	jsize()
	root = {
		assetJson()
		materialMiningSound()
		evalFunction2()
		createItem()
		itemType()
		recipesForItem()
		getMatchingTenants()
		loadVersionedJson()
		evalFunction()
		hasTech()
		treeStemDirectory()
		itemTags()
		materialFootstepSound()
		materialHealth()
		behaviorModule()
		nonEmptyRegion()
		itemConfig()
		npcPortrait()
		monsterPortrait()
		generateName()
		createBiome()
		getConfigurationPath()
		techType()
		setConfigurationPath()
		npcConfig()
		treeFoliageDirectory()
		getConfiguration()
		monsterMovementSettings()
		createTreasure()
		projectileConfig()
		isTreasurePool()
		monsterSkillParameter()
		materialPath()
		setConfiguration()
		imageSpaces()
		tenantConfig()
		imageSize()
		techConfig()
		questConfig()
		npcVariant()
		liquidStatusEffects()
		makeCurrentVersionedJson()
		projectileGravityMultiplier()
		itemHasTag()
	}
	sb = {
		makeUuid()
		interpolateSinEase()
		makeRandomSource()
		logError()
		printJson()
		staticRandomDoubleRange()
		staticRandomDouble()
		nrand()
		logInfo()
		jsonQuery()
		logWarn()
		makePerlinSource()
		setLogMap()
		print()
		staticRandomI32()
		replaceTags()
		staticRandomI32Range()
		jsonMerge()
	}
	setmetatable()
	next()
	player = {
		getItemWithParameter()
		recordEvent()
		inventoryTags()
		shipUpgrades()
		essentialItem()
		hasItem()
		setIntroComplete()
		lounge()
		species()
		altHandItemTags()
		setUniverseFlag()
		playTime()
		hasCountOfItem()
		ownShipWorldId()
		isLounging()
		enableTech()
		primaryHandItem()
		warp()
		addBookmark()
		enabledTechs()
		giveBlueprint()
		hasQuest()
		serverUuid()
		startQuest()
		upgradeShip()
		equipTech()
		removeEssentialItem()
		canStartQuest()
		radioMessage()
		consumeItemWithParameter()
		makeTechUnavailable()
		consumeItem()
		confirm()
		consumeTaggedItem()
		cleanupItems()
		itemsWithTag()
		makeTechAvailable()
		worldId()
		introComplete()
		availableTechs()
		altHandItem()
		primaryHandItemTags()
		enableMission()
		playCinematic()
		hasCompletedQuest()
		setEquippedItem()
		equippedItem()
		completeMission()
		hasItemWithParameter()
		equippedTech()
		giveEssentialItem()
		giveItem()
		gender()
	}
	config = {
		getParameter()
	}
	jresize()
	table = {
		concat()
		insert()
		pack()
		move()
		sort()
		remove()
		unpack()
	}
	rawequal()
	jobject()
	status = {
		activeUniqueStatusEffectSummary()
		stat()
		resourcePercentage()
		overConsumeResource()
		addEphemeralEffects()
		resetResource()
		consumeResource()
		isResource()
		resource()
		resourceMax()
		setPersistentEffects()
		clearAllPersistentEffects()
		giveResource()
		damageTakenSince()
		resourceLocked()
		modifyResourcePercentage()
		getPersistentEffects()
		resourceNames()
		addEphemeralEffect()
		inflictedHitsSince()
		setResourcePercentage()
		setResource()
		resourcePositive()
		clearEphemeralEffects()
		addPersistentEffects()
		inflictedDamageSince()
		setResourceLocked()
		modifyResource()
		addPersistentEffect()
		statusProperty()
		removeEphemeralEffect()
		setStatusProperty()
		clearPersistentEffects()
		statPositive()
		resetAllResources()
	}
	update()
	init()
	tostring()
	type()
	select()
	tonumber()
	rawget()
	jarray()
	require()
	utf8 = {
		char()
		codepoint()
		charpattern = "[
[01:43:22.840] [Info] Skipped event recording for nonexistent entity 3931
[01:43:29.005] [Info] Skipped event recording for nonexistent entity 3878
[01:45:20.660] [Warn] 	widget = {
		setButtonOverlayImage()
		addListItem()
		getData()
		setData()
		setVisible()
		getSelectedOption()
		setProgress()
		getSliderValue()
		setText()
		setButtonImage()
		removeListItem()
		itemGridItems()
		getPosition()
		setPosition()
		setOptionEnabled()
		setOptionVisible()
		getListSelected()
		setButtonImages()
		playSound()
		getSize()
		setImageScale()
		setImageRotation()
		clearListItems()
		setSize()
		setImage()
		setListSelected()
		setButtonEnabled()
		setButtonCheckedImages()
		focus()
		getChecked()
		setSelectedOption()
		blur()
		setChecked()
		setFontColor()
		getText()
	}
	_VERSION = "Lua 5.3"
	pcall()
	pairs()
	math = {
		abs()
		atan()
		fmod()
		log()
		random()
		asin()
		sin()
		ceil()
		huge = inf
		randomseed()
		exp()
		floor()
		acos()
		pi = 3.1415926535898
		mininteger = -9223372036854775808
		sqrt()
		type()
		tan()
		rad()
		modf()
		min()
		max()
		ult()
		tointeger()
		cos()
		deg()
		maxinteger = 9223372036854775807
	}
	rawset()
	script = {
		setUpdateDelta()
		updateDt()
	}
	coroutine = {
		status()
		running()
		wrap()
		create()
		yield()
		resume()
		isyieldable()
	}
	world = {
		underground()
		entityCanDamage()
		npcQuery()
		containerAddItems()
		monsterType()
		material()
		monsterQuery()
		loungeableQuery()
		entityMoney()
		containerTakeAt()
		placeMaterial()
		objectAt()
		breathable()
		damageTiles()
		entityHealth()
		objectSpaces()
		containerConsumeAt()
		sendEntityMessage()
		isMonster()
		liquidAt()
		xwrap()
		spawnStagehand()
		containerConsume()
		collisionBlocksAlongLine()
		containerSwapItems()
		loungeableOccupied()
		platformerPathStart()
		findPlatformerPath()
		entityUniqueId()
		containerPutItemsAt()
		isTileProtected()
		time()
		containerItems()
		destroyLiquid()
		spawnLiquid()
		gravity()
		entitySpecies()
		rectTileCollision()
		containerAvailable()
		liquidAlongLine()
		farmableStage()
		entityType()
		objectQuery()
		resolvePolyCollision()
		lineTileCollision()
		pointTileCollision()
		containerStackItems()
		spawnVehicle()
		spawnMonster()
		placeMod()
		day()
		objectLineQuery()
		placeObject()
		spawnProjectile()
		tileIsOccupied()
		stagehandType()
		containerItemsCanFit()
		polyCollision()
		debugPoly()
		timeOfDay()
		getProperty()
		dayLength()
		entityHasCountOfItem()
		debugPoint()
		lineCollision()
		damageTileArea()
		containerTakeAll()
		mod()
		entityQuery()
		entityHandItemDescriptor()
		distance()
		itemDropQuery()
		setProperty()
		debugText()
		containerSwapItemsNoCombine()
		threatLevel()
		spawnNpc()
		windLevel()
		entityLineQuery()
		spawnItem()
		npcType()
		getObjectParameter()
		playerQuery()
		containerItemApply()
		containerOpen()
		nearestTo()
		polyContains()
		magnitude()
		npcLineQuery()
		entityDescription()
		entityExists()
		isNpc()
		entityPortrait()
		entityHandItem()
		containerClose()
		lightLevel()
		containerTakeNumItemsAt()
		spawnTreasure()
		entityPosition()
		pointCollision()
		rectCollision()
		entityGender()
		containerItemAt()
		findUniqueEntity()
		debugLine()
		entityDamageTeam()
		entityVelocity()
		entityAggressive()
		containerItemsFitWhere()
		containerSize()
		callScriptedEntity()
		entityName()
	}
	p()
	pane = {
		containerEntityId()
		dismiss()
		playerEntityId()
	}
	jsize()
	root = {
		assetJson()
		materialMiningSound()
		evalFunction2()
		createItem()
		itemType()
		recipesForItem()
		getMatchingTenants()
		loadVersionedJson()
		evalFunction()
		hasTech()
		treeStemDirectory()
		itemTags()
		materialFootstepSound()
		materialHealth()
		behaviorModule()
		nonEmptyRegion()
		itemConfig()
		npcPortrait()
		monsterPortrait()
		generateName()
		createBiome()
		getConfigurationPath()
		techType()
		setConfigurationPath()
		npcConfig()
		treeFoliageDirectory()
		getConfiguration()
		monsterMovementSettings()
		createTreasure()
		projectileConfig()
		isTreasurePool()
		monsterSkillParameter()
		materialPath()
		setConfiguration()
		imageSpaces()
		tenantConfig()
		imageSize()
		techConfig()
		questConfig()
		npcVariant()
		liquidStatusEffects()
		makeCurrentVersionedJson()
		projectileGravityMultiplier()
		itemHasTag()
	}
	sb = {
		makeUuid()
		interpolateSinEase()
		makeRandomSource()
		logError()
		printJson()
		staticRandomDoubleRange()
		staticRandomDouble()
		nrand()
		logInfo()
		jsonQuery()
		logWarn()
		makePerlinSource()
		setLogMap()
		print()
		staticRandomI32()
		replaceTags()
		staticRandomI32Range()
		jsonMerge()
	}
	setmetatable()
	next()
	player = {
		getItemWithParameter()
		recordEvent()
		inventoryTags()
		shipUpgrades()
		essentialItem()
		hasItem()
		setIntroComplete()
		lounge()
		species()
		altHandItemTags()
		setUniverseFlag()
		playTime()
		hasCountOfItem()
		ownShipWorldId()
		isLounging()
		enableTech()
		primaryHandItem()
		warp()
		addBookmark()
		enabledTechs()
		giveBlueprint()
		hasQuest()
		serverUuid()
		startQuest()
		upgradeShip()
		equipTech()
		removeEssentialItem()
		canStartQuest()
		radioMessage()
		consumeItemWithParameter()
		makeTechUnavailable()
		consumeItem()
		confirm()
		consumeTaggedItem()
		cleanupItems()
		itemsWithTag()
		makeTechAvailable()
		worldId()
		introComplete()
		availableTechs()
		altHandItem()
		primaryHandItemTags()
		enableMission()
		playCinematic()
		hasCompletedQuest()
		setEquippedItem()
		equippedItem()
		completeMission()
		hasItemWithParameter()
		equippedTech()
		giveEssentialItem()
		giveItem()
		gender()
	}
	config = {
		getParameter()
	}
	jresize()
	table = {
		concat()
		insert()
		pack()
		move()
		sort()
		remove()
		unpack()
	}
	rawequal()
	jobject()
	status = {
		activeUniqueStatusEffectSummary()
		stat()
		resourcePercentage()
		overConsumeResource()
		addEphemeralEffects()
		resetResource()
		consumeResource()
		isResource()
		resource()
		resourceMax()
		setPersistentEffects()
		clearAllPersistentEffects()
		giveResource()
		damageTakenSince()
		resourceLocked()
		modifyResourcePercentage()
		getPersistentEffects()
		resourceNames()
		addEphemeralEffect()
		inflictedHitsSince()
		setResourcePercentage()
		setResource()
		resourcePositive()
		clearEphemeralEffects()
		addPersistentEffects()
		inflictedDamageSince()
		setResourceLocked()
		modifyResource()
		addPersistentEffect()
		statusProperty()
		removeEphemeralEffect()
		setStatusProperty()
		clearPersistentEffects()
		statPositive()
		resetAllResources()
	}
	update()
	init()
	tostring()
	type()
	select()
	tonumber()
	rawget()
	jarray()
	require()
	utf8 = {
		char()
		codepoint()
		charpattern = "[
[01:45:57.310] [Warn] 	widget = {
		setButtonOverlayImage()
		addListItem()
		getData()
		setData()
		setVisible()
		getSelectedOption()
		setProgress()
		getSliderValue()
		setText()
		setButtonImage()
		removeListItem()
		itemGridItems()
		getPosition()
		setPosition()
		setOptionEnabled()
		setOptionVisible()
		getListSelected()
		setButtonImages()
		playSound()
		getSize()
		setImageScale()
		setImageRotation()
		clearListItems()
		setSize()
		setImage()
		setListSelected()
		setButtonEnabled()
		setButtonCheckedImages()
		focus()
		getChecked()
		setSelectedOption()
		blur()
		setChecked()
		setFontColor()
		getText()
	}
	_VERSION = "Lua 5.3"
	pcall()
	pairs()
	math = {
		abs()
		atan()
		fmod()
		log()
		random()
		asin()
		sin()
		ceil()
		huge = inf
		randomseed()
		exp()
		floor()
		acos()
		pi = 3.1415926535898
		mininteger = -9223372036854775808
		sqrt()
		type()
		tan()
		rad()
		modf()
		min()
		max()
		ult()
		tointeger()
		cos()
		deg()
		maxinteger = 9223372036854775807
	}
	rawset()
	script = {
		setUpdateDelta()
		updateDt()
	}
	coroutine = {
		status()
		running()
		wrap()
		create()
		yield()
		resume()
		isyieldable()
	}
	world = {
		underground()
		entityCanDamage()
		npcQuery()
		containerAddItems()
		monsterType()
		material()
		monsterQuery()
		loungeableQuery()
		entityMoney()
		containerTakeAt()
		placeMaterial()
		objectAt()
		breathable()
		damageTiles()
		entityHealth()
		objectSpaces()
		containerConsumeAt()
		sendEntityMessage()
		isMonster()
		liquidAt()
		xwrap()
		spawnStagehand()
		containerConsume()
		collisionBlocksAlongLine()
		containerSwapItems()
		loungeableOccupied()
		platformerPathStart()
		findPlatformerPath()
		entityUniqueId()
		containerPutItemsAt()
		isTileProtected()
		time()
		containerItems()
		destroyLiquid()
		spawnLiquid()
		gravity()
		entitySpecies()
		rectTileCollision()
		containerAvailable()
		liquidAlongLine()
		farmableStage()
		entityType()
		objectQuery()
		resolvePolyCollision()
		lineTileCollision()
		pointTileCollision()
		containerStackItems()
		spawnVehicle()
		spawnMonster()
		placeMod()
		day()
		objectLineQuery()
		placeObject()
		spawnProjectile()
		tileIsOccupied()
		stagehandType()
		containerItemsCanFit()
		polyCollision()
		debugPoly()
		timeOfDay()
		getProperty()
		dayLength()
		entityHasCountOfItem()
		debugPoint()
		lineCollision()
		damageTileArea()
		containerTakeAll()
		mod()
		entityQuery()
		entityHandItemDescriptor()
		distance()
		itemDropQuery()
		setProperty()
		debugText()
		containerSwapItemsNoCombine()
		threatLevel()
		spawnNpc()
		windLevel()
		entityLineQuery()
		spawnItem()
		npcType()
		getObjectParameter()
		playerQuery()
		containerItemApply()
		containerOpen()
		nearestTo()
		polyContains()
		magnitude()
		npcLineQuery()
		entityDescription()
		entityExists()
		isNpc()
		entityPortrait()
		entityHandItem()
		containerClose()
		lightLevel()
		containerTakeNumItemsAt()
		spawnTreasure()
		entityPosition()
		pointCollision()
		rectCollision()
		entityGender()
		containerItemAt()
		findUniqueEntity()
		debugLine()
		entityDamageTeam()
		entityVelocity()
		entityAggressive()
		containerItemsFitWhere()
		containerSize()
		callScriptedEntity()
		entityName()
	}
	p()
	pane = {
		containerEntityId()
		dismiss()
		playerEntityId()
	}
	jsize()
	root = {
		assetJson()
		materialMiningSound()
		evalFunction2()
		createItem()
		itemType()
		recipesForItem()
		getMatchingTenants()
		loadVersionedJson()
		evalFunction()
		hasTech()
		treeStemDirectory()
		itemTags()
		materialFootstepSound()
		materialHealth()
		behaviorModule()
		nonEmptyRegion()
		itemConfig()
		npcPortrait()
		monsterPortrait()
		generateName()
		createBiome()
		getConfigurationPath()
		techType()
		setConfigurationPath()
		npcConfig()
		treeFoliageDirectory()
		getConfiguration()
		monsterMovementSettings()
		createTreasure()
		projectileConfig()
		isTreasurePool()
		monsterSkillParameter()
		materialPath()
		setConfiguration()
		imageSpaces()
		tenantConfig()
		imageSize()
		techConfig()
		questConfig()
		npcVariant()
		liquidStatusEffects()
		makeCurrentVersionedJson()
		projectileGravityMultiplier()
		itemHasTag()
	}
	sb = {
		makeUuid()
		interpolateSinEase()
		makeRandomSource()
		logError()
		printJson()
		staticRandomDoubleRange()
		staticRandomDouble()
		nrand()
		logInfo()
		jsonQuery()
		logWarn()
		makePerlinSource()
		setLogMap()
		print()
		staticRandomI32()
		replaceTags()
		staticRandomI32Range()
		jsonMerge()
	}
	setmetatable()
	next()
	player = {
		getItemWithParameter()
		recordEvent()
		inventoryTags()
		shipUpgrades()
		essentialItem()
		hasItem()
		setIntroComplete()
		lounge()
		species()
		altHandItemTags()
		setUniverseFlag()
		playTime()
		hasCountOfItem()
		ownShipWorldId()
		isLounging()
		enableTech()
		primaryHandItem()
		warp()
		addBookmark()
		enabledTechs()
		giveBlueprint()
		hasQuest()
		serverUuid()
		startQuest()
		upgradeShip()
		equipTech()
		removeEssentialItem()
		canStartQuest()
		radioMessage()
		consumeItemWithParameter()
		makeTechUnavailable()
		consumeItem()
		confirm()
		consumeTaggedItem()
		cleanupItems()
		itemsWithTag()
		makeTechAvailable()
		worldId()
		introComplete()
		availableTechs()
		altHandItem()
		primaryHandItemTags()
		enableMission()
		playCinematic()
		hasCompletedQuest()
		setEquippedItem()
		equippedItem()
		completeMission()
		hasItemWithParameter()
		equippedTech()
		giveEssentialItem()
		giveItem()
		gender()
	}
	config = {
		getParameter()
	}
	jresize()
	table = {
		concat()
		insert()
		pack()
		move()
		sort()
		remove()
		unpack()
	}
	rawequal()
	jobject()
	status = {
		activeUniqueStatusEffectSummary()
		stat()
		resourcePercentage()
		overConsumeResource()
		addEphemeralEffects()
		resetResource()
		consumeResource()
		isResource()
		resource()
		resourceMax()
		setPersistentEffects()
		clearAllPersistentEffects()
		giveResource()
		damageTakenSince()
		resourceLocked()
		modifyResourcePercentage()
		getPersistentEffects()
		resourceNames()
		addEphemeralEffect()
		inflictedHitsSince()
		setResourcePercentage()
		setResource()
		resourcePositive()
		clearEphemeralEffects()
		addPersistentEffects()
		inflictedDamageSince()
		setResourceLocked()
		modifyResource()
		addPersistentEffect()
		statusProperty()
		removeEphemeralEffect()
		setStatusProperty()
		clearPersistentEffects()
		statPositive()
		resetAllResources()
	}
	update()
	init()
	tostring()
	type()
	select()
	tonumber()
	rawget()
	jarray()
	require()
	utf8 = {
		char()
		codepoint()
		charpattern = "[
[01:47:09.855] [Warn] 	widget = {
		setButtonOverlayImage()
		addListItem()
		getData()
		setData()
		setVisible()
		getSelectedOption()
		setProgress()
		getSliderValue()
		setText()
		setButtonImage()
		removeListItem()
		itemGridItems()
		getPosition()
		setPosition()
		setOptionEnabled()
		setOptionVisible()
		getListSelected()
		setButtonImages()
		playSound()
		getSize()
		setImageScale()
		setImageRotation()
		clearListItems()
		setSize()
		setImage()
		setListSelected()
		setButtonEnabled()
		setButtonCheckedImages()
		focus()
		getChecked()
		setSelectedOption()
		blur()
		setChecked()
		setFontColor()
		getText()
	}
	_VERSION = "Lua 5.3"
	pcall()
	pairs()
	math = {
		abs()
		atan()
		fmod()
		log()
		random()
		asin()
		sin()
		ceil()
		huge = inf
		randomseed()
		exp()
		floor()
		acos()
		pi = 3.1415926535898
		mininteger = -9223372036854775808
		sqrt()
		type()
		tan()
		rad()
		modf()
		min()
		max()
		ult()
		tointeger()
		cos()
		deg()
		maxinteger = 9223372036854775807
	}
	rawset()
	script = {
		setUpdateDelta()
		updateDt()
	}
	coroutine = {
		status()
		running()
		wrap()
		create()
		yield()
		resume()
		isyieldable()
	}
	world = {
		underground()
		entityCanDamage()
		npcQuery()
		containerAddItems()
		monsterType()
		material()
		monsterQuery()
		loungeableQuery()
		entityMoney()
		containerTakeAt()
		placeMaterial()
		objectAt()
		breathable()
		damageTiles()
		entityHealth()
		objectSpaces()
		containerConsumeAt()
		sendEntityMessage()
		isMonster()
		liquidAt()
		xwrap()
		spawnStagehand()
		containerConsume()
		collisionBlocksAlongLine()
		containerSwapItems()
		loungeableOccupied()
		platformerPathStart()
		findPlatformerPath()
		entityUniqueId()
		containerPutItemsAt()
		isTileProtected()
		time()
		containerItems()
		destroyLiquid()
		spawnLiquid()
		gravity()
		entitySpecies()
		rectTileCollision()
		containerAvailable()
		liquidAlongLine()
		farmableStage()
		entityType()
		objectQuery()
		resolvePolyCollision()
		lineTileCollision()
		pointTileCollision()
		containerStackItems()
		spawnVehicle()
		spawnMonster()
		placeMod()
		day()
		objectLineQuery()
		placeObject()
		spawnProjectile()
		tileIsOccupied()
		stagehandType()
		containerItemsCanFit()
		polyCollision()
		debugPoly()
		timeOfDay()
		getProperty()
		dayLength()
		entityHasCountOfItem()
		debugPoint()
		lineCollision()
		damageTileArea()
		containerTakeAll()
		mod()
		entityQuery()
		entityHandItemDescriptor()
		distance()
		itemDropQuery()
		setProperty()
		debugText()
		containerSwapItemsNoCombine()
		threatLevel()
		spawnNpc()
		windLevel()
		entityLineQuery()
		spawnItem()
		npcType()
		getObjectParameter()
		playerQuery()
		containerItemApply()
		containerOpen()
		nearestTo()
		polyContains()
		magnitude()
		npcLineQuery()
		entityDescription()
		entityExists()
		isNpc()
		entityPortrait()
		entityHandItem()
		containerClose()
		lightLevel()
		containerTakeNumItemsAt()
		spawnTreasure()
		entityPosition()
		pointCollision()
		rectCollision()
		entityGender()
		containerItemAt()
		findUniqueEntity()
		debugLine()
		entityDamageTeam()
		entityVelocity()
		entityAggressive()
		containerItemsFitWhere()
		containerSize()
		callScriptedEntity()
		entityName()
	}
	p()
	pane = {
		containerEntityId()
		dismiss()
		playerEntityId()
	}
	jsize()
	root = {
		assetJson()
		materialMiningSound()
		evalFunction2()
		createItem()
		itemType()
		recipesForItem()
		getMatchingTenants()
		loadVersionedJson()
		evalFunction()
		hasTech()
		treeStemDirectory()
		itemTags()
		materialFootstepSound()
		materialHealth()
		behaviorModule()
		nonEmptyRegion()
		itemConfig()
		npcPortrait()
		monsterPortrait()
		generateName()
		createBiome()
		getConfigurationPath()
		techType()
		setConfigurationPath()
		npcConfig()
		treeFoliageDirectory()
		getConfiguration()
		monsterMovementSettings()
		createTreasure()
		projectileConfig()
		isTreasurePool()
		monsterSkillParameter()
		materialPath()
		setConfiguration()
		imageSpaces()
		tenantConfig()
		imageSize()
		techConfig()
		questConfig()
		npcVariant()
		liquidStatusEffects()
		makeCurrentVersionedJson()
		projectileGravityMultiplier()
		itemHasTag()
	}
	sb = {
		makeUuid()
		interpolateSinEase()
		makeRandomSource()
		logError()
		printJson()
		staticRandomDoubleRange()
		staticRandomDouble()
		nrand()
		logInfo()
		jsonQuery()
		logWarn()
		makePerlinSource()
		setLogMap()
		print()
		staticRandomI32()
		replaceTags()
		staticRandomI32Range()
		jsonMerge()
	}
	setmetatable()
	next()
	player = {
		getItemWithParameter()
		recordEvent()
		inventoryTags()
		shipUpgrades()
		essentialItem()
		hasItem()
		setIntroComplete()
		lounge()
		species()
		altHandItemTags()
		setUniverseFlag()
		playTime()
		hasCountOfItem()
		ownShipWorldId()
		isLounging()
		enableTech()
		primaryHandItem()
		warp()
		addBookmark()
		enabledTechs()
		giveBlueprint()
		hasQuest()
		serverUuid()
		startQuest()
		upgradeShip()
		equipTech()
		removeEssentialItem()
		canStartQuest()
		radioMessage()
		consumeItemWithParameter()
		makeTechUnavailable()
		consumeItem()
		confirm()
		consumeTaggedItem()
		cleanupItems()
		itemsWithTag()
		makeTechAvailable()
		worldId()
		introComplete()
		availableTechs()
		altHandItem()
		primaryHandItemTags()
		enableMission()
		playCinematic()
		hasCompletedQuest()
		setEquippedItem()
		equippedItem()
		completeMission()
		hasItemWithParameter()
		equippedTech()
		giveEssentialItem()
		giveItem()
		gender()
	}
	config = {
		getParameter()
	}
	jresize()
	table = {
		concat()
		insert()
		pack()
		move()
		sort()
		remove()
		unpack()
	}
	rawequal()
	jobject()
	status = {
		activeUniqueStatusEffectSummary()
		stat()
		resourcePercentage()
		overConsumeResource()
		addEphemeralEffects()
		resetResource()
		consumeResource()
		isResource()
		resource()
		resourceMax()
		setPersistentEffects()
		clearAllPersistentEffects()
		giveResource()
		damageTakenSince()
		resourceLocked()
		modifyResourcePercentage()
		getPersistentEffects()
		resourceNames()
		addEphemeralEffect()
		inflictedHitsSince()
		setResourcePercentage()
		setResource()
		resourcePositive()
		clearEphemeralEffects()
		addPersistentEffects()
		inflictedDamageSince()
		setResourceLocked()
		modifyResource()
		addPersistentEffect()
		statusProperty()
		removeEphemeralEffect()
		setStatusProperty()
		clearPersistentEffects()
		statPositive()
		resetAllResources()
	}
	update()
	init()
	tostring()
	type()
	select()
	tonumber()
	rawget()
	jarray()
	require()
	utf8 = {
		char()
		codepoint()
		charpattern = "[
[01:48:48.601] [Warn] 	widget = {
		setButtonOverlayImage()
		addListItem()
		getData()
		setData()
		setVisible()
		getSelectedOption()
		setProgress()
		getSliderValue()
		setText()
		setButtonImage()
		removeListItem()
		itemGridItems()
		getPosition()
		setPosition()
		setOptionEnabled()
		setOptionVisible()
		getListSelected()
		setButtonImages()
		playSound()
		getSize()
		setImageScale()
		setImageRotation()
		clearListItems()
		setSize()
		setImage()
		setListSelected()
		setButtonEnabled()
		setButtonCheckedImages()
		focus()
		getChecked()
		setSelectedOption()
		blur()
		setChecked()
		setFontColor()
		getText()
	}
	_VERSION = "Lua 5.3"
	pcall()
	pairs()
	math = {
		abs()
		atan()
		fmod()
		log()
		random()
		asin()
		sin()
		ceil()
		huge = inf
		randomseed()
		exp()
		floor()
		acos()
		pi = 3.1415926535898
		mininteger = -9223372036854775808
		sqrt()
		type()
		tan()
		rad()
		modf()
		min()
		max()
		ult()
		tointeger()
		cos()
		deg()
		maxinteger = 9223372036854775807
	}
	rawset()
	script = {
		setUpdateDelta()
		updateDt()
	}
	coroutine = {
		status()
		running()
		wrap()
		create()
		yield()
		resume()
		isyieldable()
	}
	world = {
		underground()
		entityCanDamage()
		npcQuery()
		containerAddItems()
		monsterType()
		material()
		monsterQuery()
		loungeableQuery()
		entityMoney()
		containerTakeAt()
		placeMaterial()
		objectAt()
		breathable()
		damageTiles()
		entityHealth()
		objectSpaces()
		containerConsumeAt()
		sendEntityMessage()
		isMonster()
		liquidAt()
		xwrap()
		spawnStagehand()
		containerConsume()
		collisionBlocksAlongLine()
		containerSwapItems()
		loungeableOccupied()
		platformerPathStart()
		findPlatformerPath()
		entityUniqueId()
		containerPutItemsAt()
		isTileProtected()
		time()
		containerItems()
		destroyLiquid()
		spawnLiquid()
		gravity()
		entitySpecies()
		rectTileCollision()
		containerAvailable()
		liquidAlongLine()
		farmableStage()
		entityType()
		objectQuery()
		resolvePolyCollision()
		lineTileCollision()
		pointTileCollision()
		containerStackItems()
		spawnVehicle()
		spawnMonster()
		placeMod()
		day()
		objectLineQuery()
		placeObject()
		spawnProjectile()
		tileIsOccupied()
		stagehandType()
		containerItemsCanFit()
		polyCollision()
		debugPoly()
		timeOfDay()
		getProperty()
		dayLength()
		entityHasCountOfItem()
		debugPoint()
		lineCollision()
		damageTileArea()
		containerTakeAll()
		mod()
		entityQuery()
		entityHandItemDescriptor()
		distance()
		itemDropQuery()
		setProperty()
		debugText()
		containerSwapItemsNoCombine()
		threatLevel()
		spawnNpc()
		windLevel()
		entityLineQuery()
		spawnItem()
		npcType()
		getObjectParameter()
		playerQuery()
		containerItemApply()
		containerOpen()
		nearestTo()
		polyContains()
		magnitude()
		npcLineQuery()
		entityDescription()
		entityExists()
		isNpc()
		entityPortrait()
		entityHandItem()
		containerClose()
		lightLevel()
		containerTakeNumItemsAt()
		spawnTreasure()
		entityPosition()
		pointCollision()
		rectCollision()
		entityGender()
		containerItemAt()
		findUniqueEntity()
		debugLine()
		entityDamageTeam()
		entityVelocity()
		entityAggressive()
		containerItemsFitWhere()
		containerSize()
		callScriptedEntity()
		entityName()
	}
	p()
	pane = {
		containerEntityId()
		dismiss()
		playerEntityId()
	}
	jsize()
	root = {
		assetJson()
		materialMiningSound()
		evalFunction2()
		createItem()
		itemType()
		recipesForItem()
		getMatchingTenants()
		loadVersionedJson()
		evalFunction()
		hasTech()
		treeStemDirectory()
		itemTags()
		materialFootstepSound()
		materialHealth()
		behaviorModule()
		nonEmptyRegion()
		itemConfig()
		npcPortrait()
		monsterPortrait()
		generateName()
		createBiome()
		getConfigurationPath()
		techType()
		setConfigurationPath()
		npcConfig()
		treeFoliageDirectory()
		getConfiguration()
		monsterMovementSettings()
		createTreasure()
		projectileConfig()
		isTreasurePool()
		monsterSkillParameter()
		materialPath()
		setConfiguration()
		imageSpaces()
		tenantConfig()
		imageSize()
		techConfig()
		questConfig()
		npcVariant()
		liquidStatusEffects()
		makeCurrentVersionedJson()
		projectileGravityMultiplier()
		itemHasTag()
	}
	sb = {
		makeUuid()
		interpolateSinEase()
		makeRandomSource()
		logError()
		printJson()
		staticRandomDoubleRange()
		staticRandomDouble()
		nrand()
		logInfo()
		jsonQuery()
		logWarn()
		makePerlinSource()
		setLogMap()
		print()
		staticRandomI32()
		replaceTags()
		staticRandomI32Range()
		jsonMerge()
	}
	setmetatable()
	next()
	player = {
		getItemWithParameter()
		recordEvent()
		inventoryTags()
		shipUpgrades()
		essentialItem()
		hasItem()
		setIntroComplete()
		lounge()
		species()
		altHandItemTags()
		setUniverseFlag()
		playTime()
		hasCountOfItem()
		ownShipWorldId()
		isLounging()
		enableTech()
		primaryHandItem()
		warp()
		addBookmark()
		enabledTechs()
		giveBlueprint()
		hasQuest()
		serverUuid()
		startQuest()
		upgradeShip()
		equipTech()
		removeEssentialItem()
		canStartQuest()
		radioMessage()
		consumeItemWithParameter()
		makeTechUnavailable()
		consumeItem()
		confirm()
		consumeTaggedItem()
		cleanupItems()
		itemsWithTag()
		makeTechAvailable()
		worldId()
		introComplete()
		availableTechs()
		altHandItem()
		primaryHandItemTags()
		enableMission()
		playCinematic()
		hasCompletedQuest()
		setEquippedItem()
		equippedItem()
		completeMission()
		hasItemWithParameter()
		equippedTech()
		giveEssentialItem()
		giveItem()
		gender()
	}
	config = {
		getParameter()
	}
	jresize()
	table = {
		concat()
		insert()
		pack()
		move()
		sort()
		remove()
		unpack()
	}
	rawequal()
	jobject()
	status = {
		activeUniqueStatusEffectSummary()
		stat()
		resourcePercentage()
		overConsumeResource()
		addEphemeralEffects()
		resetResource()
		consumeResource()
		isResource()
		resource()
		resourceMax()
		setPersistentEffects()
		clearAllPersistentEffects()
		giveResource()
		damageTakenSince()
		resourceLocked()
		modifyResourcePercentage()
		getPersistentEffects()
		resourceNames()
		addEphemeralEffect()
		inflictedHitsSince()
		setResourcePercentage()
		setResource()
		resourcePositive()
		clearEphemeralEffects()
		addPersistentEffects()
		inflictedDamageSince()
		setResourceLocked()
		modifyResource()
		addPersistentEffect()
		statusProperty()
		removeEphemeralEffect()
		setStatusProperty()
		clearPersistentEffects()
		statPositive()
		resetAllResources()
	}
	update()
	init()
	tostring()
	type()
	select()
	tonumber()
	rawget()
	jarray()
	require()
	utf8 = {
		char()
		codepoint()
		charpattern = "[
[01:49:28.843] [Warn] 	widget = {
		setButtonOverlayImage()
		addListItem()
		getData()
		setData()
		setVisible()
		getSelectedOption()
		setProgress()
		getSliderValue()
		setText()
		setButtonImage()
		removeListItem()
		itemGridItems()
		getPosition()
		setPosition()
		setOptionEnabled()
		setOptionVisible()
		getListSelected()
		setButtonImages()
		playSound()
		getSize()
		setImageScale()
		setImageRotation()
		clearListItems()
		setSize()
		setImage()
		setListSelected()
		setButtonEnabled()
		setButtonCheckedImages()
		focus()
		getChecked()
		setSelectedOption()
		blur()
		setChecked()
		setFontColor()
		getText()
	}
	_VERSION = "Lua 5.3"
	pcall()
	pairs()
	math = {
		abs()
		atan()
		fmod()
		log()
		random()
		asin()
		sin()
		ceil()
		huge = inf
		randomseed()
		exp()
		floor()
		acos()
		pi = 3.1415926535898
		mininteger = -9223372036854775808
		sqrt()
		type()
		tan()
		rad()
		modf()
		min()
		max()
		ult()
		tointeger()
		cos()
		deg()
		maxinteger = 9223372036854775807
	}
	rawset()
	script = {
		setUpdateDelta()
		updateDt()
	}
	coroutine = {
		status()
		running()
		wrap()
		create()
		yield()
		resume()
		isyieldable()
	}
	world = {
		underground()
		entityCanDamage()
		npcQuery()
		containerAddItems()
		monsterType()
		material()
		monsterQuery()
		loungeableQuery()
		entityMoney()
		containerTakeAt()
		placeMaterial()
		objectAt()
		breathable()
		damageTiles()
		entityHealth()
		objectSpaces()
		containerConsumeAt()
		sendEntityMessage()
		isMonster()
		liquidAt()
		xwrap()
		spawnStagehand()
		containerConsume()
		collisionBlocksAlongLine()
		containerSwapItems()
		loungeableOccupied()
		platformerPathStart()
		findPlatformerPath()
		entityUniqueId()
		containerPutItemsAt()
		isTileProtected()
		time()
		containerItems()
		destroyLiquid()
		spawnLiquid()
		gravity()
		entitySpecies()
		rectTileCollision()
		containerAvailable()
		liquidAlongLine()
		farmableStage()
		entityType()
		objectQuery()
		resolvePolyCollision()
		lineTileCollision()
		pointTileCollision()
		containerStackItems()
		spawnVehicle()
		spawnMonster()
		placeMod()
		day()
		objectLineQuery()
		placeObject()
		spawnProjectile()
		tileIsOccupied()
		stagehandType()
		containerItemsCanFit()
		polyCollision()
		debugPoly()
		timeOfDay()
		getProperty()
		dayLength()
		entityHasCountOfItem()
		debugPoint()
		lineCollision()
		damageTileArea()
		containerTakeAll()
		mod()
		entityQuery()
		entityHandItemDescriptor()
		distance()
		itemDropQuery()
		setProperty()
		debugText()
		containerSwapItemsNoCombine()
		threatLevel()
		spawnNpc()
		windLevel()
		entityLineQuery()
		spawnItem()
		npcType()
		getObjectParameter()
		playerQuery()
		containerItemApply()
		containerOpen()
		nearestTo()
		polyContains()
		magnitude()
		npcLineQuery()
		entityDescription()
		entityExists()
		isNpc()
		entityPortrait()
		entityHandItem()
		containerClose()
		lightLevel()
		containerTakeNumItemsAt()
		spawnTreasure()
		entityPosition()
		pointCollision()
		rectCollision()
		entityGender()
		containerItemAt()
		findUniqueEntity()
		debugLine()
		entityDamageTeam()
		entityVelocity()
		entityAggressive()
		containerItemsFitWhere()
		containerSize()
		callScriptedEntity()
		entityName()
	}
	p()
	pane = {
		containerEntityId()
		dismiss()
		playerEntityId()
	}
	jsize()
	root = {
		assetJson()
		materialMiningSound()
		evalFunction2()
		createItem()
		itemType()
		recipesForItem()
		getMatchingTenants()
		loadVersionedJson()
		evalFunction()
		hasTech()
		treeStemDirectory()
		itemTags()
		materialFootstepSound()
		materialHealth()
		behaviorModule()
		nonEmptyRegion()
		itemConfig()
		npcPortrait()
		monsterPortrait()
		generateName()
		createBiome()
		getConfigurationPath()
		techType()
		setConfigurationPath()
		npcConfig()
		treeFoliageDirectory()
		getConfiguration()
		monsterMovementSettings()
		createTreasure()
		projectileConfig()
		isTreasurePool()
		monsterSkillParameter()
		materialPath()
		setConfiguration()
		imageSpaces()
		tenantConfig()
		imageSize()
		techConfig()
		questConfig()
		npcVariant()
		liquidStatusEffects()
		makeCurrentVersionedJson()
		projectileGravityMultiplier()
		itemHasTag()
	}
	sb = {
		makeUuid()
		interpolateSinEase()
		makeRandomSource()
		logError()
		printJson()
		staticRandomDoubleRange()
		staticRandomDouble()
		nrand()
		logInfo()
		jsonQuery()
		logWarn()
		makePerlinSource()
		setLogMap()
		print()
		staticRandomI32()
		replaceTags()
		staticRandomI32Range()
		jsonMerge()
	}
	setmetatable()
	next()
	player = {
		getItemWithParameter()
		recordEvent()
		inventoryTags()
		shipUpgrades()
		essentialItem()
		hasItem()
		setIntroComplete()
		lounge()
		species()
		altHandItemTags()
		setUniverseFlag()
		playTime()
		hasCountOfItem()
		ownShipWorldId()
		isLounging()
		enableTech()
		primaryHandItem()
		warp()
		addBookmark()
		enabledTechs()
		giveBlueprint()
		hasQuest()
		serverUuid()
		startQuest()
		upgradeShip()
		equipTech()
		removeEssentialItem()
		canStartQuest()
		radioMessage()
		consumeItemWithParameter()
		makeTechUnavailable()
		consumeItem()
		confirm()
		consumeTaggedItem()
		cleanupItems()
		itemsWithTag()
		makeTechAvailable()
		worldId()
		introComplete()
		availableTechs()
		altHandItem()
		primaryHandItemTags()
		enableMission()
		playCinematic()
		hasCompletedQuest()
		setEquippedItem()
		equippedItem()
		completeMission()
		hasItemWithParameter()
		equippedTech()
		giveEssentialItem()
		giveItem()
		gender()
	}
	config = {
		getParameter()
	}
	jresize()
	table = {
		concat()
		insert()
		pack()
		move()
		sort()
		remove()
		unpack()
	}
	rawequal()
	jobject()
	status = {
		activeUniqueStatusEffectSummary()
		stat()
		resourcePercentage()
		overConsumeResource()
		addEphemeralEffects()
		resetResource()
		consumeResource()
		isResource()
		resource()
		resourceMax()
		setPersistentEffects()
		clearAllPersistentEffects()
		giveResource()
		damageTakenSince()
		resourceLocked()
		modifyResourcePercentage()
		getPersistentEffects()
		resourceNames()
		addEphemeralEffect()
		inflictedHitsSince()
		setResourcePercentage()
		setResource()
		resourcePositive()
		clearEphemeralEffects()
		addPersistentEffects()
		inflictedDamageSince()
		setResourceLocked()
		modifyResource()
		addPersistentEffect()
		statusProperty()
		removeEphemeralEffect()
		setStatusProperty()
		clearPersistentEffects()
		statPositive()
		resetAllResources()
	}
	update()
	init()
	tostring()
	type()
	select()
	tonumber()
	rawget()
	jarray()
	require()
	utf8 = {
		char()
		codepoint()
		charpattern = "[
[01:49:29.862] [Warn] 	widget = {
		setButtonOverlayImage()
		addListItem()
		getData()
		setData()
		setVisible()
		getSelectedOption()
		setProgress()
		getSliderValue()
		setText()
		setButtonImage()
		removeListItem()
		itemGridItems()
		getPosition()
		setPosition()
		setOptionEnabled()
		setOptionVisible()
		getListSelected()
		setButtonImages()
		playSound()
		getSize()
		setImageScale()
		setImageRotation()
		clearListItems()
		setSize()
		setImage()
		setListSelected()
		setButtonEnabled()
		setButtonCheckedImages()
		focus()
		getChecked()
		setSelectedOption()
		blur()
		setChecked()
		setFontColor()
		getText()
	}
	_VERSION = "Lua 5.3"
	pcall()
	pairs()
	math = {
		abs()
		atan()
		fmod()
		log()
		random()
		asin()
		sin()
		ceil()
		huge = inf
		randomseed()
		exp()
		floor()
		acos()
		pi = 3.1415926535898
		mininteger = -9223372036854775808
		sqrt()
		type()
		tan()
		rad()
		modf()
		min()
		max()
		ult()
		tointeger()
		cos()
		deg()
		maxinteger = 9223372036854775807
	}
	rawset()
	script = {
		setUpdateDelta()
		updateDt()
	}
	coroutine = {
		status()
		running()
		wrap()
		create()
		yield()
		resume()
		isyieldable()
	}
	world = {
		underground()
		entityCanDamage()
		npcQuery()
		containerAddItems()
		monsterType()
		material()
		monsterQuery()
		loungeableQuery()
		entityMoney()
		containerTakeAt()
		placeMaterial()
		objectAt()
		breathable()
		damageTiles()
		entityHealth()
		objectSpaces()
		containerConsumeAt()
		sendEntityMessage()
		isMonster()
		liquidAt()
		xwrap()
		spawnStagehand()
		containerConsume()
		collisionBlocksAlongLine()
		containerSwapItems()
		loungeableOccupied()
		platformerPathStart()
		findPlatformerPath()
		entityUniqueId()
		containerPutItemsAt()
		isTileProtected()
		time()
		containerItems()
		destroyLiquid()
		spawnLiquid()
		gravity()
		entitySpecies()
		rectTileCollision()
		containerAvailable()
		liquidAlongLine()
		farmableStage()
		entityType()
		objectQuery()
		resolvePolyCollision()
		lineTileCollision()
		pointTileCollision()
		containerStackItems()
		spawnVehicle()
		spawnMonster()
		placeMod()
		day()
		objectLineQuery()
		placeObject()
		spawnProjectile()
		tileIsOccupied()
		stagehandType()
		containerItemsCanFit()
		polyCollision()
		debugPoly()
		timeOfDay()
		getProperty()
		dayLength()
		entityHasCountOfItem()
		debugPoint()
		lineCollision()
		damageTileArea()
		containerTakeAll()
		mod()
		entityQuery()
		entityHandItemDescriptor()
		distance()
		itemDropQuery()
		setProperty()
		debugText()
		containerSwapItemsNoCombine()
		threatLevel()
		spawnNpc()
		windLevel()
		entityLineQuery()
		spawnItem()
		npcType()
		getObjectParameter()
		playerQuery()
		containerItemApply()
		containerOpen()
		nearestTo()
		polyContains()
		magnitude()
		npcLineQuery()
		entityDescription()
		entityExists()
		isNpc()
		entityPortrait()
		entityHandItem()
		containerClose()
		lightLevel()
		containerTakeNumItemsAt()
		spawnTreasure()
		entityPosition()
		pointCollision()
		rectCollision()
		entityGender()
		containerItemAt()
		findUniqueEntity()
		debugLine()
		entityDamageTeam()
		entityVelocity()
		entityAggressive()
		containerItemsFitWhere()
		containerSize()
		callScriptedEntity()
		entityName()
	}
	p()
	pane = {
		containerEntityId()
		dismiss()
		playerEntityId()
	}
	jsize()
	root = {
		assetJson()
		materialMiningSound()
		evalFunction2()
		createItem()
		itemType()
		recipesForItem()
		getMatchingTenants()
		loadVersionedJson()
		evalFunction()
		hasTech()
		treeStemDirectory()
		itemTags()
		materialFootstepSound()
		materialHealth()
		behaviorModule()
		nonEmptyRegion()
		itemConfig()
		npcPortrait()
		monsterPortrait()
		generateName()
		createBiome()
		getConfigurationPath()
		techType()
		setConfigurationPath()
		npcConfig()
		treeFoliageDirectory()
		getConfiguration()
		monsterMovementSettings()
		createTreasure()
		projectileConfig()
		isTreasurePool()
		monsterSkillParameter()
		materialPath()
		setConfiguration()
		imageSpaces()
		tenantConfig()
		imageSize()
		techConfig()
		questConfig()
		npcVariant()
		liquidStatusEffects()
		makeCurrentVersionedJson()
		projectileGravityMultiplier()
		itemHasTag()
	}
	sb = {
		makeUuid()
		interpolateSinEase()
		makeRandomSource()
		logError()
		printJson()
		staticRandomDoubleRange()
		staticRandomDouble()
		nrand()
		logInfo()
		jsonQuery()
		logWarn()
		makePerlinSource()
		setLogMap()
		print()
		staticRandomI32()
		replaceTags()
		staticRandomI32Range()
		jsonMerge()
	}
	setmetatable()
	next()
	player = {
		getItemWithParameter()
		recordEvent()
		inventoryTags()
		shipUpgrades()
		essentialItem()
		hasItem()
		setIntroComplete()
		lounge()
		species()
		altHandItemTags()
		setUniverseFlag()
		playTime()
		hasCountOfItem()
		ownShipWorldId()
		isLounging()
		enableTech()
		primaryHandItem()
		warp()
		addBookmark()
		enabledTechs()
		giveBlueprint()
		hasQuest()
		serverUuid()
		startQuest()
		upgradeShip()
		equipTech()
		removeEssentialItem()
		canStartQuest()
		radioMessage()
		consumeItemWithParameter()
		makeTechUnavailable()
		consumeItem()
		confirm()
		consumeTaggedItem()
		cleanupItems()
		itemsWithTag()
		makeTechAvailable()
		worldId()
		introComplete()
		availableTechs()
		altHandItem()
		primaryHandItemTags()
		enableMission()
		playCinematic()
		hasCompletedQuest()
		setEquippedItem()
		equippedItem()
		completeMission()
		hasItemWithParameter()
		equippedTech()
		giveEssentialItem()
		giveItem()
		gender()
	}
	config = {
		getParameter()
	}
	jresize()
	table = {
		concat()
		insert()
		pack()
		move()
		sort()
		remove()
		unpack()
	}
	rawequal()
	jobject()
	status = {
		activeUniqueStatusEffectSummary()
		stat()
		resourcePercentage()
		overConsumeResource()
		addEphemeralEffects()
		resetResource()
		consumeResource()
		isResource()
		resource()
		resourceMax()
		setPersistentEffects()
		clearAllPersistentEffects()
		giveResource()
		damageTakenSince()
		resourceLocked()
		modifyResourcePercentage()
		getPersistentEffects()
		resourceNames()
		addEphemeralEffect()
		inflictedHitsSince()
		setResourcePercentage()
		setResource()
		resourcePositive()
		clearEphemeralEffects()
		addPersistentEffects()
		inflictedDamageSince()
		setResourceLocked()
		modifyResource()
		addPersistentEffect()
		statusProperty()
		removeEphemeralEffect()
		setStatusProperty()
		clearPersistentEffects()
		statPositive()
		resetAllResources()
	}
	update()
	init()
	tostring()
	type()
	select()
	tonumber()
	rawget()
	jarray()
	require()
	utf8 = {
		char()
		codepoint()
		charpattern = "[
[01:49:30.859] [Warn] 	widget = {
		setButtonOverlayImage()
		addListItem()
		getData()
		setData()
		setVisible()
		getSelectedOption()
		setProgress()
		getSliderValue()
		setText()
		setButtonImage()
		removeListItem()
		itemGridItems()
		getPosition()
		setPosition()
		setOptionEnabled()
		setOptionVisible()
		getListSelected()
		setButtonImages()
		playSound()
		getSize()
		setImageScale()
		setImageRotation()
		clearListItems()
		setSize()
		setImage()
		setListSelected()
		setButtonEnabled()
		setButtonCheckedImages()
		focus()
		getChecked()
		setSelectedOption()
		blur()
		setChecked()
		setFontColor()
		getText()
	}
	_VERSION = "Lua 5.3"
	pcall()
	pairs()
	math = {
		abs()
		atan()
		fmod()
		log()
		random()
		asin()
		sin()
		ceil()
		huge = inf
		randomseed()
		exp()
		floor()
		acos()
		pi = 3.1415926535898
		mininteger = -9223372036854775808
		sqrt()
		type()
		tan()
		rad()
		modf()
		min()
		max()
		ult()
		tointeger()
		cos()
		deg()
		maxinteger = 9223372036854775807
	}
	rawset()
	script = {
		setUpdateDelta()
		updateDt()
	}
	coroutine = {
		status()
		running()
		wrap()
		create()
		yield()
		resume()
		isyieldable()
	}
	world = {
		underground()
		entityCanDamage()
		npcQuery()
		containerAddItems()
		monsterType()
		material()
		monsterQuery()
		loungeableQuery()
		entityMoney()
		containerTakeAt()
		placeMaterial()
		objectAt()
		breathable()
		damageTiles()
		entityHealth()
		objectSpaces()
		containerConsumeAt()
		sendEntityMessage()
		isMonster()
		liquidAt()
		xwrap()
		spawnStagehand()
		containerConsume()
		collisionBlocksAlongLine()
		containerSwapItems()
		loungeableOccupied()
		platformerPathStart()
		findPlatformerPath()
		entityUniqueId()
		containerPutItemsAt()
		isTileProtected()
		time()
		containerItems()
		destroyLiquid()
		spawnLiquid()
		gravity()
		entitySpecies()
		rectTileCollision()
		containerAvailable()
		liquidAlongLine()
		farmableStage()
		entityType()
		objectQuery()
		resolvePolyCollision()
		lineTileCollision()
		pointTileCollision()
		containerStackItems()
		spawnVehicle()
		spawnMonster()
		placeMod()
		day()
		objectLineQuery()
		placeObject()
		spawnProjectile()
		tileIsOccupied()
		stagehandType()
		containerItemsCanFit()
		polyCollision()
		debugPoly()
		timeOfDay()
		getProperty()
		dayLength()
		entityHasCountOfItem()
		debugPoint()
		lineCollision()
		damageTileArea()
		containerTakeAll()
		mod()
		entityQuery()
		entityHandItemDescriptor()
		distance()
		itemDropQuery()
		setProperty()
		debugText()
		containerSwapItemsNoCombine()
		threatLevel()
		spawnNpc()
		windLevel()
		entityLineQuery()
		spawnItem()
		npcType()
		getObjectParameter()
		playerQuery()
		containerItemApply()
		containerOpen()
		nearestTo()
		polyContains()
		magnitude()
		npcLineQuery()
		entityDescription()
		entityExists()
		isNpc()
		entityPortrait()
		entityHandItem()
		containerClose()
		lightLevel()
		containerTakeNumItemsAt()
		spawnTreasure()
		entityPosition()
		pointCollision()
		rectCollision()
		entityGender()
		containerItemAt()
		findUniqueEntity()
		debugLine()
		entityDamageTeam()
		entityVelocity()
		entityAggressive()
		containerItemsFitWhere()
		containerSize()
		callScriptedEntity()
		entityName()
	}
	p()
	pane = {
		containerEntityId()
		dismiss()
		playerEntityId()
	}
	jsize()
	root = {
		assetJson()
		materialMiningSound()
		evalFunction2()
		createItem()
		itemType()
		recipesForItem()
		getMatchingTenants()
		loadVersionedJson()
		evalFunction()
		hasTech()
		treeStemDirectory()
		itemTags()
		materialFootstepSound()
		materialHealth()
		behaviorModule()
		nonEmptyRegion()
		itemConfig()
		npcPortrait()
		monsterPortrait()
		generateName()
		createBiome()
		getConfigurationPath()
		techType()
		setConfigurationPath()
		npcConfig()
		treeFoliageDirectory()
		getConfiguration()
		monsterMovementSettings()
		createTreasure()
		projectileConfig()
		isTreasurePool()
		monsterSkillParameter()
		materialPath()
		setConfiguration()
		imageSpaces()
		tenantConfig()
		imageSize()
		techConfig()
		questConfig()
		npcVariant()
		liquidStatusEffects()
		makeCurrentVersionedJson()
		projectileGravityMultiplier()
		itemHasTag()
	}
	sb = {
		makeUuid()
		interpolateSinEase()
		makeRandomSource()
		logError()
		printJson()
		staticRandomDoubleRange()
		staticRandomDouble()
		nrand()
		logInfo()
		jsonQuery()
		logWarn()
		makePerlinSource()
		setLogMap()
		print()
		staticRandomI32()
		replaceTags()
		staticRandomI32Range()
		jsonMerge()
	}
	setmetatable()
	next()
	player = {
		getItemWithParameter()
		recordEvent()
		inventoryTags()
		shipUpgrades()
		essentialItem()
		hasItem()
		setIntroComplete()
		lounge()
		species()
		altHandItemTags()
		setUniverseFlag()
		playTime()
		hasCountOfItem()
		ownShipWorldId()
		isLounging()
		enableTech()
		primaryHandItem()
		warp()
		addBookmark()
		enabledTechs()
		giveBlueprint()
		hasQuest()
		serverUuid()
		startQuest()
		upgradeShip()
		equipTech()
		removeEssentialItem()
		canStartQuest()
		radioMessage()
		consumeItemWithParameter()
		makeTechUnavailable()
		consumeItem()
		confirm()
		consumeTaggedItem()
		cleanupItems()
		itemsWithTag()
		makeTechAvailable()
		worldId()
		introComplete()
		availableTechs()
		altHandItem()
		primaryHandItemTags()
		enableMission()
		playCinematic()
		hasCompletedQuest()
		setEquippedItem()
		equippedItem()
		completeMission()
		hasItemWithParameter()
		equippedTech()
		giveEssentialItem()
		giveItem()
		gender()
	}
	config = {
		getParameter()
	}
	jresize()
	table = {
		concat()
		insert()
		pack()
		move()
		sort()
		remove()
		unpack()
	}
	rawequal()
	jobject()
	status = {
		activeUniqueStatusEffectSummary()
		stat()
		resourcePercentage()
		overConsumeResource()
		addEphemeralEffects()
		resetResource()
		consumeResource()
		isResource()
		resource()
		resourceMax()
		setPersistentEffects()
		clearAllPersistentEffects()
		giveResource()
		damageTakenSince()
		resourceLocked()
		modifyResourcePercentage()
		getPersistentEffects()
		resourceNames()
		addEphemeralEffect()
		inflictedHitsSince()
		setResourcePercentage()
		setResource()
		resourcePositive()
		clearEphemeralEffects()
		addPersistentEffects()
		inflictedDamageSince()
		setResourceLocked()
		modifyResource()
		addPersistentEffect()
		statusProperty()
		removeEphemeralEffect()
		setStatusProperty()
		clearPersistentEffects()
		statPositive()
		resetAllResources()
	}
	update()
	init()
	tostring()
	type()
	select()
	tonumber()
	rawget()
	jarray()
	require()
	utf8 = {
		char()
		codepoint()
		charpattern = "[
[01:49:32.840] [Warn] 	widget = {
		setButtonOverlayImage()
		addListItem()
		getData()
		setData()
		setVisible()
		getSelectedOption()
		setProgress()
		getSliderValue()
		setText()
		setButtonImage()
		removeListItem()
		itemGridItems()
		getPosition()
		setPosition()
		setOptionEnabled()
		setOptionVisible()
		getListSelected()
		setButtonImages()
		playSound()
		getSize()
		setImageScale()
		setImageRotation()
		clearListItems()
		setSize()
		setImage()
		setListSelected()
		setButtonEnabled()
		setButtonCheckedImages()
		focus()
		getChecked()
		setSelectedOption()
		blur()
		setChecked()
		setFontColor()
		getText()
	}
	_VERSION = "Lua 5.3"
	pcall()
	pairs()
	math = {
		abs()
		atan()
		fmod()
		log()
		random()
		asin()
		sin()
		ceil()
		huge = inf
		randomseed()
		exp()
		floor()
		acos()
		pi = 3.1415926535898
		mininteger = -9223372036854775808
		sqrt()
		type()
		tan()
		rad()
		modf()
		min()
		max()
		ult()
		tointeger()
		cos()
		deg()
		maxinteger = 9223372036854775807
	}
	rawset()
	script = {
		setUpdateDelta()
		updateDt()
	}
	coroutine = {
		status()
		running()
		wrap()
		create()
		yield()
		resume()
		isyieldable()
	}
	world = {
		underground()
		entityCanDamage()
		npcQuery()
		containerAddItems()
		monsterType()
		material()
		monsterQuery()
		loungeableQuery()
		entityMoney()
		containerTakeAt()
		placeMaterial()
		objectAt()
		breathable()
		damageTiles()
		entityHealth()
		objectSpaces()
		containerConsumeAt()
		sendEntityMessage()
		isMonster()
		liquidAt()
		xwrap()
		spawnStagehand()
		containerConsume()
		collisionBlocksAlongLine()
		containerSwapItems()
		loungeableOccupied()
		platformerPathStart()
		findPlatformerPath()
		entityUniqueId()
		containerPutItemsAt()
		isTileProtected()
		time()
		containerItems()
		destroyLiquid()
		spawnLiquid()
		gravity()
		entitySpecies()
		rectTileCollision()
		containerAvailable()
		liquidAlongLine()
		farmableStage()
		entityType()
		objectQuery()
		resolvePolyCollision()
		lineTileCollision()
		pointTileCollision()
		containerStackItems()
		spawnVehicle()
		spawnMonster()
		placeMod()
		day()
		objectLineQuery()
		placeObject()
		spawnProjectile()
		tileIsOccupied()
		stagehandType()
		containerItemsCanFit()
		polyCollision()
		debugPoly()
		timeOfDay()
		getProperty()
		dayLength()
		entityHasCountOfItem()
		debugPoint()
		lineCollision()
		damageTileArea()
		containerTakeAll()
		mod()
		entityQuery()
		entityHandItemDescriptor()
		distance()
		itemDropQuery()
		setProperty()
		debugText()
		containerSwapItemsNoCombine()
		threatLevel()
		spawnNpc()
		windLevel()
		entityLineQuery()
		spawnItem()
		npcType()
		getObjectParameter()
		playerQuery()
		containerItemApply()
		containerOpen()
		nearestTo()
		polyContains()
		magnitude()
		npcLineQuery()
		entityDescription()
		entityExists()
		isNpc()
		entityPortrait()
		entityHandItem()
		containerClose()
		lightLevel()
		containerTakeNumItemsAt()
		spawnTreasure()
		entityPosition()
		pointCollision()
		rectCollision()
		entityGender()
		containerItemAt()
		findUniqueEntity()
		debugLine()
		entityDamageTeam()
		entityVelocity()
		entityAggressive()
		containerItemsFitWhere()
		containerSize()
		callScriptedEntity()
		entityName()
	}
	p()
	pane = {
		containerEntityId()
		dismiss()
		playerEntityId()
	}
	jsize()
	root = {
		assetJson()
		materialMiningSound()
		evalFunction2()
		createItem()
		itemType()
		recipesForItem()
		getMatchingTenants()
		loadVersionedJson()
		evalFunction()
		hasTech()
		treeStemDirectory()
		itemTags()
		materialFootstepSound()
		materialHealth()
		behaviorModule()
		nonEmptyRegion()
		itemConfig()
		npcPortrait()
		monsterPortrait()
		generateName()
		createBiome()
		getConfigurationPath()
		techType()
		setConfigurationPath()
		npcConfig()
		treeFoliageDirectory()
		getConfiguration()
		monsterMovementSettings()
		createTreasure()
		projectileConfig()
		isTreasurePool()
		monsterSkillParameter()
		materialPath()
		setConfiguration()
		imageSpaces()
		tenantConfig()
		imageSize()
		techConfig()
		questConfig()
		npcVariant()
		liquidStatusEffects()
		makeCurrentVersionedJson()
		projectileGravityMultiplier()
		itemHasTag()
	}
	sb = {
		makeUuid()
		interpolateSinEase()
		makeRandomSource()
		logError()
		printJson()
		staticRandomDoubleRange()
		staticRandomDouble()
		nrand()
		logInfo()
		jsonQuery()
		logWarn()
		makePerlinSource()
		setLogMap()
		print()
		staticRandomI32()
		replaceTags()
		staticRandomI32Range()
		jsonMerge()
	}
	setmetatable()
	next()
	player = {
		getItemWithParameter()
		recordEvent()
		inventoryTags()
		shipUpgrades()
		essentialItem()
		hasItem()
		setIntroComplete()
		lounge()
		species()
		altHandItemTags()
		setUniverseFlag()
		playTime()
		hasCountOfItem()
		ownShipWorldId()
		isLounging()
		enableTech()
		primaryHandItem()
		warp()
		addBookmark()
		enabledTechs()
		giveBlueprint()
		hasQuest()
		serverUuid()
		startQuest()
		upgradeShip()
		equipTech()
		removeEssentialItem()
		canStartQuest()
		radioMessage()
		consumeItemWithParameter()
		makeTechUnavailable()
		consumeItem()
		confirm()
		consumeTaggedItem()
		cleanupItems()
		itemsWithTag()
		makeTechAvailable()
		worldId()
		introComplete()
		availableTechs()
		altHandItem()
		primaryHandItemTags()
		enableMission()
		playCinematic()
		hasCompletedQuest()
		setEquippedItem()
		equippedItem()
		completeMission()
		hasItemWithParameter()
		equippedTech()
		giveEssentialItem()
		giveItem()
		gender()
	}
	config = {
		getParameter()
	}
	jresize()
	table = {
		concat()
		insert()
		pack()
		move()
		sort()
		remove()
		unpack()
	}
	rawequal()
	jobject()
	status = {
		activeUniqueStatusEffectSummary()
		stat()
		resourcePercentage()
		overConsumeResource()
		addEphemeralEffects()
		resetResource()
		consumeResource()
		isResource()
		resource()
		resourceMax()
		setPersistentEffects()
		clearAllPersistentEffects()
		giveResource()
		damageTakenSince()
		resourceLocked()
		modifyResourcePercentage()
		getPersistentEffects()
		resourceNames()
		addEphemeralEffect()
		inflictedHitsSince()
		setResourcePercentage()
		setResource()
		resourcePositive()
		clearEphemeralEffects()
		addPersistentEffects()
		inflictedDamageSince()
		setResourceLocked()
		modifyResource()
		addPersistentEffect()
		statusProperty()
		removeEphemeralEffect()
		setStatusProperty()
		clearPersistentEffects()
		statPositive()
		resetAllResources()
	}
	update()
	init()
	tostring()
	type()
	select()
	tonumber()
	rawget()
	jarray()
	require()
	utf8 = {
		char()
		codepoint()
		charpattern = "[
[01:49:33.841] [Warn] 	widget = {
		setButtonOverlayImage()
		addListItem()
		getData()
		setData()
		setVisible()
		getSelectedOption()
		setProgress()
		getSliderValue()
		setText()
		setButtonImage()
		removeListItem()
		itemGridItems()
		getPosition()
		setPosition()
		setOptionEnabled()
		setOptionVisible()
		getListSelected()
		setButtonImages()
		playSound()
		getSize()
		setImageScale()
		setImageRotation()
		clearListItems()
		setSize()
		setImage()
		setListSelected()
		setButtonEnabled()
		setButtonCheckedImages()
		focus()
		getChecked()
		setSelectedOption()
		blur()
		setChecked()
		setFontColor()
		getText()
	}
	_VERSION = "Lua 5.3"
	pcall()
	pairs()
	math = {
		abs()
		atan()
		fmod()
		log()
		random()
		asin()
		sin()
		ceil()
		huge = inf
		randomseed()
		exp()
		floor()
		acos()
		pi = 3.1415926535898
		mininteger = -9223372036854775808
		sqrt()
		type()
		tan()
		rad()
		modf()
		min()
		max()
		ult()
		tointeger()
		cos()
		deg()
		maxinteger = 9223372036854775807
	}
	rawset()
	script = {
		setUpdateDelta()
		updateDt()
	}
	coroutine = {
		status()
		running()
		wrap()
		create()
		yield()
		resume()
		isyieldable()
	}
	world = {
		underground()
		entityCanDamage()
		npcQuery()
		containerAddItems()
		monsterType()
		material()
		monsterQuery()
		loungeableQuery()
		entityMoney()
		containerTakeAt()
		placeMaterial()
		objectAt()
		breathable()
		damageTiles()
		entityHealth()
		objectSpaces()
		containerConsumeAt()
		sendEntityMessage()
		isMonster()
		liquidAt()
		xwrap()
		spawnStagehand()
		containerConsume()
		collisionBlocksAlongLine()
		containerSwapItems()
		loungeableOccupied()
		platformerPathStart()
		findPlatformerPath()
		entityUniqueId()
		containerPutItemsAt()
		isTileProtected()
		time()
		containerItems()
		destroyLiquid()
		spawnLiquid()
		gravity()
		entitySpecies()
		rectTileCollision()
		containerAvailable()
		liquidAlongLine()
		farmableStage()
		entityType()
		objectQuery()
		resolvePolyCollision()
		lineTileCollision()
		pointTileCollision()
		containerStackItems()
		spawnVehicle()
		spawnMonster()
		placeMod()
		day()
		objectLineQuery()
		placeObject()
		spawnProjectile()
		tileIsOccupied()
		stagehandType()
		containerItemsCanFit()
		polyCollision()
		debugPoly()
		timeOfDay()
		getProperty()
		dayLength()
		entityHasCountOfItem()
		debugPoint()
		lineCollision()
		damageTileArea()
		containerTakeAll()
		mod()
		entityQuery()
		entityHandItemDescriptor()
		distance()
		itemDropQuery()
		setProperty()
		debugText()
		containerSwapItemsNoCombine()
		threatLevel()
		spawnNpc()
		windLevel()
		entityLineQuery()
		spawnItem()
		npcType()
		getObjectParameter()
		playerQuery()
		containerItemApply()
		containerOpen()
		nearestTo()
		polyContains()
		magnitude()
		npcLineQuery()
		entityDescription()
		entityExists()
		isNpc()
		entityPortrait()
		entityHandItem()
		containerClose()
		lightLevel()
		containerTakeNumItemsAt()
		spawnTreasure()
		entityPosition()
		pointCollision()
		rectCollision()
		entityGender()
		containerItemAt()
		findUniqueEntity()
		debugLine()
		entityDamageTeam()
		entityVelocity()
		entityAggressive()
		containerItemsFitWhere()
		containerSize()
		callScriptedEntity()
		entityName()
	}
	p()
	pane = {
		containerEntityId()
		dismiss()
		playerEntityId()
	}
	jsize()
	root = {
		assetJson()
		materialMiningSound()
		evalFunction2()
		createItem()
		itemType()
		recipesForItem()
		getMatchingTenants()
		loadVersionedJson()
		evalFunction()
		hasTech()
		treeStemDirectory()
		itemTags()
		materialFootstepSound()
		materialHealth()
		behaviorModule()
		nonEmptyRegion()
		itemConfig()
		npcPortrait()
		monsterPortrait()
		generateName()
		createBiome()
		getConfigurationPath()
		techType()
		setConfigurationPath()
		npcConfig()
		treeFoliageDirectory()
		getConfiguration()
		monsterMovementSettings()
		createTreasure()
		projectileConfig()
		isTreasurePool()
		monsterSkillParameter()
		materialPath()
		setConfiguration()
		imageSpaces()
		tenantConfig()
		imageSize()
		techConfig()
		questConfig()
		npcVariant()
		liquidStatusEffects()
		makeCurrentVersionedJson()
		projectileGravityMultiplier()
		itemHasTag()
	}
	sb = {
		makeUuid()
		interpolateSinEase()
		makeRandomSource()
		logError()
		printJson()
		staticRandomDoubleRange()
		staticRandomDouble()
		nrand()
		logInfo()
		jsonQuery()
		logWarn()
		makePerlinSource()
		setLogMap()
		print()
		staticRandomI32()
		replaceTags()
		staticRandomI32Range()
		jsonMerge()
	}
	setmetatable()
	next()
	player = {
		getItemWithParameter()
		recordEvent()
		inventoryTags()
		shipUpgrades()
		essentialItem()
		hasItem()
		setIntroComplete()
		lounge()
		species()
		altHandItemTags()
		setUniverseFlag()
		playTime()
		hasCountOfItem()
		ownShipWorldId()
		isLounging()
		enableTech()
		primaryHandItem()
		warp()
		addBookmark()
		enabledTechs()
		giveBlueprint()
		hasQuest()
		serverUuid()
		startQuest()
		upgradeShip()
		equipTech()
		removeEssentialItem()
		canStartQuest()
		radioMessage()
		consumeItemWithParameter()
		makeTechUnavailable()
		consumeItem()
		confirm()
		consumeTaggedItem()
		cleanupItems()
		itemsWithTag()
		makeTechAvailable()
		worldId()
		introComplete()
		availableTechs()
		altHandItem()
		primaryHandItemTags()
		enableMission()
		playCinematic()
		hasCompletedQuest()
		setEquippedItem()
		equippedItem()
		completeMission()
		hasItemWithParameter()
		equippedTech()
		giveEssentialItem()
		giveItem()
		gender()
	}
	config = {
		getParameter()
	}
	jresize()
	table = {
		concat()
		insert()
		pack()
		move()
		sort()
		remove()
		unpack()
	}
	rawequal()
	jobject()
	status = {
		activeUniqueStatusEffectSummary()
		stat()
		resourcePercentage()
		overConsumeResource()
		addEphemeralEffects()
		resetResource()
		consumeResource()
		isResource()
		resource()
		resourceMax()
		setPersistentEffects()
		clearAllPersistentEffects()
		giveResource()
		damageTakenSince()
		resourceLocked()
		modifyResourcePercentage()
		getPersistentEffects()
		resourceNames()
		addEphemeralEffect()
		inflictedHitsSince()
		setResourcePercentage()
		setResource()
		resourcePositive()
		clearEphemeralEffects()
		addPersistentEffects()
		inflictedDamageSince()
		setResourceLocked()
		modifyResource()
		addPersistentEffect()
		statusProperty()
		removeEphemeralEffect()
		setStatusProperty()
		clearPersistentEffects()
		statPositive()
		resetAllResources()
	}
	update()
	init()
	tostring()
	type()
	select()
	tonumber()
	rawget()
	jarray()
	require()
	utf8 = {
		char()
		codepoint()
		charpattern = "[
[01:49:35.688] [Warn] 	widget = {
		setButtonOverlayImage()
		addListItem()
		getData()
		setData()
		setVisible()
		getSelectedOption()
		setProgress()
		getSliderValue()
		setText()
		setButtonImage()
		removeListItem()
		itemGridItems()
		getPosition()
		setPosition()
		setOptionEnabled()
		setOptionVisible()
		getListSelected()
		setButtonImages()
		playSound()
		getSize()
		setImageScale()
		setImageRotation()
		clearListItems()
		setSize()
		setImage()
		setListSelected()
		setButtonEnabled()
		setButtonCheckedImages()
		focus()
		getChecked()
		setSelectedOption()
		blur()
		setChecked()
		setFontColor()
		getText()
	}
	_VERSION = "Lua 5.3"
	pcall()
	pairs()
	math = {
		abs()
		atan()
		fmod()
		log()
		random()
		asin()
		sin()
		ceil()
		huge = inf
		randomseed()
		exp()
		floor()
		acos()
		pi = 3.1415926535898
		mininteger = -9223372036854775808
		sqrt()
		type()
		tan()
		rad()
		modf()
		min()
		max()
		ult()
		tointeger()
		cos()
		deg()
		maxinteger = 9223372036854775807
	}
	rawset()
	script = {
		setUpdateDelta()
		updateDt()
	}
	coroutine = {
		status()
		running()
		wrap()
		create()
		yield()
		resume()
		isyieldable()
	}
	world = {
		underground()
		entityCanDamage()
		npcQuery()
		containerAddItems()
		monsterType()
		material()
		monsterQuery()
		loungeableQuery()
		entityMoney()
		containerTakeAt()
		placeMaterial()
		objectAt()
		breathable()
		damageTiles()
		entityHealth()
		objectSpaces()
		containerConsumeAt()
		sendEntityMessage()
		isMonster()
		liquidAt()
		xwrap()
		spawnStagehand()
		containerConsume()
		collisionBlocksAlongLine()
		containerSwapItems()
		loungeableOccupied()
		platformerPathStart()
		findPlatformerPath()
		entityUniqueId()
		containerPutItemsAt()
		isTileProtected()
		time()
		containerItems()
		destroyLiquid()
		spawnLiquid()
		gravity()
		entitySpecies()
		rectTileCollision()
		containerAvailable()
		liquidAlongLine()
		farmableStage()
		entityType()
		objectQuery()
		resolvePolyCollision()
		lineTileCollision()
		pointTileCollision()
		containerStackItems()
		spawnVehicle()
		spawnMonster()
		placeMod()
		day()
		objectLineQuery()
		placeObject()
		spawnProjectile()
		tileIsOccupied()
		stagehandType()
		containerItemsCanFit()
		polyCollision()
		debugPoly()
		timeOfDay()
		getProperty()
		dayLength()
		entityHasCountOfItem()
		debugPoint()
		lineCollision()
		damageTileArea()
		containerTakeAll()
		mod()
		entityQuery()
		entityHandItemDescriptor()
		distance()
		itemDropQuery()
		setProperty()
		debugText()
		containerSwapItemsNoCombine()
		threatLevel()
		spawnNpc()
		windLevel()
		entityLineQuery()
		spawnItem()
		npcType()
		getObjectParameter()
		playerQuery()
		containerItemApply()
		containerOpen()
		nearestTo()
		polyContains()
		magnitude()
		npcLineQuery()
		entityDescription()
		entityExists()
		isNpc()
		entityPortrait()
		entityHandItem()
		containerClose()
		lightLevel()
		containerTakeNumItemsAt()
		spawnTreasure()
		entityPosition()
		pointCollision()
		rectCollision()
		entityGender()
		containerItemAt()
		findUniqueEntity()
		debugLine()
		entityDamageTeam()
		entityVelocity()
		entityAggressive()
		containerItemsFitWhere()
		containerSize()
		callScriptedEntity()
		entityName()
	}
	p()
	pane = {
		containerEntityId()
		dismiss()
		playerEntityId()
	}
	jsize()
	root = {
		assetJson()
		materialMiningSound()
		evalFunction2()
		createItem()
		itemType()
		recipesForItem()
		getMatchingTenants()
		loadVersionedJson()
		evalFunction()
		hasTech()
		treeStemDirectory()
		itemTags()
		materialFootstepSound()
		materialHealth()
		behaviorModule()
		nonEmptyRegion()
		itemConfig()
		npcPortrait()
		monsterPortrait()
		generateName()
		createBiome()
		getConfigurationPath()
		techType()
		setConfigurationPath()
		npcConfig()
		treeFoliageDirectory()
		getConfiguration()
		monsterMovementSettings()
		createTreasure()
		projectileConfig()
		isTreasurePool()
		monsterSkillParameter()
		materialPath()
		setConfiguration()
		imageSpaces()
		tenantConfig()
		imageSize()
		techConfig()
		questConfig()
		npcVariant()
		liquidStatusEffects()
		makeCurrentVersionedJson()
		projectileGravityMultiplier()
		itemHasTag()
	}
	sb = {
		makeUuid()
		interpolateSinEase()
		makeRandomSource()
		logError()
		printJson()
		staticRandomDoubleRange()
		staticRandomDouble()
		nrand()
		logInfo()
		jsonQuery()
		logWarn()
		makePerlinSource()
		setLogMap()
		print()
		staticRandomI32()
		replaceTags()
		staticRandomI32Range()
		jsonMerge()
	}
	setmetatable()
	next()
	player = {
		getItemWithParameter()
		recordEvent()
		inventoryTags()
		shipUpgrades()
		essentialItem()
		hasItem()
		setIntroComplete()
		lounge()
		species()
		altHandItemTags()
		setUniverseFlag()
		playTime()
		hasCountOfItem()
		ownShipWorldId()
		isLounging()
		enableTech()
		primaryHandItem()
		warp()
		addBookmark()
		enabledTechs()
		giveBlueprint()
		hasQuest()
		serverUuid()
		startQuest()
		upgradeShip()
		equipTech()
		removeEssentialItem()
		canStartQuest()
		radioMessage()
		consumeItemWithParameter()
		makeTechUnavailable()
		consumeItem()
		confirm()
		consumeTaggedItem()
		cleanupItems()
		itemsWithTag()
		makeTechAvailable()
		worldId()
		introComplete()
		availableTechs()
		altHandItem()
		primaryHandItemTags()
		enableMission()
		playCinematic()
		hasCompletedQuest()
		setEquippedItem()
		equippedItem()
		completeMission()
		hasItemWithParameter()
		equippedTech()
		giveEssentialItem()
		giveItem()
		gender()
	}
	config = {
		getParameter()
	}
	jresize()
	table = {
		concat()
		insert()
		pack()
		move()
		sort()
		remove()
		unpack()
	}
	rawequal()
	jobject()
	status = {
		activeUniqueStatusEffectSummary()
		stat()
		resourcePercentage()
		overConsumeResource()
		addEphemeralEffects()
		resetResource()
		consumeResource()
		isResource()
		resource()
		resourceMax()
		setPersistentEffects()
		clearAllPersistentEffects()
		giveResource()
		damageTakenSince()
		resourceLocked()
		modifyResourcePercentage()
		getPersistentEffects()
		resourceNames()
		addEphemeralEffect()
		inflictedHitsSince()
		setResourcePercentage()
		setResource()
		resourcePositive()
		clearEphemeralEffects()
		addPersistentEffects()
		inflictedDamageSince()
		setResourceLocked()
		modifyResource()
		addPersistentEffect()
		statusProperty()
		removeEphemeralEffect()
		setStatusProperty()
		clearPersistentEffects()
		statPositive()
		resetAllResources()
	}
	update()
	init()
	tostring()
	type()
	select()
	tonumber()
	rawget()
	jarray()
	require()
	utf8 = {
		char()
		codepoint()
		charpattern = "[
[01:49:53.103] [Info] UniverseServer: Loading client ship world ClientShipWorld:40d0c64bbadbfcac62e62a636f4f2308
[01:49:54.020] [Info] UniverseServer: Warping player 1 to ClientShipWorld:40d0c64bbadbfcac62e62a636f4f2308
[01:49:54.109] [Info] UniverseServer: Stopping idle world CelestialWorld:-549420991:-174072043:5760844:8
[01:49:54.183] [Info] Client received world stop packet, leaving: Removed
[01:50:37.562] [Info] UniverseServer: Flying player 1 ship to starter world -549421000:-174072045:85931705:2
[01:50:37.563] [Info] UniverseServer: Creating celestial world -549421000:-174072045:85931705:2
[01:50:37.773] [Info] Placing dungeon hylotloceancity
[01:50:37.920] [Info] Forcing generation of dungeon hylotloceancity
[01:50:37.939] [Info] Placing dungeon at (75, 850)
[01:50:38.789] [Warn] Failed to place dungeon object: underwaterlight direction: 1 position: (313, 826)
[01:50:38.789] [Warn] Failed to place dungeon object: underwaterlight direction: 1 position: (398, 826)
[01:50:38.797] [Warn] Failed to place dungeon object: underwaterlight direction: 1 position: (313, 843)
[01:50:38.797] [Warn] Failed to place dungeon object: underwaterlight direction: 1 position: (398, 843)
[01:50:38.824] [Warn] Failed to place dungeon object: vaseclassicmedium2 direction: 1 position: (386, 857)
[01:50:38.872] [Warn] Failed to place dungeon object: underwaterlight direction: 1 position: (313, 870)
[01:50:38.878] [Warn] Failed to place dungeon object: underwaterlight direction: 1 position: (398, 870)
[01:50:38.886] [Warn] Failed to place dungeon object: underwaterlight direction: 1 position: (228, 871)
[01:50:38.888] [Warn] Failed to place dungeon object: underwaterlight direction: 1 position: (483, 871)
[01:50:38.934] [Warn] Failed to place dungeon object: underwaterlight direction: 1 position: (228, 888)
[01:50:38.934] [Warn] Failed to place dungeon object: underwaterlight direction: 1 position: (313, 888)
[01:50:38.934] [Warn] Failed to place dungeon object: underwaterlight direction: 1 position: (398, 888)
[01:50:38.934] [Warn] Failed to place dungeon object: underwaterlight direction: 1 position: (483, 888)
[01:50:39.011] [Warn] Failed to place dungeon object: underwaterlight direction: 1 position: (313, 915)
[01:50:39.012] [Warn] Failed to place dungeon object: underwaterlight direction: 1 position: (483, 915)
[01:50:39.015] [Warn] Failed to place dungeon object: underwaterlight direction: 1 position: (228, 916)
[01:50:39.018] [Warn] Failed to place dungeon object: underwaterlight direction: 1 position: (398, 916)
[01:50:39.021] [Warn] Failed to place dungeon object: hylotlcalligraphy2 direction: 1 position: (200, 917)
[01:50:39.110] [Warn] Failed to place dungeon object: underwaterlight direction: 1 position: (228, 933)
[01:50:39.110] [Warn] Failed to place dungeon object: underwaterlight direction: 1 position: (313, 933)
[01:50:39.113] [Warn] Failed to place dungeon object: underwaterlight direction: 1 position: (398, 933)
[01:50:39.113] [Warn] Failed to place dungeon object: underwaterlight direction: 1 position: (483, 933)
[01:50:39.153] [Warn] Failed to place dungeon object: vaseclassicmedium2 direction: 1 position: (301, 947)
[01:50:39.175] [Warn] Failed to place dungeon object: underwaterlight direction: 1 position: (313, 960)
[01:50:39.226] [Warn] Failed to place dungeon object: underwaterlight direction: 1 position: (313, 978)
[01:50:39.246] [Warn] Failed to place dungeon object: ornatetorch direction: 0 position: (195, 994)
[01:50:39.246] [Warn] Failed to place dungeon object: ornatetorch direction: 1 position: (230, 994)
[01:50:39.246] [Warn] Failed to place dungeon object: ornatetorch direction: 0 position: (365, 994)
[01:50:39.246] [Warn] Failed to place dungeon object: ornatetorch direction: 1 position: (400, 994)
[01:50:39.246] [Warn] Failed to place dungeon object: ornatetorch direction: 0 position: (450, 994)
[01:50:39.246] [Warn] Failed to place dungeon object: ornatetorch direction: 1 position: (485, 994)
[01:50:39.631] [Info] Protected dungeonIds for world set to (0)
[01:50:39.631] [Info] Placing dungeon hylotlruinedcity
[01:50:39.710] [Info] Forcing generation of dungeon hylotlruinedcity
[01:50:39.710] [Info] Placing dungeon at (2068, 850)
[01:50:41.266] [Info] UniverseServer: Arriving ship for player 1 at -549421000:-174072045:85931705:2
[01:50:41.287] [Info] UniverseServer: Stopping idle world CelestialWorld:-549421000:-174072045:85931705:2
[01:52:24.596] [Warn] 	pcall()
	script = {
		updateDt()
		setUpdateDelta()
	}
	print()
	world = {
		objectQuery()
		time()
		entityAggressive()
		npcType()
		entityHasCountOfItem()
		polyCollision()
		rectTileCollision()
		placeMod()
		polyContains()
		callScriptedEntity()
		entityExists()
		setProperty()
		containerTakeNumItemsAt()
		containerPutItemsAt()
		lightLevel()
		underground()
		windLevel()
		placeMaterial()
		containerAvailable()
		entityCanDamage()
		spawnItem()
		isTileProtected()
		destroyLiquid()
		collisionBlocksAlongLine()
		spawnProjectile()
		gravity()
		liquidAt()
		debugText()
		resolvePolyCollision()
		mod()
		timeOfDay()
		day()
		itemDropQuery()
		spawnVehicle()
		entityHandItemDescriptor()
		spawnMonster()
		containerItemsFitWhere()
		isMonster()
		containerConsumeAt()
		damageTileArea()
		containerAddItems()
		spawnTreasure()
		placeObject()
		spawnLiquid()
		tileIsOccupied()
		containerSwapItemsNoCombine()
		dayLength()
		entityQuery()
		liquidAlongLine()
		entityGender()
		spawnNpc()
		spawnStagehand()
		lineCollision()
		containerItemAt()
		entityLineQuery()
		lineTileCollision()
		objectLineQuery()
		containerItemApply()
		playerQuery()
		entityVelocity()
		damageTiles()
		pointTileCollision()
		containerItemsCanFit()
		platformerPathStart()
		farmableStage()
		npcLineQuery()
		xwrap()
		distance()
		magnitude()
		loungeableOccupied()
		containerConsume()
		containerStackItems()
		stagehandType()
		sendEntityMessage()
		entityUniqueId()
		getObjectParameter()
		monsterType()
		isNpc()
		entityType()
		debugPoint()
		entityDescription()
		entityHandItem()
		findUniqueEntity()
		entityPosition()
		getProperty()
		debugPoly()
		objectSpaces()
		pointCollision()
		containerClose()
		loungeableQuery()
		rectCollision()
		monsterQuery()
		entityName()
		debugLine()
		nearestTo()
		entityDamageTeam()
		containerSize()
		findPlatformerPath()
		containerSwapItems()
		entityPortrait()
		objectAt()
		breathable()
		containerOpen()
		npcQuery()
		material()
		entityMoney()
		entityHealth()
		entitySpecies()
		containerTakeAll()
		threatLevel()
		containerTakeAt()
		containerItems()
	}
	coroutine = {
		create()
		isyieldable()
		status()
		resume()
		yield()
		running()
		wrap()
	}
	xpcall()
	require()
	config = {
		getParameter()
	}
	ipairs()
	root = {
		npcConfig()
		getMatchingTenants()
		assetJson()
		liquidStatusEffects()
		techType()
		evalFunction()
		generateName()
		questConfig()
		materialHealth()
		tenantConfig()
		treeFoliageDirectory()
		setConfigurationPath()
		imageSize()
		materialFootstepSound()
		itemConfig()
		imageSpaces()
		hasTech()
		projectileConfig()
		techConfig()
		projectileGravityMultiplier()
		makeCurrentVersionedJson()
		monsterSkillParameter()
		itemType()
		behaviorModule()
		nonEmptyRegion()
		treeStemDirectory()
		npcVariant()
		getConfigurationPath()
		getConfiguration()
		createItem()
		itemTags()
		npcPortrait()
		createBiome()
		isTreasurePool()
		evalFunction2()
		monsterMovementSettings()
		materialPath()
		createTreasure()
		monsterPortrait()
		recipesForItem()
		itemHasTag()
		loadVersionedJson()
		setConfiguration()
		materialMiningSound()
	}
	error()
	widget = {
		setImageRotation()
		setListSelected()
		setButtonImages()
		setFontColor()
		getSliderValue()
		setPosition()
		getSelectedOption()
		removeListItem()
		getListSelected()
		itemGridItems()
		setData()
		setVisible()
		setOptionVisible()
		addListItem()
		getPosition()
		setButtonEnabled()
		blur()
		setButtonCheckedImages()
		setOptionEnabled()
		getChecked()
		setButtonImage()
		setImageScale()
		setChecked()
		getSize()
		setImage()
		setText()
		setSize()
		playSound()
		focus()
		getText()
		clearListItems()
		setProgress()
		setSelectedOption()
		getData()
		setButtonOverlayImage()
	}
	jarray()
	next()
	jremove()
	rawlen()
	tostring()
	table = {
		concat()
		sort()
		unpack()
		insert()
		pack()
		move()
		remove()
	}
	getmetatable()
	os = {
		clock()
		difftime()
		time()
	}
	pairs()
	player = {
		hasQuest()
		gender()
		playTime()
		lounge()
		giveEssentialItem()
		shipUpgrades()
		primaryHandItem()
		setEquippedItem()
		radioMessage()
		consumeTaggedItem()
		confirm()
		enableTech()
		availableTechs()
		makeTechAvailable()
		getItemWithParameter()
		startQuest()
		addBookmark()
		worldId()
		altHandItem()
		setIntroComplete()
		hasCompletedQuest()
		equippedTech()
		recordEvent()
		completeMission()
		ownShipWorldId()
		equippedItem()
		cleanupItems()
		enableMission()
		hasCountOfItem()
		giveItem()
		essentialItem()
		altHandItemTags()
		hasItem()
		enabledTechs()
		serverUuid()
		itemsWithTag()
		primaryHandItemTags()
		giveBlueprint()
		consumeItemWithParameter()
		introComplete()
		removeEssentialItem()
		warp()
		consumeItem()
		makeTechUnavailable()
		canStartQuest()
		hasItemWithParameter()
		setUniverseFlag()
		isLounging()
		playCinematic()
		species()
		upgradeShip()
		equipTech()
		inventoryTags()
	}
	jresize()
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	status = {
		resourceNames()
		setPersistentEffects()
		removeEphemeralEffect()
		activeUniqueStatusEffectSummary()
		resourceLocked()
		resetAllResources()
		getPersistentEffects()
		giveResource()
		addPersistentEffects()
		consumeResource()
		modifyResource()
		statPositive()
		setStatusProperty()
		stat()
		clearAllPersistentEffects()
		inflictedHitsSince()
		resourcePercentage()
		modifyResourcePercentage()
		resourceMax()
		setResourceLocked()
		overConsumeResource()
		addEphemeralEffects()
		isResource()
		clearPersistentEffects()
		addPersistentEffect()
		inflictedDamageSince()
		resource()
		setResource()
		damageTakenSince()
		clearEphemeralEffects()
		resetResource()
		statusProperty()
		addEphemeralEffect()
		resourcePositive()
		setResourcePercentage()
	}
	sb = {
		printJson()
		jsonQuery()
		makePerlinSource()
		print()
		setLogMap()
		nrand()
		staticRandomI32()
		logError()
		logWarn()
		jsonMerge()
		staticRandomI32Range()
		logInfo()
		staticRandomDouble()
		staticRandomDoubleRange()
		makeRandomSource()
		interpolateSinEase()
		replaceTags()
		makeUuid()
	}
	p()
	update()
	init()
	setmetatable()
	rawset()
	self = {
	}
	select()
	ic = {
		searchButton()
		quickstack()
		amountEquipped()
		lock()
		sort()
		renameThis()
		searchBox()
		stripColor()
		getQuality()
		itemConfig()
		sort_relative()
		giveBack()
		checkStack()
		renameButton()
		sortFunc()
		clientVersion = 1
		itemAmount()
	}
	rawequal()
	jsize()
	tonumber()
	utf8 = {
		len()
		char()
		codepoint()
		offset()
		charpattern = "[
[01:52:32.108] [Warn] 	pcall()
	script = {
		updateDt()
		setUpdateDelta()
	}
	print()
	world = {
		objectQuery()
		time()
		entityAggressive()
		npcType()
		entityHasCountOfItem()
		polyCollision()
		rectTileCollision()
		placeMod()
		polyContains()
		callScriptedEntity()
		entityExists()
		setProperty()
		containerTakeNumItemsAt()
		containerPutItemsAt()
		lightLevel()
		underground()
		windLevel()
		placeMaterial()
		containerAvailable()
		entityCanDamage()
		spawnItem()
		isTileProtected()
		destroyLiquid()
		collisionBlocksAlongLine()
		spawnProjectile()
		gravity()
		liquidAt()
		debugText()
		resolvePolyCollision()
		mod()
		timeOfDay()
		day()
		itemDropQuery()
		spawnVehicle()
		entityHandItemDescriptor()
		spawnMonster()
		containerItemsFitWhere()
		isMonster()
		containerConsumeAt()
		damageTileArea()
		containerAddItems()
		spawnTreasure()
		placeObject()
		spawnLiquid()
		tileIsOccupied()
		containerSwapItemsNoCombine()
		dayLength()
		entityQuery()
		liquidAlongLine()
		entityGender()
		spawnNpc()
		spawnStagehand()
		lineCollision()
		containerItemAt()
		entityLineQuery()
		lineTileCollision()
		objectLineQuery()
		containerItemApply()
		playerQuery()
		entityVelocity()
		damageTiles()
		pointTileCollision()
		containerItemsCanFit()
		platformerPathStart()
		farmableStage()
		npcLineQuery()
		xwrap()
		distance()
		magnitude()
		loungeableOccupied()
		containerConsume()
		containerStackItems()
		stagehandType()
		sendEntityMessage()
		entityUniqueId()
		getObjectParameter()
		monsterType()
		isNpc()
		entityType()
		debugPoint()
		entityDescription()
		entityHandItem()
		findUniqueEntity()
		entityPosition()
		getProperty()
		debugPoly()
		objectSpaces()
		pointCollision()
		containerClose()
		loungeableQuery()
		rectCollision()
		monsterQuery()
		entityName()
		debugLine()
		nearestTo()
		entityDamageTeam()
		containerSize()
		findPlatformerPath()
		containerSwapItems()
		entityPortrait()
		objectAt()
		breathable()
		containerOpen()
		npcQuery()
		material()
		entityMoney()
		entityHealth()
		entitySpecies()
		containerTakeAll()
		threatLevel()
		containerTakeAt()
		containerItems()
	}
	coroutine = {
		create()
		isyieldable()
		status()
		resume()
		yield()
		running()
		wrap()
	}
	xpcall()
	require()
	config = {
		getParameter()
	}
	ipairs()
	root = {
		npcConfig()
		getMatchingTenants()
		assetJson()
		liquidStatusEffects()
		techType()
		evalFunction()
		generateName()
		questConfig()
		materialHealth()
		tenantConfig()
		treeFoliageDirectory()
		setConfigurationPath()
		imageSize()
		materialFootstepSound()
		itemConfig()
		imageSpaces()
		hasTech()
		projectileConfig()
		techConfig()
		projectileGravityMultiplier()
		makeCurrentVersionedJson()
		monsterSkillParameter()
		itemType()
		behaviorModule()
		nonEmptyRegion()
		treeStemDirectory()
		npcVariant()
		getConfigurationPath()
		getConfiguration()
		createItem()
		itemTags()
		npcPortrait()
		createBiome()
		isTreasurePool()
		evalFunction2()
		monsterMovementSettings()
		materialPath()
		createTreasure()
		monsterPortrait()
		recipesForItem()
		itemHasTag()
		loadVersionedJson()
		setConfiguration()
		materialMiningSound()
	}
	error()
	widget = {
		setImageRotation()
		setListSelected()
		setButtonImages()
		setFontColor()
		getSliderValue()
		setPosition()
		getSelectedOption()
		removeListItem()
		getListSelected()
		itemGridItems()
		setData()
		setVisible()
		setOptionVisible()
		addListItem()
		getPosition()
		setButtonEnabled()
		blur()
		setButtonCheckedImages()
		setOptionEnabled()
		getChecked()
		setButtonImage()
		setImageScale()
		setChecked()
		getSize()
		setImage()
		setText()
		setSize()
		playSound()
		focus()
		getText()
		clearListItems()
		setProgress()
		setSelectedOption()
		getData()
		setButtonOverlayImage()
	}
	jarray()
	next()
	jremove()
	rawlen()
	tostring()
	table = {
		concat()
		sort()
		unpack()
		insert()
		pack()
		move()
		remove()
	}
	getmetatable()
	os = {
		clock()
		difftime()
		time()
	}
	pairs()
	player = {
		hasQuest()
		gender()
		playTime()
		lounge()
		giveEssentialItem()
		shipUpgrades()
		primaryHandItem()
		setEquippedItem()
		radioMessage()
		consumeTaggedItem()
		confirm()
		enableTech()
		availableTechs()
		makeTechAvailable()
		getItemWithParameter()
		startQuest()
		addBookmark()
		worldId()
		altHandItem()
		setIntroComplete()
		hasCompletedQuest()
		equippedTech()
		recordEvent()
		completeMission()
		ownShipWorldId()
		equippedItem()
		cleanupItems()
		enableMission()
		hasCountOfItem()
		giveItem()
		essentialItem()
		altHandItemTags()
		hasItem()
		enabledTechs()
		serverUuid()
		itemsWithTag()
		primaryHandItemTags()
		giveBlueprint()
		consumeItemWithParameter()
		introComplete()
		removeEssentialItem()
		warp()
		consumeItem()
		makeTechUnavailable()
		canStartQuest()
		hasItemWithParameter()
		setUniverseFlag()
		isLounging()
		playCinematic()
		species()
		upgradeShip()
		equipTech()
		inventoryTags()
	}
	jresize()
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	status = {
		resourceNames()
		setPersistentEffects()
		removeEphemeralEffect()
		activeUniqueStatusEffectSummary()
		resourceLocked()
		resetAllResources()
		getPersistentEffects()
		giveResource()
		addPersistentEffects()
		consumeResource()
		modifyResource()
		statPositive()
		setStatusProperty()
		stat()
		clearAllPersistentEffects()
		inflictedHitsSince()
		resourcePercentage()
		modifyResourcePercentage()
		resourceMax()
		setResourceLocked()
		overConsumeResource()
		addEphemeralEffects()
		isResource()
		clearPersistentEffects()
		addPersistentEffect()
		inflictedDamageSince()
		resource()
		setResource()
		damageTakenSince()
		clearEphemeralEffects()
		resetResource()
		statusProperty()
		addEphemeralEffect()
		resourcePositive()
		setResourcePercentage()
	}
	sb = {
		printJson()
		jsonQuery()
		makePerlinSource()
		print()
		setLogMap()
		nrand()
		staticRandomI32()
		logError()
		logWarn()
		jsonMerge()
		staticRandomI32Range()
		logInfo()
		staticRandomDouble()
		staticRandomDoubleRange()
		makeRandomSource()
		interpolateSinEase()
		replaceTags()
		makeUuid()
	}
	p()
	update()
	init()
	setmetatable()
	rawset()
	self = {
	}
	select()
	ic = {
		searchButton()
		quickstack()
		amountEquipped()
		lock()
		sort()
		renameThis()
		searchBox()
		stripColor()
		getQuality()
		itemConfig()
		sort_relative()
		giveBack()
		checkStack()
		renameButton()
		sortFunc()
		clientVersion = 1
		itemAmount()
	}
	rawequal()
	jsize()
	tonumber()
	utf8 = {
		len()
		char()
		codepoint()
		offset()
		charpattern = "[
[01:52:45.793] [Warn] 	pcall()
	script = {
		updateDt()
		setUpdateDelta()
	}
	print()
	world = {
		objectQuery()
		time()
		entityAggressive()
		npcType()
		entityHasCountOfItem()
		polyCollision()
		rectTileCollision()
		placeMod()
		polyContains()
		callScriptedEntity()
		entityExists()
		setProperty()
		containerTakeNumItemsAt()
		containerPutItemsAt()
		lightLevel()
		underground()
		windLevel()
		placeMaterial()
		containerAvailable()
		entityCanDamage()
		spawnItem()
		isTileProtected()
		destroyLiquid()
		collisionBlocksAlongLine()
		spawnProjectile()
		gravity()
		liquidAt()
		debugText()
		resolvePolyCollision()
		mod()
		timeOfDay()
		day()
		itemDropQuery()
		spawnVehicle()
		entityHandItemDescriptor()
		spawnMonster()
		containerItemsFitWhere()
		isMonster()
		containerConsumeAt()
		damageTileArea()
		containerAddItems()
		spawnTreasure()
		placeObject()
		spawnLiquid()
		tileIsOccupied()
		containerSwapItemsNoCombine()
		dayLength()
		entityQuery()
		liquidAlongLine()
		entityGender()
		spawnNpc()
		spawnStagehand()
		lineCollision()
		containerItemAt()
		entityLineQuery()
		lineTileCollision()
		objectLineQuery()
		containerItemApply()
		playerQuery()
		entityVelocity()
		damageTiles()
		pointTileCollision()
		containerItemsCanFit()
		platformerPathStart()
		farmableStage()
		npcLineQuery()
		xwrap()
		distance()
		magnitude()
		loungeableOccupied()
		containerConsume()
		containerStackItems()
		stagehandType()
		sendEntityMessage()
		entityUniqueId()
		getObjectParameter()
		monsterType()
		isNpc()
		entityType()
		debugPoint()
		entityDescription()
		entityHandItem()
		findUniqueEntity()
		entityPosition()
		getProperty()
		debugPoly()
		objectSpaces()
		pointCollision()
		containerClose()
		loungeableQuery()
		rectCollision()
		monsterQuery()
		entityName()
		debugLine()
		nearestTo()
		entityDamageTeam()
		containerSize()
		findPlatformerPath()
		containerSwapItems()
		entityPortrait()
		objectAt()
		breathable()
		containerOpen()
		npcQuery()
		material()
		entityMoney()
		entityHealth()
		entitySpecies()
		containerTakeAll()
		threatLevel()
		containerTakeAt()
		containerItems()
	}
	coroutine = {
		create()
		isyieldable()
		status()
		resume()
		yield()
		running()
		wrap()
	}
	xpcall()
	require()
	config = {
		getParameter()
	}
	ipairs()
	root = {
		npcConfig()
		getMatchingTenants()
		assetJson()
		liquidStatusEffects()
		techType()
		evalFunction()
		generateName()
		questConfig()
		materialHealth()
		tenantConfig()
		treeFoliageDirectory()
		setConfigurationPath()
		imageSize()
		materialFootstepSound()
		itemConfig()
		imageSpaces()
		hasTech()
		projectileConfig()
		techConfig()
		projectileGravityMultiplier()
		makeCurrentVersionedJson()
		monsterSkillParameter()
		itemType()
		behaviorModule()
		nonEmptyRegion()
		treeStemDirectory()
		npcVariant()
		getConfigurationPath()
		getConfiguration()
		createItem()
		itemTags()
		npcPortrait()
		createBiome()
		isTreasurePool()
		evalFunction2()
		monsterMovementSettings()
		materialPath()
		createTreasure()
		monsterPortrait()
		recipesForItem()
		itemHasTag()
		loadVersionedJson()
		setConfiguration()
		materialMiningSound()
	}
	error()
	widget = {
		setImageRotation()
		setListSelected()
		setButtonImages()
		setFontColor()
		getSliderValue()
		setPosition()
		getSelectedOption()
		removeListItem()
		getListSelected()
		itemGridItems()
		setData()
		setVisible()
		setOptionVisible()
		addListItem()
		getPosition()
		setButtonEnabled()
		blur()
		setButtonCheckedImages()
		setOptionEnabled()
		getChecked()
		setButtonImage()
		setImageScale()
		setChecked()
		getSize()
		setImage()
		setText()
		setSize()
		playSound()
		focus()
		getText()
		clearListItems()
		setProgress()
		setSelectedOption()
		getData()
		setButtonOverlayImage()
	}
	jarray()
	next()
	jremove()
	rawlen()
	tostring()
	table = {
		concat()
		sort()
		unpack()
		insert()
		pack()
		move()
		remove()
	}
	getmetatable()
	os = {
		clock()
		difftime()
		time()
	}
	pairs()
	player = {
		hasQuest()
		gender()
		playTime()
		lounge()
		giveEssentialItem()
		shipUpgrades()
		primaryHandItem()
		setEquippedItem()
		radioMessage()
		consumeTaggedItem()
		confirm()
		enableTech()
		availableTechs()
		makeTechAvailable()
		getItemWithParameter()
		startQuest()
		addBookmark()
		worldId()
		altHandItem()
		setIntroComplete()
		hasCompletedQuest()
		equippedTech()
		recordEvent()
		completeMission()
		ownShipWorldId()
		equippedItem()
		cleanupItems()
		enableMission()
		hasCountOfItem()
		giveItem()
		essentialItem()
		altHandItemTags()
		hasItem()
		enabledTechs()
		serverUuid()
		itemsWithTag()
		primaryHandItemTags()
		giveBlueprint()
		consumeItemWithParameter()
		introComplete()
		removeEssentialItem()
		warp()
		consumeItem()
		makeTechUnavailable()
		canStartQuest()
		hasItemWithParameter()
		setUniverseFlag()
		isLounging()
		playCinematic()
		species()
		upgradeShip()
		equipTech()
		inventoryTags()
	}
	jresize()
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	status = {
		resourceNames()
		setPersistentEffects()
		removeEphemeralEffect()
		activeUniqueStatusEffectSummary()
		resourceLocked()
		resetAllResources()
		getPersistentEffects()
		giveResource()
		addPersistentEffects()
		consumeResource()
		modifyResource()
		statPositive()
		setStatusProperty()
		stat()
		clearAllPersistentEffects()
		inflictedHitsSince()
		resourcePercentage()
		modifyResourcePercentage()
		resourceMax()
		setResourceLocked()
		overConsumeResource()
		addEphemeralEffects()
		isResource()
		clearPersistentEffects()
		addPersistentEffect()
		inflictedDamageSince()
		resource()
		setResource()
		damageTakenSince()
		clearEphemeralEffects()
		resetResource()
		statusProperty()
		addEphemeralEffect()
		resourcePositive()
		setResourcePercentage()
	}
	sb = {
		printJson()
		jsonQuery()
		makePerlinSource()
		print()
		setLogMap()
		nrand()
		staticRandomI32()
		logError()
		logWarn()
		jsonMerge()
		staticRandomI32Range()
		logInfo()
		staticRandomDouble()
		staticRandomDoubleRange()
		makeRandomSource()
		interpolateSinEase()
		replaceTags()
		makeUuid()
	}
	p()
	update()
	init()
	setmetatable()
	rawset()
	self = {
	}
	select()
	ic = {
		searchButton()
		quickstack()
		amountEquipped()
		lock()
		sort()
		renameThis()
		searchBox()
		stripColor()
		getQuality()
		itemConfig()
		sort_relative()
		giveBack()
		checkStack()
		renameButton()
		sortFunc()
		clientVersion = 1
		itemAmount()
	}
	rawequal()
	jsize()
	tonumber()
	utf8 = {
		len()
		char()
		codepoint()
		offset()
		charpattern = "[
[01:52:47.007] [Warn] 	pcall()
	script = {
		updateDt()
		setUpdateDelta()
	}
	print()
	world = {
		objectQuery()
		time()
		entityAggressive()
		npcType()
		entityHasCountOfItem()
		polyCollision()
		rectTileCollision()
		placeMod()
		polyContains()
		callScriptedEntity()
		entityExists()
		setProperty()
		containerTakeNumItemsAt()
		containerPutItemsAt()
		lightLevel()
		underground()
		windLevel()
		placeMaterial()
		containerAvailable()
		entityCanDamage()
		spawnItem()
		isTileProtected()
		destroyLiquid()
		collisionBlocksAlongLine()
		spawnProjectile()
		gravity()
		liquidAt()
		debugText()
		resolvePolyCollision()
		mod()
		timeOfDay()
		day()
		itemDropQuery()
		spawnVehicle()
		entityHandItemDescriptor()
		spawnMonster()
		containerItemsFitWhere()
		isMonster()
		containerConsumeAt()
		damageTileArea()
		containerAddItems()
		spawnTreasure()
		placeObject()
		spawnLiquid()
		tileIsOccupied()
		containerSwapItemsNoCombine()
		dayLength()
		entityQuery()
		liquidAlongLine()
		entityGender()
		spawnNpc()
		spawnStagehand()
		lineCollision()
		containerItemAt()
		entityLineQuery()
		lineTileCollision()
		objectLineQuery()
		containerItemApply()
		playerQuery()
		entityVelocity()
		damageTiles()
		pointTileCollision()
		containerItemsCanFit()
		platformerPathStart()
		farmableStage()
		npcLineQuery()
		xwrap()
		distance()
		magnitude()
		loungeableOccupied()
		containerConsume()
		containerStackItems()
		stagehandType()
		sendEntityMessage()
		entityUniqueId()
		getObjectParameter()
		monsterType()
		isNpc()
		entityType()
		debugPoint()
		entityDescription()
		entityHandItem()
		findUniqueEntity()
		entityPosition()
		getProperty()
		debugPoly()
		objectSpaces()
		pointCollision()
		containerClose()
		loungeableQuery()
		rectCollision()
		monsterQuery()
		entityName()
		debugLine()
		nearestTo()
		entityDamageTeam()
		containerSize()
		findPlatformerPath()
		containerSwapItems()
		entityPortrait()
		objectAt()
		breathable()
		containerOpen()
		npcQuery()
		material()
		entityMoney()
		entityHealth()
		entitySpecies()
		containerTakeAll()
		threatLevel()
		containerTakeAt()
		containerItems()
	}
	coroutine = {
		create()
		isyieldable()
		status()
		resume()
		yield()
		running()
		wrap()
	}
	xpcall()
	require()
	config = {
		getParameter()
	}
	ipairs()
	root = {
		npcConfig()
		getMatchingTenants()
		assetJson()
		liquidStatusEffects()
		techType()
		evalFunction()
		generateName()
		questConfig()
		materialHealth()
		tenantConfig()
		treeFoliageDirectory()
		setConfigurationPath()
		imageSize()
		materialFootstepSound()
		itemConfig()
		imageSpaces()
		hasTech()
		projectileConfig()
		techConfig()
		projectileGravityMultiplier()
		makeCurrentVersionedJson()
		monsterSkillParameter()
		itemType()
		behaviorModule()
		nonEmptyRegion()
		treeStemDirectory()
		npcVariant()
		getConfigurationPath()
		getConfiguration()
		createItem()
		itemTags()
		npcPortrait()
		createBiome()
		isTreasurePool()
		evalFunction2()
		monsterMovementSettings()
		materialPath()
		createTreasure()
		monsterPortrait()
		recipesForItem()
		itemHasTag()
		loadVersionedJson()
		setConfiguration()
		materialMiningSound()
	}
	error()
	widget = {
		setImageRotation()
		setListSelected()
		setButtonImages()
		setFontColor()
		getSliderValue()
		setPosition()
		getSelectedOption()
		removeListItem()
		getListSelected()
		itemGridItems()
		setData()
		setVisible()
		setOptionVisible()
		addListItem()
		getPosition()
		setButtonEnabled()
		blur()
		setButtonCheckedImages()
		setOptionEnabled()
		getChecked()
		setButtonImage()
		setImageScale()
		setChecked()
		getSize()
		setImage()
		setText()
		setSize()
		playSound()
		focus()
		getText()
		clearListItems()
		setProgress()
		setSelectedOption()
		getData()
		setButtonOverlayImage()
	}
	jarray()
	next()
	jremove()
	rawlen()
	tostring()
	table = {
		concat()
		sort()
		unpack()
		insert()
		pack()
		move()
		remove()
	}
	getmetatable()
	os = {
		clock()
		difftime()
		time()
	}
	pairs()
	player = {
		hasQuest()
		gender()
		playTime()
		lounge()
		giveEssentialItem()
		shipUpgrades()
		primaryHandItem()
		setEquippedItem()
		radioMessage()
		consumeTaggedItem()
		confirm()
		enableTech()
		availableTechs()
		makeTechAvailable()
		getItemWithParameter()
		startQuest()
		addBookmark()
		worldId()
		altHandItem()
		setIntroComplete()
		hasCompletedQuest()
		equippedTech()
		recordEvent()
		completeMission()
		ownShipWorldId()
		equippedItem()
		cleanupItems()
		enableMission()
		hasCountOfItem()
		giveItem()
		essentialItem()
		altHandItemTags()
		hasItem()
		enabledTechs()
		serverUuid()
		itemsWithTag()
		primaryHandItemTags()
		giveBlueprint()
		consumeItemWithParameter()
		introComplete()
		removeEssentialItem()
		warp()
		consumeItem()
		makeTechUnavailable()
		canStartQuest()
		hasItemWithParameter()
		setUniverseFlag()
		isLounging()
		playCinematic()
		species()
		upgradeShip()
		equipTech()
		inventoryTags()
	}
	jresize()
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	status = {
		resourceNames()
		setPersistentEffects()
		removeEphemeralEffect()
		activeUniqueStatusEffectSummary()
		resourceLocked()
		resetAllResources()
		getPersistentEffects()
		giveResource()
		addPersistentEffects()
		consumeResource()
		modifyResource()
		statPositive()
		setStatusProperty()
		stat()
		clearAllPersistentEffects()
		inflictedHitsSince()
		resourcePercentage()
		modifyResourcePercentage()
		resourceMax()
		setResourceLocked()
		overConsumeResource()
		addEphemeralEffects()
		isResource()
		clearPersistentEffects()
		addPersistentEffect()
		inflictedDamageSince()
		resource()
		setResource()
		damageTakenSince()
		clearEphemeralEffects()
		resetResource()
		statusProperty()
		addEphemeralEffect()
		resourcePositive()
		setResourcePercentage()
	}
	sb = {
		printJson()
		jsonQuery()
		makePerlinSource()
		print()
		setLogMap()
		nrand()
		staticRandomI32()
		logError()
		logWarn()
		jsonMerge()
		staticRandomI32Range()
		logInfo()
		staticRandomDouble()
		staticRandomDoubleRange()
		makeRandomSource()
		interpolateSinEase()
		replaceTags()
		makeUuid()
	}
	p()
	update()
	init()
	setmetatable()
	rawset()
	self = {
	}
	select()
	ic = {
		searchButton()
		quickstack()
		amountEquipped()
		lock()
		sort()
		renameThis()
		searchBox()
		stripColor()
		getQuality()
		itemConfig()
		sort_relative()
		giveBack()
		checkStack()
		renameButton()
		sortFunc()
		clientVersion = 1
		itemAmount()
	}
	rawequal()
	jsize()
	tonumber()
	utf8 = {
		len()
		char()
		codepoint()
		offset()
		charpattern = "[
[01:52:57.908] [Warn] 	pcall()
	script = {
		updateDt()
		setUpdateDelta()
	}
	print()
	world = {
		objectQuery()
		time()
		entityAggressive()
		npcType()
		entityHasCountOfItem()
		polyCollision()
		rectTileCollision()
		placeMod()
		polyContains()
		callScriptedEntity()
		entityExists()
		setProperty()
		containerTakeNumItemsAt()
		containerPutItemsAt()
		lightLevel()
		underground()
		windLevel()
		placeMaterial()
		containerAvailable()
		entityCanDamage()
		spawnItem()
		isTileProtected()
		destroyLiquid()
		collisionBlocksAlongLine()
		spawnProjectile()
		gravity()
		liquidAt()
		debugText()
		resolvePolyCollision()
		mod()
		timeOfDay()
		day()
		itemDropQuery()
		spawnVehicle()
		entityHandItemDescriptor()
		spawnMonster()
		containerItemsFitWhere()
		isMonster()
		containerConsumeAt()
		damageTileArea()
		containerAddItems()
		spawnTreasure()
		placeObject()
		spawnLiquid()
		tileIsOccupied()
		containerSwapItemsNoCombine()
		dayLength()
		entityQuery()
		liquidAlongLine()
		entityGender()
		spawnNpc()
		spawnStagehand()
		lineCollision()
		containerItemAt()
		entityLineQuery()
		lineTileCollision()
		objectLineQuery()
		containerItemApply()
		playerQuery()
		entityVelocity()
		damageTiles()
		pointTileCollision()
		containerItemsCanFit()
		platformerPathStart()
		farmableStage()
		npcLineQuery()
		xwrap()
		distance()
		magnitude()
		loungeableOccupied()
		containerConsume()
		containerStackItems()
		stagehandType()
		sendEntityMessage()
		entityUniqueId()
		getObjectParameter()
		monsterType()
		isNpc()
		entityType()
		debugPoint()
		entityDescription()
		entityHandItem()
		findUniqueEntity()
		entityPosition()
		getProperty()
		debugPoly()
		objectSpaces()
		pointCollision()
		containerClose()
		loungeableQuery()
		rectCollision()
		monsterQuery()
		entityName()
		debugLine()
		nearestTo()
		entityDamageTeam()
		containerSize()
		findPlatformerPath()
		containerSwapItems()
		entityPortrait()
		objectAt()
		breathable()
		containerOpen()
		npcQuery()
		material()
		entityMoney()
		entityHealth()
		entitySpecies()
		containerTakeAll()
		threatLevel()
		containerTakeAt()
		containerItems()
	}
	coroutine = {
		create()
		isyieldable()
		status()
		resume()
		yield()
		running()
		wrap()
	}
	xpcall()
	require()
	config = {
		getParameter()
	}
	ipairs()
	root = {
		npcConfig()
		getMatchingTenants()
		assetJson()
		liquidStatusEffects()
		techType()
		evalFunction()
		generateName()
		questConfig()
		materialHealth()
		tenantConfig()
		treeFoliageDirectory()
		setConfigurationPath()
		imageSize()
		materialFootstepSound()
		itemConfig()
		imageSpaces()
		hasTech()
		projectileConfig()
		techConfig()
		projectileGravityMultiplier()
		makeCurrentVersionedJson()
		monsterSkillParameter()
		itemType()
		behaviorModule()
		nonEmptyRegion()
		treeStemDirectory()
		npcVariant()
		getConfigurationPath()
		getConfiguration()
		createItem()
		itemTags()
		npcPortrait()
		createBiome()
		isTreasurePool()
		evalFunction2()
		monsterMovementSettings()
		materialPath()
		createTreasure()
		monsterPortrait()
		recipesForItem()
		itemHasTag()
		loadVersionedJson()
		setConfiguration()
		materialMiningSound()
	}
	error()
	widget = {
		setImageRotation()
		setListSelected()
		setButtonImages()
		setFontColor()
		getSliderValue()
		setPosition()
		getSelectedOption()
		removeListItem()
		getListSelected()
		itemGridItems()
		setData()
		setVisible()
		setOptionVisible()
		addListItem()
		getPosition()
		setButtonEnabled()
		blur()
		setButtonCheckedImages()
		setOptionEnabled()
		getChecked()
		setButtonImage()
		setImageScale()
		setChecked()
		getSize()
		setImage()
		setText()
		setSize()
		playSound()
		focus()
		getText()
		clearListItems()
		setProgress()
		setSelectedOption()
		getData()
		setButtonOverlayImage()
	}
	jarray()
	next()
	jremove()
	rawlen()
	tostring()
	table = {
		concat()
		sort()
		unpack()
		insert()
		pack()
		move()
		remove()
	}
	getmetatable()
	os = {
		clock()
		difftime()
		time()
	}
	pairs()
	player = {
		hasQuest()
		gender()
		playTime()
		lounge()
		giveEssentialItem()
		shipUpgrades()
		primaryHandItem()
		setEquippedItem()
		radioMessage()
		consumeTaggedItem()
		confirm()
		enableTech()
		availableTechs()
		makeTechAvailable()
		getItemWithParameter()
		startQuest()
		addBookmark()
		worldId()
		altHandItem()
		setIntroComplete()
		hasCompletedQuest()
		equippedTech()
		recordEvent()
		completeMission()
		ownShipWorldId()
		equippedItem()
		cleanupItems()
		enableMission()
		hasCountOfItem()
		giveItem()
		essentialItem()
		altHandItemTags()
		hasItem()
		enabledTechs()
		serverUuid()
		itemsWithTag()
		primaryHandItemTags()
		giveBlueprint()
		consumeItemWithParameter()
		introComplete()
		removeEssentialItem()
		warp()
		consumeItem()
		makeTechUnavailable()
		canStartQuest()
		hasItemWithParameter()
		setUniverseFlag()
		isLounging()
		playCinematic()
		species()
		upgradeShip()
		equipTech()
		inventoryTags()
	}
	jresize()
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	status = {
		resourceNames()
		setPersistentEffects()
		removeEphemeralEffect()
		activeUniqueStatusEffectSummary()
		resourceLocked()
		resetAllResources()
		getPersistentEffects()
		giveResource()
		addPersistentEffects()
		consumeResource()
		modifyResource()
		statPositive()
		setStatusProperty()
		stat()
		clearAllPersistentEffects()
		inflictedHitsSince()
		resourcePercentage()
		modifyResourcePercentage()
		resourceMax()
		setResourceLocked()
		overConsumeResource()
		addEphemeralEffects()
		isResource()
		clearPersistentEffects()
		addPersistentEffect()
		inflictedDamageSince()
		resource()
		setResource()
		damageTakenSince()
		clearEphemeralEffects()
		resetResource()
		statusProperty()
		addEphemeralEffect()
		resourcePositive()
		setResourcePercentage()
	}
	sb = {
		printJson()
		jsonQuery()
		makePerlinSource()
		print()
		setLogMap()
		nrand()
		staticRandomI32()
		logError()
		logWarn()
		jsonMerge()
		staticRandomI32Range()
		logInfo()
		staticRandomDouble()
		staticRandomDoubleRange()
		makeRandomSource()
		interpolateSinEase()
		replaceTags()
		makeUuid()
	}
	p()
	update()
	init()
	setmetatable()
	rawset()
	self = {
	}
	select()
	ic = {
		searchButton()
		quickstack()
		amountEquipped()
		lock()
		sort()
		renameThis()
		searchBox()
		stripColor()
		getQuality()
		itemConfig()
		sort_relative()
		giveBack()
		checkStack()
		renameButton()
		sortFunc()
		clientVersion = 1
		itemAmount()
	}
	rawequal()
	jsize()
	tonumber()
	utf8 = {
		len()
		char()
		codepoint()
		offset()
		charpattern = "[
[01:53:22.096] [Info] UniverseServer: Loading celestial world -549421000:-174072045:85931705:2
[01:53:22.297] [Info] UniverseServer: Warping player 1 to CelestialWorld:-549421000:-174072045:85931705:2
[01:53:22.306] [Info] Client received world stop packet, leaving: Removed
[01:53:22.308] [Info] UniverseServer: Stopping idle world ClientShipWorld:40d0c64bbadbfcac62e62a636f4f2308
[01:55:23.709] [Warn] 	script = {
		updateDt()
		setUpdateDelta()
	}
	next()
	getmetatable()
	os = {
		clock()
		time()
		difftime()
	}
	sb = {
		setLogMap()
		makeUuid()
		printJson()
		makePerlinSource()
		logWarn()
		jsonMerge()
		makeRandomSource()
		interpolateSinEase()
		logInfo()
		staticRandomDouble()
		jsonQuery()
		staticRandomDoubleRange()
		print()
		staticRandomI32Range()
		replaceTags()
		staticRandomI32()
		logError()
		nrand()
	}
	utf8 = {
		offset()
		codepoint()
		char()
		charpattern = "[
[01:56:58.769] [Info] Skipped event recording for nonexistent entity 5059
[01:57:28.541] [Warn] 	script = {
		updateDt()
		setUpdateDelta()
	}
	next()
	getmetatable()
	os = {
		clock()
		time()
		difftime()
	}
	sb = {
		setLogMap()
		makeUuid()
		printJson()
		makePerlinSource()
		logWarn()
		jsonMerge()
		makeRandomSource()
		interpolateSinEase()
		logInfo()
		staticRandomDouble()
		jsonQuery()
		staticRandomDoubleRange()
		print()
		staticRandomI32Range()
		replaceTags()
		staticRandomI32()
		logError()
		nrand()
	}
	utf8 = {
		offset()
		codepoint()
		char()
		charpattern = "[
[01:57:54.875] [Warn] 	script = {
		updateDt()
		setUpdateDelta()
	}
	next()
	getmetatable()
	os = {
		clock()
		time()
		difftime()
	}
	sb = {
		setLogMap()
		makeUuid()
		printJson()
		makePerlinSource()
		logWarn()
		jsonMerge()
		makeRandomSource()
		interpolateSinEase()
		logInfo()
		staticRandomDouble()
		jsonQuery()
		staticRandomDoubleRange()
		print()
		staticRandomI32Range()
		replaceTags()
		staticRandomI32()
		logError()
		nrand()
	}
	utf8 = {
		offset()
		codepoint()
		char()
		charpattern = "[
[01:57:59.636] [Info] [IC] [Sort] Time elapsed: 0
[02:05:10.372] [Warn] Failed to place dungeon object: woodsupport direction: 0 position: (769, 881)
[02:06:00.255] [Info] Chat: <Esther> Hmmm, how curious... I need to cross-reference this.
[02:06:07.610] [Warn] 	script = {
		updateDt()
		setUpdateDelta()
	}
	next()
	getmetatable()
	os = {
		clock()
		time()
		difftime()
	}
	sb = {
		setLogMap()
		makeUuid()
		printJson()
		makePerlinSource()
		logWarn()
		jsonMerge()
		makeRandomSource()
		interpolateSinEase()
		logInfo()
		staticRandomDouble()
		jsonQuery()
		staticRandomDoubleRange()
		print()
		staticRandomI32Range()
		replaceTags()
		staticRandomI32()
		logError()
		nrand()
	}
	utf8 = {
		offset()
		codepoint()
		char()
		charpattern = "[
[02:06:21.955] [Info] [IC] [Sort] Time elapsed: 0.001
[02:06:26.792] [Warn] 	script = {
		updateDt()
		setUpdateDelta()
	}
	next()
	getmetatable()
	os = {
		clock()
		time()
		difftime()
	}
	sb = {
		setLogMap()
		makeUuid()
		printJson()
		makePerlinSource()
		logWarn()
		jsonMerge()
		makeRandomSource()
		interpolateSinEase()
		logInfo()
		staticRandomDouble()
		jsonQuery()
		staticRandomDoubleRange()
		print()
		staticRandomI32Range()
		replaceTags()
		staticRandomI32()
		logError()
		nrand()
	}
	utf8 = {
		offset()
		codepoint()
		char()
		charpattern = "[
[02:06:32.854] [Info] [IC] [Sort] Time elapsed: 0
[02:06:38.298] [Warn] 	script = {
		updateDt()
		setUpdateDelta()
	}
	next()
	getmetatable()
	os = {
		clock()
		time()
		difftime()
	}
	sb = {
		setLogMap()
		makeUuid()
		printJson()
		makePerlinSource()
		logWarn()
		jsonMerge()
		makeRandomSource()
		interpolateSinEase()
		logInfo()
		staticRandomDouble()
		jsonQuery()
		staticRandomDoubleRange()
		print()
		staticRandomI32Range()
		replaceTags()
		staticRandomI32()
		logError()
		nrand()
	}
	utf8 = {
		offset()
		codepoint()
		char()
		charpattern = "[
[02:06:50.103] [Warn] 	script = {
		updateDt()
		setUpdateDelta()
	}
	next()
	getmetatable()
	os = {
		clock()
		time()
		difftime()
	}
	sb = {
		setLogMap()
		makeUuid()
		printJson()
		makePerlinSource()
		logWarn()
		jsonMerge()
		makeRandomSource()
		interpolateSinEase()
		logInfo()
		staticRandomDouble()
		jsonQuery()
		staticRandomDoubleRange()
		print()
		staticRandomI32Range()
		replaceTags()
		staticRandomI32()
		logError()
		nrand()
	}
	utf8 = {
		offset()
		codepoint()
		char()
		charpattern = "[
[02:07:00.418] [Warn] 	script = {
		updateDt()
		setUpdateDelta()
	}
	next()
	getmetatable()
	os = {
		clock()
		time()
		difftime()
	}
	sb = {
		setLogMap()
		makeUuid()
		printJson()
		makePerlinSource()
		logWarn()
		jsonMerge()
		makeRandomSource()
		interpolateSinEase()
		logInfo()
		staticRandomDouble()
		jsonQuery()
		staticRandomDoubleRange()
		print()
		staticRandomI32Range()
		replaceTags()
		staticRandomI32()
		logError()
		nrand()
	}
	utf8 = {
		offset()
		codepoint()
		char()
		charpattern = "[
[02:07:15.476] [Warn] 	script = {
		updateDt()
		setUpdateDelta()
	}
	next()
	getmetatable()
	os = {
		clock()
		time()
		difftime()
	}
	sb = {
		setLogMap()
		makeUuid()
		printJson()
		makePerlinSource()
		logWarn()
		jsonMerge()
		makeRandomSource()
		interpolateSinEase()
		logInfo()
		staticRandomDouble()
		jsonQuery()
		staticRandomDoubleRange()
		print()
		staticRandomI32Range()
		replaceTags()
		staticRandomI32()
		logError()
		nrand()
	}
	utf8 = {
		offset()
		codepoint()
		char()
		charpattern = "[
[02:07:18.157] [Warn] 	script = {
		updateDt()
		setUpdateDelta()
	}
	next()
	getmetatable()
	os = {
		clock()
		time()
		difftime()
	}
	sb = {
		setLogMap()
		makeUuid()
		printJson()
		makePerlinSource()
		logWarn()
		jsonMerge()
		makeRandomSource()
		interpolateSinEase()
		logInfo()
		staticRandomDouble()
		jsonQuery()
		staticRandomDoubleRange()
		print()
		staticRandomI32Range()
		replaceTags()
		staticRandomI32()
		logError()
		nrand()
	}
	utf8 = {
		offset()
		codepoint()
		char()
		charpattern = "[
[02:07:21.958] [Warn] 	script = {
		updateDt()
		setUpdateDelta()
	}
	next()
	getmetatable()
	os = {
		clock()
		time()
		difftime()
	}
	sb = {
		setLogMap()
		makeUuid()
		printJson()
		makePerlinSource()
		logWarn()
		jsonMerge()
		makeRandomSource()
		interpolateSinEase()
		logInfo()
		staticRandomDouble()
		jsonQuery()
		staticRandomDoubleRange()
		print()
		staticRandomI32Range()
		replaceTags()
		staticRandomI32()
		logError()
		nrand()
	}
	utf8 = {
		offset()
		codepoint()
		char()
		charpattern = "[
[02:07:29.669] [Warn] 	script = {
		updateDt()
		setUpdateDelta()
	}
	next()
	getmetatable()
	os = {
		clock()
		time()
		difftime()
	}
	sb = {
		setLogMap()
		makeUuid()
		printJson()
		makePerlinSource()
		logWarn()
		jsonMerge()
		makeRandomSource()
		interpolateSinEase()
		logInfo()
		staticRandomDouble()
		jsonQuery()
		staticRandomDoubleRange()
		print()
		staticRandomI32Range()
		replaceTags()
		staticRandomI32()
		logError()
		nrand()
	}
	utf8 = {
		offset()
		codepoint()
		char()
		charpattern = "[
[02:07:32.408] [Warn] 	script = {
		updateDt()
		setUpdateDelta()
	}
	next()
	getmetatable()
	os = {
		clock()
		time()
		difftime()
	}
	sb = {
		setLogMap()
		makeUuid()
		printJson()
		makePerlinSource()
		logWarn()
		jsonMerge()
		makeRandomSource()
		interpolateSinEase()
		logInfo()
		staticRandomDouble()
		jsonQuery()
		staticRandomDoubleRange()
		print()
		staticRandomI32Range()
		replaceTags()
		staticRandomI32()
		logError()
		nrand()
	}
	utf8 = {
		offset()
		codepoint()
		char()
		charpattern = "[
[02:07:34.057] [Warn] 	script = {
		updateDt()
		setUpdateDelta()
	}
	next()
	getmetatable()
	os = {
		clock()
		time()
		difftime()
	}
	sb = {
		setLogMap()
		makeUuid()
		printJson()
		makePerlinSource()
		logWarn()
		jsonMerge()
		makeRandomSource()
		interpolateSinEase()
		logInfo()
		staticRandomDouble()
		jsonQuery()
		staticRandomDoubleRange()
		print()
		staticRandomI32Range()
		replaceTags()
		staticRandomI32()
		logError()
		nrand()
	}
	utf8 = {
		offset()
		codepoint()
		char()
		charpattern = "[
[02:07:38.776] [Warn] 	script = {
		updateDt()
		setUpdateDelta()
	}
	next()
	getmetatable()
	os = {
		clock()
		time()
		difftime()
	}
	sb = {
		setLogMap()
		makeUuid()
		printJson()
		makePerlinSource()
		logWarn()
		jsonMerge()
		makeRandomSource()
		interpolateSinEase()
		logInfo()
		staticRandomDouble()
		jsonQuery()
		staticRandomDoubleRange()
		print()
		staticRandomI32Range()
		replaceTags()
		staticRandomI32()
		logError()
		nrand()
	}
	utf8 = {
		offset()
		codepoint()
		char()
		charpattern = "[
[02:08:43.657] [Warn] 	script = {
		updateDt()
		setUpdateDelta()
	}
	next()
	getmetatable()
	os = {
		clock()
		time()
		difftime()
	}
	sb = {
		setLogMap()
		makeUuid()
		printJson()
		makePerlinSource()
		logWarn()
		jsonMerge()
		makeRandomSource()
		interpolateSinEase()
		logInfo()
		staticRandomDouble()
		jsonQuery()
		staticRandomDoubleRange()
		print()
		staticRandomI32Range()
		replaceTags()
		staticRandomI32()
		logError()
		nrand()
	}
	utf8 = {
		offset()
		codepoint()
		char()
		charpattern = "[
[02:09:31.772] [Info] Chat: <Esther> Even the smallest piece of evidence can help to uncover the grandest secrets of the universe.
[02:09:40.855] [Info] Chat: <Esther> I can't help but respect how much traditional Hylotl culture values knowledge.
[02:09:54.961] [Warn] 	script = {
		updateDt()
		setUpdateDelta()
	}
	next()
	getmetatable()
	os = {
		clock()
		time()
		difftime()
	}
	sb = {
		setLogMap()
		makeUuid()
		printJson()
		makePerlinSource()
		logWarn()
		jsonMerge()
		makeRandomSource()
		interpolateSinEase()
		logInfo()
		staticRandomDouble()
		jsonQuery()
		staticRandomDoubleRange()
		print()
		staticRandomI32Range()
		replaceTags()
		staticRandomI32()
		logError()
		nrand()
	}
	utf8 = {
		offset()
		codepoint()
		char()
		charpattern = "[
[02:10:26.638] [Info] Chat: <Esther> This is excellent, everything you find contributes to the formation of a theory.
[02:10:35.422] [Info] Chat: <Esther> Interesting. This will certainly have a bearing on my research.
[02:10:44.588] [Info] Chat: <Esther> Even the smallest piece of evidence can help to uncover the grandest secrets of the universe.
[02:11:58.787] [Warn] Failed to place dungeon object: tombthing4 direction: 1 position: (1559, 451)
[02:11:58.787] [Warn] Failed to place dungeon object: tombthing3 direction: 1 position: (1559, 460)
[02:12:11.256] [Info] Chat: <Esther> This confirms something that I had speculated upon!
[02:12:15.529] [Warn] 	script = {
		updateDt()
		setUpdateDelta()
	}
	next()
	getmetatable()
	os = {
		clock()
		time()
		difftime()
	}
	sb = {
		setLogMap()
		makeUuid()
		printJson()
		makePerlinSource()
		logWarn()
		jsonMerge()
		makeRandomSource()
		interpolateSinEase()
		logInfo()
		staticRandomDouble()
		jsonQuery()
		staticRandomDoubleRange()
		print()
		staticRandomI32Range()
		replaceTags()
		staticRandomI32()
		logError()
		nrand()
	}
	utf8 = {
		offset()
		codepoint()
		char()
		charpattern = "[
[02:12:19.322] [Info] Chat: <Esther> How peculiar! But surprising information can be even more valuable than expected information...
[02:12:23.753] [Warn] 	script = {
		updateDt()
		setUpdateDelta()
	}
	next()
	getmetatable()
	os = {
		clock()
		time()
		difftime()
	}
	sb = {
		setLogMap()
		makeUuid()
		printJson()
		makePerlinSource()
		logWarn()
		jsonMerge()
		makeRandomSource()
		interpolateSinEase()
		logInfo()
		staticRandomDouble()
		jsonQuery()
		staticRandomDoubleRange()
		print()
		staticRandomI32Range()
		replaceTags()
		staticRandomI32()
		logError()
		nrand()
	}
	utf8 = {
		offset()
		codepoint()
		char()
		charpattern = "[
[02:12:41.488] [Info] Chat: <Esther> Interesting. This will certainly have a bearing on my research.
[02:12:49.772] [Info] Chat: <Esther> This is excellent, everything you find contributes to the formation of a theory.
[02:12:56.242] [Warn] 	script = {
		updateDt()
		setUpdateDelta()
	}
	next()
	getmetatable()
	os = {
		clock()
		time()
		difftime()
	}
	sb = {
		setLogMap()
		makeUuid()
		printJson()
		makePerlinSource()
		logWarn()
		jsonMerge()
		makeRandomSource()
		interpolateSinEase()
		logInfo()
		staticRandomDouble()
		jsonQuery()
		staticRandomDoubleRange()
		print()
		staticRandomI32Range()
		replaceTags()
		staticRandomI32()
		logError()
		nrand()
	}
	utf8 = {
		offset()
		codepoint()
		char()
		charpattern = "[
[02:13:00.700] [Warn] 	script = {
		updateDt()
		setUpdateDelta()
	}
	next()
	getmetatable()
	os = {
		clock()
		time()
		difftime()
	}
	sb = {
		setLogMap()
		makeUuid()
		printJson()
		makePerlinSource()
		logWarn()
		jsonMerge()
		makeRandomSource()
		interpolateSinEase()
		logInfo()
		staticRandomDouble()
		jsonQuery()
		staticRandomDoubleRange()
		print()
		staticRandomI32Range()
		replaceTags()
		staticRandomI32()
		logError()
		nrand()
	}
	utf8 = {
		offset()
		codepoint()
		char()
		charpattern = "[
[02:13:21.471] [Info] Chat: <Esther> How peculiar! But surprising information can be even more valuable than expected information...
[02:13:33.894] [Warn] 	script = {
		updateDt()
		setUpdateDelta()
	}
	next()
	getmetatable()
	os = {
		clock()
		time()
		difftime()
	}
	sb = {
		setLogMap()
		makeUuid()
		printJson()
		makePerlinSource()
		logWarn()
		jsonMerge()
		makeRandomSource()
		interpolateSinEase()
		logInfo()
		staticRandomDouble()
		jsonQuery()
		staticRandomDoubleRange()
		print()
		staticRandomI32Range()
		replaceTags()
		staticRandomI32()
		logError()
		nrand()
	}
	utf8 = {
		offset()
		codepoint()
		char()
		charpattern = "[
[02:13:36.342] [Warn] 	script = {
		updateDt()
		setUpdateDelta()
	}
	next()
	getmetatable()
	os = {
		clock()
		time()
		difftime()
	}
	sb = {
		setLogMap()
		makeUuid()
		printJson()
		makePerlinSource()
		logWarn()
		jsonMerge()
		makeRandomSource()
		interpolateSinEase()
		logInfo()
		staticRandomDouble()
		jsonQuery()
		staticRandomDoubleRange()
		print()
		staticRandomI32Range()
		replaceTags()
		staticRandomI32()
		logError()
		nrand()
	}
	utf8 = {
		offset()
		codepoint()
		char()
		charpattern = "[
[02:13:37.957] [Warn] 	script = {
		updateDt()
		setUpdateDelta()
	}
	next()
	getmetatable()
	os = {
		clock()
		time()
		difftime()
	}
	sb = {
		setLogMap()
		makeUuid()
		printJson()
		makePerlinSource()
		logWarn()
		jsonMerge()
		makeRandomSource()
		interpolateSinEase()
		logInfo()
		staticRandomDouble()
		jsonQuery()
		staticRandomDoubleRange()
		print()
		staticRandomI32Range()
		replaceTags()
		staticRandomI32()
		logError()
		nrand()
	}
	utf8 = {
		offset()
		codepoint()
		char()
		charpattern = "[
[02:13:40.928] [Warn] 	script = {
		updateDt()
		setUpdateDelta()
	}
	next()
	getmetatable()
	os = {
		clock()
		time()
		difftime()
	}
	sb = {
		setLogMap()
		makeUuid()
		printJson()
		makePerlinSource()
		logWarn()
		jsonMerge()
		makeRandomSource()
		interpolateSinEase()
		logInfo()
		staticRandomDouble()
		jsonQuery()
		staticRandomDoubleRange()
		print()
		staticRandomI32Range()
		replaceTags()
		staticRandomI32()
		logError()
		nrand()
	}
	utf8 = {
		offset()
		codepoint()
		char()
		charpattern = "[
[02:13:44.424] [Warn] 	script = {
		updateDt()
		setUpdateDelta()
	}
	next()
	getmetatable()
	os = {
		clock()
		time()
		difftime()
	}
	sb = {
		setLogMap()
		makeUuid()
		printJson()
		makePerlinSource()
		logWarn()
		jsonMerge()
		makeRandomSource()
		interpolateSinEase()
		logInfo()
		staticRandomDouble()
		jsonQuery()
		staticRandomDoubleRange()
		print()
		staticRandomI32Range()
		replaceTags()
		staticRandomI32()
		logError()
		nrand()
	}
	utf8 = {
		offset()
		codepoint()
		char()
		charpattern = "[
[02:13:50.626] [Warn] 	script = {
		updateDt()
		setUpdateDelta()
	}
	next()
	getmetatable()
	os = {
		clock()
		time()
		difftime()
	}
	sb = {
		setLogMap()
		makeUuid()
		printJson()
		makePerlinSource()
		logWarn()
		jsonMerge()
		makeRandomSource()
		interpolateSinEase()
		logInfo()
		staticRandomDouble()
		jsonQuery()
		staticRandomDoubleRange()
		print()
		staticRandomI32Range()
		replaceTags()
		staticRandomI32()
		logError()
		nrand()
	}
	utf8 = {
		offset()
		codepoint()
		char()
		charpattern = "[
[02:13:58.792] [Warn] 	script = {
		updateDt()
		setUpdateDelta()
	}
	next()
	getmetatable()
	os = {
		clock()
		time()
		difftime()
	}
	sb = {
		setLogMap()
		makeUuid()
		printJson()
		makePerlinSource()
		logWarn()
		jsonMerge()
		makeRandomSource()
		interpolateSinEase()
		logInfo()
		staticRandomDouble()
		jsonQuery()
		staticRandomDoubleRange()
		print()
		staticRandomI32Range()
		replaceTags()
		staticRandomI32()
		logError()
		nrand()
	}
	utf8 = {
		offset()
		codepoint()
		char()
		charpattern = "[
[02:14:02.124] [Warn] 	script = {
		updateDt()
		setUpdateDelta()
	}
	next()
	getmetatable()
	os = {
		clock()
		time()
		difftime()
	}
	sb = {
		setLogMap()
		makeUuid()
		printJson()
		makePerlinSource()
		logWarn()
		jsonMerge()
		makeRandomSource()
		interpolateSinEase()
		logInfo()
		staticRandomDouble()
		jsonQuery()
		staticRandomDoubleRange()
		print()
		staticRandomI32Range()
		replaceTags()
		staticRandomI32()
		logError()
		nrand()
	}
	utf8 = {
		offset()
		codepoint()
		char()
		charpattern = "[
[02:14:05.559] [Warn] 	script = {
		updateDt()
		setUpdateDelta()
	}
	next()
	getmetatable()
	os = {
		clock()
		time()
		difftime()
	}
	sb = {
		setLogMap()
		makeUuid()
		printJson()
		makePerlinSource()
		logWarn()
		jsonMerge()
		makeRandomSource()
		interpolateSinEase()
		logInfo()
		staticRandomDouble()
		jsonQuery()
		staticRandomDoubleRange()
		print()
		staticRandomI32Range()
		replaceTags()
		staticRandomI32()
		logError()
		nrand()
	}
	utf8 = {
		offset()
		codepoint()
		char()
		charpattern = "[
[02:14:06.870] [Warn] 	script = {
		updateDt()
		setUpdateDelta()
	}
	next()
	getmetatable()
	os = {
		clock()
		time()
		difftime()
	}
	sb = {
		setLogMap()
		makeUuid()
		printJson()
		makePerlinSource()
		logWarn()
		jsonMerge()
		makeRandomSource()
		interpolateSinEase()
		logInfo()
		staticRandomDouble()
		jsonQuery()
		staticRandomDoubleRange()
		print()
		staticRandomI32Range()
		replaceTags()
		staticRandomI32()
		logError()
		nrand()
	}
	utf8 = {
		offset()
		codepoint()
		char()
		charpattern = "[
[02:14:10.058] [Warn] 	script = {
		updateDt()
		setUpdateDelta()
	}
	next()
	getmetatable()
	os = {
		clock()
		time()
		difftime()
	}
	sb = {
		setLogMap()
		makeUuid()
		printJson()
		makePerlinSource()
		logWarn()
		jsonMerge()
		makeRandomSource()
		interpolateSinEase()
		logInfo()
		staticRandomDouble()
		jsonQuery()
		staticRandomDoubleRange()
		print()
		staticRandomI32Range()
		replaceTags()
		staticRandomI32()
		logError()
		nrand()
	}
	utf8 = {
		offset()
		codepoint()
		char()
		charpattern = "[
[02:14:12.274] [Warn] 	script = {
		updateDt()
		setUpdateDelta()
	}
	next()
	getmetatable()
	os = {
		clock()
		time()
		difftime()
	}
	sb = {
		setLogMap()
		makeUuid()
		printJson()
		makePerlinSource()
		logWarn()
		jsonMerge()
		makeRandomSource()
		interpolateSinEase()
		logInfo()
		staticRandomDouble()
		jsonQuery()
		staticRandomDoubleRange()
		print()
		staticRandomI32Range()
		replaceTags()
		staticRandomI32()
		logError()
		nrand()
	}
	utf8 = {
		offset()
		codepoint()
		char()
		charpattern = "[
[02:14:30.163] [Warn] Failed to place dungeon object: tombthing4 direction: 0 position: (565, 484)
[02:15:00.226] [Info] Chat: <Esther> Interesting. This will certainly have a bearing on my research.
[02:15:11.783] [Info] Chat: <Esther> Hm, I wonder...
[02:15:18.888] [Info] Chat: <Esther> This is all useful, dear. Keep looking!
[02:16:35.928] [Info] Protected dungeonIds for world set to ()
[02:16:38.989] [Info] Protected dungeonIds for world set to (0)
[02:16:39.799] [Info] Protected dungeonIds for world set to ()
[02:17:25.734] [Info] Protected dungeonIds for world set to (0)
[02:18:19.638] [Info] Chat: <Esther> How peculiar! But surprising information can be even more valuable than expected information...
[02:20:04.210] [Warn] 	script = {
		updateDt()
		setUpdateDelta()
	}
	next()
	getmetatable()
	os = {
		clock()
		time()
		difftime()
	}
	sb = {
		setLogMap()
		makeUuid()
		printJson()
		makePerlinSource()
		logWarn()
		jsonMerge()
		makeRandomSource()
		interpolateSinEase()
		logInfo()
		staticRandomDouble()
		jsonQuery()
		staticRandomDoubleRange()
		print()
		staticRandomI32Range()
		replaceTags()
		staticRandomI32()
		logError()
		nrand()
	}
	utf8 = {
		offset()
		codepoint()
		char()
		charpattern = "[
[02:20:26.876] [Warn] 	script = {
		updateDt()
		setUpdateDelta()
	}
	next()
	getmetatable()
	os = {
		clock()
		time()
		difftime()
	}
	sb = {
		setLogMap()
		makeUuid()
		printJson()
		makePerlinSource()
		logWarn()
		jsonMerge()
		makeRandomSource()
		interpolateSinEase()
		logInfo()
		staticRandomDouble()
		jsonQuery()
		staticRandomDoubleRange()
		print()
		staticRandomI32Range()
		replaceTags()
		staticRandomI32()
		logError()
		nrand()
	}
	utf8 = {
		offset()
		codepoint()
		char()
		charpattern = "[
[02:20:28.407] [Warn] 	script = {
		updateDt()
		setUpdateDelta()
	}
	next()
	getmetatable()
	os = {
		clock()
		time()
		difftime()
	}
	sb = {
		setLogMap()
		makeUuid()
		printJson()
		makePerlinSource()
		logWarn()
		jsonMerge()
		makeRandomSource()
		interpolateSinEase()
		logInfo()
		staticRandomDouble()
		jsonQuery()
		staticRandomDoubleRange()
		print()
		staticRandomI32Range()
		replaceTags()
		staticRandomI32()
		logError()
		nrand()
	}
	utf8 = {
		offset()
		codepoint()
		char()
		charpattern = "[
[02:22:25.886] [Warn] Failed to place dungeon object: barrel direction: 1 position: (1525, 866)
[02:23:37.636] [Warn] 	script = {
		updateDt()
		setUpdateDelta()
	}
	next()
	getmetatable()
	os = {
		clock()
		time()
		difftime()
	}
	sb = {
		setLogMap()
		makeUuid()
		printJson()
		makePerlinSource()
		logWarn()
		jsonMerge()
		makeRandomSource()
		interpolateSinEase()
		logInfo()
		staticRandomDouble()
		jsonQuery()
		staticRandomDoubleRange()
		print()
		staticRandomI32Range()
		replaceTags()
		staticRandomI32()
		logError()
		nrand()
	}
	utf8 = {
		offset()
		codepoint()
		char()
		charpattern = "[
[02:23:58.677] [Warn] 	script = {
		updateDt()
		setUpdateDelta()
	}
	next()
	getmetatable()
	os = {
		clock()
		time()
		difftime()
	}
	sb = {
		setLogMap()
		makeUuid()
		printJson()
		makePerlinSource()
		logWarn()
		jsonMerge()
		makeRandomSource()
		interpolateSinEase()
		logInfo()
		staticRandomDouble()
		jsonQuery()
		staticRandomDoubleRange()
		print()
		staticRandomI32Range()
		replaceTags()
		staticRandomI32()
		logError()
		nrand()
	}
	utf8 = {
		offset()
		codepoint()
		char()
		charpattern = "[
[02:25:56.460] [Warn] 	script = {
		updateDt()
		setUpdateDelta()
	}
	next()
	getmetatable()
	os = {
		clock()
		time()
		difftime()
	}
	sb = {
		setLogMap()
		makeUuid()
		printJson()
		makePerlinSource()
		logWarn()
		jsonMerge()
		makeRandomSource()
		interpolateSinEase()
		logInfo()
		staticRandomDouble()
		jsonQuery()
		staticRandomDoubleRange()
		print()
		staticRandomI32Range()
		replaceTags()
		staticRandomI32()
		logError()
		nrand()
	}
	utf8 = {
		offset()
		codepoint()
		char()
		charpattern = "[
[02:28:17.039] [Info] Skipped event recording for nonexistent entity 71415
[02:28:43.105] [Info] Skipped event recording for nonexistent entity 71401
[02:28:48.053] [Warn] 	script = {
		updateDt()
		setUpdateDelta()
	}
	next()
	getmetatable()
	os = {
		clock()
		time()
		difftime()
	}
	sb = {
		setLogMap()
		makeUuid()
		printJson()
		makePerlinSource()
		logWarn()
		jsonMerge()
		makeRandomSource()
		interpolateSinEase()
		logInfo()
		staticRandomDouble()
		jsonQuery()
		staticRandomDoubleRange()
		print()
		staticRandomI32Range()
		replaceTags()
		staticRandomI32()
		logError()
		nrand()
	}
	utf8 = {
		offset()
		codepoint()
		char()
		charpattern = "[
[02:28:50.111] [Warn] 	script = {
		updateDt()
		setUpdateDelta()
	}
	next()
	getmetatable()
	os = {
		clock()
		time()
		difftime()
	}
	sb = {
		setLogMap()
		makeUuid()
		printJson()
		makePerlinSource()
		logWarn()
		jsonMerge()
		makeRandomSource()
		interpolateSinEase()
		logInfo()
		staticRandomDouble()
		jsonQuery()
		staticRandomDoubleRange()
		print()
		staticRandomI32Range()
		replaceTags()
		staticRandomI32()
		logError()
		nrand()
	}
	utf8 = {
		offset()
		codepoint()
		char()
		charpattern = "[
[02:28:53.242] [Warn] 	script = {
		updateDt()
		setUpdateDelta()
	}
	next()
	getmetatable()
	os = {
		clock()
		time()
		difftime()
	}
	sb = {
		setLogMap()
		makeUuid()
		printJson()
		makePerlinSource()
		logWarn()
		jsonMerge()
		makeRandomSource()
		interpolateSinEase()
		logInfo()
		staticRandomDouble()
		jsonQuery()
		staticRandomDoubleRange()
		print()
		staticRandomI32Range()
		replaceTags()
		staticRandomI32()
		logError()
		nrand()
	}
	utf8 = {
		offset()
		codepoint()
		char()
		charpattern = "[
[02:28:58.142] [Warn] 	script = {
		updateDt()
		setUpdateDelta()
	}
	next()
	getmetatable()
	os = {
		clock()
		time()
		difftime()
	}
	sb = {
		setLogMap()
		makeUuid()
		printJson()
		makePerlinSource()
		logWarn()
		jsonMerge()
		makeRandomSource()
		interpolateSinEase()
		logInfo()
		staticRandomDouble()
		jsonQuery()
		staticRandomDoubleRange()
		print()
		staticRandomI32Range()
		replaceTags()
		staticRandomI32()
		logError()
		nrand()
	}
	utf8 = {
		offset()
		codepoint()
		char()
		charpattern = "[
[02:28:59.658] [Warn] 	script = {
		updateDt()
		setUpdateDelta()
	}
	next()
	getmetatable()
	os = {
		clock()
		time()
		difftime()
	}
	sb = {
		setLogMap()
		makeUuid()
		printJson()
		makePerlinSource()
		logWarn()
		jsonMerge()
		makeRandomSource()
		interpolateSinEase()
		logInfo()
		staticRandomDouble()
		jsonQuery()
		staticRandomDoubleRange()
		print()
		staticRandomI32Range()
		replaceTags()
		staticRandomI32()
		logError()
		nrand()
	}
	utf8 = {
		offset()
		codepoint()
		char()
		charpattern = "[
[02:29:03.092] [Warn] 	script = {
		updateDt()
		setUpdateDelta()
	}
	next()
	getmetatable()
	os = {
		clock()
		time()
		difftime()
	}
	sb = {
		setLogMap()
		makeUuid()
		printJson()
		makePerlinSource()
		logWarn()
		jsonMerge()
		makeRandomSource()
		interpolateSinEase()
		logInfo()
		staticRandomDouble()
		jsonQuery()
		staticRandomDoubleRange()
		print()
		staticRandomI32Range()
		replaceTags()
		staticRandomI32()
		logError()
		nrand()
	}
	utf8 = {
		offset()
		codepoint()
		char()
		charpattern = "[
[02:29:05.525] [Warn] 	script = {
		updateDt()
		setUpdateDelta()
	}
	next()
	getmetatable()
	os = {
		clock()
		time()
		difftime()
	}
	sb = {
		setLogMap()
		makeUuid()
		printJson()
		makePerlinSource()
		logWarn()
		jsonMerge()
		makeRandomSource()
		interpolateSinEase()
		logInfo()
		staticRandomDouble()
		jsonQuery()
		staticRandomDoubleRange()
		print()
		staticRandomI32Range()
		replaceTags()
		staticRandomI32()
		logError()
		nrand()
	}
	utf8 = {
		offset()
		codepoint()
		char()
		charpattern = "[
[02:30:08.977] [Warn] 	script = {
		updateDt()
		setUpdateDelta()
	}
	next()
	getmetatable()
	os = {
		clock()
		time()
		difftime()
	}
	sb = {
		setLogMap()
		makeUuid()
		printJson()
		makePerlinSource()
		logWarn()
		jsonMerge()
		makeRandomSource()
		interpolateSinEase()
		logInfo()
		staticRandomDouble()
		jsonQuery()
		staticRandomDoubleRange()
		print()
		staticRandomI32Range()
		replaceTags()
		staticRandomI32()
		logError()
		nrand()
	}
	utf8 = {
		offset()
		codepoint()
		char()
		charpattern = "[
[02:30:12.424] [Warn] 	script = {
		updateDt()
		setUpdateDelta()
	}
	next()
	getmetatable()
	os = {
		clock()
		time()
		difftime()
	}
	sb = {
		setLogMap()
		makeUuid()
		printJson()
		makePerlinSource()
		logWarn()
		jsonMerge()
		makeRandomSource()
		interpolateSinEase()
		logInfo()
		staticRandomDouble()
		jsonQuery()
		staticRandomDoubleRange()
		print()
		staticRandomI32Range()
		replaceTags()
		staticRandomI32()
		logError()
		nrand()
	}
	utf8 = {
		offset()
		codepoint()
		char()
		charpattern = "[
[02:30:15.242] [Warn] 	script = {
		updateDt()
		setUpdateDelta()
	}
	next()
	getmetatable()
	os = {
		clock()
		time()
		difftime()
	}
	sb = {
		setLogMap()
		makeUuid()
		printJson()
		makePerlinSource()
		logWarn()
		jsonMerge()
		makeRandomSource()
		interpolateSinEase()
		logInfo()
		staticRandomDouble()
		jsonQuery()
		staticRandomDoubleRange()
		print()
		staticRandomI32Range()
		replaceTags()
		staticRandomI32()
		logError()
		nrand()
	}
	utf8 = {
		offset()
		codepoint()
		char()
		charpattern = "[
[02:30:16.895] [Warn] 	script = {
		updateDt()
		setUpdateDelta()
	}
	next()
	getmetatable()
	os = {
		clock()
		time()
		difftime()
	}
	sb = {
		setLogMap()
		makeUuid()
		printJson()
		makePerlinSource()
		logWarn()
		jsonMerge()
		makeRandomSource()
		interpolateSinEase()
		logInfo()
		staticRandomDouble()
		jsonQuery()
		staticRandomDoubleRange()
		print()
		staticRandomI32Range()
		replaceTags()
		staticRandomI32()
		logError()
		nrand()
	}
	utf8 = {
		offset()
		codepoint()
		char()
		charpattern = "[
[02:30:19.125] [Warn] 	script = {
		updateDt()
		setUpdateDelta()
	}
	next()
	getmetatable()
	os = {
		clock()
		time()
		difftime()
	}
	sb = {
		setLogMap()
		makeUuid()
		printJson()
		makePerlinSource()
		logWarn()
		jsonMerge()
		makeRandomSource()
		interpolateSinEase()
		logInfo()
		staticRandomDouble()
		jsonQuery()
		staticRandomDoubleRange()
		print()
		staticRandomI32Range()
		replaceTags()
		staticRandomI32()
		logError()
		nrand()
	}
	utf8 = {
		offset()
		codepoint()
		char()
		charpattern = "[
[02:30:22.125] [Warn] 	script = {
		updateDt()
		setUpdateDelta()
	}
	next()
	getmetatable()
	os = {
		clock()
		time()
		difftime()
	}
	sb = {
		setLogMap()
		makeUuid()
		printJson()
		makePerlinSource()
		logWarn()
		jsonMerge()
		makeRandomSource()
		interpolateSinEase()
		logInfo()
		staticRandomDouble()
		jsonQuery()
		staticRandomDoubleRange()
		print()
		staticRandomI32Range()
		replaceTags()
		staticRandomI32()
		logError()
		nrand()
	}
	utf8 = {
		offset()
		codepoint()
		char()
		charpattern = "[
[02:30:37.858] [Warn] 	script = {
		updateDt()
		setUpdateDelta()
	}
	next()
	getmetatable()
	os = {
		clock()
		time()
		difftime()
	}
	sb = {
		setLogMap()
		makeUuid()
		printJson()
		makePerlinSource()
		logWarn()
		jsonMerge()
		makeRandomSource()
		interpolateSinEase()
		logInfo()
		staticRandomDouble()
		jsonQuery()
		staticRandomDoubleRange()
		print()
		staticRandomI32Range()
		replaceTags()
		staticRandomI32()
		logError()
		nrand()
	}
	utf8 = {
		offset()
		codepoint()
		char()
		charpattern = "[
[02:30:44.427] [Warn] 	script = {
		updateDt()
		setUpdateDelta()
	}
	next()
	getmetatable()
	os = {
		clock()
		time()
		difftime()
	}
	sb = {
		setLogMap()
		makeUuid()
		printJson()
		makePerlinSource()
		logWarn()
		jsonMerge()
		makeRandomSource()
		interpolateSinEase()
		logInfo()
		staticRandomDouble()
		jsonQuery()
		staticRandomDoubleRange()
		print()
		staticRandomI32Range()
		replaceTags()
		staticRandomI32()
		logError()
		nrand()
	}
	utf8 = {
		offset()
		codepoint()
		char()
		charpattern = "[
[02:30:50.441] [Warn] 	script = {
		updateDt()
		setUpdateDelta()
	}
	next()
	getmetatable()
	os = {
		clock()
		time()
		difftime()
	}
	sb = {
		setLogMap()
		makeUuid()
		printJson()
		makePerlinSource()
		logWarn()
		jsonMerge()
		makeRandomSource()
		interpolateSinEase()
		logInfo()
		staticRandomDouble()
		jsonQuery()
		staticRandomDoubleRange()
		print()
		staticRandomI32Range()
		replaceTags()
		staticRandomI32()
		logError()
		nrand()
	}
	utf8 = {
		offset()
		codepoint()
		char()
		charpattern = "[
[02:30:51.941] [Warn] 	script = {
		updateDt()
		setUpdateDelta()
	}
	next()
	getmetatable()
	os = {
		clock()
		time()
		difftime()
	}
	sb = {
		setLogMap()
		makeUuid()
		printJson()
		makePerlinSource()
		logWarn()
		jsonMerge()
		makeRandomSource()
		interpolateSinEase()
		logInfo()
		staticRandomDouble()
		jsonQuery()
		staticRandomDoubleRange()
		print()
		staticRandomI32Range()
		replaceTags()
		staticRandomI32()
		logError()
		nrand()
	}
	utf8 = {
		offset()
		codepoint()
		char()
		charpattern = "[
[02:30:56.744] [Warn] 	script = {
		updateDt()
		setUpdateDelta()
	}
	next()
	getmetatable()
	os = {
		clock()
		time()
		difftime()
	}
	sb = {
		setLogMap()
		makeUuid()
		printJson()
		makePerlinSource()
		logWarn()
		jsonMerge()
		makeRandomSource()
		interpolateSinEase()
		logInfo()
		staticRandomDouble()
		jsonQuery()
		staticRandomDoubleRange()
		print()
		staticRandomI32Range()
		replaceTags()
		staticRandomI32()
		logError()
		nrand()
	}
	utf8 = {
		offset()
		codepoint()
		char()
		charpattern = "[
[02:31:00.514] [Warn] 	script = {
		updateDt()
		setUpdateDelta()
	}
	next()
	getmetatable()
	os = {
		clock()
		time()
		difftime()
	}
	sb = {
		setLogMap()
		makeUuid()
		printJson()
		makePerlinSource()
		logWarn()
		jsonMerge()
		makeRandomSource()
		interpolateSinEase()
		logInfo()
		staticRandomDouble()
		jsonQuery()
		staticRandomDoubleRange()
		print()
		staticRandomI32Range()
		replaceTags()
		staticRandomI32()
		logError()
		nrand()
	}
	utf8 = {
		offset()
		codepoint()
		char()
		charpattern = "[
[02:31:02.574] [Warn] 	script = {
		updateDt()
		setUpdateDelta()
	}
	next()
	getmetatable()
	os = {
		clock()
		time()
		difftime()
	}
	sb = {
		setLogMap()
		makeUuid()
		printJson()
		makePerlinSource()
		logWarn()
		jsonMerge()
		makeRandomSource()
		interpolateSinEase()
		logInfo()
		staticRandomDouble()
		jsonQuery()
		staticRandomDoubleRange()
		print()
		staticRandomI32Range()
		replaceTags()
		staticRandomI32()
		logError()
		nrand()
	}
	utf8 = {
		offset()
		codepoint()
		char()
		charpattern = "[
[02:31:04.157] [Warn] 	script = {
		updateDt()
		setUpdateDelta()
	}
	next()
	getmetatable()
	os = {
		clock()
		time()
		difftime()
	}
	sb = {
		setLogMap()
		makeUuid()
		printJson()
		makePerlinSource()
		logWarn()
		jsonMerge()
		makeRandomSource()
		interpolateSinEase()
		logInfo()
		staticRandomDouble()
		jsonQuery()
		staticRandomDoubleRange()
		print()
		staticRandomI32Range()
		replaceTags()
		staticRandomI32()
		logError()
		nrand()
	}
	utf8 = {
		offset()
		codepoint()
		char()
		charpattern = "[
[02:31:05.225] [Warn] 	script = {
		updateDt()
		setUpdateDelta()
	}
	next()
	getmetatable()
	os = {
		clock()
		time()
		difftime()
	}
	sb = {
		setLogMap()
		makeUuid()
		printJson()
		makePerlinSource()
		logWarn()
		jsonMerge()
		makeRandomSource()
		interpolateSinEase()
		logInfo()
		staticRandomDouble()
		jsonQuery()
		staticRandomDoubleRange()
		print()
		staticRandomI32Range()
		replaceTags()
		staticRandomI32()
		logError()
		nrand()
	}
	utf8 = {
		offset()
		codepoint()
		char()
		charpattern = "[
[02:31:07.774] [Warn] 	script = {
		updateDt()
		setUpdateDelta()
	}
	next()
	getmetatable()
	os = {
		clock()
		time()
		difftime()
	}
	sb = {
		setLogMap()
		makeUuid()
		printJson()
		makePerlinSource()
		logWarn()
		jsonMerge()
		makeRandomSource()
		interpolateSinEase()
		logInfo()
		staticRandomDouble()
		jsonQuery()
		staticRandomDoubleRange()
		print()
		staticRandomI32Range()
		replaceTags()
		staticRandomI32()
		logError()
		nrand()
	}
	utf8 = {
		offset()
		codepoint()
		char()
		charpattern = "[
[02:31:39.011] [Warn] 	script = {
		updateDt()
		setUpdateDelta()
	}
	next()
	getmetatable()
	os = {
		clock()
		time()
		difftime()
	}
	sb = {
		setLogMap()
		makeUuid()
		printJson()
		makePerlinSource()
		logWarn()
		jsonMerge()
		makeRandomSource()
		interpolateSinEase()
		logInfo()
		staticRandomDouble()
		jsonQuery()
		staticRandomDoubleRange()
		print()
		staticRandomI32Range()
		replaceTags()
		staticRandomI32()
		logError()
		nrand()
	}
	utf8 = {
		offset()
		codepoint()
		char()
		charpattern = "[
[02:31:45.275] [Warn] 	script = {
		updateDt()
		setUpdateDelta()
	}
	next()
	getmetatable()
	os = {
		clock()
		time()
		difftime()
	}
	sb = {
		setLogMap()
		makeUuid()
		printJson()
		makePerlinSource()
		logWarn()
		jsonMerge()
		makeRandomSource()
		interpolateSinEase()
		logInfo()
		staticRandomDouble()
		jsonQuery()
		staticRandomDoubleRange()
		print()
		staticRandomI32Range()
		replaceTags()
		staticRandomI32()
		logError()
		nrand()
	}
	utf8 = {
		offset()
		codepoint()
		char()
		charpattern = "[
[02:31:46.960] [Warn] 	script = {
		updateDt()
		setUpdateDelta()
	}
	next()
	getmetatable()
	os = {
		clock()
		time()
		difftime()
	}
	sb = {
		setLogMap()
		makeUuid()
		printJson()
		makePerlinSource()
		logWarn()
		jsonMerge()
		makeRandomSource()
		interpolateSinEase()
		logInfo()
		staticRandomDouble()
		jsonQuery()
		staticRandomDoubleRange()
		print()
		staticRandomI32Range()
		replaceTags()
		staticRandomI32()
		logError()
		nrand()
	}
	utf8 = {
		offset()
		codepoint()
		char()
		charpattern = "[
[02:31:48.759] [Warn] 	script = {
		updateDt()
		setUpdateDelta()
	}
	next()
	getmetatable()
	os = {
		clock()
		time()
		difftime()
	}
	sb = {
		setLogMap()
		makeUuid()
		printJson()
		makePerlinSource()
		logWarn()
		jsonMerge()
		makeRandomSource()
		interpolateSinEase()
		logInfo()
		staticRandomDouble()
		jsonQuery()
		staticRandomDoubleRange()
		print()
		staticRandomI32Range()
		replaceTags()
		staticRandomI32()
		logError()
		nrand()
	}
	utf8 = {
		offset()
		codepoint()
		char()
		charpattern = "[
[02:32:07.193] [Warn] 	script = {
		updateDt()
		setUpdateDelta()
	}
	next()
	getmetatable()
	os = {
		clock()
		time()
		difftime()
	}
	sb = {
		setLogMap()
		makeUuid()
		printJson()
		makePerlinSource()
		logWarn()
		jsonMerge()
		makeRandomSource()
		interpolateSinEase()
		logInfo()
		staticRandomDouble()
		jsonQuery()
		staticRandomDoubleRange()
		print()
		staticRandomI32Range()
		replaceTags()
		staticRandomI32()
		logError()
		nrand()
	}
	utf8 = {
		offset()
		codepoint()
		char()
		charpattern = "[
[02:32:08.991] [Warn] 	script = {
		updateDt()
		setUpdateDelta()
	}
	next()
	getmetatable()
	os = {
		clock()
		time()
		difftime()
	}
	sb = {
		setLogMap()
		makeUuid()
		printJson()
		makePerlinSource()
		logWarn()
		jsonMerge()
		makeRandomSource()
		interpolateSinEase()
		logInfo()
		staticRandomDouble()
		jsonQuery()
		staticRandomDoubleRange()
		print()
		staticRandomI32Range()
		replaceTags()
		staticRandomI32()
		logError()
		nrand()
	}
	utf8 = {
		offset()
		codepoint()
		char()
		charpattern = "[
[02:32:11.744] [Warn] 	script = {
		updateDt()
		setUpdateDelta()
	}
	next()
	getmetatable()
	os = {
		clock()
		time()
		difftime()
	}
	sb = {
		setLogMap()
		makeUuid()
		printJson()
		makePerlinSource()
		logWarn()
		jsonMerge()
		makeRandomSource()
		interpolateSinEase()
		logInfo()
		staticRandomDouble()
		jsonQuery()
		staticRandomDoubleRange()
		print()
		staticRandomI32Range()
		replaceTags()
		staticRandomI32()
		logError()
		nrand()
	}
	utf8 = {
		offset()
		codepoint()
		char()
		charpattern = "[
[02:32:14.457] [Warn] 	script = {
		updateDt()
		setUpdateDelta()
	}
	next()
	getmetatable()
	os = {
		clock()
		time()
		difftime()
	}
	sb = {
		setLogMap()
		makeUuid()
		printJson()
		makePerlinSource()
		logWarn()
		jsonMerge()
		makeRandomSource()
		interpolateSinEase()
		logInfo()
		staticRandomDouble()
		jsonQuery()
		staticRandomDoubleRange()
		print()
		staticRandomI32Range()
		replaceTags()
		staticRandomI32()
		logError()
		nrand()
	}
	utf8 = {
		offset()
		codepoint()
		char()
		charpattern = "[
[02:32:17.125] [Warn] 	script = {
		updateDt()
		setUpdateDelta()
	}
	next()
	getmetatable()
	os = {
		clock()
		time()
		difftime()
	}
	sb = {
		setLogMap()
		makeUuid()
		printJson()
		makePerlinSource()
		logWarn()
		jsonMerge()
		makeRandomSource()
		interpolateSinEase()
		logInfo()
		staticRandomDouble()
		jsonQuery()
		staticRandomDoubleRange()
		print()
		staticRandomI32Range()
		replaceTags()
		staticRandomI32()
		logError()
		nrand()
	}
	utf8 = {
		offset()
		codepoint()
		char()
		charpattern = "[
[02:32:17.959] [Warn] 	script = {
		updateDt()
		setUpdateDelta()
	}
	next()
	getmetatable()
	os = {
		clock()
		time()
		difftime()
	}
	sb = {
		setLogMap()
		makeUuid()
		printJson()
		makePerlinSource()
		logWarn()
		jsonMerge()
		makeRandomSource()
		interpolateSinEase()
		logInfo()
		staticRandomDouble()
		jsonQuery()
		staticRandomDoubleRange()
		print()
		staticRandomI32Range()
		replaceTags()
		staticRandomI32()
		logError()
		nrand()
	}
	utf8 = {
		offset()
		codepoint()
		char()
		charpattern = "[
[02:32:20.310] [Warn] 	script = {
		updateDt()
		setUpdateDelta()
	}
	next()
	getmetatable()
	os = {
		clock()
		time()
		difftime()
	}
	sb = {
		setLogMap()
		makeUuid()
		printJson()
		makePerlinSource()
		logWarn()
		jsonMerge()
		makeRandomSource()
		interpolateSinEase()
		logInfo()
		staticRandomDouble()
		jsonQuery()
		staticRandomDoubleRange()
		print()
		staticRandomI32Range()
		replaceTags()
		staticRandomI32()
		logError()
		nrand()
	}
	utf8 = {
		offset()
		codepoint()
		char()
		charpattern = "[
[02:32:21.775] [Warn] 	script = {
		updateDt()
		setUpdateDelta()
	}
	next()
	getmetatable()
	os = {
		clock()
		time()
		difftime()
	}
	sb = {
		setLogMap()
		makeUuid()
		printJson()
		makePerlinSource()
		logWarn()
		jsonMerge()
		makeRandomSource()
		interpolateSinEase()
		logInfo()
		staticRandomDouble()
		jsonQuery()
		staticRandomDoubleRange()
		print()
		staticRandomI32Range()
		replaceTags()
		staticRandomI32()
		logError()
		nrand()
	}
	utf8 = {
		offset()
		codepoint()
		char()
		charpattern = "[
[02:32:27.175] [Info] Skipped event recording for nonexistent entity 75448
[02:38:06.784] [Warn] 	script = {
		updateDt()
		setUpdateDelta()
	}
	next()
	getmetatable()
	os = {
		clock()
		time()
		difftime()
	}
	sb = {
		setLogMap()
		makeUuid()
		printJson()
		makePerlinSource()
		logWarn()
		jsonMerge()
		makeRandomSource()
		interpolateSinEase()
		logInfo()
		staticRandomDouble()
		jsonQuery()
		staticRandomDoubleRange()
		print()
		staticRandomI32Range()
		replaceTags()
		staticRandomI32()
		logError()
		nrand()
	}
	utf8 = {
		offset()
		codepoint()
		char()
		charpattern = "[
[02:38:09.149] [Warn] 	script = {
		updateDt()
		setUpdateDelta()
	}
	next()
	getmetatable()
	os = {
		clock()
		time()
		difftime()
	}
	sb = {
		setLogMap()
		makeUuid()
		printJson()
		makePerlinSource()
		logWarn()
		jsonMerge()
		makeRandomSource()
		interpolateSinEase()
		logInfo()
		staticRandomDouble()
		jsonQuery()
		staticRandomDoubleRange()
		print()
		staticRandomI32Range()
		replaceTags()
		staticRandomI32()
		logError()
		nrand()
	}
	utf8 = {
		offset()
		codepoint()
		char()
		charpattern = "[
[02:38:25.075] [Warn] [IC] No sort value for: breakable
[02:38:25.077] [Info] [IC] [Sort] Time elapsed: 0.002
[02:38:32.191] [Info] [IC] [Sort] Time elapsed: 0.001
[02:38:37.863] [Warn] 	script = {
		updateDt()
		setUpdateDelta()
	}
	next()
	getmetatable()
	os = {
		clock()
		time()
		difftime()
	}
	sb = {
		setLogMap()
		makeUuid()
		printJson()
		makePerlinSource()
		logWarn()
		jsonMerge()
		makeRandomSource()
		interpolateSinEase()
		logInfo()
		staticRandomDouble()
		jsonQuery()
		staticRandomDoubleRange()
		print()
		staticRandomI32Range()
		replaceTags()
		staticRandomI32()
		logError()
		nrand()
	}
	utf8 = {
		offset()
		codepoint()
		char()
		charpattern = "[
[02:38:54.129] [Warn] 	script = {
		updateDt()
		setUpdateDelta()
	}
	next()
	getmetatable()
	os = {
		clock()
		time()
		difftime()
	}
	sb = {
		setLogMap()
		makeUuid()
		printJson()
		makePerlinSource()
		logWarn()
		jsonMerge()
		makeRandomSource()
		interpolateSinEase()
		logInfo()
		staticRandomDouble()
		jsonQuery()
		staticRandomDoubleRange()
		print()
		staticRandomI32Range()
		replaceTags()
		staticRandomI32()
		logError()
		nrand()
	}
	utf8 = {
		offset()
		codepoint()
		char()
		charpattern = "[
[02:44:27.957] [Info] Skipped event recording for nonexistent entity 117591
[02:44:45.232] [Info] UniverseServer: Loading client ship world ClientShipWorld:40d0c64bbadbfcac62e62a636f4f2308
[02:44:46.332] [Info] UniverseServer: Warping player 1 to ClientShipWorld:40d0c64bbadbfcac62e62a636f4f2308
[02:44:46.373] [Info] Client received world stop packet, leaving: Removed
[02:44:46.461] [Info] UniverseServer: Stopping idle world CelestialWorld:-549421000:-174072045:85931705:2
[02:44:49.720] [Warn] 	_VERSION = "Lua 5.3"
	tostring()
	os = {
		clock()
		time()
		difftime()
	}
	utf8 = {
		len()
		codes()
		offset()
		codepoint()
		charpattern = "[
[02:44:54.341] [Warn] 	_VERSION = "Lua 5.3"
	tostring()
	os = {
		clock()
		time()
		difftime()
	}
	utf8 = {
		len()
		codes()
		offset()
		codepoint()
		charpattern = "[
[02:45:35.431] [Info] UniverseServer: Creating temporary world file for world InstanceWorld:outpost:-:-
[02:45:35.432] [Info] UniverseServer: Creating temporary instance world 'InstanceWorld:outpost:-:-'
[02:45:35.444] [Info] Placing dungeon outpost
[02:45:35.511] [Info] Forcing generation of dungeon outpost
[02:45:35.559] [Info] Placing dungeon at (0, 750)
[02:45:38.825] [Info] Protected dungeonIds for world set to (0)
[02:45:38.911] [Info] Generating dungeon outpost_techscientist1
[02:45:38.911] [Info] Placing dungeon at (355, 636)
[02:45:38.916] [Warn] Failed to place dungeon object: drip1 direction: 1 position: (372, 634)
[02:45:38.918] [Info] Generating dungeon outpost_terramart
[02:45:38.918] [Info] Placing dungeon at (332, 621)
[02:45:38.922] [Info] Generating dungeon outpost_frogfurnishing
[02:45:38.922] [Info] Placing dungeon at (332, 655)
[02:45:38.926] [Info] Generating dungeon outpost_2stopshop
[02:45:38.926] [Info] Placing dungeon at (427, 618)
[02:45:38.930] [Info] Generating dungeon outpost_ursaminer
[02:45:38.930] [Info] Placing dungeon at (406, 651)
[02:45:38.933] [Info] Generating dungeon outpost_techscientist2
[02:45:38.934] [Info] Placing dungeon at (355, 636)
[02:45:38.940] [Warn] Failed to place dungeon object: drip1 direction: 1 position: (372, 634)
[02:45:38.942] [Info] Generating dungeon outpost_beakeasy1
[02:45:38.942] [Info] Placing dungeon at (447, 567)
[02:45:38.951] [Info] Generating dungeon outpost_beakeasy2
[02:45:38.951] [Info] Placing dungeon at (429, 567)
[02:45:38.956] [Info] Generating dungeon outpost_nuru
[02:45:38.956] [Info] Placing dungeon at (838, 608)
[02:45:38.973] [Info] Generating dungeon outpost_penguinbay
[02:45:38.973] [Info] Placing dungeon at (452, 627)
[02:45:38.977] [Warn] Failed to place dungeon object: outpostkeypad direction: 1 position: (461, 611)
[02:45:38.990] [Info] Generating dungeon outpost_signstore
[02:45:38.990] [Info] Placing dungeon at (308, 640)
[02:45:39.686] [Info] UniverseServer: Warping player 1 to InstanceWorld:outpost:-:-=outpost
[02:45:39.706] [Info] Client received world stop packet, leaving: Removed
[02:45:39.823] [Info] UniverseServer: Stopping idle world ClientShipWorld:40d0c64bbadbfcac62e62a636f4f2308
[02:46:02.369] [Info] UniverseServer: Loading client ship world ClientShipWorld:40d0c64bbadbfcac62e62a636f4f2308
[02:46:03.331] [Info] UniverseServer: Warping player 1 to ClientShipWorld:40d0c64bbadbfcac62e62a636f4f2308
[02:46:03.450] [Info] UniverseServer: Stopping idle world InstanceWorld:outpost:-:-
[02:46:03.460] [Info] Client received world stop packet, leaving: Removed
[02:46:04.096] [Info] UniverseServer: Expiring temporary world InstanceWorld:outpost:-:-
[02:46:23.873] [Info] UniverseServer: Loading celestial world -549421000:-174072045:85931705:2
[02:46:24.274] [Info] UniverseServer: Warping player 1 to CelestialWorld:-549421000:-174072045:85931705:2
[02:46:24.287] [Info] UniverseServer: Stopping idle world ClientShipWorld:40d0c64bbadbfcac62e62a636f4f2308
[02:46:24.289] [Info] Client received world stop packet, leaving: Removed
[02:56:13.248] [Warn] 	setmetatable()
	rawlen()
	rawset()
	require()
	root = {
		isTreasurePool()
		projectileConfig()
		treeFoliageDirectory()
		treeStemDirectory()
		monsterPortrait()
		npcVariant()
		monsterMovementSettings()
		nonEmptyRegion()
		setConfiguration()
		monsterSkillParameter()
		setConfigurationPath()
		generateName()
		techType()
		getConfiguration()
		assetJson()
		projectileGravityMultiplier()
		itemHasTag()
		imageSize()
		itemTags()
		behaviorModule()
		getConfigurationPath()
		itemType()
		recipesForItem()
		createItem()
		materialFootstepSound()
		npcPortrait()
		evalFunction2()
		techConfig()
		liquidStatusEffects()
		materialPath()
		tenantConfig()
		makeCurrentVersionedJson()
		materialMiningSound()
		questConfig()
		npcConfig()
		materialHealth()
		getMatchingTenants()
		hasTech()
		evalFunction()
		itemConfig()
		imageSpaces()
		createBiome()
		loadVersionedJson()
		createTreasure()
	}
	ic = {
		sortFunc()
		checkStack()
		sort()
		getQuality()
		searchButton()
		renameThis()
		searchBox()
		clientVersion = 1
		stripColor()
		quickstack()
		renameButton()
		sort_relative()
		lock()
		itemConfig()
		amountEquipped()
		itemAmount()
		giveBack()
	}
	table = {
		pack()
		sort()
		insert()
		remove()
		move()
		unpack()
		concat()
	}
	config = {
		getParameter()
	}
	pairs()
	tostring()
	string = {
		char()
		format()
		match()
		rep()
		byte()
		reverse()
		lower()
		find()
		unpack()
		dump()
		upper()
		len()
		pack()
		packsize()
		gsub()
		gmatch()
		sub()
	}
	error()
	jremove()
	os = {
		difftime()
		clock()
		time()
	}
	jsize()
	jresize()
	type()
	rawequal()
	_VERSION = "Lua 5.3"
	script = {
		updateDt()
		setUpdateDelta()
	}
	math = {
		sqrt()
		acos()
		floor()
		pi = 3.1415926535898
		tan()
		mininteger = -9223372036854775808
		maxinteger = 9223372036854775807
		atan()
		abs()
		ceil()
		huge = inf
		ult()
		type()
		min()
		cos()
		deg()
		log()
		randomseed()
		asin()
		sin()
		random()
		rad()
		modf()
		max()
		exp()
		fmod()
		tointeger()
	}
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	next()
	coroutine = {
		running()
		isyieldable()
		wrap()
		status()
		create()
		yield()
		resume()
	}
	ipairs()
	update()
	print()
	pcall()
	tonumber()
	world = {
		lightLevel()
		sendEntityMessage()
		gravity()
		entityDamageTeam()
		entityCanDamage()
		spawnStagehand()
		nearestTo()
		itemDropQuery()
		containerConsume()
		entityPosition()
		rectCollision()
		entityGender()
		material()
		lineTileCollision()
		distance()
		placeMaterial()
		objectQuery()
		platformerPathStart()
		entityAggressive()
		containerConsumeAt()
		entityHealth()
		destroyLiquid()
		spawnLiquid()
		containerStackItems()
		containerTakeAt()
		setProperty()
		timeOfDay()
		spawnMonster()
		day()
		time()
		spawnItem()
		getObjectParameter()
		isTileProtected()
		spawnVehicle()
		objectSpaces()
		loungeableQuery()
		spawnTreasure()
		stagehandType()
		findPlatformerPath()
		polyContains()
		tileIsOccupied()
		debugText()
		monsterType()
		npcLineQuery()
		resolvePolyCollision()
		farmableStage()
		placeObject()
		polyCollision()
		entityVelocity()
		magnitude()
		containerOpen()
		lineCollision()
		entityPortrait()
		pointCollision()
		entityExists()
		spawnNpc()
		underground()
		entityMoney()
		entitySpecies()
		entityDescription()
		pointTileCollision()
		loungeableOccupied()
		xwrap()
		objectLineQuery()
		spawnProjectile()
		entityQuery()
		containerSwapItems()
		entityUniqueId()
		dayLength()
		containerTakeAll()
		entityType()
		findUniqueEntity()
		callScriptedEntity()
		containerAvailable()
		entityName()
		containerPutItemsAt()
		containerAddItems()
		containerItemsFitWhere()
		windLevel()
		entityLineQuery()
		playerQuery()
		isMonster()
		containerItemAt()
		liquidAlongLine()
		liquidAt()
		monsterQuery()
		placeMod()
		getProperty()
		objectAt()
		containerClose()
		containerTakeNumItemsAt()
		npcType()
		threatLevel()
		collisionBlocksAlongLine()
		damageTiles()
		containerItemApply()
		entityHasCountOfItem()
		containerSize()
		containerItems()
		debugPoint()
		entityHandItemDescriptor()
		containerSwapItemsNoCombine()
		containerItemsCanFit()
		entityHandItem()
		npcQuery()
		damageTileArea()
		debugPoly()
		debugLine()
		mod()
		rectTileCollision()
		breathable()
		isNpc()
	}
	player = {
		confirm()
		altHandItem()
		essentialItem()
		setIntroComplete()
		availableTechs()
		serverUuid()
		lounge()
		giveBlueprint()
		enableTech()
		playCinematic()
		itemsWithTag()
		consumeTaggedItem()
		equipTech()
		equippedItem()
		primaryHandItemTags()
		setEquippedItem()
		gender()
		makeTechUnavailable()
		warp()
		getItemWithParameter()
		introComplete()
		upgradeShip()
		consumeItem()
		setUniverseFlag()
		recordEvent()
		equippedTech()
		altHandItemTags()
		ownShipWorldId()
		giveItem()
		enableMission()
		hasItem()
		hasQuest()
		consumeItemWithParameter()
		canStartQuest()
		shipUpgrades()
		isLounging()
		radioMessage()
		giveEssentialItem()
		primaryHandItem()
		worldId()
		enabledTechs()
		startQuest()
		playTime()
		inventoryTags()
		hasCountOfItem()
		completeMission()
		addBookmark()
		hasCompletedQuest()
		hasItemWithParameter()
		species()
		makeTechAvailable()
		removeEssentialItem()
		cleanupItems()
	}
	widget = {
		removeListItem()
		getSliderValue()
		setImageScale()
		addListItem()
		setData()
		setButtonImage()
		getSize()
		getPosition()
		setVisible()
		getText()
		setButtonOverlayImage()
		setButtonCheckedImages()
		playSound()
		focus()
		setText()
		setProgress()
		setOptionVisible()
		setImageRotation()
		setSelectedOption()
		setListSelected()
		getData()
		clearListItems()
		getChecked()
		setButtonImages()
		setButtonEnabled()
		setChecked()
		setSize()
		getSelectedOption()
		setFontColor()
		setOptionEnabled()
		setPosition()
		getListSelected()
		itemGridItems()
		setImage()
		blur()
	}
	status = {
		clearPersistentEffects()
		statPositive()
		inflictedHitsSince()
		getPersistentEffects()
		modifyResource()
		setResource()
		setResourceLocked()
		damageTakenSince()
		resetResource()
		stat()
		setStatusProperty()
		addEphemeralEffect()
		consumeResource()
		resetAllResources()
		addPersistentEffects()
		statusProperty()
		inflictedDamageSince()
		clearEphemeralEffects()
		overConsumeResource()
		activeUniqueStatusEffectSummary()
		removeEphemeralEffect()
		setResourcePercentage()
		addPersistentEffect()
		resourcePositive()
		resource()
		addEphemeralEffects()
		clearAllPersistentEffects()
		resourceNames()
		resourceLocked()
		isResource()
		resourceMax()
		giveResource()
		resourcePercentage()
		modifyResourcePercentage()
		setPersistentEffects()
	}
	sb = {
		setLogMap()
		makeRandomSource()
		logInfo()
		replaceTags()
		jsonMerge()
		logError()
		print()
		jsonQuery()
		printJson()
		staticRandomDoubleRange()
		makePerlinSource()
		nrand()
		logWarn()
		makeUuid()
		staticRandomDouble()
		staticRandomI32Range()
		interpolateSinEase()
		staticRandomI32()
	}
	self = {
	}
	jobject()
	init()
	p()
	utf8 = {
		char()
		codes()
		codepoint()
		offset()
		charpattern = "[
[02:56:23.024] [Info] [IC] [Sort] Time elapsed: 0
[02:58:08.844] [Info] Chat: <Esther> Hm, I wonder...
[02:59:19.897] [Warn] 	setmetatable()
	rawlen()
	rawset()
	require()
	root = {
		isTreasurePool()
		projectileConfig()
		treeFoliageDirectory()
		treeStemDirectory()
		monsterPortrait()
		npcVariant()
		monsterMovementSettings()
		nonEmptyRegion()
		setConfiguration()
		monsterSkillParameter()
		setConfigurationPath()
		generateName()
		techType()
		getConfiguration()
		assetJson()
		projectileGravityMultiplier()
		itemHasTag()
		imageSize()
		itemTags()
		behaviorModule()
		getConfigurationPath()
		itemType()
		recipesForItem()
		createItem()
		materialFootstepSound()
		npcPortrait()
		evalFunction2()
		techConfig()
		liquidStatusEffects()
		materialPath()
		tenantConfig()
		makeCurrentVersionedJson()
		materialMiningSound()
		questConfig()
		npcConfig()
		materialHealth()
		getMatchingTenants()
		hasTech()
		evalFunction()
		itemConfig()
		imageSpaces()
		createBiome()
		loadVersionedJson()
		createTreasure()
	}
	ic = {
		sortFunc()
		checkStack()
		sort()
		getQuality()
		searchButton()
		renameThis()
		searchBox()
		clientVersion = 1
		stripColor()
		quickstack()
		renameButton()
		sort_relative()
		lock()
		itemConfig()
		amountEquipped()
		itemAmount()
		giveBack()
	}
	table = {
		pack()
		sort()
		insert()
		remove()
		move()
		unpack()
		concat()
	}
	config = {
		getParameter()
	}
	pairs()
	tostring()
	string = {
		char()
		format()
		match()
		rep()
		byte()
		reverse()
		lower()
		find()
		unpack()
		dump()
		upper()
		len()
		pack()
		packsize()
		gsub()
		gmatch()
		sub()
	}
	error()
	jremove()
	os = {
		difftime()
		clock()
		time()
	}
	jsize()
	jresize()
	type()
	rawequal()
	_VERSION = "Lua 5.3"
	script = {
		updateDt()
		setUpdateDelta()
	}
	math = {
		sqrt()
		acos()
		floor()
		pi = 3.1415926535898
		tan()
		mininteger = -9223372036854775808
		maxinteger = 9223372036854775807
		atan()
		abs()
		ceil()
		huge = inf
		ult()
		type()
		min()
		cos()
		deg()
		log()
		randomseed()
		asin()
		sin()
		random()
		rad()
		modf()
		max()
		exp()
		fmod()
		tointeger()
	}
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	next()
	coroutine = {
		running()
		isyieldable()
		wrap()
		status()
		create()
		yield()
		resume()
	}
	ipairs()
	update()
	print()
	pcall()
	tonumber()
	world = {
		lightLevel()
		sendEntityMessage()
		gravity()
		entityDamageTeam()
		entityCanDamage()
		spawnStagehand()
		nearestTo()
		itemDropQuery()
		containerConsume()
		entityPosition()
		rectCollision()
		entityGender()
		material()
		lineTileCollision()
		distance()
		placeMaterial()
		objectQuery()
		platformerPathStart()
		entityAggressive()
		containerConsumeAt()
		entityHealth()
		destroyLiquid()
		spawnLiquid()
		containerStackItems()
		containerTakeAt()
		setProperty()
		timeOfDay()
		spawnMonster()
		day()
		time()
		spawnItem()
		getObjectParameter()
		isTileProtected()
		spawnVehicle()
		objectSpaces()
		loungeableQuery()
		spawnTreasure()
		stagehandType()
		findPlatformerPath()
		polyContains()
		tileIsOccupied()
		debugText()
		monsterType()
		npcLineQuery()
		resolvePolyCollision()
		farmableStage()
		placeObject()
		polyCollision()
		entityVelocity()
		magnitude()
		containerOpen()
		lineCollision()
		entityPortrait()
		pointCollision()
		entityExists()
		spawnNpc()
		underground()
		entityMoney()
		entitySpecies()
		entityDescription()
		pointTileCollision()
		loungeableOccupied()
		xwrap()
		objectLineQuery()
		spawnProjectile()
		entityQuery()
		containerSwapItems()
		entityUniqueId()
		dayLength()
		containerTakeAll()
		entityType()
		findUniqueEntity()
		callScriptedEntity()
		containerAvailable()
		entityName()
		containerPutItemsAt()
		containerAddItems()
		containerItemsFitWhere()
		windLevel()
		entityLineQuery()
		playerQuery()
		isMonster()
		containerItemAt()
		liquidAlongLine()
		liquidAt()
		monsterQuery()
		placeMod()
		getProperty()
		objectAt()
		containerClose()
		containerTakeNumItemsAt()
		npcType()
		threatLevel()
		collisionBlocksAlongLine()
		damageTiles()
		containerItemApply()
		entityHasCountOfItem()
		containerSize()
		containerItems()
		debugPoint()
		entityHandItemDescriptor()
		containerSwapItemsNoCombine()
		containerItemsCanFit()
		entityHandItem()
		npcQuery()
		damageTileArea()
		debugPoly()
		debugLine()
		mod()
		rectTileCollision()
		breathable()
		isNpc()
	}
	player = {
		confirm()
		altHandItem()
		essentialItem()
		setIntroComplete()
		availableTechs()
		serverUuid()
		lounge()
		giveBlueprint()
		enableTech()
		playCinematic()
		itemsWithTag()
		consumeTaggedItem()
		equipTech()
		equippedItem()
		primaryHandItemTags()
		setEquippedItem()
		gender()
		makeTechUnavailable()
		warp()
		getItemWithParameter()
		introComplete()
		upgradeShip()
		consumeItem()
		setUniverseFlag()
		recordEvent()
		equippedTech()
		altHandItemTags()
		ownShipWorldId()
		giveItem()
		enableMission()
		hasItem()
		hasQuest()
		consumeItemWithParameter()
		canStartQuest()
		shipUpgrades()
		isLounging()
		radioMessage()
		giveEssentialItem()
		primaryHandItem()
		worldId()
		enabledTechs()
		startQuest()
		playTime()
		inventoryTags()
		hasCountOfItem()
		completeMission()
		addBookmark()
		hasCompletedQuest()
		hasItemWithParameter()
		species()
		makeTechAvailable()
		removeEssentialItem()
		cleanupItems()
	}
	widget = {
		removeListItem()
		getSliderValue()
		setImageScale()
		addListItem()
		setData()
		setButtonImage()
		getSize()
		getPosition()
		setVisible()
		getText()
		setButtonOverlayImage()
		setButtonCheckedImages()
		playSound()
		focus()
		setText()
		setProgress()
		setOptionVisible()
		setImageRotation()
		setSelectedOption()
		setListSelected()
		getData()
		clearListItems()
		getChecked()
		setButtonImages()
		setButtonEnabled()
		setChecked()
		setSize()
		getSelectedOption()
		setFontColor()
		setOptionEnabled()
		setPosition()
		getListSelected()
		itemGridItems()
		setImage()
		blur()
	}
	status = {
		clearPersistentEffects()
		statPositive()
		inflictedHitsSince()
		getPersistentEffects()
		modifyResource()
		setResource()
		setResourceLocked()
		damageTakenSince()
		resetResource()
		stat()
		setStatusProperty()
		addEphemeralEffect()
		consumeResource()
		resetAllResources()
		addPersistentEffects()
		statusProperty()
		inflictedDamageSince()
		clearEphemeralEffects()
		overConsumeResource()
		activeUniqueStatusEffectSummary()
		removeEphemeralEffect()
		setResourcePercentage()
		addPersistentEffect()
		resourcePositive()
		resource()
		addEphemeralEffects()
		clearAllPersistentEffects()
		resourceNames()
		resourceLocked()
		isResource()
		resourceMax()
		giveResource()
		resourcePercentage()
		modifyResourcePercentage()
		setPersistentEffects()
	}
	sb = {
		setLogMap()
		makeRandomSource()
		logInfo()
		replaceTags()
		jsonMerge()
		logError()
		print()
		jsonQuery()
		printJson()
		staticRandomDoubleRange()
		makePerlinSource()
		nrand()
		logWarn()
		makeUuid()
		staticRandomDouble()
		staticRandomI32Range()
		interpolateSinEase()
		staticRandomI32()
	}
	self = {
	}
	jobject()
	init()
	p()
	utf8 = {
		char()
		codes()
		codepoint()
		offset()
		charpattern = "[
[03:00:41.596] [Warn] 	setmetatable()
	rawlen()
	rawset()
	require()
	root = {
		isTreasurePool()
		projectileConfig()
		treeFoliageDirectory()
		treeStemDirectory()
		monsterPortrait()
		npcVariant()
		monsterMovementSettings()
		nonEmptyRegion()
		setConfiguration()
		monsterSkillParameter()
		setConfigurationPath()
		generateName()
		techType()
		getConfiguration()
		assetJson()
		projectileGravityMultiplier()
		itemHasTag()
		imageSize()
		itemTags()
		behaviorModule()
		getConfigurationPath()
		itemType()
		recipesForItem()
		createItem()
		materialFootstepSound()
		npcPortrait()
		evalFunction2()
		techConfig()
		liquidStatusEffects()
		materialPath()
		tenantConfig()
		makeCurrentVersionedJson()
		materialMiningSound()
		questConfig()
		npcConfig()
		materialHealth()
		getMatchingTenants()
		hasTech()
		evalFunction()
		itemConfig()
		imageSpaces()
		createBiome()
		loadVersionedJson()
		createTreasure()
	}
	ic = {
		sortFunc()
		checkStack()
		sort()
		getQuality()
		searchButton()
		renameThis()
		searchBox()
		clientVersion = 1
		stripColor()
		quickstack()
		renameButton()
		sort_relative()
		lock()
		itemConfig()
		amountEquipped()
		itemAmount()
		giveBack()
	}
	table = {
		pack()
		sort()
		insert()
		remove()
		move()
		unpack()
		concat()
	}
	config = {
		getParameter()
	}
	pairs()
	tostring()
	string = {
		char()
		format()
		match()
		rep()
		byte()
		reverse()
		lower()
		find()
		unpack()
		dump()
		upper()
		len()
		pack()
		packsize()
		gsub()
		gmatch()
		sub()
	}
	error()
	jremove()
	os = {
		difftime()
		clock()
		time()
	}
	jsize()
	jresize()
	type()
	rawequal()
	_VERSION = "Lua 5.3"
	script = {
		updateDt()
		setUpdateDelta()
	}
	math = {
		sqrt()
		acos()
		floor()
		pi = 3.1415926535898
		tan()
		mininteger = -9223372036854775808
		maxinteger = 9223372036854775807
		atan()
		abs()
		ceil()
		huge = inf
		ult()
		type()
		min()
		cos()
		deg()
		log()
		randomseed()
		asin()
		sin()
		random()
		rad()
		modf()
		max()
		exp()
		fmod()
		tointeger()
	}
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	next()
	coroutine = {
		running()
		isyieldable()
		wrap()
		status()
		create()
		yield()
		resume()
	}
	ipairs()
	update()
	print()
	pcall()
	tonumber()
	world = {
		lightLevel()
		sendEntityMessage()
		gravity()
		entityDamageTeam()
		entityCanDamage()
		spawnStagehand()
		nearestTo()
		itemDropQuery()
		containerConsume()
		entityPosition()
		rectCollision()
		entityGender()
		material()
		lineTileCollision()
		distance()
		placeMaterial()
		objectQuery()
		platformerPathStart()
		entityAggressive()
		containerConsumeAt()
		entityHealth()
		destroyLiquid()
		spawnLiquid()
		containerStackItems()
		containerTakeAt()
		setProperty()
		timeOfDay()
		spawnMonster()
		day()
		time()
		spawnItem()
		getObjectParameter()
		isTileProtected()
		spawnVehicle()
		objectSpaces()
		loungeableQuery()
		spawnTreasure()
		stagehandType()
		findPlatformerPath()
		polyContains()
		tileIsOccupied()
		debugText()
		monsterType()
		npcLineQuery()
		resolvePolyCollision()
		farmableStage()
		placeObject()
		polyCollision()
		entityVelocity()
		magnitude()
		containerOpen()
		lineCollision()
		entityPortrait()
		pointCollision()
		entityExists()
		spawnNpc()
		underground()
		entityMoney()
		entitySpecies()
		entityDescription()
		pointTileCollision()
		loungeableOccupied()
		xwrap()
		objectLineQuery()
		spawnProjectile()
		entityQuery()
		containerSwapItems()
		entityUniqueId()
		dayLength()
		containerTakeAll()
		entityType()
		findUniqueEntity()
		callScriptedEntity()
		containerAvailable()
		entityName()
		containerPutItemsAt()
		containerAddItems()
		containerItemsFitWhere()
		windLevel()
		entityLineQuery()
		playerQuery()
		isMonster()
		containerItemAt()
		liquidAlongLine()
		liquidAt()
		monsterQuery()
		placeMod()
		getProperty()
		objectAt()
		containerClose()
		containerTakeNumItemsAt()
		npcType()
		threatLevel()
		collisionBlocksAlongLine()
		damageTiles()
		containerItemApply()
		entityHasCountOfItem()
		containerSize()
		containerItems()
		debugPoint()
		entityHandItemDescriptor()
		containerSwapItemsNoCombine()
		containerItemsCanFit()
		entityHandItem()
		npcQuery()
		damageTileArea()
		debugPoly()
		debugLine()
		mod()
		rectTileCollision()
		breathable()
		isNpc()
	}
	player = {
		confirm()
		altHandItem()
		essentialItem()
		setIntroComplete()
		availableTechs()
		serverUuid()
		lounge()
		giveBlueprint()
		enableTech()
		playCinematic()
		itemsWithTag()
		consumeTaggedItem()
		equipTech()
		equippedItem()
		primaryHandItemTags()
		setEquippedItem()
		gender()
		makeTechUnavailable()
		warp()
		getItemWithParameter()
		introComplete()
		upgradeShip()
		consumeItem()
		setUniverseFlag()
		recordEvent()
		equippedTech()
		altHandItemTags()
		ownShipWorldId()
		giveItem()
		enableMission()
		hasItem()
		hasQuest()
		consumeItemWithParameter()
		canStartQuest()
		shipUpgrades()
		isLounging()
		radioMessage()
		giveEssentialItem()
		primaryHandItem()
		worldId()
		enabledTechs()
		startQuest()
		playTime()
		inventoryTags()
		hasCountOfItem()
		completeMission()
		addBookmark()
		hasCompletedQuest()
		hasItemWithParameter()
		species()
		makeTechAvailable()
		removeEssentialItem()
		cleanupItems()
	}
	widget = {
		removeListItem()
		getSliderValue()
		setImageScale()
		addListItem()
		setData()
		setButtonImage()
		getSize()
		getPosition()
		setVisible()
		getText()
		setButtonOverlayImage()
		setButtonCheckedImages()
		playSound()
		focus()
		setText()
		setProgress()
		setOptionVisible()
		setImageRotation()
		setSelectedOption()
		setListSelected()
		getData()
		clearListItems()
		getChecked()
		setButtonImages()
		setButtonEnabled()
		setChecked()
		setSize()
		getSelectedOption()
		setFontColor()
		setOptionEnabled()
		setPosition()
		getListSelected()
		itemGridItems()
		setImage()
		blur()
	}
	status = {
		clearPersistentEffects()
		statPositive()
		inflictedHitsSince()
		getPersistentEffects()
		modifyResource()
		setResource()
		setResourceLocked()
		damageTakenSince()
		resetResource()
		stat()
		setStatusProperty()
		addEphemeralEffect()
		consumeResource()
		resetAllResources()
		addPersistentEffects()
		statusProperty()
		inflictedDamageSince()
		clearEphemeralEffects()
		overConsumeResource()
		activeUniqueStatusEffectSummary()
		removeEphemeralEffect()
		setResourcePercentage()
		addPersistentEffect()
		resourcePositive()
		resource()
		addEphemeralEffects()
		clearAllPersistentEffects()
		resourceNames()
		resourceLocked()
		isResource()
		resourceMax()
		giveResource()
		resourcePercentage()
		modifyResourcePercentage()
		setPersistentEffects()
	}
	sb = {
		setLogMap()
		makeRandomSource()
		logInfo()
		replaceTags()
		jsonMerge()
		logError()
		print()
		jsonQuery()
		printJson()
		staticRandomDoubleRange()
		makePerlinSource()
		nrand()
		logWarn()
		makeUuid()
		staticRandomDouble()
		staticRandomI32Range()
		interpolateSinEase()
		staticRandomI32()
	}
	self = {
	}
	jobject()
	init()
	p()
	utf8 = {
		char()
		codes()
		codepoint()
		offset()
		charpattern = "[
[03:00:43.295] [Warn] 	setmetatable()
	rawlen()
	rawset()
	require()
	root = {
		isTreasurePool()
		projectileConfig()
		treeFoliageDirectory()
		treeStemDirectory()
		monsterPortrait()
		npcVariant()
		monsterMovementSettings()
		nonEmptyRegion()
		setConfiguration()
		monsterSkillParameter()
		setConfigurationPath()
		generateName()
		techType()
		getConfiguration()
		assetJson()
		projectileGravityMultiplier()
		itemHasTag()
		imageSize()
		itemTags()
		behaviorModule()
		getConfigurationPath()
		itemType()
		recipesForItem()
		createItem()
		materialFootstepSound()
		npcPortrait()
		evalFunction2()
		techConfig()
		liquidStatusEffects()
		materialPath()
		tenantConfig()
		makeCurrentVersionedJson()
		materialMiningSound()
		questConfig()
		npcConfig()
		materialHealth()
		getMatchingTenants()
		hasTech()
		evalFunction()
		itemConfig()
		imageSpaces()
		createBiome()
		loadVersionedJson()
		createTreasure()
	}
	ic = {
		sortFunc()
		checkStack()
		sort()
		getQuality()
		searchButton()
		renameThis()
		searchBox()
		clientVersion = 1
		stripColor()
		quickstack()
		renameButton()
		sort_relative()
		lock()
		itemConfig()
		amountEquipped()
		itemAmount()
		giveBack()
	}
	table = {
		pack()
		sort()
		insert()
		remove()
		move()
		unpack()
		concat()
	}
	config = {
		getParameter()
	}
	pairs()
	tostring()
	string = {
		char()
		format()
		match()
		rep()
		byte()
		reverse()
		lower()
		find()
		unpack()
		dump()
		upper()
		len()
		pack()
		packsize()
		gsub()
		gmatch()
		sub()
	}
	error()
	jremove()
	os = {
		difftime()
		clock()
		time()
	}
	jsize()
	jresize()
	type()
	rawequal()
	_VERSION = "Lua 5.3"
	script = {
		updateDt()
		setUpdateDelta()
	}
	math = {
		sqrt()
		acos()
		floor()
		pi = 3.1415926535898
		tan()
		mininteger = -9223372036854775808
		maxinteger = 9223372036854775807
		atan()
		abs()
		ceil()
		huge = inf
		ult()
		type()
		min()
		cos()
		deg()
		log()
		randomseed()
		asin()
		sin()
		random()
		rad()
		modf()
		max()
		exp()
		fmod()
		tointeger()
	}
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	next()
	coroutine = {
		running()
		isyieldable()
		wrap()
		status()
		create()
		yield()
		resume()
	}
	ipairs()
	update()
	print()
	pcall()
	tonumber()
	world = {
		lightLevel()
		sendEntityMessage()
		gravity()
		entityDamageTeam()
		entityCanDamage()
		spawnStagehand()
		nearestTo()
		itemDropQuery()
		containerConsume()
		entityPosition()
		rectCollision()
		entityGender()
		material()
		lineTileCollision()
		distance()
		placeMaterial()
		objectQuery()
		platformerPathStart()
		entityAggressive()
		containerConsumeAt()
		entityHealth()
		destroyLiquid()
		spawnLiquid()
		containerStackItems()
		containerTakeAt()
		setProperty()
		timeOfDay()
		spawnMonster()
		day()
		time()
		spawnItem()
		getObjectParameter()
		isTileProtected()
		spawnVehicle()
		objectSpaces()
		loungeableQuery()
		spawnTreasure()
		stagehandType()
		findPlatformerPath()
		polyContains()
		tileIsOccupied()
		debugText()
		monsterType()
		npcLineQuery()
		resolvePolyCollision()
		farmableStage()
		placeObject()
		polyCollision()
		entityVelocity()
		magnitude()
		containerOpen()
		lineCollision()
		entityPortrait()
		pointCollision()
		entityExists()
		spawnNpc()
		underground()
		entityMoney()
		entitySpecies()
		entityDescription()
		pointTileCollision()
		loungeableOccupied()
		xwrap()
		objectLineQuery()
		spawnProjectile()
		entityQuery()
		containerSwapItems()
		entityUniqueId()
		dayLength()
		containerTakeAll()
		entityType()
		findUniqueEntity()
		callScriptedEntity()
		containerAvailable()
		entityName()
		containerPutItemsAt()
		containerAddItems()
		containerItemsFitWhere()
		windLevel()
		entityLineQuery()
		playerQuery()
		isMonster()
		containerItemAt()
		liquidAlongLine()
		liquidAt()
		monsterQuery()
		placeMod()
		getProperty()
		objectAt()
		containerClose()
		containerTakeNumItemsAt()
		npcType()
		threatLevel()
		collisionBlocksAlongLine()
		damageTiles()
		containerItemApply()
		entityHasCountOfItem()
		containerSize()
		containerItems()
		debugPoint()
		entityHandItemDescriptor()
		containerSwapItemsNoCombine()
		containerItemsCanFit()
		entityHandItem()
		npcQuery()
		damageTileArea()
		debugPoly()
		debugLine()
		mod()
		rectTileCollision()
		breathable()
		isNpc()
	}
	player = {
		confirm()
		altHandItem()
		essentialItem()
		setIntroComplete()
		availableTechs()
		serverUuid()
		lounge()
		giveBlueprint()
		enableTech()
		playCinematic()
		itemsWithTag()
		consumeTaggedItem()
		equipTech()
		equippedItem()
		primaryHandItemTags()
		setEquippedItem()
		gender()
		makeTechUnavailable()
		warp()
		getItemWithParameter()
		introComplete()
		upgradeShip()
		consumeItem()
		setUniverseFlag()
		recordEvent()
		equippedTech()
		altHandItemTags()
		ownShipWorldId()
		giveItem()
		enableMission()
		hasItem()
		hasQuest()
		consumeItemWithParameter()
		canStartQuest()
		shipUpgrades()
		isLounging()
		radioMessage()
		giveEssentialItem()
		primaryHandItem()
		worldId()
		enabledTechs()
		startQuest()
		playTime()
		inventoryTags()
		hasCountOfItem()
		completeMission()
		addBookmark()
		hasCompletedQuest()
		hasItemWithParameter()
		species()
		makeTechAvailable()
		removeEssentialItem()
		cleanupItems()
	}
	widget = {
		removeListItem()
		getSliderValue()
		setImageScale()
		addListItem()
		setData()
		setButtonImage()
		getSize()
		getPosition()
		setVisible()
		getText()
		setButtonOverlayImage()
		setButtonCheckedImages()
		playSound()
		focus()
		setText()
		setProgress()
		setOptionVisible()
		setImageRotation()
		setSelectedOption()
		setListSelected()
		getData()
		clearListItems()
		getChecked()
		setButtonImages()
		setButtonEnabled()
		setChecked()
		setSize()
		getSelectedOption()
		setFontColor()
		setOptionEnabled()
		setPosition()
		getListSelected()
		itemGridItems()
		setImage()
		blur()
	}
	status = {
		clearPersistentEffects()
		statPositive()
		inflictedHitsSince()
		getPersistentEffects()
		modifyResource()
		setResource()
		setResourceLocked()
		damageTakenSince()
		resetResource()
		stat()
		setStatusProperty()
		addEphemeralEffect()
		consumeResource()
		resetAllResources()
		addPersistentEffects()
		statusProperty()
		inflictedDamageSince()
		clearEphemeralEffects()
		overConsumeResource()
		activeUniqueStatusEffectSummary()
		removeEphemeralEffect()
		setResourcePercentage()
		addPersistentEffect()
		resourcePositive()
		resource()
		addEphemeralEffects()
		clearAllPersistentEffects()
		resourceNames()
		resourceLocked()
		isResource()
		resourceMax()
		giveResource()
		resourcePercentage()
		modifyResourcePercentage()
		setPersistentEffects()
	}
	sb = {
		setLogMap()
		makeRandomSource()
		logInfo()
		replaceTags()
		jsonMerge()
		logError()
		print()
		jsonQuery()
		printJson()
		staticRandomDoubleRange()
		makePerlinSource()
		nrand()
		logWarn()
		makeUuid()
		staticRandomDouble()
		staticRandomI32Range()
		interpolateSinEase()
		staticRandomI32()
	}
	self = {
	}
	jobject()
	init()
	p()
	utf8 = {
		char()
		codes()
		codepoint()
		offset()
		charpattern = "[
[03:00:46.495] [Warn] 	setmetatable()
	rawlen()
	rawset()
	require()
	root = {
		isTreasurePool()
		projectileConfig()
		treeFoliageDirectory()
		treeStemDirectory()
		monsterPortrait()
		npcVariant()
		monsterMovementSettings()
		nonEmptyRegion()
		setConfiguration()
		monsterSkillParameter()
		setConfigurationPath()
		generateName()
		techType()
		getConfiguration()
		assetJson()
		projectileGravityMultiplier()
		itemHasTag()
		imageSize()
		itemTags()
		behaviorModule()
		getConfigurationPath()
		itemType()
		recipesForItem()
		createItem()
		materialFootstepSound()
		npcPortrait()
		evalFunction2()
		techConfig()
		liquidStatusEffects()
		materialPath()
		tenantConfig()
		makeCurrentVersionedJson()
		materialMiningSound()
		questConfig()
		npcConfig()
		materialHealth()
		getMatchingTenants()
		hasTech()
		evalFunction()
		itemConfig()
		imageSpaces()
		createBiome()
		loadVersionedJson()
		createTreasure()
	}
	ic = {
		sortFunc()
		checkStack()
		sort()
		getQuality()
		searchButton()
		renameThis()
		searchBox()
		clientVersion = 1
		stripColor()
		quickstack()
		renameButton()
		sort_relative()
		lock()
		itemConfig()
		amountEquipped()
		itemAmount()
		giveBack()
	}
	table = {
		pack()
		sort()
		insert()
		remove()
		move()
		unpack()
		concat()
	}
	config = {
		getParameter()
	}
	pairs()
	tostring()
	string = {
		char()
		format()
		match()
		rep()
		byte()
		reverse()
		lower()
		find()
		unpack()
		dump()
		upper()
		len()
		pack()
		packsize()
		gsub()
		gmatch()
		sub()
	}
	error()
	jremove()
	os = {
		difftime()
		clock()
		time()
	}
	jsize()
	jresize()
	type()
	rawequal()
	_VERSION = "Lua 5.3"
	script = {
		updateDt()
		setUpdateDelta()
	}
	math = {
		sqrt()
		acos()
		floor()
		pi = 3.1415926535898
		tan()
		mininteger = -9223372036854775808
		maxinteger = 9223372036854775807
		atan()
		abs()
		ceil()
		huge = inf
		ult()
		type()
		min()
		cos()
		deg()
		log()
		randomseed()
		asin()
		sin()
		random()
		rad()
		modf()
		max()
		exp()
		fmod()
		tointeger()
	}
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	next()
	coroutine = {
		running()
		isyieldable()
		wrap()
		status()
		create()
		yield()
		resume()
	}
	ipairs()
	update()
	print()
	pcall()
	tonumber()
	world = {
		lightLevel()
		sendEntityMessage()
		gravity()
		entityDamageTeam()
		entityCanDamage()
		spawnStagehand()
		nearestTo()
		itemDropQuery()
		containerConsume()
		entityPosition()
		rectCollision()
		entityGender()
		material()
		lineTileCollision()
		distance()
		placeMaterial()
		objectQuery()
		platformerPathStart()
		entityAggressive()
		containerConsumeAt()
		entityHealth()
		destroyLiquid()
		spawnLiquid()
		containerStackItems()
		containerTakeAt()
		setProperty()
		timeOfDay()
		spawnMonster()
		day()
		time()
		spawnItem()
		getObjectParameter()
		isTileProtected()
		spawnVehicle()
		objectSpaces()
		loungeableQuery()
		spawnTreasure()
		stagehandType()
		findPlatformerPath()
		polyContains()
		tileIsOccupied()
		debugText()
		monsterType()
		npcLineQuery()
		resolvePolyCollision()
		farmableStage()
		placeObject()
		polyCollision()
		entityVelocity()
		magnitude()
		containerOpen()
		lineCollision()
		entityPortrait()
		pointCollision()
		entityExists()
		spawnNpc()
		underground()
		entityMoney()
		entitySpecies()
		entityDescription()
		pointTileCollision()
		loungeableOccupied()
		xwrap()
		objectLineQuery()
		spawnProjectile()
		entityQuery()
		containerSwapItems()
		entityUniqueId()
		dayLength()
		containerTakeAll()
		entityType()
		findUniqueEntity()
		callScriptedEntity()
		containerAvailable()
		entityName()
		containerPutItemsAt()
		containerAddItems()
		containerItemsFitWhere()
		windLevel()
		entityLineQuery()
		playerQuery()
		isMonster()
		containerItemAt()
		liquidAlongLine()
		liquidAt()
		monsterQuery()
		placeMod()
		getProperty()
		objectAt()
		containerClose()
		containerTakeNumItemsAt()
		npcType()
		threatLevel()
		collisionBlocksAlongLine()
		damageTiles()
		containerItemApply()
		entityHasCountOfItem()
		containerSize()
		containerItems()
		debugPoint()
		entityHandItemDescriptor()
		containerSwapItemsNoCombine()
		containerItemsCanFit()
		entityHandItem()
		npcQuery()
		damageTileArea()
		debugPoly()
		debugLine()
		mod()
		rectTileCollision()
		breathable()
		isNpc()
	}
	player = {
		confirm()
		altHandItem()
		essentialItem()
		setIntroComplete()
		availableTechs()
		serverUuid()
		lounge()
		giveBlueprint()
		enableTech()
		playCinematic()
		itemsWithTag()
		consumeTaggedItem()
		equipTech()
		equippedItem()
		primaryHandItemTags()
		setEquippedItem()
		gender()
		makeTechUnavailable()
		warp()
		getItemWithParameter()
		introComplete()
		upgradeShip()
		consumeItem()
		setUniverseFlag()
		recordEvent()
		equippedTech()
		altHandItemTags()
		ownShipWorldId()
		giveItem()
		enableMission()
		hasItem()
		hasQuest()
		consumeItemWithParameter()
		canStartQuest()
		shipUpgrades()
		isLounging()
		radioMessage()
		giveEssentialItem()
		primaryHandItem()
		worldId()
		enabledTechs()
		startQuest()
		playTime()
		inventoryTags()
		hasCountOfItem()
		completeMission()
		addBookmark()
		hasCompletedQuest()
		hasItemWithParameter()
		species()
		makeTechAvailable()
		removeEssentialItem()
		cleanupItems()
	}
	widget = {
		removeListItem()
		getSliderValue()
		setImageScale()
		addListItem()
		setData()
		setButtonImage()
		getSize()
		getPosition()
		setVisible()
		getText()
		setButtonOverlayImage()
		setButtonCheckedImages()
		playSound()
		focus()
		setText()
		setProgress()
		setOptionVisible()
		setImageRotation()
		setSelectedOption()
		setListSelected()
		getData()
		clearListItems()
		getChecked()
		setButtonImages()
		setButtonEnabled()
		setChecked()
		setSize()
		getSelectedOption()
		setFontColor()
		setOptionEnabled()
		setPosition()
		getListSelected()
		itemGridItems()
		setImage()
		blur()
	}
	status = {
		clearPersistentEffects()
		statPositive()
		inflictedHitsSince()
		getPersistentEffects()
		modifyResource()
		setResource()
		setResourceLocked()
		damageTakenSince()
		resetResource()
		stat()
		setStatusProperty()
		addEphemeralEffect()
		consumeResource()
		resetAllResources()
		addPersistentEffects()
		statusProperty()
		inflictedDamageSince()
		clearEphemeralEffects()
		overConsumeResource()
		activeUniqueStatusEffectSummary()
		removeEphemeralEffect()
		setResourcePercentage()
		addPersistentEffect()
		resourcePositive()
		resource()
		addEphemeralEffects()
		clearAllPersistentEffects()
		resourceNames()
		resourceLocked()
		isResource()
		resourceMax()
		giveResource()
		resourcePercentage()
		modifyResourcePercentage()
		setPersistentEffects()
	}
	sb = {
		setLogMap()
		makeRandomSource()
		logInfo()
		replaceTags()
		jsonMerge()
		logError()
		print()
		jsonQuery()
		printJson()
		staticRandomDoubleRange()
		makePerlinSource()
		nrand()
		logWarn()
		makeUuid()
		staticRandomDouble()
		staticRandomI32Range()
		interpolateSinEase()
		staticRandomI32()
	}
	self = {
	}
	jobject()
	init()
	p()
	utf8 = {
		char()
		codes()
		codepoint()
		offset()
		charpattern = "[
[03:00:48.176] [Warn] 	setmetatable()
	rawlen()
	rawset()
	require()
	root = {
		isTreasurePool()
		projectileConfig()
		treeFoliageDirectory()
		treeStemDirectory()
		monsterPortrait()
		npcVariant()
		monsterMovementSettings()
		nonEmptyRegion()
		setConfiguration()
		monsterSkillParameter()
		setConfigurationPath()
		generateName()
		techType()
		getConfiguration()
		assetJson()
		projectileGravityMultiplier()
		itemHasTag()
		imageSize()
		itemTags()
		behaviorModule()
		getConfigurationPath()
		itemType()
		recipesForItem()
		createItem()
		materialFootstepSound()
		npcPortrait()
		evalFunction2()
		techConfig()
		liquidStatusEffects()
		materialPath()
		tenantConfig()
		makeCurrentVersionedJson()
		materialMiningSound()
		questConfig()
		npcConfig()
		materialHealth()
		getMatchingTenants()
		hasTech()
		evalFunction()
		itemConfig()
		imageSpaces()
		createBiome()
		loadVersionedJson()
		createTreasure()
	}
	ic = {
		sortFunc()
		checkStack()
		sort()
		getQuality()
		searchButton()
		renameThis()
		searchBox()
		clientVersion = 1
		stripColor()
		quickstack()
		renameButton()
		sort_relative()
		lock()
		itemConfig()
		amountEquipped()
		itemAmount()
		giveBack()
	}
	table = {
		pack()
		sort()
		insert()
		remove()
		move()
		unpack()
		concat()
	}
	config = {
		getParameter()
	}
	pairs()
	tostring()
	string = {
		char()
		format()
		match()
		rep()
		byte()
		reverse()
		lower()
		find()
		unpack()
		dump()
		upper()
		len()
		pack()
		packsize()
		gsub()
		gmatch()
		sub()
	}
	error()
	jremove()
	os = {
		difftime()
		clock()
		time()
	}
	jsize()
	jresize()
	type()
	rawequal()
	_VERSION = "Lua 5.3"
	script = {
		updateDt()
		setUpdateDelta()
	}
	math = {
		sqrt()
		acos()
		floor()
		pi = 3.1415926535898
		tan()
		mininteger = -9223372036854775808
		maxinteger = 9223372036854775807
		atan()
		abs()
		ceil()
		huge = inf
		ult()
		type()
		min()
		cos()
		deg()
		log()
		randomseed()
		asin()
		sin()
		random()
		rad()
		modf()
		max()
		exp()
		fmod()
		tointeger()
	}
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	next()
	coroutine = {
		running()
		isyieldable()
		wrap()
		status()
		create()
		yield()
		resume()
	}
	ipairs()
	update()
	print()
	pcall()
	tonumber()
	world = {
		lightLevel()
		sendEntityMessage()
		gravity()
		entityDamageTeam()
		entityCanDamage()
		spawnStagehand()
		nearestTo()
		itemDropQuery()
		containerConsume()
		entityPosition()
		rectCollision()
		entityGender()
		material()
		lineTileCollision()
		distance()
		placeMaterial()
		objectQuery()
		platformerPathStart()
		entityAggressive()
		containerConsumeAt()
		entityHealth()
		destroyLiquid()
		spawnLiquid()
		containerStackItems()
		containerTakeAt()
		setProperty()
		timeOfDay()
		spawnMonster()
		day()
		time()
		spawnItem()
		getObjectParameter()
		isTileProtected()
		spawnVehicle()
		objectSpaces()
		loungeableQuery()
		spawnTreasure()
		stagehandType()
		findPlatformerPath()
		polyContains()
		tileIsOccupied()
		debugText()
		monsterType()
		npcLineQuery()
		resolvePolyCollision()
		farmableStage()
		placeObject()
		polyCollision()
		entityVelocity()
		magnitude()
		containerOpen()
		lineCollision()
		entityPortrait()
		pointCollision()
		entityExists()
		spawnNpc()
		underground()
		entityMoney()
		entitySpecies()
		entityDescription()
		pointTileCollision()
		loungeableOccupied()
		xwrap()
		objectLineQuery()
		spawnProjectile()
		entityQuery()
		containerSwapItems()
		entityUniqueId()
		dayLength()
		containerTakeAll()
		entityType()
		findUniqueEntity()
		callScriptedEntity()
		containerAvailable()
		entityName()
		containerPutItemsAt()
		containerAddItems()
		containerItemsFitWhere()
		windLevel()
		entityLineQuery()
		playerQuery()
		isMonster()
		containerItemAt()
		liquidAlongLine()
		liquidAt()
		monsterQuery()
		placeMod()
		getProperty()
		objectAt()
		containerClose()
		containerTakeNumItemsAt()
		npcType()
		threatLevel()
		collisionBlocksAlongLine()
		damageTiles()
		containerItemApply()
		entityHasCountOfItem()
		containerSize()
		containerItems()
		debugPoint()
		entityHandItemDescriptor()
		containerSwapItemsNoCombine()
		containerItemsCanFit()
		entityHandItem()
		npcQuery()
		damageTileArea()
		debugPoly()
		debugLine()
		mod()
		rectTileCollision()
		breathable()
		isNpc()
	}
	player = {
		confirm()
		altHandItem()
		essentialItem()
		setIntroComplete()
		availableTechs()
		serverUuid()
		lounge()
		giveBlueprint()
		enableTech()
		playCinematic()
		itemsWithTag()
		consumeTaggedItem()
		equipTech()
		equippedItem()
		primaryHandItemTags()
		setEquippedItem()
		gender()
		makeTechUnavailable()
		warp()
		getItemWithParameter()
		introComplete()
		upgradeShip()
		consumeItem()
		setUniverseFlag()
		recordEvent()
		equippedTech()
		altHandItemTags()
		ownShipWorldId()
		giveItem()
		enableMission()
		hasItem()
		hasQuest()
		consumeItemWithParameter()
		canStartQuest()
		shipUpgrades()
		isLounging()
		radioMessage()
		giveEssentialItem()
		primaryHandItem()
		worldId()
		enabledTechs()
		startQuest()
		playTime()
		inventoryTags()
		hasCountOfItem()
		completeMission()
		addBookmark()
		hasCompletedQuest()
		hasItemWithParameter()
		species()
		makeTechAvailable()
		removeEssentialItem()
		cleanupItems()
	}
	widget = {
		removeListItem()
		getSliderValue()
		setImageScale()
		addListItem()
		setData()
		setButtonImage()
		getSize()
		getPosition()
		setVisible()
		getText()
		setButtonOverlayImage()
		setButtonCheckedImages()
		playSound()
		focus()
		setText()
		setProgress()
		setOptionVisible()
		setImageRotation()
		setSelectedOption()
		setListSelected()
		getData()
		clearListItems()
		getChecked()
		setButtonImages()
		setButtonEnabled()
		setChecked()
		setSize()
		getSelectedOption()
		setFontColor()
		setOptionEnabled()
		setPosition()
		getListSelected()
		itemGridItems()
		setImage()
		blur()
	}
	status = {
		clearPersistentEffects()
		statPositive()
		inflictedHitsSince()
		getPersistentEffects()
		modifyResource()
		setResource()
		setResourceLocked()
		damageTakenSince()
		resetResource()
		stat()
		setStatusProperty()
		addEphemeralEffect()
		consumeResource()
		resetAllResources()
		addPersistentEffects()
		statusProperty()
		inflictedDamageSince()
		clearEphemeralEffects()
		overConsumeResource()
		activeUniqueStatusEffectSummary()
		removeEphemeralEffect()
		setResourcePercentage()
		addPersistentEffect()
		resourcePositive()
		resource()
		addEphemeralEffects()
		clearAllPersistentEffects()
		resourceNames()
		resourceLocked()
		isResource()
		resourceMax()
		giveResource()
		resourcePercentage()
		modifyResourcePercentage()
		setPersistentEffects()
	}
	sb = {
		setLogMap()
		makeRandomSource()
		logInfo()
		replaceTags()
		jsonMerge()
		logError()
		print()
		jsonQuery()
		printJson()
		staticRandomDoubleRange()
		makePerlinSource()
		nrand()
		logWarn()
		makeUuid()
		staticRandomDouble()
		staticRandomI32Range()
		interpolateSinEase()
		staticRandomI32()
	}
	self = {
	}
	jobject()
	init()
	p()
	utf8 = {
		char()
		codes()
		codepoint()
		offset()
		charpattern = "[
[03:00:50.728] [Warn] 	setmetatable()
	rawlen()
	rawset()
	require()
	root = {
		isTreasurePool()
		projectileConfig()
		treeFoliageDirectory()
		treeStemDirectory()
		monsterPortrait()
		npcVariant()
		monsterMovementSettings()
		nonEmptyRegion()
		setConfiguration()
		monsterSkillParameter()
		setConfigurationPath()
		generateName()
		techType()
		getConfiguration()
		assetJson()
		projectileGravityMultiplier()
		itemHasTag()
		imageSize()
		itemTags()
		behaviorModule()
		getConfigurationPath()
		itemType()
		recipesForItem()
		createItem()
		materialFootstepSound()
		npcPortrait()
		evalFunction2()
		techConfig()
		liquidStatusEffects()
		materialPath()
		tenantConfig()
		makeCurrentVersionedJson()
		materialMiningSound()
		questConfig()
		npcConfig()
		materialHealth()
		getMatchingTenants()
		hasTech()
		evalFunction()
		itemConfig()
		imageSpaces()
		createBiome()
		loadVersionedJson()
		createTreasure()
	}
	ic = {
		sortFunc()
		checkStack()
		sort()
		getQuality()
		searchButton()
		renameThis()
		searchBox()
		clientVersion = 1
		stripColor()
		quickstack()
		renameButton()
		sort_relative()
		lock()
		itemConfig()
		amountEquipped()
		itemAmount()
		giveBack()
	}
	table = {
		pack()
		sort()
		insert()
		remove()
		move()
		unpack()
		concat()
	}
	config = {
		getParameter()
	}
	pairs()
	tostring()
	string = {
		char()
		format()
		match()
		rep()
		byte()
		reverse()
		lower()
		find()
		unpack()
		dump()
		upper()
		len()
		pack()
		packsize()
		gsub()
		gmatch()
		sub()
	}
	error()
	jremove()
	os = {
		difftime()
		clock()
		time()
	}
	jsize()
	jresize()
	type()
	rawequal()
	_VERSION = "Lua 5.3"
	script = {
		updateDt()
		setUpdateDelta()
	}
	math = {
		sqrt()
		acos()
		floor()
		pi = 3.1415926535898
		tan()
		mininteger = -9223372036854775808
		maxinteger = 9223372036854775807
		atan()
		abs()
		ceil()
		huge = inf
		ult()
		type()
		min()
		cos()
		deg()
		log()
		randomseed()
		asin()
		sin()
		random()
		rad()
		modf()
		max()
		exp()
		fmod()
		tointeger()
	}
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	next()
	coroutine = {
		running()
		isyieldable()
		wrap()
		status()
		create()
		yield()
		resume()
	}
	ipairs()
	update()
	print()
	pcall()
	tonumber()
	world = {
		lightLevel()
		sendEntityMessage()
		gravity()
		entityDamageTeam()
		entityCanDamage()
		spawnStagehand()
		nearestTo()
		itemDropQuery()
		containerConsume()
		entityPosition()
		rectCollision()
		entityGender()
		material()
		lineTileCollision()
		distance()
		placeMaterial()
		objectQuery()
		platformerPathStart()
		entityAggressive()
		containerConsumeAt()
		entityHealth()
		destroyLiquid()
		spawnLiquid()
		containerStackItems()
		containerTakeAt()
		setProperty()
		timeOfDay()
		spawnMonster()
		day()
		time()
		spawnItem()
		getObjectParameter()
		isTileProtected()
		spawnVehicle()
		objectSpaces()
		loungeableQuery()
		spawnTreasure()
		stagehandType()
		findPlatformerPath()
		polyContains()
		tileIsOccupied()
		debugText()
		monsterType()
		npcLineQuery()
		resolvePolyCollision()
		farmableStage()
		placeObject()
		polyCollision()
		entityVelocity()
		magnitude()
		containerOpen()
		lineCollision()
		entityPortrait()
		pointCollision()
		entityExists()
		spawnNpc()
		underground()
		entityMoney()
		entitySpecies()
		entityDescription()
		pointTileCollision()
		loungeableOccupied()
		xwrap()
		objectLineQuery()
		spawnProjectile()
		entityQuery()
		containerSwapItems()
		entityUniqueId()
		dayLength()
		containerTakeAll()
		entityType()
		findUniqueEntity()
		callScriptedEntity()
		containerAvailable()
		entityName()
		containerPutItemsAt()
		containerAddItems()
		containerItemsFitWhere()
		windLevel()
		entityLineQuery()
		playerQuery()
		isMonster()
		containerItemAt()
		liquidAlongLine()
		liquidAt()
		monsterQuery()
		placeMod()
		getProperty()
		objectAt()
		containerClose()
		containerTakeNumItemsAt()
		npcType()
		threatLevel()
		collisionBlocksAlongLine()
		damageTiles()
		containerItemApply()
		entityHasCountOfItem()
		containerSize()
		containerItems()
		debugPoint()
		entityHandItemDescriptor()
		containerSwapItemsNoCombine()
		containerItemsCanFit()
		entityHandItem()
		npcQuery()
		damageTileArea()
		debugPoly()
		debugLine()
		mod()
		rectTileCollision()
		breathable()
		isNpc()
	}
	player = {
		confirm()
		altHandItem()
		essentialItem()
		setIntroComplete()
		availableTechs()
		serverUuid()
		lounge()
		giveBlueprint()
		enableTech()
		playCinematic()
		itemsWithTag()
		consumeTaggedItem()
		equipTech()
		equippedItem()
		primaryHandItemTags()
		setEquippedItem()
		gender()
		makeTechUnavailable()
		warp()
		getItemWithParameter()
		introComplete()
		upgradeShip()
		consumeItem()
		setUniverseFlag()
		recordEvent()
		equippedTech()
		altHandItemTags()
		ownShipWorldId()
		giveItem()
		enableMission()
		hasItem()
		hasQuest()
		consumeItemWithParameter()
		canStartQuest()
		shipUpgrades()
		isLounging()
		radioMessage()
		giveEssentialItem()
		primaryHandItem()
		worldId()
		enabledTechs()
		startQuest()
		playTime()
		inventoryTags()
		hasCountOfItem()
		completeMission()
		addBookmark()
		hasCompletedQuest()
		hasItemWithParameter()
		species()
		makeTechAvailable()
		removeEssentialItem()
		cleanupItems()
	}
	widget = {
		removeListItem()
		getSliderValue()
		setImageScale()
		addListItem()
		setData()
		setButtonImage()
		getSize()
		getPosition()
		setVisible()
		getText()
		setButtonOverlayImage()
		setButtonCheckedImages()
		playSound()
		focus()
		setText()
		setProgress()
		setOptionVisible()
		setImageRotation()
		setSelectedOption()
		setListSelected()
		getData()
		clearListItems()
		getChecked()
		setButtonImages()
		setButtonEnabled()
		setChecked()
		setSize()
		getSelectedOption()
		setFontColor()
		setOptionEnabled()
		setPosition()
		getListSelected()
		itemGridItems()
		setImage()
		blur()
	}
	status = {
		clearPersistentEffects()
		statPositive()
		inflictedHitsSince()
		getPersistentEffects()
		modifyResource()
		setResource()
		setResourceLocked()
		damageTakenSince()
		resetResource()
		stat()
		setStatusProperty()
		addEphemeralEffect()
		consumeResource()
		resetAllResources()
		addPersistentEffects()
		statusProperty()
		inflictedDamageSince()
		clearEphemeralEffects()
		overConsumeResource()
		activeUniqueStatusEffectSummary()
		removeEphemeralEffect()
		setResourcePercentage()
		addPersistentEffect()
		resourcePositive()
		resource()
		addEphemeralEffects()
		clearAllPersistentEffects()
		resourceNames()
		resourceLocked()
		isResource()
		resourceMax()
		giveResource()
		resourcePercentage()
		modifyResourcePercentage()
		setPersistentEffects()
	}
	sb = {
		setLogMap()
		makeRandomSource()
		logInfo()
		replaceTags()
		jsonMerge()
		logError()
		print()
		jsonQuery()
		printJson()
		staticRandomDoubleRange()
		makePerlinSource()
		nrand()
		logWarn()
		makeUuid()
		staticRandomDouble()
		staticRandomI32Range()
		interpolateSinEase()
		staticRandomI32()
	}
	self = {
	}
	jobject()
	init()
	p()
	utf8 = {
		char()
		codes()
		codepoint()
		offset()
		charpattern = "[
[03:00:52.810] [Warn] 	setmetatable()
	rawlen()
	rawset()
	require()
	root = {
		isTreasurePool()
		projectileConfig()
		treeFoliageDirectory()
		treeStemDirectory()
		monsterPortrait()
		npcVariant()
		monsterMovementSettings()
		nonEmptyRegion()
		setConfiguration()
		monsterSkillParameter()
		setConfigurationPath()
		generateName()
		techType()
		getConfiguration()
		assetJson()
		projectileGravityMultiplier()
		itemHasTag()
		imageSize()
		itemTags()
		behaviorModule()
		getConfigurationPath()
		itemType()
		recipesForItem()
		createItem()
		materialFootstepSound()
		npcPortrait()
		evalFunction2()
		techConfig()
		liquidStatusEffects()
		materialPath()
		tenantConfig()
		makeCurrentVersionedJson()
		materialMiningSound()
		questConfig()
		npcConfig()
		materialHealth()
		getMatchingTenants()
		hasTech()
		evalFunction()
		itemConfig()
		imageSpaces()
		createBiome()
		loadVersionedJson()
		createTreasure()
	}
	ic = {
		sortFunc()
		checkStack()
		sort()
		getQuality()
		searchButton()
		renameThis()
		searchBox()
		clientVersion = 1
		stripColor()
		quickstack()
		renameButton()
		sort_relative()
		lock()
		itemConfig()
		amountEquipped()
		itemAmount()
		giveBack()
	}
	table = {
		pack()
		sort()
		insert()
		remove()
		move()
		unpack()
		concat()
	}
	config = {
		getParameter()
	}
	pairs()
	tostring()
	string = {
		char()
		format()
		match()
		rep()
		byte()
		reverse()
		lower()
		find()
		unpack()
		dump()
		upper()
		len()
		pack()
		packsize()
		gsub()
		gmatch()
		sub()
	}
	error()
	jremove()
	os = {
		difftime()
		clock()
		time()
	}
	jsize()
	jresize()
	type()
	rawequal()
	_VERSION = "Lua 5.3"
	script = {
		updateDt()
		setUpdateDelta()
	}
	math = {
		sqrt()
		acos()
		floor()
		pi = 3.1415926535898
		tan()
		mininteger = -9223372036854775808
		maxinteger = 9223372036854775807
		atan()
		abs()
		ceil()
		huge = inf
		ult()
		type()
		min()
		cos()
		deg()
		log()
		randomseed()
		asin()
		sin()
		random()
		rad()
		modf()
		max()
		exp()
		fmod()
		tointeger()
	}
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	next()
	coroutine = {
		running()
		isyieldable()
		wrap()
		status()
		create()
		yield()
		resume()
	}
	ipairs()
	update()
	print()
	pcall()
	tonumber()
	world = {
		lightLevel()
		sendEntityMessage()
		gravity()
		entityDamageTeam()
		entityCanDamage()
		spawnStagehand()
		nearestTo()
		itemDropQuery()
		containerConsume()
		entityPosition()
		rectCollision()
		entityGender()
		material()
		lineTileCollision()
		distance()
		placeMaterial()
		objectQuery()
		platformerPathStart()
		entityAggressive()
		containerConsumeAt()
		entityHealth()
		destroyLiquid()
		spawnLiquid()
		containerStackItems()
		containerTakeAt()
		setProperty()
		timeOfDay()
		spawnMonster()
		day()
		time()
		spawnItem()
		getObjectParameter()
		isTileProtected()
		spawnVehicle()
		objectSpaces()
		loungeableQuery()
		spawnTreasure()
		stagehandType()
		findPlatformerPath()
		polyContains()
		tileIsOccupied()
		debugText()
		monsterType()
		npcLineQuery()
		resolvePolyCollision()
		farmableStage()
		placeObject()
		polyCollision()
		entityVelocity()
		magnitude()
		containerOpen()
		lineCollision()
		entityPortrait()
		pointCollision()
		entityExists()
		spawnNpc()
		underground()
		entityMoney()
		entitySpecies()
		entityDescription()
		pointTileCollision()
		loungeableOccupied()
		xwrap()
		objectLineQuery()
		spawnProjectile()
		entityQuery()
		containerSwapItems()
		entityUniqueId()
		dayLength()
		containerTakeAll()
		entityType()
		findUniqueEntity()
		callScriptedEntity()
		containerAvailable()
		entityName()
		containerPutItemsAt()
		containerAddItems()
		containerItemsFitWhere()
		windLevel()
		entityLineQuery()
		playerQuery()
		isMonster()
		containerItemAt()
		liquidAlongLine()
		liquidAt()
		monsterQuery()
		placeMod()
		getProperty()
		objectAt()
		containerClose()
		containerTakeNumItemsAt()
		npcType()
		threatLevel()
		collisionBlocksAlongLine()
		damageTiles()
		containerItemApply()
		entityHasCountOfItem()
		containerSize()
		containerItems()
		debugPoint()
		entityHandItemDescriptor()
		containerSwapItemsNoCombine()
		containerItemsCanFit()
		entityHandItem()
		npcQuery()
		damageTileArea()
		debugPoly()
		debugLine()
		mod()
		rectTileCollision()
		breathable()
		isNpc()
	}
	player = {
		confirm()
		altHandItem()
		essentialItem()
		setIntroComplete()
		availableTechs()
		serverUuid()
		lounge()
		giveBlueprint()
		enableTech()
		playCinematic()
		itemsWithTag()
		consumeTaggedItem()
		equipTech()
		equippedItem()
		primaryHandItemTags()
		setEquippedItem()
		gender()
		makeTechUnavailable()
		warp()
		getItemWithParameter()
		introComplete()
		upgradeShip()
		consumeItem()
		setUniverseFlag()
		recordEvent()
		equippedTech()
		altHandItemTags()
		ownShipWorldId()
		giveItem()
		enableMission()
		hasItem()
		hasQuest()
		consumeItemWithParameter()
		canStartQuest()
		shipUpgrades()
		isLounging()
		radioMessage()
		giveEssentialItem()
		primaryHandItem()
		worldId()
		enabledTechs()
		startQuest()
		playTime()
		inventoryTags()
		hasCountOfItem()
		completeMission()
		addBookmark()
		hasCompletedQuest()
		hasItemWithParameter()
		species()
		makeTechAvailable()
		removeEssentialItem()
		cleanupItems()
	}
	widget = {
		removeListItem()
		getSliderValue()
		setImageScale()
		addListItem()
		setData()
		setButtonImage()
		getSize()
		getPosition()
		setVisible()
		getText()
		setButtonOverlayImage()
		setButtonCheckedImages()
		playSound()
		focus()
		setText()
		setProgress()
		setOptionVisible()
		setImageRotation()
		setSelectedOption()
		setListSelected()
		getData()
		clearListItems()
		getChecked()
		setButtonImages()
		setButtonEnabled()
		setChecked()
		setSize()
		getSelectedOption()
		setFontColor()
		setOptionEnabled()
		setPosition()
		getListSelected()
		itemGridItems()
		setImage()
		blur()
	}
	status = {
		clearPersistentEffects()
		statPositive()
		inflictedHitsSince()
		getPersistentEffects()
		modifyResource()
		setResource()
		setResourceLocked()
		damageTakenSince()
		resetResource()
		stat()
		setStatusProperty()
		addEphemeralEffect()
		consumeResource()
		resetAllResources()
		addPersistentEffects()
		statusProperty()
		inflictedDamageSince()
		clearEphemeralEffects()
		overConsumeResource()
		activeUniqueStatusEffectSummary()
		removeEphemeralEffect()
		setResourcePercentage()
		addPersistentEffect()
		resourcePositive()
		resource()
		addEphemeralEffects()
		clearAllPersistentEffects()
		resourceNames()
		resourceLocked()
		isResource()
		resourceMax()
		giveResource()
		resourcePercentage()
		modifyResourcePercentage()
		setPersistentEffects()
	}
	sb = {
		setLogMap()
		makeRandomSource()
		logInfo()
		replaceTags()
		jsonMerge()
		logError()
		print()
		jsonQuery()
		printJson()
		staticRandomDoubleRange()
		makePerlinSource()
		nrand()
		logWarn()
		makeUuid()
		staticRandomDouble()
		staticRandomI32Range()
		interpolateSinEase()
		staticRandomI32()
	}
	self = {
	}
	jobject()
	init()
	p()
	utf8 = {
		char()
		codes()
		codepoint()
		offset()
		charpattern = "[
[03:00:58.443] [Warn] 	setmetatable()
	rawlen()
	rawset()
	require()
	root = {
		isTreasurePool()
		projectileConfig()
		treeFoliageDirectory()
		treeStemDirectory()
		monsterPortrait()
		npcVariant()
		monsterMovementSettings()
		nonEmptyRegion()
		setConfiguration()
		monsterSkillParameter()
		setConfigurationPath()
		generateName()
		techType()
		getConfiguration()
		assetJson()
		projectileGravityMultiplier()
		itemHasTag()
		imageSize()
		itemTags()
		behaviorModule()
		getConfigurationPath()
		itemType()
		recipesForItem()
		createItem()
		materialFootstepSound()
		npcPortrait()
		evalFunction2()
		techConfig()
		liquidStatusEffects()
		materialPath()
		tenantConfig()
		makeCurrentVersionedJson()
		materialMiningSound()
		questConfig()
		npcConfig()
		materialHealth()
		getMatchingTenants()
		hasTech()
		evalFunction()
		itemConfig()
		imageSpaces()
		createBiome()
		loadVersionedJson()
		createTreasure()
	}
	ic = {
		sortFunc()
		checkStack()
		sort()
		getQuality()
		searchButton()
		renameThis()
		searchBox()
		clientVersion = 1
		stripColor()
		quickstack()
		renameButton()
		sort_relative()
		lock()
		itemConfig()
		amountEquipped()
		itemAmount()
		giveBack()
	}
	table = {
		pack()
		sort()
		insert()
		remove()
		move()
		unpack()
		concat()
	}
	config = {
		getParameter()
	}
	pairs()
	tostring()
	string = {
		char()
		format()
		match()
		rep()
		byte()
		reverse()
		lower()
		find()
		unpack()
		dump()
		upper()
		len()
		pack()
		packsize()
		gsub()
		gmatch()
		sub()
	}
	error()
	jremove()
	os = {
		difftime()
		clock()
		time()
	}
	jsize()
	jresize()
	type()
	rawequal()
	_VERSION = "Lua 5.3"
	script = {
		updateDt()
		setUpdateDelta()
	}
	math = {
		sqrt()
		acos()
		floor()
		pi = 3.1415926535898
		tan()
		mininteger = -9223372036854775808
		maxinteger = 9223372036854775807
		atan()
		abs()
		ceil()
		huge = inf
		ult()
		type()
		min()
		cos()
		deg()
		log()
		randomseed()
		asin()
		sin()
		random()
		rad()
		modf()
		max()
		exp()
		fmod()
		tointeger()
	}
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	next()
	coroutine = {
		running()
		isyieldable()
		wrap()
		status()
		create()
		yield()
		resume()
	}
	ipairs()
	update()
	print()
	pcall()
	tonumber()
	world = {
		lightLevel()
		sendEntityMessage()
		gravity()
		entityDamageTeam()
		entityCanDamage()
		spawnStagehand()
		nearestTo()
		itemDropQuery()
		containerConsume()
		entityPosition()
		rectCollision()
		entityGender()
		material()
		lineTileCollision()
		distance()
		placeMaterial()
		objectQuery()
		platformerPathStart()
		entityAggressive()
		containerConsumeAt()
		entityHealth()
		destroyLiquid()
		spawnLiquid()
		containerStackItems()
		containerTakeAt()
		setProperty()
		timeOfDay()
		spawnMonster()
		day()
		time()
		spawnItem()
		getObjectParameter()
		isTileProtected()
		spawnVehicle()
		objectSpaces()
		loungeableQuery()
		spawnTreasure()
		stagehandType()
		findPlatformerPath()
		polyContains()
		tileIsOccupied()
		debugText()
		monsterType()
		npcLineQuery()
		resolvePolyCollision()
		farmableStage()
		placeObject()
		polyCollision()
		entityVelocity()
		magnitude()
		containerOpen()
		lineCollision()
		entityPortrait()
		pointCollision()
		entityExists()
		spawnNpc()
		underground()
		entityMoney()
		entitySpecies()
		entityDescription()
		pointTileCollision()
		loungeableOccupied()
		xwrap()
		objectLineQuery()
		spawnProjectile()
		entityQuery()
		containerSwapItems()
		entityUniqueId()
		dayLength()
		containerTakeAll()
		entityType()
		findUniqueEntity()
		callScriptedEntity()
		containerAvailable()
		entityName()
		containerPutItemsAt()
		containerAddItems()
		containerItemsFitWhere()
		windLevel()
		entityLineQuery()
		playerQuery()
		isMonster()
		containerItemAt()
		liquidAlongLine()
		liquidAt()
		monsterQuery()
		placeMod()
		getProperty()
		objectAt()
		containerClose()
		containerTakeNumItemsAt()
		npcType()
		threatLevel()
		collisionBlocksAlongLine()
		damageTiles()
		containerItemApply()
		entityHasCountOfItem()
		containerSize()
		containerItems()
		debugPoint()
		entityHandItemDescriptor()
		containerSwapItemsNoCombine()
		containerItemsCanFit()
		entityHandItem()
		npcQuery()
		damageTileArea()
		debugPoly()
		debugLine()
		mod()
		rectTileCollision()
		breathable()
		isNpc()
	}
	player = {
		confirm()
		altHandItem()
		essentialItem()
		setIntroComplete()
		availableTechs()
		serverUuid()
		lounge()
		giveBlueprint()
		enableTech()
		playCinematic()
		itemsWithTag()
		consumeTaggedItem()
		equipTech()
		equippedItem()
		primaryHandItemTags()
		setEquippedItem()
		gender()
		makeTechUnavailable()
		warp()
		getItemWithParameter()
		introComplete()
		upgradeShip()
		consumeItem()
		setUniverseFlag()
		recordEvent()
		equippedTech()
		altHandItemTags()
		ownShipWorldId()
		giveItem()
		enableMission()
		hasItem()
		hasQuest()
		consumeItemWithParameter()
		canStartQuest()
		shipUpgrades()
		isLounging()
		radioMessage()
		giveEssentialItem()
		primaryHandItem()
		worldId()
		enabledTechs()
		startQuest()
		playTime()
		inventoryTags()
		hasCountOfItem()
		completeMission()
		addBookmark()
		hasCompletedQuest()
		hasItemWithParameter()
		species()
		makeTechAvailable()
		removeEssentialItem()
		cleanupItems()
	}
	widget = {
		removeListItem()
		getSliderValue()
		setImageScale()
		addListItem()
		setData()
		setButtonImage()
		getSize()
		getPosition()
		setVisible()
		getText()
		setButtonOverlayImage()
		setButtonCheckedImages()
		playSound()
		focus()
		setText()
		setProgress()
		setOptionVisible()
		setImageRotation()
		setSelectedOption()
		setListSelected()
		getData()
		clearListItems()
		getChecked()
		setButtonImages()
		setButtonEnabled()
		setChecked()
		setSize()
		getSelectedOption()
		setFontColor()
		setOptionEnabled()
		setPosition()
		getListSelected()
		itemGridItems()
		setImage()
		blur()
	}
	status = {
		clearPersistentEffects()
		statPositive()
		inflictedHitsSince()
		getPersistentEffects()
		modifyResource()
		setResource()
		setResourceLocked()
		damageTakenSince()
		resetResource()
		stat()
		setStatusProperty()
		addEphemeralEffect()
		consumeResource()
		resetAllResources()
		addPersistentEffects()
		statusProperty()
		inflictedDamageSince()
		clearEphemeralEffects()
		overConsumeResource()
		activeUniqueStatusEffectSummary()
		removeEphemeralEffect()
		setResourcePercentage()
		addPersistentEffect()
		resourcePositive()
		resource()
		addEphemeralEffects()
		clearAllPersistentEffects()
		resourceNames()
		resourceLocked()
		isResource()
		resourceMax()
		giveResource()
		resourcePercentage()
		modifyResourcePercentage()
		setPersistentEffects()
	}
	sb = {
		setLogMap()
		makeRandomSource()
		logInfo()
		replaceTags()
		jsonMerge()
		logError()
		print()
		jsonQuery()
		printJson()
		staticRandomDoubleRange()
		makePerlinSource()
		nrand()
		logWarn()
		makeUuid()
		staticRandomDouble()
		staticRandomI32Range()
		interpolateSinEase()
		staticRandomI32()
	}
	self = {
	}
	jobject()
	init()
	p()
	utf8 = {
		char()
		codes()
		codepoint()
		offset()
		charpattern = "[
[03:01:01.260] [Warn] 	setmetatable()
	rawlen()
	rawset()
	require()
	root = {
		isTreasurePool()
		projectileConfig()
		treeFoliageDirectory()
		treeStemDirectory()
		monsterPortrait()
		npcVariant()
		monsterMovementSettings()
		nonEmptyRegion()
		setConfiguration()
		monsterSkillParameter()
		setConfigurationPath()
		generateName()
		techType()
		getConfiguration()
		assetJson()
		projectileGravityMultiplier()
		itemHasTag()
		imageSize()
		itemTags()
		behaviorModule()
		getConfigurationPath()
		itemType()
		recipesForItem()
		createItem()
		materialFootstepSound()
		npcPortrait()
		evalFunction2()
		techConfig()
		liquidStatusEffects()
		materialPath()
		tenantConfig()
		makeCurrentVersionedJson()
		materialMiningSound()
		questConfig()
		npcConfig()
		materialHealth()
		getMatchingTenants()
		hasTech()
		evalFunction()
		itemConfig()
		imageSpaces()
		createBiome()
		loadVersionedJson()
		createTreasure()
	}
	ic = {
		sortFunc()
		checkStack()
		sort()
		getQuality()
		searchButton()
		renameThis()
		searchBox()
		clientVersion = 1
		stripColor()
		quickstack()
		renameButton()
		sort_relative()
		lock()
		itemConfig()
		amountEquipped()
		itemAmount()
		giveBack()
	}
	table = {
		pack()
		sort()
		insert()
		remove()
		move()
		unpack()
		concat()
	}
	config = {
		getParameter()
	}
	pairs()
	tostring()
	string = {
		char()
		format()
		match()
		rep()
		byte()
		reverse()
		lower()
		find()
		unpack()
		dump()
		upper()
		len()
		pack()
		packsize()
		gsub()
		gmatch()
		sub()
	}
	error()
	jremove()
	os = {
		difftime()
		clock()
		time()
	}
	jsize()
	jresize()
	type()
	rawequal()
	_VERSION = "Lua 5.3"
	script = {
		updateDt()
		setUpdateDelta()
	}
	math = {
		sqrt()
		acos()
		floor()
		pi = 3.1415926535898
		tan()
		mininteger = -9223372036854775808
		maxinteger = 9223372036854775807
		atan()
		abs()
		ceil()
		huge = inf
		ult()
		type()
		min()
		cos()
		deg()
		log()
		randomseed()
		asin()
		sin()
		random()
		rad()
		modf()
		max()
		exp()
		fmod()
		tointeger()
	}
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	next()
	coroutine = {
		running()
		isyieldable()
		wrap()
		status()
		create()
		yield()
		resume()
	}
	ipairs()
	update()
	print()
	pcall()
	tonumber()
	world = {
		lightLevel()
		sendEntityMessage()
		gravity()
		entityDamageTeam()
		entityCanDamage()
		spawnStagehand()
		nearestTo()
		itemDropQuery()
		containerConsume()
		entityPosition()
		rectCollision()
		entityGender()
		material()
		lineTileCollision()
		distance()
		placeMaterial()
		objectQuery()
		platformerPathStart()
		entityAggressive()
		containerConsumeAt()
		entityHealth()
		destroyLiquid()
		spawnLiquid()
		containerStackItems()
		containerTakeAt()
		setProperty()
		timeOfDay()
		spawnMonster()
		day()
		time()
		spawnItem()
		getObjectParameter()
		isTileProtected()
		spawnVehicle()
		objectSpaces()
		loungeableQuery()
		spawnTreasure()
		stagehandType()
		findPlatformerPath()
		polyContains()
		tileIsOccupied()
		debugText()
		monsterType()
		npcLineQuery()
		resolvePolyCollision()
		farmableStage()
		placeObject()
		polyCollision()
		entityVelocity()
		magnitude()
		containerOpen()
		lineCollision()
		entityPortrait()
		pointCollision()
		entityExists()
		spawnNpc()
		underground()
		entityMoney()
		entitySpecies()
		entityDescription()
		pointTileCollision()
		loungeableOccupied()
		xwrap()
		objectLineQuery()
		spawnProjectile()
		entityQuery()
		containerSwapItems()
		entityUniqueId()
		dayLength()
		containerTakeAll()
		entityType()
		findUniqueEntity()
		callScriptedEntity()
		containerAvailable()
		entityName()
		containerPutItemsAt()
		containerAddItems()
		containerItemsFitWhere()
		windLevel()
		entityLineQuery()
		playerQuery()
		isMonster()
		containerItemAt()
		liquidAlongLine()
		liquidAt()
		monsterQuery()
		placeMod()
		getProperty()
		objectAt()
		containerClose()
		containerTakeNumItemsAt()
		npcType()
		threatLevel()
		collisionBlocksAlongLine()
		damageTiles()
		containerItemApply()
		entityHasCountOfItem()
		containerSize()
		containerItems()
		debugPoint()
		entityHandItemDescriptor()
		containerSwapItemsNoCombine()
		containerItemsCanFit()
		entityHandItem()
		npcQuery()
		damageTileArea()
		debugPoly()
		debugLine()
		mod()
		rectTileCollision()
		breathable()
		isNpc()
	}
	player = {
		confirm()
		altHandItem()
		essentialItem()
		setIntroComplete()
		availableTechs()
		serverUuid()
		lounge()
		giveBlueprint()
		enableTech()
		playCinematic()
		itemsWithTag()
		consumeTaggedItem()
		equipTech()
		equippedItem()
		primaryHandItemTags()
		setEquippedItem()
		gender()
		makeTechUnavailable()
		warp()
		getItemWithParameter()
		introComplete()
		upgradeShip()
		consumeItem()
		setUniverseFlag()
		recordEvent()
		equippedTech()
		altHandItemTags()
		ownShipWorldId()
		giveItem()
		enableMission()
		hasItem()
		hasQuest()
		consumeItemWithParameter()
		canStartQuest()
		shipUpgrades()
		isLounging()
		radioMessage()
		giveEssentialItem()
		primaryHandItem()
		worldId()
		enabledTechs()
		startQuest()
		playTime()
		inventoryTags()
		hasCountOfItem()
		completeMission()
		addBookmark()
		hasCompletedQuest()
		hasItemWithParameter()
		species()
		makeTechAvailable()
		removeEssentialItem()
		cleanupItems()
	}
	widget = {
		removeListItem()
		getSliderValue()
		setImageScale()
		addListItem()
		setData()
		setButtonImage()
		getSize()
		getPosition()
		setVisible()
		getText()
		setButtonOverlayImage()
		setButtonCheckedImages()
		playSound()
		focus()
		setText()
		setProgress()
		setOptionVisible()
		setImageRotation()
		setSelectedOption()
		setListSelected()
		getData()
		clearListItems()
		getChecked()
		setButtonImages()
		setButtonEnabled()
		setChecked()
		setSize()
		getSelectedOption()
		setFontColor()
		setOptionEnabled()
		setPosition()
		getListSelected()
		itemGridItems()
		setImage()
		blur()
	}
	status = {
		clearPersistentEffects()
		statPositive()
		inflictedHitsSince()
		getPersistentEffects()
		modifyResource()
		setResource()
		setResourceLocked()
		damageTakenSince()
		resetResource()
		stat()
		setStatusProperty()
		addEphemeralEffect()
		consumeResource()
		resetAllResources()
		addPersistentEffects()
		statusProperty()
		inflictedDamageSince()
		clearEphemeralEffects()
		overConsumeResource()
		activeUniqueStatusEffectSummary()
		removeEphemeralEffect()
		setResourcePercentage()
		addPersistentEffect()
		resourcePositive()
		resource()
		addEphemeralEffects()
		clearAllPersistentEffects()
		resourceNames()
		resourceLocked()
		isResource()
		resourceMax()
		giveResource()
		resourcePercentage()
		modifyResourcePercentage()
		setPersistentEffects()
	}
	sb = {
		setLogMap()
		makeRandomSource()
		logInfo()
		replaceTags()
		jsonMerge()
		logError()
		print()
		jsonQuery()
		printJson()
		staticRandomDoubleRange()
		makePerlinSource()
		nrand()
		logWarn()
		makeUuid()
		staticRandomDouble()
		staticRandomI32Range()
		interpolateSinEase()
		staticRandomI32()
	}
	self = {
	}
	jobject()
	init()
	p()
	utf8 = {
		char()
		codes()
		codepoint()
		offset()
		charpattern = "[
[03:02:32.213] [Warn] 	setmetatable()
	rawlen()
	rawset()
	require()
	root = {
		isTreasurePool()
		projectileConfig()
		treeFoliageDirectory()
		treeStemDirectory()
		monsterPortrait()
		npcVariant()
		monsterMovementSettings()
		nonEmptyRegion()
		setConfiguration()
		monsterSkillParameter()
		setConfigurationPath()
		generateName()
		techType()
		getConfiguration()
		assetJson()
		projectileGravityMultiplier()
		itemHasTag()
		imageSize()
		itemTags()
		behaviorModule()
		getConfigurationPath()
		itemType()
		recipesForItem()
		createItem()
		materialFootstepSound()
		npcPortrait()
		evalFunction2()
		techConfig()
		liquidStatusEffects()
		materialPath()
		tenantConfig()
		makeCurrentVersionedJson()
		materialMiningSound()
		questConfig()
		npcConfig()
		materialHealth()
		getMatchingTenants()
		hasTech()
		evalFunction()
		itemConfig()
		imageSpaces()
		createBiome()
		loadVersionedJson()
		createTreasure()
	}
	ic = {
		sortFunc()
		checkStack()
		sort()
		getQuality()
		searchButton()
		renameThis()
		searchBox()
		clientVersion = 1
		stripColor()
		quickstack()
		renameButton()
		sort_relative()
		lock()
		itemConfig()
		amountEquipped()
		itemAmount()
		giveBack()
	}
	table = {
		pack()
		sort()
		insert()
		remove()
		move()
		unpack()
		concat()
	}
	config = {
		getParameter()
	}
	pairs()
	tostring()
	string = {
		char()
		format()
		match()
		rep()
		byte()
		reverse()
		lower()
		find()
		unpack()
		dump()
		upper()
		len()
		pack()
		packsize()
		gsub()
		gmatch()
		sub()
	}
	error()
	jremove()
	os = {
		difftime()
		clock()
		time()
	}
	jsize()
	jresize()
	type()
	rawequal()
	_VERSION = "Lua 5.3"
	script = {
		updateDt()
		setUpdateDelta()
	}
	math = {
		sqrt()
		acos()
		floor()
		pi = 3.1415926535898
		tan()
		mininteger = -9223372036854775808
		maxinteger = 9223372036854775807
		atan()
		abs()
		ceil()
		huge = inf
		ult()
		type()
		min()
		cos()
		deg()
		log()
		randomseed()
		asin()
		sin()
		random()
		rad()
		modf()
		max()
		exp()
		fmod()
		tointeger()
	}
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	next()
	coroutine = {
		running()
		isyieldable()
		wrap()
		status()
		create()
		yield()
		resume()
	}
	ipairs()
	update()
	print()
	pcall()
	tonumber()
	world = {
		lightLevel()
		sendEntityMessage()
		gravity()
		entityDamageTeam()
		entityCanDamage()
		spawnStagehand()
		nearestTo()
		itemDropQuery()
		containerConsume()
		entityPosition()
		rectCollision()
		entityGender()
		material()
		lineTileCollision()
		distance()
		placeMaterial()
		objectQuery()
		platformerPathStart()
		entityAggressive()
		containerConsumeAt()
		entityHealth()
		destroyLiquid()
		spawnLiquid()
		containerStackItems()
		containerTakeAt()
		setProperty()
		timeOfDay()
		spawnMonster()
		day()
		time()
		spawnItem()
		getObjectParameter()
		isTileProtected()
		spawnVehicle()
		objectSpaces()
		loungeableQuery()
		spawnTreasure()
		stagehandType()
		findPlatformerPath()
		polyContains()
		tileIsOccupied()
		debugText()
		monsterType()
		npcLineQuery()
		resolvePolyCollision()
		farmableStage()
		placeObject()
		polyCollision()
		entityVelocity()
		magnitude()
		containerOpen()
		lineCollision()
		entityPortrait()
		pointCollision()
		entityExists()
		spawnNpc()
		underground()
		entityMoney()
		entitySpecies()
		entityDescription()
		pointTileCollision()
		loungeableOccupied()
		xwrap()
		objectLineQuery()
		spawnProjectile()
		entityQuery()
		containerSwapItems()
		entityUniqueId()
		dayLength()
		containerTakeAll()
		entityType()
		findUniqueEntity()
		callScriptedEntity()
		containerAvailable()
		entityName()
		containerPutItemsAt()
		containerAddItems()
		containerItemsFitWhere()
		windLevel()
		entityLineQuery()
		playerQuery()
		isMonster()
		containerItemAt()
		liquidAlongLine()
		liquidAt()
		monsterQuery()
		placeMod()
		getProperty()
		objectAt()
		containerClose()
		containerTakeNumItemsAt()
		npcType()
		threatLevel()
		collisionBlocksAlongLine()
		damageTiles()
		containerItemApply()
		entityHasCountOfItem()
		containerSize()
		containerItems()
		debugPoint()
		entityHandItemDescriptor()
		containerSwapItemsNoCombine()
		containerItemsCanFit()
		entityHandItem()
		npcQuery()
		damageTileArea()
		debugPoly()
		debugLine()
		mod()
		rectTileCollision()
		breathable()
		isNpc()
	}
	player = {
		confirm()
		altHandItem()
		essentialItem()
		setIntroComplete()
		availableTechs()
		serverUuid()
		lounge()
		giveBlueprint()
		enableTech()
		playCinematic()
		itemsWithTag()
		consumeTaggedItem()
		equipTech()
		equippedItem()
		primaryHandItemTags()
		setEquippedItem()
		gender()
		makeTechUnavailable()
		warp()
		getItemWithParameter()
		introComplete()
		upgradeShip()
		consumeItem()
		setUniverseFlag()
		recordEvent()
		equippedTech()
		altHandItemTags()
		ownShipWorldId()
		giveItem()
		enableMission()
		hasItem()
		hasQuest()
		consumeItemWithParameter()
		canStartQuest()
		shipUpgrades()
		isLounging()
		radioMessage()
		giveEssentialItem()
		primaryHandItem()
		worldId()
		enabledTechs()
		startQuest()
		playTime()
		inventoryTags()
		hasCountOfItem()
		completeMission()
		addBookmark()
		hasCompletedQuest()
		hasItemWithParameter()
		species()
		makeTechAvailable()
		removeEssentialItem()
		cleanupItems()
	}
	widget = {
		removeListItem()
		getSliderValue()
		setImageScale()
		addListItem()
		setData()
		setButtonImage()
		getSize()
		getPosition()
		setVisible()
		getText()
		setButtonOverlayImage()
		setButtonCheckedImages()
		playSound()
		focus()
		setText()
		setProgress()
		setOptionVisible()
		setImageRotation()
		setSelectedOption()
		setListSelected()
		getData()
		clearListItems()
		getChecked()
		setButtonImages()
		setButtonEnabled()
		setChecked()
		setSize()
		getSelectedOption()
		setFontColor()
		setOptionEnabled()
		setPosition()
		getListSelected()
		itemGridItems()
		setImage()
		blur()
	}
	status = {
		clearPersistentEffects()
		statPositive()
		inflictedHitsSince()
		getPersistentEffects()
		modifyResource()
		setResource()
		setResourceLocked()
		damageTakenSince()
		resetResource()
		stat()
		setStatusProperty()
		addEphemeralEffect()
		consumeResource()
		resetAllResources()
		addPersistentEffects()
		statusProperty()
		inflictedDamageSince()
		clearEphemeralEffects()
		overConsumeResource()
		activeUniqueStatusEffectSummary()
		removeEphemeralEffect()
		setResourcePercentage()
		addPersistentEffect()
		resourcePositive()
		resource()
		addEphemeralEffects()
		clearAllPersistentEffects()
		resourceNames()
		resourceLocked()
		isResource()
		resourceMax()
		giveResource()
		resourcePercentage()
		modifyResourcePercentage()
		setPersistentEffects()
	}
	sb = {
		setLogMap()
		makeRandomSource()
		logInfo()
		replaceTags()
		jsonMerge()
		logError()
		print()
		jsonQuery()
		printJson()
		staticRandomDoubleRange()
		makePerlinSource()
		nrand()
		logWarn()
		makeUuid()
		staticRandomDouble()
		staticRandomI32Range()
		interpolateSinEase()
		staticRandomI32()
	}
	self = {
	}
	jobject()
	init()
	p()
	utf8 = {
		char()
		codes()
		codepoint()
		offset()
		charpattern = "[
[03:02:34.962] [Warn] 	setmetatable()
	rawlen()
	rawset()
	require()
	root = {
		isTreasurePool()
		projectileConfig()
		treeFoliageDirectory()
		treeStemDirectory()
		monsterPortrait()
		npcVariant()
		monsterMovementSettings()
		nonEmptyRegion()
		setConfiguration()
		monsterSkillParameter()
		setConfigurationPath()
		generateName()
		techType()
		getConfiguration()
		assetJson()
		projectileGravityMultiplier()
		itemHasTag()
		imageSize()
		itemTags()
		behaviorModule()
		getConfigurationPath()
		itemType()
		recipesForItem()
		createItem()
		materialFootstepSound()
		npcPortrait()
		evalFunction2()
		techConfig()
		liquidStatusEffects()
		materialPath()
		tenantConfig()
		makeCurrentVersionedJson()
		materialMiningSound()
		questConfig()
		npcConfig()
		materialHealth()
		getMatchingTenants()
		hasTech()
		evalFunction()
		itemConfig()
		imageSpaces()
		createBiome()
		loadVersionedJson()
		createTreasure()
	}
	ic = {
		sortFunc()
		checkStack()
		sort()
		getQuality()
		searchButton()
		renameThis()
		searchBox()
		clientVersion = 1
		stripColor()
		quickstack()
		renameButton()
		sort_relative()
		lock()
		itemConfig()
		amountEquipped()
		itemAmount()
		giveBack()
	}
	table = {
		pack()
		sort()
		insert()
		remove()
		move()
		unpack()
		concat()
	}
	config = {
		getParameter()
	}
	pairs()
	tostring()
	string = {
		char()
		format()
		match()
		rep()
		byte()
		reverse()
		lower()
		find()
		unpack()
		dump()
		upper()
		len()
		pack()
		packsize()
		gsub()
		gmatch()
		sub()
	}
	error()
	jremove()
	os = {
		difftime()
		clock()
		time()
	}
	jsize()
	jresize()
	type()
	rawequal()
	_VERSION = "Lua 5.3"
	script = {
		updateDt()
		setUpdateDelta()
	}
	math = {
		sqrt()
		acos()
		floor()
		pi = 3.1415926535898
		tan()
		mininteger = -9223372036854775808
		maxinteger = 9223372036854775807
		atan()
		abs()
		ceil()
		huge = inf
		ult()
		type()
		min()
		cos()
		deg()
		log()
		randomseed()
		asin()
		sin()
		random()
		rad()
		modf()
		max()
		exp()
		fmod()
		tointeger()
	}
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	next()
	coroutine = {
		running()
		isyieldable()
		wrap()
		status()
		create()
		yield()
		resume()
	}
	ipairs()
	update()
	print()
	pcall()
	tonumber()
	world = {
		lightLevel()
		sendEntityMessage()
		gravity()
		entityDamageTeam()
		entityCanDamage()
		spawnStagehand()
		nearestTo()
		itemDropQuery()
		containerConsume()
		entityPosition()
		rectCollision()
		entityGender()
		material()
		lineTileCollision()
		distance()
		placeMaterial()
		objectQuery()
		platformerPathStart()
		entityAggressive()
		containerConsumeAt()
		entityHealth()
		destroyLiquid()
		spawnLiquid()
		containerStackItems()
		containerTakeAt()
		setProperty()
		timeOfDay()
		spawnMonster()
		day()
		time()
		spawnItem()
		getObjectParameter()
		isTileProtected()
		spawnVehicle()
		objectSpaces()
		loungeableQuery()
		spawnTreasure()
		stagehandType()
		findPlatformerPath()
		polyContains()
		tileIsOccupied()
		debugText()
		monsterType()
		npcLineQuery()
		resolvePolyCollision()
		farmableStage()
		placeObject()
		polyCollision()
		entityVelocity()
		magnitude()
		containerOpen()
		lineCollision()
		entityPortrait()
		pointCollision()
		entityExists()
		spawnNpc()
		underground()
		entityMoney()
		entitySpecies()
		entityDescription()
		pointTileCollision()
		loungeableOccupied()
		xwrap()
		objectLineQuery()
		spawnProjectile()
		entityQuery()
		containerSwapItems()
		entityUniqueId()
		dayLength()
		containerTakeAll()
		entityType()
		findUniqueEntity()
		callScriptedEntity()
		containerAvailable()
		entityName()
		containerPutItemsAt()
		containerAddItems()
		containerItemsFitWhere()
		windLevel()
		entityLineQuery()
		playerQuery()
		isMonster()
		containerItemAt()
		liquidAlongLine()
		liquidAt()
		monsterQuery()
		placeMod()
		getProperty()
		objectAt()
		containerClose()
		containerTakeNumItemsAt()
		npcType()
		threatLevel()
		collisionBlocksAlongLine()
		damageTiles()
		containerItemApply()
		entityHasCountOfItem()
		containerSize()
		containerItems()
		debugPoint()
		entityHandItemDescriptor()
		containerSwapItemsNoCombine()
		containerItemsCanFit()
		entityHandItem()
		npcQuery()
		damageTileArea()
		debugPoly()
		debugLine()
		mod()
		rectTileCollision()
		breathable()
		isNpc()
	}
	player = {
		confirm()
		altHandItem()
		essentialItem()
		setIntroComplete()
		availableTechs()
		serverUuid()
		lounge()
		giveBlueprint()
		enableTech()
		playCinematic()
		itemsWithTag()
		consumeTaggedItem()
		equipTech()
		equippedItem()
		primaryHandItemTags()
		setEquippedItem()
		gender()
		makeTechUnavailable()
		warp()
		getItemWithParameter()
		introComplete()
		upgradeShip()
		consumeItem()
		setUniverseFlag()
		recordEvent()
		equippedTech()
		altHandItemTags()
		ownShipWorldId()
		giveItem()
		enableMission()
		hasItem()
		hasQuest()
		consumeItemWithParameter()
		canStartQuest()
		shipUpgrades()
		isLounging()
		radioMessage()
		giveEssentialItem()
		primaryHandItem()
		worldId()
		enabledTechs()
		startQuest()
		playTime()
		inventoryTags()
		hasCountOfItem()
		completeMission()
		addBookmark()
		hasCompletedQuest()
		hasItemWithParameter()
		species()
		makeTechAvailable()
		removeEssentialItem()
		cleanupItems()
	}
	widget = {
		removeListItem()
		getSliderValue()
		setImageScale()
		addListItem()
		setData()
		setButtonImage()
		getSize()
		getPosition()
		setVisible()
		getText()
		setButtonOverlayImage()
		setButtonCheckedImages()
		playSound()
		focus()
		setText()
		setProgress()
		setOptionVisible()
		setImageRotation()
		setSelectedOption()
		setListSelected()
		getData()
		clearListItems()
		getChecked()
		setButtonImages()
		setButtonEnabled()
		setChecked()
		setSize()
		getSelectedOption()
		setFontColor()
		setOptionEnabled()
		setPosition()
		getListSelected()
		itemGridItems()
		setImage()
		blur()
	}
	status = {
		clearPersistentEffects()
		statPositive()
		inflictedHitsSince()
		getPersistentEffects()
		modifyResource()
		setResource()
		setResourceLocked()
		damageTakenSince()
		resetResource()
		stat()
		setStatusProperty()
		addEphemeralEffect()
		consumeResource()
		resetAllResources()
		addPersistentEffects()
		statusProperty()
		inflictedDamageSince()
		clearEphemeralEffects()
		overConsumeResource()
		activeUniqueStatusEffectSummary()
		removeEphemeralEffect()
		setResourcePercentage()
		addPersistentEffect()
		resourcePositive()
		resource()
		addEphemeralEffects()
		clearAllPersistentEffects()
		resourceNames()
		resourceLocked()
		isResource()
		resourceMax()
		giveResource()
		resourcePercentage()
		modifyResourcePercentage()
		setPersistentEffects()
	}
	sb = {
		setLogMap()
		makeRandomSource()
		logInfo()
		replaceTags()
		jsonMerge()
		logError()
		print()
		jsonQuery()
		printJson()
		staticRandomDoubleRange()
		makePerlinSource()
		nrand()
		logWarn()
		makeUuid()
		staticRandomDouble()
		staticRandomI32Range()
		interpolateSinEase()
		staticRandomI32()
	}
	self = {
	}
	jobject()
	init()
	p()
	utf8 = {
		char()
		codes()
		codepoint()
		offset()
		charpattern = "[
[03:07:21.386] [Info] UniverseServer: Loading client ship world ClientShipWorld:40d0c64bbadbfcac62e62a636f4f2308
[03:07:22.374] [Info] UniverseServer: Warping player 1 to ClientShipWorld:40d0c64bbadbfcac62e62a636f4f2308
[03:07:22.479] [Info] UniverseServer: Stopping idle world CelestialWorld:-549421000:-174072045:85931705:2
[03:07:22.524] [Info] Client received world stop packet, leaving: Removed
[03:09:14.202] [Warn] 	jresize()
	config = {
		getParameter()
	}
	pairs()
	init()
	assert()
	rawlen()
	jobject()
	root = {
		makeCurrentVersionedJson()
		monsterPortrait()
		monsterMovementSettings()
		evalFunction2()
		itemHasTag()
		materialMiningSound()
		itemConfig()
		getMatchingTenants()
		createBiome()
		monsterSkillParameter()
		assetJson()
		treeStemDirectory()
		materialPath()
		npcVariant()
		generateName()
		setConfiguration()
		imageSpaces()
		hasTech()
		treeFoliageDirectory()
		itemType()
		getConfigurationPath()
		materialHealth()
		getConfiguration()
		techType()
		materialFootstepSound()
		questConfig()
		createTreasure()
		nonEmptyRegion()
		recipesForItem()
		loadVersionedJson()
		projectileConfig()
		imageSize()
		npcPortrait()
		setConfigurationPath()
		liquidStatusEffects()
		behaviorModule()
		tenantConfig()
		npcConfig()
		createItem()
		isTreasurePool()
		projectileGravityMultiplier()
		techConfig()
		itemTags()
		evalFunction()
	}
	table = {
		insert()
		sort()
		move()
		remove()
		pack()
		concat()
		unpack()
	}
	tonumber()
	error()
	pcall()
	jarray()
	ic = {
		lock()
		getQuality()
		searchBox()
		sortFunc()
		checkStack()
		renameButton()
		sort()
		renameThis()
		itemConfig()
		quickstack()
		giveBack()
		searchButton()
		stripColor()
		sort_relative()
		clientVersion = 1
		amountEquipped()
		itemAmount()
	}
	script = {
		setUpdateDelta()
		updateDt()
	}
	type()
	math = {
		sqrt()
		abs()
		deg()
		mininteger = -9223372036854775808
		maxinteger = 9223372036854775807
		huge = inf
		randomseed()
		pi = 3.1415926535898
		floor()
		tan()
		acos()
		sin()
		min()
		ceil()
		modf()
		ult()
		log()
		rad()
		atan()
		max()
		random()
		tointeger()
		asin()
		cos()
		type()
		fmod()
		exp()
	}
	world = {
		debugPoly()
		containerItemApply()
		entityQuery()
		npcLineQuery()
		containerOpen()
		containerItems()
		containerAvailable()
		placeObject()
		damageTiles()
		isMonster()
		pointCollision()
		objectLineQuery()
		entityUniqueId()
		containerPutItemsAt()
		callScriptedEntity()
		xwrap()
		placeMod()
		material()
		entityLineQuery()
		containerItemAt()
		containerSwapItemsNoCombine()
		damageTileArea()
		findUniqueEntity()
		threatLevel()
		platformerPathStart()
		objectAt()
		containerConsume()
		spawnProjectile()
		entityDamageTeam()
		entityType()
		playerQuery()
		entityExists()
		spawnNpc()
		destroyLiquid()
		findPlatformerPath()
		isTileProtected()
		underground()
		spawnLiquid()
		gravity()
		spawnStagehand()
		setProperty()
		getObjectParameter()
		containerTakeAll()
		day()
		time()
		lightLevel()
		liquidAt()
		spawnMonster()
		spawnTreasure()
		pointTileCollision()
		entityPosition()
		dayLength()
		tileIsOccupied()
		loungeableOccupied()
		rectCollision()
		entityHealth()
		collisionBlocksAlongLine()
		containerConsumeAt()
		spawnVehicle()
		polyCollision()
		lineCollision()
		itemDropQuery()
		sendEntityMessage()
		containerItemsFitWhere()
		entityVelocity()
		getProperty()
		polyContains()
		placeMaterial()
		lineTileCollision()
		entityAggressive()
		spawnItem()
		resolvePolyCollision()
		nearestTo()
		distance()
		liquidAlongLine()
		isNpc()
		stagehandType()
		containerClose()
		entityGender()
		monsterType()
		containerAddItems()
		farmableStage()
		entityPortrait()
		containerTakeAt()
		debugPoint()
		breathable()
		entityHandItemDescriptor()
		debugText()
		windLevel()
		timeOfDay()
		containerSwapItems()
		monsterQuery()
		debugLine()
		npcType()
		mod()
		containerStackItems()
		entityName()
		entityCanDamage()
		magnitude()
		entityHasCountOfItem()
		objectQuery()
		entityDescription()
		entityMoney()
		rectTileCollision()
		containerSize()
		containerTakeNumItemsAt()
		loungeableQuery()
		containerItemsCanFit()
		objectSpaces()
		npcQuery()
		entityHandItem()
		entitySpecies()
	}
	tostring()
	rawset()
	player = {
		enabledTechs()
		removeEssentialItem()
		itemsWithTag()
		ownShipWorldId()
		recordEvent()
		hasItemWithParameter()
		giveEssentialItem()
		species()
		giveBlueprint()
		cleanupItems()
		makeTechUnavailable()
		confirm()
		addBookmark()
		warp()
		consumeItem()
		consumeItemWithParameter()
		hasCompletedQuest()
		enableTech()
		shipUpgrades()
		playTime()
		enableMission()
		playCinematic()
		hasQuest()
		inventoryTags()
		isLounging()
		makeTechAvailable()
		setIntroComplete()
		canStartQuest()
		availableTechs()
		equippedTech()
		altHandItemTags()
		gender()
		hasCountOfItem()
		primaryHandItemTags()
		serverUuid()
		lounge()
		altHandItem()
		setEquippedItem()
		hasItem()
		primaryHandItem()
		consumeTaggedItem()
		completeMission()
		setUniverseFlag()
		introComplete()
		equipTech()
		essentialItem()
		equippedItem()
		radioMessage()
		getItemWithParameter()
		upgradeShip()
		startQuest()
		giveItem()
		worldId()
	}
	require()
	rawequal()
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	status = {
		setResource()
		resourceMax()
		addEphemeralEffect()
		resource()
		consumeResource()
		resetResource()
		inflictedDamageSince()
		clearEphemeralEffects()
		addPersistentEffects()
		clearAllPersistentEffects()
		inflictedHitsSince()
		addPersistentEffect()
		statPositive()
		resetAllResources()
		removeEphemeralEffect()
		modifyResource()
		giveResource()
		setStatusProperty()
		overConsumeResource()
		getPersistentEffects()
		resourcePercentage()
		activeUniqueStatusEffectSummary()
		setPersistentEffects()
		stat()
		resourcePositive()
		setResourcePercentage()
		modifyResourcePercentage()
		isResource()
		statusProperty()
		resourceLocked()
		addEphemeralEffects()
		damageTakenSince()
		clearPersistentEffects()
		setResourceLocked()
		resourceNames()
	}
	jremove()
	sb = {
		makeRandomSource()
		jsonMerge()
		staticRandomI32()
		jsonQuery()
		interpolateSinEase()
		makePerlinSource()
		staticRandomI32Range()
		logWarn()
		logError()
		nrand()
		print()
		replaceTags()
		setLogMap()
		staticRandomDouble()
		staticRandomDoubleRange()
		printJson()
		makeUuid()
		logInfo()
	}
	setmetatable()
	self = {
	}
	_VERSION = "Lua 5.3"
	rawget()
	update()
	widget = {
		setButtonOverlayImage()
		setImageRotation()
		getText()
		setButtonCheckedImages()
		setButtonImage()
		setFontColor()
		setOptionEnabled()
		addListItem()
		setText()
		clearListItems()
		setSelectedOption()
		setButtonEnabled()
		setVisible()
		setImageScale()
		focus()
		playSound()
		setSize()
		removeListItem()
		setListSelected()
		itemGridItems()
		getChecked()
		setPosition()
		getListSelected()
		setButtonImages()
		setChecked()
		blur()
		setData()
		getSelectedOption()
		setOptionVisible()
		getSliderValue()
		setImage()
		setProgress()
		getSize()
		getPosition()
		getData()
	}
	coroutine = {
		status()
		resume()
		create()
		running()
		isyieldable()
		yield()
		wrap()
	}
	p()
	print()
	os = {
		clock()
		difftime()
		time()
	}
	next()
	select()
	getmetatable()
	ipairs()
	jsize()
	utf8 = {
		charpattern = "[
[03:10:14.401] [Warn] 	jresize()
	config = {
		getParameter()
	}
	pairs()
	init()
	assert()
	rawlen()
	jobject()
	root = {
		makeCurrentVersionedJson()
		monsterPortrait()
		monsterMovementSettings()
		evalFunction2()
		itemHasTag()
		materialMiningSound()
		itemConfig()
		getMatchingTenants()
		createBiome()
		monsterSkillParameter()
		assetJson()
		treeStemDirectory()
		materialPath()
		npcVariant()
		generateName()
		setConfiguration()
		imageSpaces()
		hasTech()
		treeFoliageDirectory()
		itemType()
		getConfigurationPath()
		materialHealth()
		getConfiguration()
		techType()
		materialFootstepSound()
		questConfig()
		createTreasure()
		nonEmptyRegion()
		recipesForItem()
		loadVersionedJson()
		projectileConfig()
		imageSize()
		npcPortrait()
		setConfigurationPath()
		liquidStatusEffects()
		behaviorModule()
		tenantConfig()
		npcConfig()
		createItem()
		isTreasurePool()
		projectileGravityMultiplier()
		techConfig()
		itemTags()
		evalFunction()
	}
	table = {
		insert()
		sort()
		move()
		remove()
		pack()
		concat()
		unpack()
	}
	tonumber()
	error()
	pcall()
	jarray()
	ic = {
		lock()
		getQuality()
		searchBox()
		sortFunc()
		checkStack()
		renameButton()
		sort()
		renameThis()
		itemConfig()
		quickstack()
		giveBack()
		searchButton()
		stripColor()
		sort_relative()
		clientVersion = 1
		amountEquipped()
		itemAmount()
	}
	script = {
		setUpdateDelta()
		updateDt()
	}
	type()
	math = {
		sqrt()
		abs()
		deg()
		mininteger = -9223372036854775808
		maxinteger = 9223372036854775807
		huge = inf
		randomseed()
		pi = 3.1415926535898
		floor()
		tan()
		acos()
		sin()
		min()
		ceil()
		modf()
		ult()
		log()
		rad()
		atan()
		max()
		random()
		tointeger()
		asin()
		cos()
		type()
		fmod()
		exp()
	}
	world = {
		debugPoly()
		containerItemApply()
		entityQuery()
		npcLineQuery()
		containerOpen()
		containerItems()
		containerAvailable()
		placeObject()
		damageTiles()
		isMonster()
		pointCollision()
		objectLineQuery()
		entityUniqueId()
		containerPutItemsAt()
		callScriptedEntity()
		xwrap()
		placeMod()
		material()
		entityLineQuery()
		containerItemAt()
		containerSwapItemsNoCombine()
		damageTileArea()
		findUniqueEntity()
		threatLevel()
		platformerPathStart()
		objectAt()
		containerConsume()
		spawnProjectile()
		entityDamageTeam()
		entityType()
		playerQuery()
		entityExists()
		spawnNpc()
		destroyLiquid()
		findPlatformerPath()
		isTileProtected()
		underground()
		spawnLiquid()
		gravity()
		spawnStagehand()
		setProperty()
		getObjectParameter()
		containerTakeAll()
		day()
		time()
		lightLevel()
		liquidAt()
		spawnMonster()
		spawnTreasure()
		pointTileCollision()
		entityPosition()
		dayLength()
		tileIsOccupied()
		loungeableOccupied()
		rectCollision()
		entityHealth()
		collisionBlocksAlongLine()
		containerConsumeAt()
		spawnVehicle()
		polyCollision()
		lineCollision()
		itemDropQuery()
		sendEntityMessage()
		containerItemsFitWhere()
		entityVelocity()
		getProperty()
		polyContains()
		placeMaterial()
		lineTileCollision()
		entityAggressive()
		spawnItem()
		resolvePolyCollision()
		nearestTo()
		distance()
		liquidAlongLine()
		isNpc()
		stagehandType()
		containerClose()
		entityGender()
		monsterType()
		containerAddItems()
		farmableStage()
		entityPortrait()
		containerTakeAt()
		debugPoint()
		breathable()
		entityHandItemDescriptor()
		debugText()
		windLevel()
		timeOfDay()
		containerSwapItems()
		monsterQuery()
		debugLine()
		npcType()
		mod()
		containerStackItems()
		entityName()
		entityCanDamage()
		magnitude()
		entityHasCountOfItem()
		objectQuery()
		entityDescription()
		entityMoney()
		rectTileCollision()
		containerSize()
		containerTakeNumItemsAt()
		loungeableQuery()
		containerItemsCanFit()
		objectSpaces()
		npcQuery()
		entityHandItem()
		entitySpecies()
	}
	tostring()
	rawset()
	player = {
		enabledTechs()
		removeEssentialItem()
		itemsWithTag()
		ownShipWorldId()
		recordEvent()
		hasItemWithParameter()
		giveEssentialItem()
		species()
		giveBlueprint()
		cleanupItems()
		makeTechUnavailable()
		confirm()
		addBookmark()
		warp()
		consumeItem()
		consumeItemWithParameter()
		hasCompletedQuest()
		enableTech()
		shipUpgrades()
		playTime()
		enableMission()
		playCinematic()
		hasQuest()
		inventoryTags()
		isLounging()
		makeTechAvailable()
		setIntroComplete()
		canStartQuest()
		availableTechs()
		equippedTech()
		altHandItemTags()
		gender()
		hasCountOfItem()
		primaryHandItemTags()
		serverUuid()
		lounge()
		altHandItem()
		setEquippedItem()
		hasItem()
		primaryHandItem()
		consumeTaggedItem()
		completeMission()
		setUniverseFlag()
		introComplete()
		equipTech()
		essentialItem()
		equippedItem()
		radioMessage()
		getItemWithParameter()
		upgradeShip()
		startQuest()
		giveItem()
		worldId()
	}
	require()
	rawequal()
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	status = {
		setResource()
		resourceMax()
		addEphemeralEffect()
		resource()
		consumeResource()
		resetResource()
		inflictedDamageSince()
		clearEphemeralEffects()
		addPersistentEffects()
		clearAllPersistentEffects()
		inflictedHitsSince()
		addPersistentEffect()
		statPositive()
		resetAllResources()
		removeEphemeralEffect()
		modifyResource()
		giveResource()
		setStatusProperty()
		overConsumeResource()
		getPersistentEffects()
		resourcePercentage()
		activeUniqueStatusEffectSummary()
		setPersistentEffects()
		stat()
		resourcePositive()
		setResourcePercentage()
		modifyResourcePercentage()
		isResource()
		statusProperty()
		resourceLocked()
		addEphemeralEffects()
		damageTakenSince()
		clearPersistentEffects()
		setResourceLocked()
		resourceNames()
	}
	jremove()
	sb = {
		makeRandomSource()
		jsonMerge()
		staticRandomI32()
		jsonQuery()
		interpolateSinEase()
		makePerlinSource()
		staticRandomI32Range()
		logWarn()
		logError()
		nrand()
		print()
		replaceTags()
		setLogMap()
		staticRandomDouble()
		staticRandomDoubleRange()
		printJson()
		makeUuid()
		logInfo()
	}
	setmetatable()
	self = {
	}
	_VERSION = "Lua 5.3"
	rawget()
	update()
	widget = {
		setButtonOverlayImage()
		setImageRotation()
		getText()
		setButtonCheckedImages()
		setButtonImage()
		setFontColor()
		setOptionEnabled()
		addListItem()
		setText()
		clearListItems()
		setSelectedOption()
		setButtonEnabled()
		setVisible()
		setImageScale()
		focus()
		playSound()
		setSize()
		removeListItem()
		setListSelected()
		itemGridItems()
		getChecked()
		setPosition()
		getListSelected()
		setButtonImages()
		setChecked()
		blur()
		setData()
		getSelectedOption()
		setOptionVisible()
		getSliderValue()
		setImage()
		setProgress()
		getSize()
		getPosition()
		getData()
	}
	coroutine = {
		status()
		resume()
		create()
		running()
		isyieldable()
		yield()
		wrap()
	}
	p()
	print()
	os = {
		clock()
		difftime()
		time()
	}
	next()
	select()
	getmetatable()
	ipairs()
	jsize()
	utf8 = {
		charpattern = "[
[03:10:35.363] [Warn] 	jresize()
	config = {
		getParameter()
	}
	pairs()
	init()
	assert()
	rawlen()
	jobject()
	root = {
		makeCurrentVersionedJson()
		monsterPortrait()
		monsterMovementSettings()
		evalFunction2()
		itemHasTag()
		materialMiningSound()
		itemConfig()
		getMatchingTenants()
		createBiome()
		monsterSkillParameter()
		assetJson()
		treeStemDirectory()
		materialPath()
		npcVariant()
		generateName()
		setConfiguration()
		imageSpaces()
		hasTech()
		treeFoliageDirectory()
		itemType()
		getConfigurationPath()
		materialHealth()
		getConfiguration()
		techType()
		materialFootstepSound()
		questConfig()
		createTreasure()
		nonEmptyRegion()
		recipesForItem()
		loadVersionedJson()
		projectileConfig()
		imageSize()
		npcPortrait()
		setConfigurationPath()
		liquidStatusEffects()
		behaviorModule()
		tenantConfig()
		npcConfig()
		createItem()
		isTreasurePool()
		projectileGravityMultiplier()
		techConfig()
		itemTags()
		evalFunction()
	}
	table = {
		insert()
		sort()
		move()
		remove()
		pack()
		concat()
		unpack()
	}
	tonumber()
	error()
	pcall()
	jarray()
	ic = {
		lock()
		getQuality()
		searchBox()
		sortFunc()
		checkStack()
		renameButton()
		sort()
		renameThis()
		itemConfig()
		quickstack()
		giveBack()
		searchButton()
		stripColor()
		sort_relative()
		clientVersion = 1
		amountEquipped()
		itemAmount()
	}
	script = {
		setUpdateDelta()
		updateDt()
	}
	type()
	math = {
		sqrt()
		abs()
		deg()
		mininteger = -9223372036854775808
		maxinteger = 9223372036854775807
		huge = inf
		randomseed()
		pi = 3.1415926535898
		floor()
		tan()
		acos()
		sin()
		min()
		ceil()
		modf()
		ult()
		log()
		rad()
		atan()
		max()
		random()
		tointeger()
		asin()
		cos()
		type()
		fmod()
		exp()
	}
	world = {
		debugPoly()
		containerItemApply()
		entityQuery()
		npcLineQuery()
		containerOpen()
		containerItems()
		containerAvailable()
		placeObject()
		damageTiles()
		isMonster()
		pointCollision()
		objectLineQuery()
		entityUniqueId()
		containerPutItemsAt()
		callScriptedEntity()
		xwrap()
		placeMod()
		material()
		entityLineQuery()
		containerItemAt()
		containerSwapItemsNoCombine()
		damageTileArea()
		findUniqueEntity()
		threatLevel()
		platformerPathStart()
		objectAt()
		containerConsume()
		spawnProjectile()
		entityDamageTeam()
		entityType()
		playerQuery()
		entityExists()
		spawnNpc()
		destroyLiquid()
		findPlatformerPath()
		isTileProtected()
		underground()
		spawnLiquid()
		gravity()
		spawnStagehand()
		setProperty()
		getObjectParameter()
		containerTakeAll()
		day()
		time()
		lightLevel()
		liquidAt()
		spawnMonster()
		spawnTreasure()
		pointTileCollision()
		entityPosition()
		dayLength()
		tileIsOccupied()
		loungeableOccupied()
		rectCollision()
		entityHealth()
		collisionBlocksAlongLine()
		containerConsumeAt()
		spawnVehicle()
		polyCollision()
		lineCollision()
		itemDropQuery()
		sendEntityMessage()
		containerItemsFitWhere()
		entityVelocity()
		getProperty()
		polyContains()
		placeMaterial()
		lineTileCollision()
		entityAggressive()
		spawnItem()
		resolvePolyCollision()
		nearestTo()
		distance()
		liquidAlongLine()
		isNpc()
		stagehandType()
		containerClose()
		entityGender()
		monsterType()
		containerAddItems()
		farmableStage()
		entityPortrait()
		containerTakeAt()
		debugPoint()
		breathable()
		entityHandItemDescriptor()
		debugText()
		windLevel()
		timeOfDay()
		containerSwapItems()
		monsterQuery()
		debugLine()
		npcType()
		mod()
		containerStackItems()
		entityName()
		entityCanDamage()
		magnitude()
		entityHasCountOfItem()
		objectQuery()
		entityDescription()
		entityMoney()
		rectTileCollision()
		containerSize()
		containerTakeNumItemsAt()
		loungeableQuery()
		containerItemsCanFit()
		objectSpaces()
		npcQuery()
		entityHandItem()
		entitySpecies()
	}
	tostring()
	rawset()
	player = {
		enabledTechs()
		removeEssentialItem()
		itemsWithTag()
		ownShipWorldId()
		recordEvent()
		hasItemWithParameter()
		giveEssentialItem()
		species()
		giveBlueprint()
		cleanupItems()
		makeTechUnavailable()
		confirm()
		addBookmark()
		warp()
		consumeItem()
		consumeItemWithParameter()
		hasCompletedQuest()
		enableTech()
		shipUpgrades()
		playTime()
		enableMission()
		playCinematic()
		hasQuest()
		inventoryTags()
		isLounging()
		makeTechAvailable()
		setIntroComplete()
		canStartQuest()
		availableTechs()
		equippedTech()
		altHandItemTags()
		gender()
		hasCountOfItem()
		primaryHandItemTags()
		serverUuid()
		lounge()
		altHandItem()
		setEquippedItem()
		hasItem()
		primaryHandItem()
		consumeTaggedItem()
		completeMission()
		setUniverseFlag()
		introComplete()
		equipTech()
		essentialItem()
		equippedItem()
		radioMessage()
		getItemWithParameter()
		upgradeShip()
		startQuest()
		giveItem()
		worldId()
	}
	require()
	rawequal()
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	status = {
		setResource()
		resourceMax()
		addEphemeralEffect()
		resource()
		consumeResource()
		resetResource()
		inflictedDamageSince()
		clearEphemeralEffects()
		addPersistentEffects()
		clearAllPersistentEffects()
		inflictedHitsSince()
		addPersistentEffect()
		statPositive()
		resetAllResources()
		removeEphemeralEffect()
		modifyResource()
		giveResource()
		setStatusProperty()
		overConsumeResource()
		getPersistentEffects()
		resourcePercentage()
		activeUniqueStatusEffectSummary()
		setPersistentEffects()
		stat()
		resourcePositive()
		setResourcePercentage()
		modifyResourcePercentage()
		isResource()
		statusProperty()
		resourceLocked()
		addEphemeralEffects()
		damageTakenSince()
		clearPersistentEffects()
		setResourceLocked()
		resourceNames()
	}
	jremove()
	sb = {
		makeRandomSource()
		jsonMerge()
		staticRandomI32()
		jsonQuery()
		interpolateSinEase()
		makePerlinSource()
		staticRandomI32Range()
		logWarn()
		logError()
		nrand()
		print()
		replaceTags()
		setLogMap()
		staticRandomDouble()
		staticRandomDoubleRange()
		printJson()
		makeUuid()
		logInfo()
	}
	setmetatable()
	self = {
	}
	_VERSION = "Lua 5.3"
	rawget()
	update()
	widget = {
		setButtonOverlayImage()
		setImageRotation()
		getText()
		setButtonCheckedImages()
		setButtonImage()
		setFontColor()
		setOptionEnabled()
		addListItem()
		setText()
		clearListItems()
		setSelectedOption()
		setButtonEnabled()
		setVisible()
		setImageScale()
		focus()
		playSound()
		setSize()
		removeListItem()
		setListSelected()
		itemGridItems()
		getChecked()
		setPosition()
		getListSelected()
		setButtonImages()
		setChecked()
		blur()
		setData()
		getSelectedOption()
		setOptionVisible()
		getSliderValue()
		setImage()
		setProgress()
		getSize()
		getPosition()
		getData()
	}
	coroutine = {
		status()
		resume()
		create()
		running()
		isyieldable()
		yield()
		wrap()
	}
	p()
	print()
	os = {
		clock()
		difftime()
		time()
	}
	next()
	select()
	getmetatable()
	ipairs()
	jsize()
	utf8 = {
		charpattern = "[
[03:10:43.144] [Info] [IC] [Sort] Time elapsed: 0.012
[03:10:46.349] [Info] [IC] [Sort] Time elapsed: 0.005
[03:11:14.778] [Info] UniverseServer: Loading celestial world -549421001:-174071997:73115888:11
[03:11:15.383] [Info] UniverseServer: Warping player 1 to CelestialWorld:-549421001:-174071997:73115888:11=c70c9c341f137e6bb697fde680d6c23d
[03:11:15.456] [Info] Client received world stop packet, leaving: Removed
[03:11:15.844] [Info] UniverseServer: Stopping idle world ClientShipWorld:40d0c64bbadbfcac62e62a636f4f2308
[03:14:41.406] [Info] UniverseServer: Loading client ship world ClientShipWorld:40d0c64bbadbfcac62e62a636f4f2308
[03:14:42.376] [Info] UniverseServer: Warping player 1 to ClientShipWorld:40d0c64bbadbfcac62e62a636f4f2308
[03:14:42.464] [Info] UniverseServer: Stopping idle world CelestialWorld:-549421001:-174071997:73115888:11
[03:14:42.512] [Info] Client received world stop packet, leaving: Removed
[03:14:48.398] [Info] UniverseServer: Loading celestial world -549421001:-174071997:73115888:11
[03:14:48.599] [Info] UniverseServer: Warping player 1 to CelestialWorld:-549421001:-174071997:73115888:11=c70c9c341f137e6bb697fde680d6c23d
[03:14:48.640] [Info] Client received world stop packet, leaving: Removed
[03:14:48.940] [Info] UniverseServer: Stopping idle world ClientShipWorld:40d0c64bbadbfcac62e62a636f4f2308
[03:15:31.123] [Info] UniverseServer: Loading client ship world ClientShipWorld:40d0c64bbadbfcac62e62a636f4f2308
[03:15:32.078] [Info] UniverseServer: Warping player 1 to ClientShipWorld:40d0c64bbadbfcac62e62a636f4f2308
[03:15:32.161] [Info] UniverseServer: Stopping idle world CelestialWorld:-549421001:-174071997:73115888:11
[03:15:32.250] [Info] Client received world stop packet, leaving: Removed
[03:15:59.743] [Info] UniverseServer: Loading celestial world -549421001:-174071997:73115888:11
[03:15:59.949] [Info] UniverseServer: Warping player 1 to CelestialWorld:-549421001:-174071997:73115888:11=c70c9c341f137e6bb697fde680d6c23d
[03:15:59.990] [Info] Client received world stop packet, leaving: Removed
[03:16:00.266] [Info] UniverseServer: Stopping idle world ClientShipWorld:40d0c64bbadbfcac62e62a636f4f2308
[03:17:56.992] [Info] UniverseServer: Loading celestial world -549421120:-174071947:-77840190:8
[03:17:57.300] [Info] UniverseServer: Warping player 1 to CelestialWorld:-549421120:-174071947:-77840190:8=65960b76dbc4345d6a78ca55b02f8224
[03:17:57.348] [Info] Client received world stop packet, leaving: Removed
[03:17:57.541] [Info] UniverseServer: Stopping idle world CelestialWorld:-549421001:-174071997:73115888:11
[03:18:59.741] [Warn] 	coroutine = {
		wrap()
		resume()
		create()
		isyieldable()
		status()
		running()
		yield()
	}
	jarray()
	type()
	init()
	require()
	table = {
		insert()
		unpack()
		pack()
		concat()
		sort()
		move()
		remove()
	}
	_VERSION = "Lua 5.3"
	update()
	rawequal()
	world = {
		isMonster()
		entityPortrait()
		entityQuery()
		itemDropQuery()
		entityVelocity()
		damageTiles()
		entityHealth()
		debugPoint()
		debugLine()
		entityExists()
		entityUniqueId()
		timeOfDay()
		entityGender()
		entityAggressive()
		magnitude()
		mod()
		platformerPathStart()
		containerItemAt()
		breathable()
		entityHasCountOfItem()
		npcType()
		sendEntityMessage()
		liquidAt()
		liquidAlongLine()
		isTileProtected()
		destroyLiquid()
		spawnLiquid()
		isNpc()
		getProperty()
		gravity()
		entityMoney()
		objectLineQuery()
		spawnMonster()
		lineCollision()
		lineTileCollision()
		rectCollision()
		getObjectParameter()
		entityHandItem()
		setProperty()
		entityHandItemDescriptor()
		time()
		placeMaterial()
		entityName()
		findUniqueEntity()
		threatLevel()
		placeObject()
		spawnTreasure()
		spawnVehicle()
		damageTileArea()
		windLevel()
		tileIsOccupied()
		containerTakeAt()
		loungeableOccupied()
		resolvePolyCollision()
		nearestTo()
		spawnStagehand()
		polyCollision()
		containerOpen()
		pointCollision()
		distance()
		rectTileCollision()
		debugPoly()
		pointTileCollision()
		containerStackItems()
		collisionBlocksAlongLine()
		entityDamageTeam()
		containerAvailable()
		containerItemApply()
		farmableStage()
		containerSize()
		polyContains()
		stagehandType()
		containerItemsCanFit()
		placeMod()
		containerTakeNumItemsAt()
		dayLength()
		callScriptedEntity()
		spawnProjectile()
		containerItemsFitWhere()
		npcLineQuery()
		npcQuery()
		containerTakeAll()
		findPlatformerPath()
		entityDescription()
		xwrap()
		spawnItem()
		containerSwapItemsNoCombine()
		containerAddItems()
		objectSpaces()
		playerQuery()
		containerConsumeAt()
		monsterType()
		entityType()
		containerSwapItems()
		debugText()
		day()
		containerPutItemsAt()
		entitySpecies()
		loungeableQuery()
		lightLevel()
		entityCanDamage()
		underground()
		spawnNpc()
		material()
		monsterQuery()
		objectQuery()
		containerConsume()
		entityLineQuery()
		containerClose()
		entityPosition()
		objectAt()
		containerItems()
	}
	tonumber()
	ic = {
		stripColor()
		giveBack()
		renameThis()
		checkStack()
		sortFunc()
		sort()
		itemAmount()
		amountEquipped()
		sort_relative()
		itemConfig()
		searchBox()
		clientVersion = 1
		quickstack()
		searchButton()
		renameButton()
		lock()
		getQuality()
	}
	assert()
	rawset()
	getmetatable()
	string = {
		rep()
		gmatch()
		reverse()
		pack()
		char()
		sub()
		format()
		byte()
		match()
		dump()
		find()
		unpack()
		packsize()
		upper()
		gsub()
		lower()
		len()
	}
	pcall()
	player = {
		consumeItemWithParameter()
		shipUpgrades()
		altHandItemTags()
		upgradeShip()
		serverUuid()
		gender()
		worldId()
		equippedTech()
		completeMission()
		inventoryTags()
		removeEssentialItem()
		hasItem()
		recordEvent()
		addBookmark()
		lounge()
		cleanupItems()
		consumeItem()
		makeTechUnavailable()
		setUniverseFlag()
		giveBlueprint()
		hasItemWithParameter()
		species()
		playCinematic()
		altHandItem()
		primaryHandItemTags()
		availableTechs()
		enabledTechs()
		enableTech()
		giveItem()
		playTime()
		setIntroComplete()
		essentialItem()
		ownShipWorldId()
		makeTechAvailable()
		warp()
		equipTech()
		startQuest()
		enableMission()
		hasQuest()
		itemsWithTag()
		isLounging()
		primaryHandItem()
		confirm()
		hasCompletedQuest()
		hasCountOfItem()
		equippedItem()
		setEquippedItem()
		radioMessage()
		giveEssentialItem()
		introComplete()
		canStartQuest()
		consumeTaggedItem()
		getItemWithParameter()
	}
	config = {
		getParameter()
	}
	root = {
		questConfig()
		treeFoliageDirectory()
		getConfigurationPath()
		loadVersionedJson()
		materialHealth()
		tenantConfig()
		itemConfig()
		materialMiningSound()
		projectileConfig()
		imageSpaces()
		techType()
		createTreasure()
		materialFootstepSound()
		itemHasTag()
		imageSize()
		treeStemDirectory()
		npcPortrait()
		hasTech()
		getMatchingTenants()
		getConfiguration()
		createItem()
		generateName()
		setConfiguration()
		techConfig()
		materialPath()
		makeCurrentVersionedJson()
		monsterMovementSettings()
		isTreasurePool()
		itemTags()
		itemType()
		evalFunction()
		monsterSkillParameter()
		assetJson()
		setConfigurationPath()
		monsterPortrait()
		recipesForItem()
		createBiome()
		behaviorModule()
		liquidStatusEffects()
		npcConfig()
		nonEmptyRegion()
		evalFunction2()
		projectileGravityMultiplier()
		npcVariant()
	}
	math = {
		tan()
		atan()
		modf()
		exp()
		type()
		acos()
		abs()
		mininteger = -9223372036854775808
		maxinteger = 9223372036854775807
		deg()
		asin()
		randomseed()
		random()
		sqrt()
		huge = inf
		min()
		log()
		pi = 3.1415926535898
		rad()
		max()
		floor()
		ult()
		cos()
		tointeger()
		fmod()
		sin()
		ceil()
	}
	widget = {
		setListSelected()
		setImage()
		setButtonCheckedImages()
		setImageRotation()
		setButtonImage()
		getListSelected()
		itemGridItems()
		addListItem()
		removeListItem()
		setButtonImages()
		blur()
		getData()
		setOptionVisible()
		playSound()
		setChecked()
		getSelectedOption()
		setFontColor()
		setSize()
		setOptionEnabled()
		clearListItems()
		setPosition()
		setProgress()
		getText()
		getSliderValue()
		setButtonEnabled()
		setButtonOverlayImage()
		setData()
		setSelectedOption()
		focus()
		getSize()
		setImageScale()
		setVisible()
		getPosition()
		setText()
		getChecked()
	}
	xpcall()
	setmetatable()
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	status = {
		removeEphemeralEffect()
		resetResource()
		addPersistentEffect()
		addEphemeralEffect()
		resourceMax()
		addPersistentEffects()
		clearEphemeralEffects()
		statPositive()
		modifyResource()
		statusProperty()
		resourcePercentage()
		resource()
		isResource()
		setResourcePercentage()
		getPersistentEffects()
		resourcePositive()
		clearPersistentEffects()
		giveResource()
		overConsumeResource()
		damageTakenSince()
		activeUniqueStatusEffectSummary()
		addEphemeralEffects()
		setStatusProperty()
		resourceLocked()
		modifyResourcePercentage()
		stat()
		clearAllPersistentEffects()
		setResourceLocked()
		resetAllResources()
		resourceNames()
		setPersistentEffects()
		inflictedDamageSince()
		consumeResource()
		inflictedHitsSince()
		setResource()
	}
	utf8 = {
		charpattern = "[
[03:19:00.868] [Warn] 	coroutine = {
		wrap()
		resume()
		create()
		isyieldable()
		status()
		running()
		yield()
	}
	jarray()
	type()
	init()
	require()
	table = {
		insert()
		unpack()
		pack()
		concat()
		sort()
		move()
		remove()
	}
	_VERSION = "Lua 5.3"
	update()
	rawequal()
	world = {
		isMonster()
		entityPortrait()
		entityQuery()
		itemDropQuery()
		entityVelocity()
		damageTiles()
		entityHealth()
		debugPoint()
		debugLine()
		entityExists()
		entityUniqueId()
		timeOfDay()
		entityGender()
		entityAggressive()
		magnitude()
		mod()
		platformerPathStart()
		containerItemAt()
		breathable()
		entityHasCountOfItem()
		npcType()
		sendEntityMessage()
		liquidAt()
		liquidAlongLine()
		isTileProtected()
		destroyLiquid()
		spawnLiquid()
		isNpc()
		getProperty()
		gravity()
		entityMoney()
		objectLineQuery()
		spawnMonster()
		lineCollision()
		lineTileCollision()
		rectCollision()
		getObjectParameter()
		entityHandItem()
		setProperty()
		entityHandItemDescriptor()
		time()
		placeMaterial()
		entityName()
		findUniqueEntity()
		threatLevel()
		placeObject()
		spawnTreasure()
		spawnVehicle()
		damageTileArea()
		windLevel()
		tileIsOccupied()
		containerTakeAt()
		loungeableOccupied()
		resolvePolyCollision()
		nearestTo()
		spawnStagehand()
		polyCollision()
		containerOpen()
		pointCollision()
		distance()
		rectTileCollision()
		debugPoly()
		pointTileCollision()
		containerStackItems()
		collisionBlocksAlongLine()
		entityDamageTeam()
		containerAvailable()
		containerItemApply()
		farmableStage()
		containerSize()
		polyContains()
		stagehandType()
		containerItemsCanFit()
		placeMod()
		containerTakeNumItemsAt()
		dayLength()
		callScriptedEntity()
		spawnProjectile()
		containerItemsFitWhere()
		npcLineQuery()
		npcQuery()
		containerTakeAll()
		findPlatformerPath()
		entityDescription()
		xwrap()
		spawnItem()
		containerSwapItemsNoCombine()
		containerAddItems()
		objectSpaces()
		playerQuery()
		containerConsumeAt()
		monsterType()
		entityType()
		containerSwapItems()
		debugText()
		day()
		containerPutItemsAt()
		entitySpecies()
		loungeableQuery()
		lightLevel()
		entityCanDamage()
		underground()
		spawnNpc()
		material()
		monsterQuery()
		objectQuery()
		containerConsume()
		entityLineQuery()
		containerClose()
		entityPosition()
		objectAt()
		containerItems()
	}
	tonumber()
	ic = {
		stripColor()
		giveBack()
		renameThis()
		checkStack()
		sortFunc()
		sort()
		itemAmount()
		amountEquipped()
		sort_relative()
		itemConfig()
		searchBox()
		clientVersion = 1
		quickstack()
		searchButton()
		renameButton()
		lock()
		getQuality()
	}
	assert()
	rawset()
	getmetatable()
	string = {
		rep()
		gmatch()
		reverse()
		pack()
		char()
		sub()
		format()
		byte()
		match()
		dump()
		find()
		unpack()
		packsize()
		upper()
		gsub()
		lower()
		len()
	}
	pcall()
	player = {
		consumeItemWithParameter()
		shipUpgrades()
		altHandItemTags()
		upgradeShip()
		serverUuid()
		gender()
		worldId()
		equippedTech()
		completeMission()
		inventoryTags()
		removeEssentialItem()
		hasItem()
		recordEvent()
		addBookmark()
		lounge()
		cleanupItems()
		consumeItem()
		makeTechUnavailable()
		setUniverseFlag()
		giveBlueprint()
		hasItemWithParameter()
		species()
		playCinematic()
		altHandItem()
		primaryHandItemTags()
		availableTechs()
		enabledTechs()
		enableTech()
		giveItem()
		playTime()
		setIntroComplete()
		essentialItem()
		ownShipWorldId()
		makeTechAvailable()
		warp()
		equipTech()
		startQuest()
		enableMission()
		hasQuest()
		itemsWithTag()
		isLounging()
		primaryHandItem()
		confirm()
		hasCompletedQuest()
		hasCountOfItem()
		equippedItem()
		setEquippedItem()
		radioMessage()
		giveEssentialItem()
		introComplete()
		canStartQuest()
		consumeTaggedItem()
		getItemWithParameter()
	}
	config = {
		getParameter()
	}
	root = {
		questConfig()
		treeFoliageDirectory()
		getConfigurationPath()
		loadVersionedJson()
		materialHealth()
		tenantConfig()
		itemConfig()
		materialMiningSound()
		projectileConfig()
		imageSpaces()
		techType()
		createTreasure()
		materialFootstepSound()
		itemHasTag()
		imageSize()
		treeStemDirectory()
		npcPortrait()
		hasTech()
		getMatchingTenants()
		getConfiguration()
		createItem()
		generateName()
		setConfiguration()
		techConfig()
		materialPath()
		makeCurrentVersionedJson()
		monsterMovementSettings()
		isTreasurePool()
		itemTags()
		itemType()
		evalFunction()
		monsterSkillParameter()
		assetJson()
		setConfigurationPath()
		monsterPortrait()
		recipesForItem()
		createBiome()
		behaviorModule()
		liquidStatusEffects()
		npcConfig()
		nonEmptyRegion()
		evalFunction2()
		projectileGravityMultiplier()
		npcVariant()
	}
	math = {
		tan()
		atan()
		modf()
		exp()
		type()
		acos()
		abs()
		mininteger = -9223372036854775808
		maxinteger = 9223372036854775807
		deg()
		asin()
		randomseed()
		random()
		sqrt()
		huge = inf
		min()
		log()
		pi = 3.1415926535898
		rad()
		max()
		floor()
		ult()
		cos()
		tointeger()
		fmod()
		sin()
		ceil()
	}
	widget = {
		setListSelected()
		setImage()
		setButtonCheckedImages()
		setImageRotation()
		setButtonImage()
		getListSelected()
		itemGridItems()
		addListItem()
		removeListItem()
		setButtonImages()
		blur()
		getData()
		setOptionVisible()
		playSound()
		setChecked()
		getSelectedOption()
		setFontColor()
		setSize()
		setOptionEnabled()
		clearListItems()
		setPosition()
		setProgress()
		getText()
		getSliderValue()
		setButtonEnabled()
		setButtonOverlayImage()
		setData()
		setSelectedOption()
		focus()
		getSize()
		setImageScale()
		setVisible()
		getPosition()
		setText()
		getChecked()
	}
	xpcall()
	setmetatable()
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	status = {
		removeEphemeralEffect()
		resetResource()
		addPersistentEffect()
		addEphemeralEffect()
		resourceMax()
		addPersistentEffects()
		clearEphemeralEffects()
		statPositive()
		modifyResource()
		statusProperty()
		resourcePercentage()
		resource()
		isResource()
		setResourcePercentage()
		getPersistentEffects()
		resourcePositive()
		clearPersistentEffects()
		giveResource()
		overConsumeResource()
		damageTakenSince()
		activeUniqueStatusEffectSummary()
		addEphemeralEffects()
		setStatusProperty()
		resourceLocked()
		modifyResourcePercentage()
		stat()
		clearAllPersistentEffects()
		setResourceLocked()
		resetAllResources()
		resourceNames()
		setPersistentEffects()
		inflictedDamageSince()
		consumeResource()
		inflictedHitsSince()
		setResource()
	}
	utf8 = {
		charpattern = "[
[03:19:05.847] [Warn] 	coroutine = {
		wrap()
		resume()
		create()
		isyieldable()
		status()
		running()
		yield()
	}
	jarray()
	type()
	init()
	require()
	table = {
		insert()
		unpack()
		pack()
		concat()
		sort()
		move()
		remove()
	}
	_VERSION = "Lua 5.3"
	update()
	rawequal()
	world = {
		isMonster()
		entityPortrait()
		entityQuery()
		itemDropQuery()
		entityVelocity()
		damageTiles()
		entityHealth()
		debugPoint()
		debugLine()
		entityExists()
		entityUniqueId()
		timeOfDay()
		entityGender()
		entityAggressive()
		magnitude()
		mod()
		platformerPathStart()
		containerItemAt()
		breathable()
		entityHasCountOfItem()
		npcType()
		sendEntityMessage()
		liquidAt()
		liquidAlongLine()
		isTileProtected()
		destroyLiquid()
		spawnLiquid()
		isNpc()
		getProperty()
		gravity()
		entityMoney()
		objectLineQuery()
		spawnMonster()
		lineCollision()
		lineTileCollision()
		rectCollision()
		getObjectParameter()
		entityHandItem()
		setProperty()
		entityHandItemDescriptor()
		time()
		placeMaterial()
		entityName()
		findUniqueEntity()
		threatLevel()
		placeObject()
		spawnTreasure()
		spawnVehicle()
		damageTileArea()
		windLevel()
		tileIsOccupied()
		containerTakeAt()
		loungeableOccupied()
		resolvePolyCollision()
		nearestTo()
		spawnStagehand()
		polyCollision()
		containerOpen()
		pointCollision()
		distance()
		rectTileCollision()
		debugPoly()
		pointTileCollision()
		containerStackItems()
		collisionBlocksAlongLine()
		entityDamageTeam()
		containerAvailable()
		containerItemApply()
		farmableStage()
		containerSize()
		polyContains()
		stagehandType()
		containerItemsCanFit()
		placeMod()
		containerTakeNumItemsAt()
		dayLength()
		callScriptedEntity()
		spawnProjectile()
		containerItemsFitWhere()
		npcLineQuery()
		npcQuery()
		containerTakeAll()
		findPlatformerPath()
		entityDescription()
		xwrap()
		spawnItem()
		containerSwapItemsNoCombine()
		containerAddItems()
		objectSpaces()
		playerQuery()
		containerConsumeAt()
		monsterType()
		entityType()
		containerSwapItems()
		debugText()
		day()
		containerPutItemsAt()
		entitySpecies()
		loungeableQuery()
		lightLevel()
		entityCanDamage()
		underground()
		spawnNpc()
		material()
		monsterQuery()
		objectQuery()
		containerConsume()
		entityLineQuery()
		containerClose()
		entityPosition()
		objectAt()
		containerItems()
	}
	tonumber()
	ic = {
		stripColor()
		giveBack()
		renameThis()
		checkStack()
		sortFunc()
		sort()
		itemAmount()
		amountEquipped()
		sort_relative()
		itemConfig()
		searchBox()
		clientVersion = 1
		quickstack()
		searchButton()
		renameButton()
		lock()
		getQuality()
	}
	assert()
	rawset()
	getmetatable()
	string = {
		rep()
		gmatch()
		reverse()
		pack()
		char()
		sub()
		format()
		byte()
		match()
		dump()
		find()
		unpack()
		packsize()
		upper()
		gsub()
		lower()
		len()
	}
	pcall()
	player = {
		consumeItemWithParameter()
		shipUpgrades()
		altHandItemTags()
		upgradeShip()
		serverUuid()
		gender()
		worldId()
		equippedTech()
		completeMission()
		inventoryTags()
		removeEssentialItem()
		hasItem()
		recordEvent()
		addBookmark()
		lounge()
		cleanupItems()
		consumeItem()
		makeTechUnavailable()
		setUniverseFlag()
		giveBlueprint()
		hasItemWithParameter()
		species()
		playCinematic()
		altHandItem()
		primaryHandItemTags()
		availableTechs()
		enabledTechs()
		enableTech()
		giveItem()
		playTime()
		setIntroComplete()
		essentialItem()
		ownShipWorldId()
		makeTechAvailable()
		warp()
		equipTech()
		startQuest()
		enableMission()
		hasQuest()
		itemsWithTag()
		isLounging()
		primaryHandItem()
		confirm()
		hasCompletedQuest()
		hasCountOfItem()
		equippedItem()
		setEquippedItem()
		radioMessage()
		giveEssentialItem()
		introComplete()
		canStartQuest()
		consumeTaggedItem()
		getItemWithParameter()
	}
	config = {
		getParameter()
	}
	root = {
		questConfig()
		treeFoliageDirectory()
		getConfigurationPath()
		loadVersionedJson()
		materialHealth()
		tenantConfig()
		itemConfig()
		materialMiningSound()
		projectileConfig()
		imageSpaces()
		techType()
		createTreasure()
		materialFootstepSound()
		itemHasTag()
		imageSize()
		treeStemDirectory()
		npcPortrait()
		hasTech()
		getMatchingTenants()
		getConfiguration()
		createItem()
		generateName()
		setConfiguration()
		techConfig()
		materialPath()
		makeCurrentVersionedJson()
		monsterMovementSettings()
		isTreasurePool()
		itemTags()
		itemType()
		evalFunction()
		monsterSkillParameter()
		assetJson()
		setConfigurationPath()
		monsterPortrait()
		recipesForItem()
		createBiome()
		behaviorModule()
		liquidStatusEffects()
		npcConfig()
		nonEmptyRegion()
		evalFunction2()
		projectileGravityMultiplier()
		npcVariant()
	}
	math = {
		tan()
		atan()
		modf()
		exp()
		type()
		acos()
		abs()
		mininteger = -9223372036854775808
		maxinteger = 9223372036854775807
		deg()
		asin()
		randomseed()
		random()
		sqrt()
		huge = inf
		min()
		log()
		pi = 3.1415926535898
		rad()
		max()
		floor()
		ult()
		cos()
		tointeger()
		fmod()
		sin()
		ceil()
	}
	widget = {
		setListSelected()
		setImage()
		setButtonCheckedImages()
		setImageRotation()
		setButtonImage()
		getListSelected()
		itemGridItems()
		addListItem()
		removeListItem()
		setButtonImages()
		blur()
		getData()
		setOptionVisible()
		playSound()
		setChecked()
		getSelectedOption()
		setFontColor()
		setSize()
		setOptionEnabled()
		clearListItems()
		setPosition()
		setProgress()
		getText()
		getSliderValue()
		setButtonEnabled()
		setButtonOverlayImage()
		setData()
		setSelectedOption()
		focus()
		getSize()
		setImageScale()
		setVisible()
		getPosition()
		setText()
		getChecked()
	}
	xpcall()
	setmetatable()
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	status = {
		removeEphemeralEffect()
		resetResource()
		addPersistentEffect()
		addEphemeralEffect()
		resourceMax()
		addPersistentEffects()
		clearEphemeralEffects()
		statPositive()
		modifyResource()
		statusProperty()
		resourcePercentage()
		resource()
		isResource()
		setResourcePercentage()
		getPersistentEffects()
		resourcePositive()
		clearPersistentEffects()
		giveResource()
		overConsumeResource()
		damageTakenSince()
		activeUniqueStatusEffectSummary()
		addEphemeralEffects()
		setStatusProperty()
		resourceLocked()
		modifyResourcePercentage()
		stat()
		clearAllPersistentEffects()
		setResourceLocked()
		resetAllResources()
		resourceNames()
		setPersistentEffects()
		inflictedDamageSince()
		consumeResource()
		inflictedHitsSince()
		setResource()
	}
	utf8 = {
		charpattern = "[
[03:19:17.500] [Warn] 	coroutine = {
		wrap()
		resume()
		create()
		isyieldable()
		status()
		running()
		yield()
	}
	jarray()
	type()
	init()
	require()
	table = {
		insert()
		unpack()
		pack()
		concat()
		sort()
		move()
		remove()
	}
	_VERSION = "Lua 5.3"
	update()
	rawequal()
	world = {
		isMonster()
		entityPortrait()
		entityQuery()
		itemDropQuery()
		entityVelocity()
		damageTiles()
		entityHealth()
		debugPoint()
		debugLine()
		entityExists()
		entityUniqueId()
		timeOfDay()
		entityGender()
		entityAggressive()
		magnitude()
		mod()
		platformerPathStart()
		containerItemAt()
		breathable()
		entityHasCountOfItem()
		npcType()
		sendEntityMessage()
		liquidAt()
		liquidAlongLine()
		isTileProtected()
		destroyLiquid()
		spawnLiquid()
		isNpc()
		getProperty()
		gravity()
		entityMoney()
		objectLineQuery()
		spawnMonster()
		lineCollision()
		lineTileCollision()
		rectCollision()
		getObjectParameter()
		entityHandItem()
		setProperty()
		entityHandItemDescriptor()
		time()
		placeMaterial()
		entityName()
		findUniqueEntity()
		threatLevel()
		placeObject()
		spawnTreasure()
		spawnVehicle()
		damageTileArea()
		windLevel()
		tileIsOccupied()
		containerTakeAt()
		loungeableOccupied()
		resolvePolyCollision()
		nearestTo()
		spawnStagehand()
		polyCollision()
		containerOpen()
		pointCollision()
		distance()
		rectTileCollision()
		debugPoly()
		pointTileCollision()
		containerStackItems()
		collisionBlocksAlongLine()
		entityDamageTeam()
		containerAvailable()
		containerItemApply()
		farmableStage()
		containerSize()
		polyContains()
		stagehandType()
		containerItemsCanFit()
		placeMod()
		containerTakeNumItemsAt()
		dayLength()
		callScriptedEntity()
		spawnProjectile()
		containerItemsFitWhere()
		npcLineQuery()
		npcQuery()
		containerTakeAll()
		findPlatformerPath()
		entityDescription()
		xwrap()
		spawnItem()
		containerSwapItemsNoCombine()
		containerAddItems()
		objectSpaces()
		playerQuery()
		containerConsumeAt()
		monsterType()
		entityType()
		containerSwapItems()
		debugText()
		day()
		containerPutItemsAt()
		entitySpecies()
		loungeableQuery()
		lightLevel()
		entityCanDamage()
		underground()
		spawnNpc()
		material()
		monsterQuery()
		objectQuery()
		containerConsume()
		entityLineQuery()
		containerClose()
		entityPosition()
		objectAt()
		containerItems()
	}
	tonumber()
	ic = {
		stripColor()
		giveBack()
		renameThis()
		checkStack()
		sortFunc()
		sort()
		itemAmount()
		amountEquipped()
		sort_relative()
		itemConfig()
		searchBox()
		clientVersion = 1
		quickstack()
		searchButton()
		renameButton()
		lock()
		getQuality()
	}
	assert()
	rawset()
	getmetatable()
	string = {
		rep()
		gmatch()
		reverse()
		pack()
		char()
		sub()
		format()
		byte()
		match()
		dump()
		find()
		unpack()
		packsize()
		upper()
		gsub()
		lower()
		len()
	}
	pcall()
	player = {
		consumeItemWithParameter()
		shipUpgrades()
		altHandItemTags()
		upgradeShip()
		serverUuid()
		gender()
		worldId()
		equippedTech()
		completeMission()
		inventoryTags()
		removeEssentialItem()
		hasItem()
		recordEvent()
		addBookmark()
		lounge()
		cleanupItems()
		consumeItem()
		makeTechUnavailable()
		setUniverseFlag()
		giveBlueprint()
		hasItemWithParameter()
		species()
		playCinematic()
		altHandItem()
		primaryHandItemTags()
		availableTechs()
		enabledTechs()
		enableTech()
		giveItem()
		playTime()
		setIntroComplete()
		essentialItem()
		ownShipWorldId()
		makeTechAvailable()
		warp()
		equipTech()
		startQuest()
		enableMission()
		hasQuest()
		itemsWithTag()
		isLounging()
		primaryHandItem()
		confirm()
		hasCompletedQuest()
		hasCountOfItem()
		equippedItem()
		setEquippedItem()
		radioMessage()
		giveEssentialItem()
		introComplete()
		canStartQuest()
		consumeTaggedItem()
		getItemWithParameter()
	}
	config = {
		getParameter()
	}
	root = {
		questConfig()
		treeFoliageDirectory()
		getConfigurationPath()
		loadVersionedJson()
		materialHealth()
		tenantConfig()
		itemConfig()
		materialMiningSound()
		projectileConfig()
		imageSpaces()
		techType()
		createTreasure()
		materialFootstepSound()
		itemHasTag()
		imageSize()
		treeStemDirectory()
		npcPortrait()
		hasTech()
		getMatchingTenants()
		getConfiguration()
		createItem()
		generateName()
		setConfiguration()
		techConfig()
		materialPath()
		makeCurrentVersionedJson()
		monsterMovementSettings()
		isTreasurePool()
		itemTags()
		itemType()
		evalFunction()
		monsterSkillParameter()
		assetJson()
		setConfigurationPath()
		monsterPortrait()
		recipesForItem()
		createBiome()
		behaviorModule()
		liquidStatusEffects()
		npcConfig()
		nonEmptyRegion()
		evalFunction2()
		projectileGravityMultiplier()
		npcVariant()
	}
	math = {
		tan()
		atan()
		modf()
		exp()
		type()
		acos()
		abs()
		mininteger = -9223372036854775808
		maxinteger = 9223372036854775807
		deg()
		asin()
		randomseed()
		random()
		sqrt()
		huge = inf
		min()
		log()
		pi = 3.1415926535898
		rad()
		max()
		floor()
		ult()
		cos()
		tointeger()
		fmod()
		sin()
		ceil()
	}
	widget = {
		setListSelected()
		setImage()
		setButtonCheckedImages()
		setImageRotation()
		setButtonImage()
		getListSelected()
		itemGridItems()
		addListItem()
		removeListItem()
		setButtonImages()
		blur()
		getData()
		setOptionVisible()
		playSound()
		setChecked()
		getSelectedOption()
		setFontColor()
		setSize()
		setOptionEnabled()
		clearListItems()
		setPosition()
		setProgress()
		getText()
		getSliderValue()
		setButtonEnabled()
		setButtonOverlayImage()
		setData()
		setSelectedOption()
		focus()
		getSize()
		setImageScale()
		setVisible()
		getPosition()
		setText()
		getChecked()
	}
	xpcall()
	setmetatable()
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	status = {
		removeEphemeralEffect()
		resetResource()
		addPersistentEffect()
		addEphemeralEffect()
		resourceMax()
		addPersistentEffects()
		clearEphemeralEffects()
		statPositive()
		modifyResource()
		statusProperty()
		resourcePercentage()
		resource()
		isResource()
		setResourcePercentage()
		getPersistentEffects()
		resourcePositive()
		clearPersistentEffects()
		giveResource()
		overConsumeResource()
		damageTakenSince()
		activeUniqueStatusEffectSummary()
		addEphemeralEffects()
		setStatusProperty()
		resourceLocked()
		modifyResourcePercentage()
		stat()
		clearAllPersistentEffects()
		setResourceLocked()
		resetAllResources()
		resourceNames()
		setPersistentEffects()
		inflictedDamageSince()
		consumeResource()
		inflictedHitsSince()
		setResource()
	}
	utf8 = {
		charpattern = "[
[03:19:18.785] [Warn] 	coroutine = {
		wrap()
		resume()
		create()
		isyieldable()
		status()
		running()
		yield()
	}
	jarray()
	type()
	init()
	require()
	table = {
		insert()
		unpack()
		pack()
		concat()
		sort()
		move()
		remove()
	}
	_VERSION = "Lua 5.3"
	update()
	rawequal()
	world = {
		isMonster()
		entityPortrait()
		entityQuery()
		itemDropQuery()
		entityVelocity()
		damageTiles()
		entityHealth()
		debugPoint()
		debugLine()
		entityExists()
		entityUniqueId()
		timeOfDay()
		entityGender()
		entityAggressive()
		magnitude()
		mod()
		platformerPathStart()
		containerItemAt()
		breathable()
		entityHasCountOfItem()
		npcType()
		sendEntityMessage()
		liquidAt()
		liquidAlongLine()
		isTileProtected()
		destroyLiquid()
		spawnLiquid()
		isNpc()
		getProperty()
		gravity()
		entityMoney()
		objectLineQuery()
		spawnMonster()
		lineCollision()
		lineTileCollision()
		rectCollision()
		getObjectParameter()
		entityHandItem()
		setProperty()
		entityHandItemDescriptor()
		time()
		placeMaterial()
		entityName()
		findUniqueEntity()
		threatLevel()
		placeObject()
		spawnTreasure()
		spawnVehicle()
		damageTileArea()
		windLevel()
		tileIsOccupied()
		containerTakeAt()
		loungeableOccupied()
		resolvePolyCollision()
		nearestTo()
		spawnStagehand()
		polyCollision()
		containerOpen()
		pointCollision()
		distance()
		rectTileCollision()
		debugPoly()
		pointTileCollision()
		containerStackItems()
		collisionBlocksAlongLine()
		entityDamageTeam()
		containerAvailable()
		containerItemApply()
		farmableStage()
		containerSize()
		polyContains()
		stagehandType()
		containerItemsCanFit()
		placeMod()
		containerTakeNumItemsAt()
		dayLength()
		callScriptedEntity()
		spawnProjectile()
		containerItemsFitWhere()
		npcLineQuery()
		npcQuery()
		containerTakeAll()
		findPlatformerPath()
		entityDescription()
		xwrap()
		spawnItem()
		containerSwapItemsNoCombine()
		containerAddItems()
		objectSpaces()
		playerQuery()
		containerConsumeAt()
		monsterType()
		entityType()
		containerSwapItems()
		debugText()
		day()
		containerPutItemsAt()
		entitySpecies()
		loungeableQuery()
		lightLevel()
		entityCanDamage()
		underground()
		spawnNpc()
		material()
		monsterQuery()
		objectQuery()
		containerConsume()
		entityLineQuery()
		containerClose()
		entityPosition()
		objectAt()
		containerItems()
	}
	tonumber()
	ic = {
		stripColor()
		giveBack()
		renameThis()
		checkStack()
		sortFunc()
		sort()
		itemAmount()
		amountEquipped()
		sort_relative()
		itemConfig()
		searchBox()
		clientVersion = 1
		quickstack()
		searchButton()
		renameButton()
		lock()
		getQuality()
	}
	assert()
	rawset()
	getmetatable()
	string = {
		rep()
		gmatch()
		reverse()
		pack()
		char()
		sub()
		format()
		byte()
		match()
		dump()
		find()
		unpack()
		packsize()
		upper()
		gsub()
		lower()
		len()
	}
	pcall()
	player = {
		consumeItemWithParameter()
		shipUpgrades()
		altHandItemTags()
		upgradeShip()
		serverUuid()
		gender()
		worldId()
		equippedTech()
		completeMission()
		inventoryTags()
		removeEssentialItem()
		hasItem()
		recordEvent()
		addBookmark()
		lounge()
		cleanupItems()
		consumeItem()
		makeTechUnavailable()
		setUniverseFlag()
		giveBlueprint()
		hasItemWithParameter()
		species()
		playCinematic()
		altHandItem()
		primaryHandItemTags()
		availableTechs()
		enabledTechs()
		enableTech()
		giveItem()
		playTime()
		setIntroComplete()
		essentialItem()
		ownShipWorldId()
		makeTechAvailable()
		warp()
		equipTech()
		startQuest()
		enableMission()
		hasQuest()
		itemsWithTag()
		isLounging()
		primaryHandItem()
		confirm()
		hasCompletedQuest()
		hasCountOfItem()
		equippedItem()
		setEquippedItem()
		radioMessage()
		giveEssentialItem()
		introComplete()
		canStartQuest()
		consumeTaggedItem()
		getItemWithParameter()
	}
	config = {
		getParameter()
	}
	root = {
		questConfig()
		treeFoliageDirectory()
		getConfigurationPath()
		loadVersionedJson()
		materialHealth()
		tenantConfig()
		itemConfig()
		materialMiningSound()
		projectileConfig()
		imageSpaces()
		techType()
		createTreasure()
		materialFootstepSound()
		itemHasTag()
		imageSize()
		treeStemDirectory()
		npcPortrait()
		hasTech()
		getMatchingTenants()
		getConfiguration()
		createItem()
		generateName()
		setConfiguration()
		techConfig()
		materialPath()
		makeCurrentVersionedJson()
		monsterMovementSettings()
		isTreasurePool()
		itemTags()
		itemType()
		evalFunction()
		monsterSkillParameter()
		assetJson()
		setConfigurationPath()
		monsterPortrait()
		recipesForItem()
		createBiome()
		behaviorModule()
		liquidStatusEffects()
		npcConfig()
		nonEmptyRegion()
		evalFunction2()
		projectileGravityMultiplier()
		npcVariant()
	}
	math = {
		tan()
		atan()
		modf()
		exp()
		type()
		acos()
		abs()
		mininteger = -9223372036854775808
		maxinteger = 9223372036854775807
		deg()
		asin()
		randomseed()
		random()
		sqrt()
		huge = inf
		min()
		log()
		pi = 3.1415926535898
		rad()
		max()
		floor()
		ult()
		cos()
		tointeger()
		fmod()
		sin()
		ceil()
	}
	widget = {
		setListSelected()
		setImage()
		setButtonCheckedImages()
		setImageRotation()
		setButtonImage()
		getListSelected()
		itemGridItems()
		addListItem()
		removeListItem()
		setButtonImages()
		blur()
		getData()
		setOptionVisible()
		playSound()
		setChecked()
		getSelectedOption()
		setFontColor()
		setSize()
		setOptionEnabled()
		clearListItems()
		setPosition()
		setProgress()
		getText()
		getSliderValue()
		setButtonEnabled()
		setButtonOverlayImage()
		setData()
		setSelectedOption()
		focus()
		getSize()
		setImageScale()
		setVisible()
		getPosition()
		setText()
		getChecked()
	}
	xpcall()
	setmetatable()
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	status = {
		removeEphemeralEffect()
		resetResource()
		addPersistentEffect()
		addEphemeralEffect()
		resourceMax()
		addPersistentEffects()
		clearEphemeralEffects()
		statPositive()
		modifyResource()
		statusProperty()
		resourcePercentage()
		resource()
		isResource()
		setResourcePercentage()
		getPersistentEffects()
		resourcePositive()
		clearPersistentEffects()
		giveResource()
		overConsumeResource()
		damageTakenSince()
		activeUniqueStatusEffectSummary()
		addEphemeralEffects()
		setStatusProperty()
		resourceLocked()
		modifyResourcePercentage()
		stat()
		clearAllPersistentEffects()
		setResourceLocked()
		resetAllResources()
		resourceNames()
		setPersistentEffects()
		inflictedDamageSince()
		consumeResource()
		inflictedHitsSince()
		setResource()
	}
	utf8 = {
		charpattern = "[
[03:19:31.563] [Warn] 	coroutine = {
		wrap()
		resume()
		create()
		isyieldable()
		status()
		running()
		yield()
	}
	jarray()
	type()
	init()
	require()
	table = {
		insert()
		unpack()
		pack()
		concat()
		sort()
		move()
		remove()
	}
	_VERSION = "Lua 5.3"
	update()
	rawequal()
	world = {
		isMonster()
		entityPortrait()
		entityQuery()
		itemDropQuery()
		entityVelocity()
		damageTiles()
		entityHealth()
		debugPoint()
		debugLine()
		entityExists()
		entityUniqueId()
		timeOfDay()
		entityGender()
		entityAggressive()
		magnitude()
		mod()
		platformerPathStart()
		containerItemAt()
		breathable()
		entityHasCountOfItem()
		npcType()
		sendEntityMessage()
		liquidAt()
		liquidAlongLine()
		isTileProtected()
		destroyLiquid()
		spawnLiquid()
		isNpc()
		getProperty()
		gravity()
		entityMoney()
		objectLineQuery()
		spawnMonster()
		lineCollision()
		lineTileCollision()
		rectCollision()
		getObjectParameter()
		entityHandItem()
		setProperty()
		entityHandItemDescriptor()
		time()
		placeMaterial()
		entityName()
		findUniqueEntity()
		threatLevel()
		placeObject()
		spawnTreasure()
		spawnVehicle()
		damageTileArea()
		windLevel()
		tileIsOccupied()
		containerTakeAt()
		loungeableOccupied()
		resolvePolyCollision()
		nearestTo()
		spawnStagehand()
		polyCollision()
		containerOpen()
		pointCollision()
		distance()
		rectTileCollision()
		debugPoly()
		pointTileCollision()
		containerStackItems()
		collisionBlocksAlongLine()
		entityDamageTeam()
		containerAvailable()
		containerItemApply()
		farmableStage()
		containerSize()
		polyContains()
		stagehandType()
		containerItemsCanFit()
		placeMod()
		containerTakeNumItemsAt()
		dayLength()
		callScriptedEntity()
		spawnProjectile()
		containerItemsFitWhere()
		npcLineQuery()
		npcQuery()
		containerTakeAll()
		findPlatformerPath()
		entityDescription()
		xwrap()
		spawnItem()
		containerSwapItemsNoCombine()
		containerAddItems()
		objectSpaces()
		playerQuery()
		containerConsumeAt()
		monsterType()
		entityType()
		containerSwapItems()
		debugText()
		day()
		containerPutItemsAt()
		entitySpecies()
		loungeableQuery()
		lightLevel()
		entityCanDamage()
		underground()
		spawnNpc()
		material()
		monsterQuery()
		objectQuery()
		containerConsume()
		entityLineQuery()
		containerClose()
		entityPosition()
		objectAt()
		containerItems()
	}
	tonumber()
	ic = {
		stripColor()
		giveBack()
		renameThis()
		checkStack()
		sortFunc()
		sort()
		itemAmount()
		amountEquipped()
		sort_relative()
		itemConfig()
		searchBox()
		clientVersion = 1
		quickstack()
		searchButton()
		renameButton()
		lock()
		getQuality()
	}
	assert()
	rawset()
	getmetatable()
	string = {
		rep()
		gmatch()
		reverse()
		pack()
		char()
		sub()
		format()
		byte()
		match()
		dump()
		find()
		unpack()
		packsize()
		upper()
		gsub()
		lower()
		len()
	}
	pcall()
	player = {
		consumeItemWithParameter()
		shipUpgrades()
		altHandItemTags()
		upgradeShip()
		serverUuid()
		gender()
		worldId()
		equippedTech()
		completeMission()
		inventoryTags()
		removeEssentialItem()
		hasItem()
		recordEvent()
		addBookmark()
		lounge()
		cleanupItems()
		consumeItem()
		makeTechUnavailable()
		setUniverseFlag()
		giveBlueprint()
		hasItemWithParameter()
		species()
		playCinematic()
		altHandItem()
		primaryHandItemTags()
		availableTechs()
		enabledTechs()
		enableTech()
		giveItem()
		playTime()
		setIntroComplete()
		essentialItem()
		ownShipWorldId()
		makeTechAvailable()
		warp()
		equipTech()
		startQuest()
		enableMission()
		hasQuest()
		itemsWithTag()
		isLounging()
		primaryHandItem()
		confirm()
		hasCompletedQuest()
		hasCountOfItem()
		equippedItem()
		setEquippedItem()
		radioMessage()
		giveEssentialItem()
		introComplete()
		canStartQuest()
		consumeTaggedItem()
		getItemWithParameter()
	}
	config = {
		getParameter()
	}
	root = {
		questConfig()
		treeFoliageDirectory()
		getConfigurationPath()
		loadVersionedJson()
		materialHealth()
		tenantConfig()
		itemConfig()
		materialMiningSound()
		projectileConfig()
		imageSpaces()
		techType()
		createTreasure()
		materialFootstepSound()
		itemHasTag()
		imageSize()
		treeStemDirectory()
		npcPortrait()
		hasTech()
		getMatchingTenants()
		getConfiguration()
		createItem()
		generateName()
		setConfiguration()
		techConfig()
		materialPath()
		makeCurrentVersionedJson()
		monsterMovementSettings()
		isTreasurePool()
		itemTags()
		itemType()
		evalFunction()
		monsterSkillParameter()
		assetJson()
		setConfigurationPath()
		monsterPortrait()
		recipesForItem()
		createBiome()
		behaviorModule()
		liquidStatusEffects()
		npcConfig()
		nonEmptyRegion()
		evalFunction2()
		projectileGravityMultiplier()
		npcVariant()
	}
	math = {
		tan()
		atan()
		modf()
		exp()
		type()
		acos()
		abs()
		mininteger = -9223372036854775808
		maxinteger = 9223372036854775807
		deg()
		asin()
		randomseed()
		random()
		sqrt()
		huge = inf
		min()
		log()
		pi = 3.1415926535898
		rad()
		max()
		floor()
		ult()
		cos()
		tointeger()
		fmod()
		sin()
		ceil()
	}
	widget = {
		setListSelected()
		setImage()
		setButtonCheckedImages()
		setImageRotation()
		setButtonImage()
		getListSelected()
		itemGridItems()
		addListItem()
		removeListItem()
		setButtonImages()
		blur()
		getData()
		setOptionVisible()
		playSound()
		setChecked()
		getSelectedOption()
		setFontColor()
		setSize()
		setOptionEnabled()
		clearListItems()
		setPosition()
		setProgress()
		getText()
		getSliderValue()
		setButtonEnabled()
		setButtonOverlayImage()
		setData()
		setSelectedOption()
		focus()
		getSize()
		setImageScale()
		setVisible()
		getPosition()
		setText()
		getChecked()
	}
	xpcall()
	setmetatable()
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	status = {
		removeEphemeralEffect()
		resetResource()
		addPersistentEffect()
		addEphemeralEffect()
		resourceMax()
		addPersistentEffects()
		clearEphemeralEffects()
		statPositive()
		modifyResource()
		statusProperty()
		resourcePercentage()
		resource()
		isResource()
		setResourcePercentage()
		getPersistentEffects()
		resourcePositive()
		clearPersistentEffects()
		giveResource()
		overConsumeResource()
		damageTakenSince()
		activeUniqueStatusEffectSummary()
		addEphemeralEffects()
		setStatusProperty()
		resourceLocked()
		modifyResourcePercentage()
		stat()
		clearAllPersistentEffects()
		setResourceLocked()
		resetAllResources()
		resourceNames()
		setPersistentEffects()
		inflictedDamageSince()
		consumeResource()
		inflictedHitsSince()
		setResource()
	}
	utf8 = {
		charpattern = "[
[03:19:32.424] [Warn] 	coroutine = {
		wrap()
		resume()
		create()
		isyieldable()
		status()
		running()
		yield()
	}
	jarray()
	type()
	init()
	require()
	table = {
		insert()
		unpack()
		pack()
		concat()
		sort()
		move()
		remove()
	}
	_VERSION = "Lua 5.3"
	update()
	rawequal()
	world = {
		isMonster()
		entityPortrait()
		entityQuery()
		itemDropQuery()
		entityVelocity()
		damageTiles()
		entityHealth()
		debugPoint()
		debugLine()
		entityExists()
		entityUniqueId()
		timeOfDay()
		entityGender()
		entityAggressive()
		magnitude()
		mod()
		platformerPathStart()
		containerItemAt()
		breathable()
		entityHasCountOfItem()
		npcType()
		sendEntityMessage()
		liquidAt()
		liquidAlongLine()
		isTileProtected()
		destroyLiquid()
		spawnLiquid()
		isNpc()
		getProperty()
		gravity()
		entityMoney()
		objectLineQuery()
		spawnMonster()
		lineCollision()
		lineTileCollision()
		rectCollision()
		getObjectParameter()
		entityHandItem()
		setProperty()
		entityHandItemDescriptor()
		time()
		placeMaterial()
		entityName()
		findUniqueEntity()
		threatLevel()
		placeObject()
		spawnTreasure()
		spawnVehicle()
		damageTileArea()
		windLevel()
		tileIsOccupied()
		containerTakeAt()
		loungeableOccupied()
		resolvePolyCollision()
		nearestTo()
		spawnStagehand()
		polyCollision()
		containerOpen()
		pointCollision()
		distance()
		rectTileCollision()
		debugPoly()
		pointTileCollision()
		containerStackItems()
		collisionBlocksAlongLine()
		entityDamageTeam()
		containerAvailable()
		containerItemApply()
		farmableStage()
		containerSize()
		polyContains()
		stagehandType()
		containerItemsCanFit()
		placeMod()
		containerTakeNumItemsAt()
		dayLength()
		callScriptedEntity()
		spawnProjectile()
		containerItemsFitWhere()
		npcLineQuery()
		npcQuery()
		containerTakeAll()
		findPlatformerPath()
		entityDescription()
		xwrap()
		spawnItem()
		containerSwapItemsNoCombine()
		containerAddItems()
		objectSpaces()
		playerQuery()
		containerConsumeAt()
		monsterType()
		entityType()
		containerSwapItems()
		debugText()
		day()
		containerPutItemsAt()
		entitySpecies()
		loungeableQuery()
		lightLevel()
		entityCanDamage()
		underground()
		spawnNpc()
		material()
		monsterQuery()
		objectQuery()
		containerConsume()
		entityLineQuery()
		containerClose()
		entityPosition()
		objectAt()
		containerItems()
	}
	tonumber()
	ic = {
		stripColor()
		giveBack()
		renameThis()
		checkStack()
		sortFunc()
		sort()
		itemAmount()
		amountEquipped()
		sort_relative()
		itemConfig()
		searchBox()
		clientVersion = 1
		quickstack()
		searchButton()
		renameButton()
		lock()
		getQuality()
	}
	assert()
	rawset()
	getmetatable()
	string = {
		rep()
		gmatch()
		reverse()
		pack()
		char()
		sub()
		format()
		byte()
		match()
		dump()
		find()
		unpack()
		packsize()
		upper()
		gsub()
		lower()
		len()
	}
	pcall()
	player = {
		consumeItemWithParameter()
		shipUpgrades()
		altHandItemTags()
		upgradeShip()
		serverUuid()
		gender()
		worldId()
		equippedTech()
		completeMission()
		inventoryTags()
		removeEssentialItem()
		hasItem()
		recordEvent()
		addBookmark()
		lounge()
		cleanupItems()
		consumeItem()
		makeTechUnavailable()
		setUniverseFlag()
		giveBlueprint()
		hasItemWithParameter()
		species()
		playCinematic()
		altHandItem()
		primaryHandItemTags()
		availableTechs()
		enabledTechs()
		enableTech()
		giveItem()
		playTime()
		setIntroComplete()
		essentialItem()
		ownShipWorldId()
		makeTechAvailable()
		warp()
		equipTech()
		startQuest()
		enableMission()
		hasQuest()
		itemsWithTag()
		isLounging()
		primaryHandItem()
		confirm()
		hasCompletedQuest()
		hasCountOfItem()
		equippedItem()
		setEquippedItem()
		radioMessage()
		giveEssentialItem()
		introComplete()
		canStartQuest()
		consumeTaggedItem()
		getItemWithParameter()
	}
	config = {
		getParameter()
	}
	root = {
		questConfig()
		treeFoliageDirectory()
		getConfigurationPath()
		loadVersionedJson()
		materialHealth()
		tenantConfig()
		itemConfig()
		materialMiningSound()
		projectileConfig()
		imageSpaces()
		techType()
		createTreasure()
		materialFootstepSound()
		itemHasTag()
		imageSize()
		treeStemDirectory()
		npcPortrait()
		hasTech()
		getMatchingTenants()
		getConfiguration()
		createItem()
		generateName()
		setConfiguration()
		techConfig()
		materialPath()
		makeCurrentVersionedJson()
		monsterMovementSettings()
		isTreasurePool()
		itemTags()
		itemType()
		evalFunction()
		monsterSkillParameter()
		assetJson()
		setConfigurationPath()
		monsterPortrait()
		recipesForItem()
		createBiome()
		behaviorModule()
		liquidStatusEffects()
		npcConfig()
		nonEmptyRegion()
		evalFunction2()
		projectileGravityMultiplier()
		npcVariant()
	}
	math = {
		tan()
		atan()
		modf()
		exp()
		type()
		acos()
		abs()
		mininteger = -9223372036854775808
		maxinteger = 9223372036854775807
		deg()
		asin()
		randomseed()
		random()
		sqrt()
		huge = inf
		min()
		log()
		pi = 3.1415926535898
		rad()
		max()
		floor()
		ult()
		cos()
		tointeger()
		fmod()
		sin()
		ceil()
	}
	widget = {
		setListSelected()
		setImage()
		setButtonCheckedImages()
		setImageRotation()
		setButtonImage()
		getListSelected()
		itemGridItems()
		addListItem()
		removeListItem()
		setButtonImages()
		blur()
		getData()
		setOptionVisible()
		playSound()
		setChecked()
		getSelectedOption()
		setFontColor()
		setSize()
		setOptionEnabled()
		clearListItems()
		setPosition()
		setProgress()
		getText()
		getSliderValue()
		setButtonEnabled()
		setButtonOverlayImage()
		setData()
		setSelectedOption()
		focus()
		getSize()
		setImageScale()
		setVisible()
		getPosition()
		setText()
		getChecked()
	}
	xpcall()
	setmetatable()
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	status = {
		removeEphemeralEffect()
		resetResource()
		addPersistentEffect()
		addEphemeralEffect()
		resourceMax()
		addPersistentEffects()
		clearEphemeralEffects()
		statPositive()
		modifyResource()
		statusProperty()
		resourcePercentage()
		resource()
		isResource()
		setResourcePercentage()
		getPersistentEffects()
		resourcePositive()
		clearPersistentEffects()
		giveResource()
		overConsumeResource()
		damageTakenSince()
		activeUniqueStatusEffectSummary()
		addEphemeralEffects()
		setStatusProperty()
		resourceLocked()
		modifyResourcePercentage()
		stat()
		clearAllPersistentEffects()
		setResourceLocked()
		resetAllResources()
		resourceNames()
		setPersistentEffects()
		inflictedDamageSince()
		consumeResource()
		inflictedHitsSince()
		setResource()
	}
	utf8 = {
		charpattern = "[
[03:20:10.540] [Warn] 	coroutine = {
		wrap()
		resume()
		create()
		isyieldable()
		status()
		running()
		yield()
	}
	jarray()
	type()
	init()
	require()
	table = {
		insert()
		unpack()
		pack()
		concat()
		sort()
		move()
		remove()
	}
	_VERSION = "Lua 5.3"
	update()
	rawequal()
	world = {
		isMonster()
		entityPortrait()
		entityQuery()
		itemDropQuery()
		entityVelocity()
		damageTiles()
		entityHealth()
		debugPoint()
		debugLine()
		entityExists()
		entityUniqueId()
		timeOfDay()
		entityGender()
		entityAggressive()
		magnitude()
		mod()
		platformerPathStart()
		containerItemAt()
		breathable()
		entityHasCountOfItem()
		npcType()
		sendEntityMessage()
		liquidAt()
		liquidAlongLine()
		isTileProtected()
		destroyLiquid()
		spawnLiquid()
		isNpc()
		getProperty()
		gravity()
		entityMoney()
		objectLineQuery()
		spawnMonster()
		lineCollision()
		lineTileCollision()
		rectCollision()
		getObjectParameter()
		entityHandItem()
		setProperty()
		entityHandItemDescriptor()
		time()
		placeMaterial()
		entityName()
		findUniqueEntity()
		threatLevel()
		placeObject()
		spawnTreasure()
		spawnVehicle()
		damageTileArea()
		windLevel()
		tileIsOccupied()
		containerTakeAt()
		loungeableOccupied()
		resolvePolyCollision()
		nearestTo()
		spawnStagehand()
		polyCollision()
		containerOpen()
		pointCollision()
		distance()
		rectTileCollision()
		debugPoly()
		pointTileCollision()
		containerStackItems()
		collisionBlocksAlongLine()
		entityDamageTeam()
		containerAvailable()
		containerItemApply()
		farmableStage()
		containerSize()
		polyContains()
		stagehandType()
		containerItemsCanFit()
		placeMod()
		containerTakeNumItemsAt()
		dayLength()
		callScriptedEntity()
		spawnProjectile()
		containerItemsFitWhere()
		npcLineQuery()
		npcQuery()
		containerTakeAll()
		findPlatformerPath()
		entityDescription()
		xwrap()
		spawnItem()
		containerSwapItemsNoCombine()
		containerAddItems()
		objectSpaces()
		playerQuery()
		containerConsumeAt()
		monsterType()
		entityType()
		containerSwapItems()
		debugText()
		day()
		containerPutItemsAt()
		entitySpecies()
		loungeableQuery()
		lightLevel()
		entityCanDamage()
		underground()
		spawnNpc()
		material()
		monsterQuery()
		objectQuery()
		containerConsume()
		entityLineQuery()
		containerClose()
		entityPosition()
		objectAt()
		containerItems()
	}
	tonumber()
	ic = {
		stripColor()
		giveBack()
		renameThis()
		checkStack()
		sortFunc()
		sort()
		itemAmount()
		amountEquipped()
		sort_relative()
		itemConfig()
		searchBox()
		clientVersion = 1
		quickstack()
		searchButton()
		renameButton()
		lock()
		getQuality()
	}
	assert()
	rawset()
	getmetatable()
	string = {
		rep()
		gmatch()
		reverse()
		pack()
		char()
		sub()
		format()
		byte()
		match()
		dump()
		find()
		unpack()
		packsize()
		upper()
		gsub()
		lower()
		len()
	}
	pcall()
	player = {
		consumeItemWithParameter()
		shipUpgrades()
		altHandItemTags()
		upgradeShip()
		serverUuid()
		gender()
		worldId()
		equippedTech()
		completeMission()
		inventoryTags()
		removeEssentialItem()
		hasItem()
		recordEvent()
		addBookmark()
		lounge()
		cleanupItems()
		consumeItem()
		makeTechUnavailable()
		setUniverseFlag()
		giveBlueprint()
		hasItemWithParameter()
		species()
		playCinematic()
		altHandItem()
		primaryHandItemTags()
		availableTechs()
		enabledTechs()
		enableTech()
		giveItem()
		playTime()
		setIntroComplete()
		essentialItem()
		ownShipWorldId()
		makeTechAvailable()
		warp()
		equipTech()
		startQuest()
		enableMission()
		hasQuest()
		itemsWithTag()
		isLounging()
		primaryHandItem()
		confirm()
		hasCompletedQuest()
		hasCountOfItem()
		equippedItem()
		setEquippedItem()
		radioMessage()
		giveEssentialItem()
		introComplete()
		canStartQuest()
		consumeTaggedItem()
		getItemWithParameter()
	}
	config = {
		getParameter()
	}
	root = {
		questConfig()
		treeFoliageDirectory()
		getConfigurationPath()
		loadVersionedJson()
		materialHealth()
		tenantConfig()
		itemConfig()
		materialMiningSound()
		projectileConfig()
		imageSpaces()
		techType()
		createTreasure()
		materialFootstepSound()
		itemHasTag()
		imageSize()
		treeStemDirectory()
		npcPortrait()
		hasTech()
		getMatchingTenants()
		getConfiguration()
		createItem()
		generateName()
		setConfiguration()
		techConfig()
		materialPath()
		makeCurrentVersionedJson()
		monsterMovementSettings()
		isTreasurePool()
		itemTags()
		itemType()
		evalFunction()
		monsterSkillParameter()
		assetJson()
		setConfigurationPath()
		monsterPortrait()
		recipesForItem()
		createBiome()
		behaviorModule()
		liquidStatusEffects()
		npcConfig()
		nonEmptyRegion()
		evalFunction2()
		projectileGravityMultiplier()
		npcVariant()
	}
	math = {
		tan()
		atan()
		modf()
		exp()
		type()
		acos()
		abs()
		mininteger = -9223372036854775808
		maxinteger = 9223372036854775807
		deg()
		asin()
		randomseed()
		random()
		sqrt()
		huge = inf
		min()
		log()
		pi = 3.1415926535898
		rad()
		max()
		floor()
		ult()
		cos()
		tointeger()
		fmod()
		sin()
		ceil()
	}
	widget = {
		setListSelected()
		setImage()
		setButtonCheckedImages()
		setImageRotation()
		setButtonImage()
		getListSelected()
		itemGridItems()
		addListItem()
		removeListItem()
		setButtonImages()
		blur()
		getData()
		setOptionVisible()
		playSound()
		setChecked()
		getSelectedOption()
		setFontColor()
		setSize()
		setOptionEnabled()
		clearListItems()
		setPosition()
		setProgress()
		getText()
		getSliderValue()
		setButtonEnabled()
		setButtonOverlayImage()
		setData()
		setSelectedOption()
		focus()
		getSize()
		setImageScale()
		setVisible()
		getPosition()
		setText()
		getChecked()
	}
	xpcall()
	setmetatable()
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	status = {
		removeEphemeralEffect()
		resetResource()
		addPersistentEffect()
		addEphemeralEffect()
		resourceMax()
		addPersistentEffects()
		clearEphemeralEffects()
		statPositive()
		modifyResource()
		statusProperty()
		resourcePercentage()
		resource()
		isResource()
		setResourcePercentage()
		getPersistentEffects()
		resourcePositive()
		clearPersistentEffects()
		giveResource()
		overConsumeResource()
		damageTakenSince()
		activeUniqueStatusEffectSummary()
		addEphemeralEffects()
		setStatusProperty()
		resourceLocked()
		modifyResourcePercentage()
		stat()
		clearAllPersistentEffects()
		setResourceLocked()
		resetAllResources()
		resourceNames()
		setPersistentEffects()
		inflictedDamageSince()
		consumeResource()
		inflictedHitsSince()
		setResource()
	}
	utf8 = {
		charpattern = "[
[03:21:50.900] [Warn] 	coroutine = {
		wrap()
		resume()
		create()
		isyieldable()
		status()
		running()
		yield()
	}
	jarray()
	type()
	init()
	require()
	table = {
		insert()
		unpack()
		pack()
		concat()
		sort()
		move()
		remove()
	}
	_VERSION = "Lua 5.3"
	update()
	rawequal()
	world = {
		isMonster()
		entityPortrait()
		entityQuery()
		itemDropQuery()
		entityVelocity()
		damageTiles()
		entityHealth()
		debugPoint()
		debugLine()
		entityExists()
		entityUniqueId()
		timeOfDay()
		entityGender()
		entityAggressive()
		magnitude()
		mod()
		platformerPathStart()
		containerItemAt()
		breathable()
		entityHasCountOfItem()
		npcType()
		sendEntityMessage()
		liquidAt()
		liquidAlongLine()
		isTileProtected()
		destroyLiquid()
		spawnLiquid()
		isNpc()
		getProperty()
		gravity()
		entityMoney()
		objectLineQuery()
		spawnMonster()
		lineCollision()
		lineTileCollision()
		rectCollision()
		getObjectParameter()
		entityHandItem()
		setProperty()
		entityHandItemDescriptor()
		time()
		placeMaterial()
		entityName()
		findUniqueEntity()
		threatLevel()
		placeObject()
		spawnTreasure()
		spawnVehicle()
		damageTileArea()
		windLevel()
		tileIsOccupied()
		containerTakeAt()
		loungeableOccupied()
		resolvePolyCollision()
		nearestTo()
		spawnStagehand()
		polyCollision()
		containerOpen()
		pointCollision()
		distance()
		rectTileCollision()
		debugPoly()
		pointTileCollision()
		containerStackItems()
		collisionBlocksAlongLine()
		entityDamageTeam()
		containerAvailable()
		containerItemApply()
		farmableStage()
		containerSize()
		polyContains()
		stagehandType()
		containerItemsCanFit()
		placeMod()
		containerTakeNumItemsAt()
		dayLength()
		callScriptedEntity()
		spawnProjectile()
		containerItemsFitWhere()
		npcLineQuery()
		npcQuery()
		containerTakeAll()
		findPlatformerPath()
		entityDescription()
		xwrap()
		spawnItem()
		containerSwapItemsNoCombine()
		containerAddItems()
		objectSpaces()
		playerQuery()
		containerConsumeAt()
		monsterType()
		entityType()
		containerSwapItems()
		debugText()
		day()
		containerPutItemsAt()
		entitySpecies()
		loungeableQuery()
		lightLevel()
		entityCanDamage()
		underground()
		spawnNpc()
		material()
		monsterQuery()
		objectQuery()
		containerConsume()
		entityLineQuery()
		containerClose()
		entityPosition()
		objectAt()
		containerItems()
	}
	tonumber()
	ic = {
		stripColor()
		giveBack()
		renameThis()
		checkStack()
		sortFunc()
		sort()
		itemAmount()
		amountEquipped()
		sort_relative()
		itemConfig()
		searchBox()
		clientVersion = 1
		quickstack()
		searchButton()
		renameButton()
		lock()
		getQuality()
	}
	assert()
	rawset()
	getmetatable()
	string = {
		rep()
		gmatch()
		reverse()
		pack()
		char()
		sub()
		format()
		byte()
		match()
		dump()
		find()
		unpack()
		packsize()
		upper()
		gsub()
		lower()
		len()
	}
	pcall()
	player = {
		consumeItemWithParameter()
		shipUpgrades()
		altHandItemTags()
		upgradeShip()
		serverUuid()
		gender()
		worldId()
		equippedTech()
		completeMission()
		inventoryTags()
		removeEssentialItem()
		hasItem()
		recordEvent()
		addBookmark()
		lounge()
		cleanupItems()
		consumeItem()
		makeTechUnavailable()
		setUniverseFlag()
		giveBlueprint()
		hasItemWithParameter()
		species()
		playCinematic()
		altHandItem()
		primaryHandItemTags()
		availableTechs()
		enabledTechs()
		enableTech()
		giveItem()
		playTime()
		setIntroComplete()
		essentialItem()
		ownShipWorldId()
		makeTechAvailable()
		warp()
		equipTech()
		startQuest()
		enableMission()
		hasQuest()
		itemsWithTag()
		isLounging()
		primaryHandItem()
		confirm()
		hasCompletedQuest()
		hasCountOfItem()
		equippedItem()
		setEquippedItem()
		radioMessage()
		giveEssentialItem()
		introComplete()
		canStartQuest()
		consumeTaggedItem()
		getItemWithParameter()
	}
	config = {
		getParameter()
	}
	root = {
		questConfig()
		treeFoliageDirectory()
		getConfigurationPath()
		loadVersionedJson()
		materialHealth()
		tenantConfig()
		itemConfig()
		materialMiningSound()
		projectileConfig()
		imageSpaces()
		techType()
		createTreasure()
		materialFootstepSound()
		itemHasTag()
		imageSize()
		treeStemDirectory()
		npcPortrait()
		hasTech()
		getMatchingTenants()
		getConfiguration()
		createItem()
		generateName()
		setConfiguration()
		techConfig()
		materialPath()
		makeCurrentVersionedJson()
		monsterMovementSettings()
		isTreasurePool()
		itemTags()
		itemType()
		evalFunction()
		monsterSkillParameter()
		assetJson()
		setConfigurationPath()
		monsterPortrait()
		recipesForItem()
		createBiome()
		behaviorModule()
		liquidStatusEffects()
		npcConfig()
		nonEmptyRegion()
		evalFunction2()
		projectileGravityMultiplier()
		npcVariant()
	}
	math = {
		tan()
		atan()
		modf()
		exp()
		type()
		acos()
		abs()
		mininteger = -9223372036854775808
		maxinteger = 9223372036854775807
		deg()
		asin()
		randomseed()
		random()
		sqrt()
		huge = inf
		min()
		log()
		pi = 3.1415926535898
		rad()
		max()
		floor()
		ult()
		cos()
		tointeger()
		fmod()
		sin()
		ceil()
	}
	widget = {
		setListSelected()
		setImage()
		setButtonCheckedImages()
		setImageRotation()
		setButtonImage()
		getListSelected()
		itemGridItems()
		addListItem()
		removeListItem()
		setButtonImages()
		blur()
		getData()
		setOptionVisible()
		playSound()
		setChecked()
		getSelectedOption()
		setFontColor()
		setSize()
		setOptionEnabled()
		clearListItems()
		setPosition()
		setProgress()
		getText()
		getSliderValue()
		setButtonEnabled()
		setButtonOverlayImage()
		setData()
		setSelectedOption()
		focus()
		getSize()
		setImageScale()
		setVisible()
		getPosition()
		setText()
		getChecked()
	}
	xpcall()
	setmetatable()
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	status = {
		removeEphemeralEffect()
		resetResource()
		addPersistentEffect()
		addEphemeralEffect()
		resourceMax()
		addPersistentEffects()
		clearEphemeralEffects()
		statPositive()
		modifyResource()
		statusProperty()
		resourcePercentage()
		resource()
		isResource()
		setResourcePercentage()
		getPersistentEffects()
		resourcePositive()
		clearPersistentEffects()
		giveResource()
		overConsumeResource()
		damageTakenSince()
		activeUniqueStatusEffectSummary()
		addEphemeralEffects()
		setStatusProperty()
		resourceLocked()
		modifyResourcePercentage()
		stat()
		clearAllPersistentEffects()
		setResourceLocked()
		resetAllResources()
		resourceNames()
		setPersistentEffects()
		inflictedDamageSince()
		consumeResource()
		inflictedHitsSince()
		setResource()
	}
	utf8 = {
		charpattern = "[
[03:21:52.597] [Warn] 	coroutine = {
		wrap()
		resume()
		create()
		isyieldable()
		status()
		running()
		yield()
	}
	jarray()
	type()
	init()
	require()
	table = {
		insert()
		unpack()
		pack()
		concat()
		sort()
		move()
		remove()
	}
	_VERSION = "Lua 5.3"
	update()
	rawequal()
	world = {
		isMonster()
		entityPortrait()
		entityQuery()
		itemDropQuery()
		entityVelocity()
		damageTiles()
		entityHealth()
		debugPoint()
		debugLine()
		entityExists()
		entityUniqueId()
		timeOfDay()
		entityGender()
		entityAggressive()
		magnitude()
		mod()
		platformerPathStart()
		containerItemAt()
		breathable()
		entityHasCountOfItem()
		npcType()
		sendEntityMessage()
		liquidAt()
		liquidAlongLine()
		isTileProtected()
		destroyLiquid()
		spawnLiquid()
		isNpc()
		getProperty()
		gravity()
		entityMoney()
		objectLineQuery()
		spawnMonster()
		lineCollision()
		lineTileCollision()
		rectCollision()
		getObjectParameter()
		entityHandItem()
		setProperty()
		entityHandItemDescriptor()
		time()
		placeMaterial()
		entityName()
		findUniqueEntity()
		threatLevel()
		placeObject()
		spawnTreasure()
		spawnVehicle()
		damageTileArea()
		windLevel()
		tileIsOccupied()
		containerTakeAt()
		loungeableOccupied()
		resolvePolyCollision()
		nearestTo()
		spawnStagehand()
		polyCollision()
		containerOpen()
		pointCollision()
		distance()
		rectTileCollision()
		debugPoly()
		pointTileCollision()
		containerStackItems()
		collisionBlocksAlongLine()
		entityDamageTeam()
		containerAvailable()
		containerItemApply()
		farmableStage()
		containerSize()
		polyContains()
		stagehandType()
		containerItemsCanFit()
		placeMod()
		containerTakeNumItemsAt()
		dayLength()
		callScriptedEntity()
		spawnProjectile()
		containerItemsFitWhere()
		npcLineQuery()
		npcQuery()
		containerTakeAll()
		findPlatformerPath()
		entityDescription()
		xwrap()
		spawnItem()
		containerSwapItemsNoCombine()
		containerAddItems()
		objectSpaces()
		playerQuery()
		containerConsumeAt()
		monsterType()
		entityType()
		containerSwapItems()
		debugText()
		day()
		containerPutItemsAt()
		entitySpecies()
		loungeableQuery()
		lightLevel()
		entityCanDamage()
		underground()
		spawnNpc()
		material()
		monsterQuery()
		objectQuery()
		containerConsume()
		entityLineQuery()
		containerClose()
		entityPosition()
		objectAt()
		containerItems()
	}
	tonumber()
	ic = {
		stripColor()
		giveBack()
		renameThis()
		checkStack()
		sortFunc()
		sort()
		itemAmount()
		amountEquipped()
		sort_relative()
		itemConfig()
		searchBox()
		clientVersion = 1
		quickstack()
		searchButton()
		renameButton()
		lock()
		getQuality()
	}
	assert()
	rawset()
	getmetatable()
	string = {
		rep()
		gmatch()
		reverse()
		pack()
		char()
		sub()
		format()
		byte()
		match()
		dump()
		find()
		unpack()
		packsize()
		upper()
		gsub()
		lower()
		len()
	}
	pcall()
	player = {
		consumeItemWithParameter()
		shipUpgrades()
		altHandItemTags()
		upgradeShip()
		serverUuid()
		gender()
		worldId()
		equippedTech()
		completeMission()
		inventoryTags()
		removeEssentialItem()
		hasItem()
		recordEvent()
		addBookmark()
		lounge()
		cleanupItems()
		consumeItem()
		makeTechUnavailable()
		setUniverseFlag()
		giveBlueprint()
		hasItemWithParameter()
		species()
		playCinematic()
		altHandItem()
		primaryHandItemTags()
		availableTechs()
		enabledTechs()
		enableTech()
		giveItem()
		playTime()
		setIntroComplete()
		essentialItem()
		ownShipWorldId()
		makeTechAvailable()
		warp()
		equipTech()
		startQuest()
		enableMission()
		hasQuest()
		itemsWithTag()
		isLounging()
		primaryHandItem()
		confirm()
		hasCompletedQuest()
		hasCountOfItem()
		equippedItem()
		setEquippedItem()
		radioMessage()
		giveEssentialItem()
		introComplete()
		canStartQuest()
		consumeTaggedItem()
		getItemWithParameter()
	}
	config = {
		getParameter()
	}
	root = {
		questConfig()
		treeFoliageDirectory()
		getConfigurationPath()
		loadVersionedJson()
		materialHealth()
		tenantConfig()
		itemConfig()
		materialMiningSound()
		projectileConfig()
		imageSpaces()
		techType()
		createTreasure()
		materialFootstepSound()
		itemHasTag()
		imageSize()
		treeStemDirectory()
		npcPortrait()
		hasTech()
		getMatchingTenants()
		getConfiguration()
		createItem()
		generateName()
		setConfiguration()
		techConfig()
		materialPath()
		makeCurrentVersionedJson()
		monsterMovementSettings()
		isTreasurePool()
		itemTags()
		itemType()
		evalFunction()
		monsterSkillParameter()
		assetJson()
		setConfigurationPath()
		monsterPortrait()
		recipesForItem()
		createBiome()
		behaviorModule()
		liquidStatusEffects()
		npcConfig()
		nonEmptyRegion()
		evalFunction2()
		projectileGravityMultiplier()
		npcVariant()
	}
	math = {
		tan()
		atan()
		modf()
		exp()
		type()
		acos()
		abs()
		mininteger = -9223372036854775808
		maxinteger = 9223372036854775807
		deg()
		asin()
		randomseed()
		random()
		sqrt()
		huge = inf
		min()
		log()
		pi = 3.1415926535898
		rad()
		max()
		floor()
		ult()
		cos()
		tointeger()
		fmod()
		sin()
		ceil()
	}
	widget = {
		setListSelected()
		setImage()
		setButtonCheckedImages()
		setImageRotation()
		setButtonImage()
		getListSelected()
		itemGridItems()
		addListItem()
		removeListItem()
		setButtonImages()
		blur()
		getData()
		setOptionVisible()
		playSound()
		setChecked()
		getSelectedOption()
		setFontColor()
		setSize()
		setOptionEnabled()
		clearListItems()
		setPosition()
		setProgress()
		getText()
		getSliderValue()
		setButtonEnabled()
		setButtonOverlayImage()
		setData()
		setSelectedOption()
		focus()
		getSize()
		setImageScale()
		setVisible()
		getPosition()
		setText()
		getChecked()
	}
	xpcall()
	setmetatable()
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	status = {
		removeEphemeralEffect()
		resetResource()
		addPersistentEffect()
		addEphemeralEffect()
		resourceMax()
		addPersistentEffects()
		clearEphemeralEffects()
		statPositive()
		modifyResource()
		statusProperty()
		resourcePercentage()
		resource()
		isResource()
		setResourcePercentage()
		getPersistentEffects()
		resourcePositive()
		clearPersistentEffects()
		giveResource()
		overConsumeResource()
		damageTakenSince()
		activeUniqueStatusEffectSummary()
		addEphemeralEffects()
		setStatusProperty()
		resourceLocked()
		modifyResourcePercentage()
		stat()
		clearAllPersistentEffects()
		setResourceLocked()
		resetAllResources()
		resourceNames()
		setPersistentEffects()
		inflictedDamageSince()
		consumeResource()
		inflictedHitsSince()
		setResource()
	}
	utf8 = {
		charpattern = "[
[03:22:11.598] [Warn] 	coroutine = {
		wrap()
		resume()
		create()
		isyieldable()
		status()
		running()
		yield()
	}
	jarray()
	type()
	init()
	require()
	table = {
		insert()
		unpack()
		pack()
		concat()
		sort()
		move()
		remove()
	}
	_VERSION = "Lua 5.3"
	update()
	rawequal()
	world = {
		isMonster()
		entityPortrait()
		entityQuery()
		itemDropQuery()
		entityVelocity()
		damageTiles()
		entityHealth()
		debugPoint()
		debugLine()
		entityExists()
		entityUniqueId()
		timeOfDay()
		entityGender()
		entityAggressive()
		magnitude()
		mod()
		platformerPathStart()
		containerItemAt()
		breathable()
		entityHasCountOfItem()
		npcType()
		sendEntityMessage()
		liquidAt()
		liquidAlongLine()
		isTileProtected()
		destroyLiquid()
		spawnLiquid()
		isNpc()
		getProperty()
		gravity()
		entityMoney()
		objectLineQuery()
		spawnMonster()
		lineCollision()
		lineTileCollision()
		rectCollision()
		getObjectParameter()
		entityHandItem()
		setProperty()
		entityHandItemDescriptor()
		time()
		placeMaterial()
		entityName()
		findUniqueEntity()
		threatLevel()
		placeObject()
		spawnTreasure()
		spawnVehicle()
		damageTileArea()
		windLevel()
		tileIsOccupied()
		containerTakeAt()
		loungeableOccupied()
		resolvePolyCollision()
		nearestTo()
		spawnStagehand()
		polyCollision()
		containerOpen()
		pointCollision()
		distance()
		rectTileCollision()
		debugPoly()
		pointTileCollision()
		containerStackItems()
		collisionBlocksAlongLine()
		entityDamageTeam()
		containerAvailable()
		containerItemApply()
		farmableStage()
		containerSize()
		polyContains()
		stagehandType()
		containerItemsCanFit()
		placeMod()
		containerTakeNumItemsAt()
		dayLength()
		callScriptedEntity()
		spawnProjectile()
		containerItemsFitWhere()
		npcLineQuery()
		npcQuery()
		containerTakeAll()
		findPlatformerPath()
		entityDescription()
		xwrap()
		spawnItem()
		containerSwapItemsNoCombine()
		containerAddItems()
		objectSpaces()
		playerQuery()
		containerConsumeAt()
		monsterType()
		entityType()
		containerSwapItems()
		debugText()
		day()
		containerPutItemsAt()
		entitySpecies()
		loungeableQuery()
		lightLevel()
		entityCanDamage()
		underground()
		spawnNpc()
		material()
		monsterQuery()
		objectQuery()
		containerConsume()
		entityLineQuery()
		containerClose()
		entityPosition()
		objectAt()
		containerItems()
	}
	tonumber()
	ic = {
		stripColor()
		giveBack()
		renameThis()
		checkStack()
		sortFunc()
		sort()
		itemAmount()
		amountEquipped()
		sort_relative()
		itemConfig()
		searchBox()
		clientVersion = 1
		quickstack()
		searchButton()
		renameButton()
		lock()
		getQuality()
	}
	assert()
	rawset()
	getmetatable()
	string = {
		rep()
		gmatch()
		reverse()
		pack()
		char()
		sub()
		format()
		byte()
		match()
		dump()
		find()
		unpack()
		packsize()
		upper()
		gsub()
		lower()
		len()
	}
	pcall()
	player = {
		consumeItemWithParameter()
		shipUpgrades()
		altHandItemTags()
		upgradeShip()
		serverUuid()
		gender()
		worldId()
		equippedTech()
		completeMission()
		inventoryTags()
		removeEssentialItem()
		hasItem()
		recordEvent()
		addBookmark()
		lounge()
		cleanupItems()
		consumeItem()
		makeTechUnavailable()
		setUniverseFlag()
		giveBlueprint()
		hasItemWithParameter()
		species()
		playCinematic()
		altHandItem()
		primaryHandItemTags()
		availableTechs()
		enabledTechs()
		enableTech()
		giveItem()
		playTime()
		setIntroComplete()
		essentialItem()
		ownShipWorldId()
		makeTechAvailable()
		warp()
		equipTech()
		startQuest()
		enableMission()
		hasQuest()
		itemsWithTag()
		isLounging()
		primaryHandItem()
		confirm()
		hasCompletedQuest()
		hasCountOfItem()
		equippedItem()
		setEquippedItem()
		radioMessage()
		giveEssentialItem()
		introComplete()
		canStartQuest()
		consumeTaggedItem()
		getItemWithParameter()
	}
	config = {
		getParameter()
	}
	root = {
		questConfig()
		treeFoliageDirectory()
		getConfigurationPath()
		loadVersionedJson()
		materialHealth()
		tenantConfig()
		itemConfig()
		materialMiningSound()
		projectileConfig()
		imageSpaces()
		techType()
		createTreasure()
		materialFootstepSound()
		itemHasTag()
		imageSize()
		treeStemDirectory()
		npcPortrait()
		hasTech()
		getMatchingTenants()
		getConfiguration()
		createItem()
		generateName()
		setConfiguration()
		techConfig()
		materialPath()
		makeCurrentVersionedJson()
		monsterMovementSettings()
		isTreasurePool()
		itemTags()
		itemType()
		evalFunction()
		monsterSkillParameter()
		assetJson()
		setConfigurationPath()
		monsterPortrait()
		recipesForItem()
		createBiome()
		behaviorModule()
		liquidStatusEffects()
		npcConfig()
		nonEmptyRegion()
		evalFunction2()
		projectileGravityMultiplier()
		npcVariant()
	}
	math = {
		tan()
		atan()
		modf()
		exp()
		type()
		acos()
		abs()
		mininteger = -9223372036854775808
		maxinteger = 9223372036854775807
		deg()
		asin()
		randomseed()
		random()
		sqrt()
		huge = inf
		min()
		log()
		pi = 3.1415926535898
		rad()
		max()
		floor()
		ult()
		cos()
		tointeger()
		fmod()
		sin()
		ceil()
	}
	widget = {
		setListSelected()
		setImage()
		setButtonCheckedImages()
		setImageRotation()
		setButtonImage()
		getListSelected()
		itemGridItems()
		addListItem()
		removeListItem()
		setButtonImages()
		blur()
		getData()
		setOptionVisible()
		playSound()
		setChecked()
		getSelectedOption()
		setFontColor()
		setSize()
		setOptionEnabled()
		clearListItems()
		setPosition()
		setProgress()
		getText()
		getSliderValue()
		setButtonEnabled()
		setButtonOverlayImage()
		setData()
		setSelectedOption()
		focus()
		getSize()
		setImageScale()
		setVisible()
		getPosition()
		setText()
		getChecked()
	}
	xpcall()
	setmetatable()
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	status = {
		removeEphemeralEffect()
		resetResource()
		addPersistentEffect()
		addEphemeralEffect()
		resourceMax()
		addPersistentEffects()
		clearEphemeralEffects()
		statPositive()
		modifyResource()
		statusProperty()
		resourcePercentage()
		resource()
		isResource()
		setResourcePercentage()
		getPersistentEffects()
		resourcePositive()
		clearPersistentEffects()
		giveResource()
		overConsumeResource()
		damageTakenSince()
		activeUniqueStatusEffectSummary()
		addEphemeralEffects()
		setStatusProperty()
		resourceLocked()
		modifyResourcePercentage()
		stat()
		clearAllPersistentEffects()
		setResourceLocked()
		resetAllResources()
		resourceNames()
		setPersistentEffects()
		inflictedDamageSince()
		consumeResource()
		inflictedHitsSince()
		setResource()
	}
	utf8 = {
		charpattern = "[
[03:22:18.250] [Info] [IC] [Sort] Time elapsed: 0.003
[03:23:32.623] [Warn] 	coroutine = {
		wrap()
		resume()
		create()
		isyieldable()
		status()
		running()
		yield()
	}
	jarray()
	type()
	init()
	require()
	table = {
		insert()
		unpack()
		pack()
		concat()
		sort()
		move()
		remove()
	}
	_VERSION = "Lua 5.3"
	update()
	rawequal()
	world = {
		isMonster()
		entityPortrait()
		entityQuery()
		itemDropQuery()
		entityVelocity()
		damageTiles()
		entityHealth()
		debugPoint()
		debugLine()
		entityExists()
		entityUniqueId()
		timeOfDay()
		entityGender()
		entityAggressive()
		magnitude()
		mod()
		platformerPathStart()
		containerItemAt()
		breathable()
		entityHasCountOfItem()
		npcType()
		sendEntityMessage()
		liquidAt()
		liquidAlongLine()
		isTileProtected()
		destroyLiquid()
		spawnLiquid()
		isNpc()
		getProperty()
		gravity()
		entityMoney()
		objectLineQuery()
		spawnMonster()
		lineCollision()
		lineTileCollision()
		rectCollision()
		getObjectParameter()
		entityHandItem()
		setProperty()
		entityHandItemDescriptor()
		time()
		placeMaterial()
		entityName()
		findUniqueEntity()
		threatLevel()
		placeObject()
		spawnTreasure()
		spawnVehicle()
		damageTileArea()
		windLevel()
		tileIsOccupied()
		containerTakeAt()
		loungeableOccupied()
		resolvePolyCollision()
		nearestTo()
		spawnStagehand()
		polyCollision()
		containerOpen()
		pointCollision()
		distance()
		rectTileCollision()
		debugPoly()
		pointTileCollision()
		containerStackItems()
		collisionBlocksAlongLine()
		entityDamageTeam()
		containerAvailable()
		containerItemApply()
		farmableStage()
		containerSize()
		polyContains()
		stagehandType()
		containerItemsCanFit()
		placeMod()
		containerTakeNumItemsAt()
		dayLength()
		callScriptedEntity()
		spawnProjectile()
		containerItemsFitWhere()
		npcLineQuery()
		npcQuery()
		containerTakeAll()
		findPlatformerPath()
		entityDescription()
		xwrap()
		spawnItem()
		containerSwapItemsNoCombine()
		containerAddItems()
		objectSpaces()
		playerQuery()
		containerConsumeAt()
		monsterType()
		entityType()
		containerSwapItems()
		debugText()
		day()
		containerPutItemsAt()
		entitySpecies()
		loungeableQuery()
		lightLevel()
		entityCanDamage()
		underground()
		spawnNpc()
		material()
		monsterQuery()
		objectQuery()
		containerConsume()
		entityLineQuery()
		containerClose()
		entityPosition()
		objectAt()
		containerItems()
	}
	tonumber()
	ic = {
		stripColor()
		giveBack()
		renameThis()
		checkStack()
		sortFunc()
		sort()
		itemAmount()
		amountEquipped()
		sort_relative()
		itemConfig()
		searchBox()
		clientVersion = 1
		quickstack()
		searchButton()
		renameButton()
		lock()
		getQuality()
	}
	assert()
	rawset()
	getmetatable()
	string = {
		rep()
		gmatch()
		reverse()
		pack()
		char()
		sub()
		format()
		byte()
		match()
		dump()
		find()
		unpack()
		packsize()
		upper()
		gsub()
		lower()
		len()
	}
	pcall()
	player = {
		consumeItemWithParameter()
		shipUpgrades()
		altHandItemTags()
		upgradeShip()
		serverUuid()
		gender()
		worldId()
		equippedTech()
		completeMission()
		inventoryTags()
		removeEssentialItem()
		hasItem()
		recordEvent()
		addBookmark()
		lounge()
		cleanupItems()
		consumeItem()
		makeTechUnavailable()
		setUniverseFlag()
		giveBlueprint()
		hasItemWithParameter()
		species()
		playCinematic()
		altHandItem()
		primaryHandItemTags()
		availableTechs()
		enabledTechs()
		enableTech()
		giveItem()
		playTime()
		setIntroComplete()
		essentialItem()
		ownShipWorldId()
		makeTechAvailable()
		warp()
		equipTech()
		startQuest()
		enableMission()
		hasQuest()
		itemsWithTag()
		isLounging()
		primaryHandItem()
		confirm()
		hasCompletedQuest()
		hasCountOfItem()
		equippedItem()
		setEquippedItem()
		radioMessage()
		giveEssentialItem()
		introComplete()
		canStartQuest()
		consumeTaggedItem()
		getItemWithParameter()
	}
	config = {
		getParameter()
	}
	root = {
		questConfig()
		treeFoliageDirectory()
		getConfigurationPath()
		loadVersionedJson()
		materialHealth()
		tenantConfig()
		itemConfig()
		materialMiningSound()
		projectileConfig()
		imageSpaces()
		techType()
		createTreasure()
		materialFootstepSound()
		itemHasTag()
		imageSize()
		treeStemDirectory()
		npcPortrait()
		hasTech()
		getMatchingTenants()
		getConfiguration()
		createItem()
		generateName()
		setConfiguration()
		techConfig()
		materialPath()
		makeCurrentVersionedJson()
		monsterMovementSettings()
		isTreasurePool()
		itemTags()
		itemType()
		evalFunction()
		monsterSkillParameter()
		assetJson()
		setConfigurationPath()
		monsterPortrait()
		recipesForItem()
		createBiome()
		behaviorModule()
		liquidStatusEffects()
		npcConfig()
		nonEmptyRegion()
		evalFunction2()
		projectileGravityMultiplier()
		npcVariant()
	}
	math = {
		tan()
		atan()
		modf()
		exp()
		type()
		acos()
		abs()
		mininteger = -9223372036854775808
		maxinteger = 9223372036854775807
		deg()
		asin()
		randomseed()
		random()
		sqrt()
		huge = inf
		min()
		log()
		pi = 3.1415926535898
		rad()
		max()
		floor()
		ult()
		cos()
		tointeger()
		fmod()
		sin()
		ceil()
	}
	widget = {
		setListSelected()
		setImage()
		setButtonCheckedImages()
		setImageRotation()
		setButtonImage()
		getListSelected()
		itemGridItems()
		addListItem()
		removeListItem()
		setButtonImages()
		blur()
		getData()
		setOptionVisible()
		playSound()
		setChecked()
		getSelectedOption()
		setFontColor()
		setSize()
		setOptionEnabled()
		clearListItems()
		setPosition()
		setProgress()
		getText()
		getSliderValue()
		setButtonEnabled()
		setButtonOverlayImage()
		setData()
		setSelectedOption()
		focus()
		getSize()
		setImageScale()
		setVisible()
		getPosition()
		setText()
		getChecked()
	}
	xpcall()
	setmetatable()
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	status = {
		removeEphemeralEffect()
		resetResource()
		addPersistentEffect()
		addEphemeralEffect()
		resourceMax()
		addPersistentEffects()
		clearEphemeralEffects()
		statPositive()
		modifyResource()
		statusProperty()
		resourcePercentage()
		resource()
		isResource()
		setResourcePercentage()
		getPersistentEffects()
		resourcePositive()
		clearPersistentEffects()
		giveResource()
		overConsumeResource()
		damageTakenSince()
		activeUniqueStatusEffectSummary()
		addEphemeralEffects()
		setStatusProperty()
		resourceLocked()
		modifyResourcePercentage()
		stat()
		clearAllPersistentEffects()
		setResourceLocked()
		resetAllResources()
		resourceNames()
		setPersistentEffects()
		inflictedDamageSince()
		consumeResource()
		inflictedHitsSince()
		setResource()
	}
	utf8 = {
		charpattern = "[
[03:23:36.160] [Warn] 	coroutine = {
		wrap()
		resume()
		create()
		isyieldable()
		status()
		running()
		yield()
	}
	jarray()
	type()
	init()
	require()
	table = {
		insert()
		unpack()
		pack()
		concat()
		sort()
		move()
		remove()
	}
	_VERSION = "Lua 5.3"
	update()
	rawequal()
	world = {
		isMonster()
		entityPortrait()
		entityQuery()
		itemDropQuery()
		entityVelocity()
		damageTiles()
		entityHealth()
		debugPoint()
		debugLine()
		entityExists()
		entityUniqueId()
		timeOfDay()
		entityGender()
		entityAggressive()
		magnitude()
		mod()
		platformerPathStart()
		containerItemAt()
		breathable()
		entityHasCountOfItem()
		npcType()
		sendEntityMessage()
		liquidAt()
		liquidAlongLine()
		isTileProtected()
		destroyLiquid()
		spawnLiquid()
		isNpc()
		getProperty()
		gravity()
		entityMoney()
		objectLineQuery()
		spawnMonster()
		lineCollision()
		lineTileCollision()
		rectCollision()
		getObjectParameter()
		entityHandItem()
		setProperty()
		entityHandItemDescriptor()
		time()
		placeMaterial()
		entityName()
		findUniqueEntity()
		threatLevel()
		placeObject()
		spawnTreasure()
		spawnVehicle()
		damageTileArea()
		windLevel()
		tileIsOccupied()
		containerTakeAt()
		loungeableOccupied()
		resolvePolyCollision()
		nearestTo()
		spawnStagehand()
		polyCollision()
		containerOpen()
		pointCollision()
		distance()
		rectTileCollision()
		debugPoly()
		pointTileCollision()
		containerStackItems()
		collisionBlocksAlongLine()
		entityDamageTeam()
		containerAvailable()
		containerItemApply()
		farmableStage()
		containerSize()
		polyContains()
		stagehandType()
		containerItemsCanFit()
		placeMod()
		containerTakeNumItemsAt()
		dayLength()
		callScriptedEntity()
		spawnProjectile()
		containerItemsFitWhere()
		npcLineQuery()
		npcQuery()
		containerTakeAll()
		findPlatformerPath()
		entityDescription()
		xwrap()
		spawnItem()
		containerSwapItemsNoCombine()
		containerAddItems()
		objectSpaces()
		playerQuery()
		containerConsumeAt()
		monsterType()
		entityType()
		containerSwapItems()
		debugText()
		day()
		containerPutItemsAt()
		entitySpecies()
		loungeableQuery()
		lightLevel()
		entityCanDamage()
		underground()
		spawnNpc()
		material()
		monsterQuery()
		objectQuery()
		containerConsume()
		entityLineQuery()
		containerClose()
		entityPosition()
		objectAt()
		containerItems()
	}
	tonumber()
	ic = {
		stripColor()
		giveBack()
		renameThis()
		checkStack()
		sortFunc()
		sort()
		itemAmount()
		amountEquipped()
		sort_relative()
		itemConfig()
		searchBox()
		clientVersion = 1
		quickstack()
		searchButton()
		renameButton()
		lock()
		getQuality()
	}
	assert()
	rawset()
	getmetatable()
	string = {
		rep()
		gmatch()
		reverse()
		pack()
		char()
		sub()
		format()
		byte()
		match()
		dump()
		find()
		unpack()
		packsize()
		upper()
		gsub()
		lower()
		len()
	}
	pcall()
	player = {
		consumeItemWithParameter()
		shipUpgrades()
		altHandItemTags()
		upgradeShip()
		serverUuid()
		gender()
		worldId()
		equippedTech()
		completeMission()
		inventoryTags()
		removeEssentialItem()
		hasItem()
		recordEvent()
		addBookmark()
		lounge()
		cleanupItems()
		consumeItem()
		makeTechUnavailable()
		setUniverseFlag()
		giveBlueprint()
		hasItemWithParameter()
		species()
		playCinematic()
		altHandItem()
		primaryHandItemTags()
		availableTechs()
		enabledTechs()
		enableTech()
		giveItem()
		playTime()
		setIntroComplete()
		essentialItem()
		ownShipWorldId()
		makeTechAvailable()
		warp()
		equipTech()
		startQuest()
		enableMission()
		hasQuest()
		itemsWithTag()
		isLounging()
		primaryHandItem()
		confirm()
		hasCompletedQuest()
		hasCountOfItem()
		equippedItem()
		setEquippedItem()
		radioMessage()
		giveEssentialItem()
		introComplete()
		canStartQuest()
		consumeTaggedItem()
		getItemWithParameter()
	}
	config = {
		getParameter()
	}
	root = {
		questConfig()
		treeFoliageDirectory()
		getConfigurationPath()
		loadVersionedJson()
		materialHealth()
		tenantConfig()
		itemConfig()
		materialMiningSound()
		projectileConfig()
		imageSpaces()
		techType()
		createTreasure()
		materialFootstepSound()
		itemHasTag()
		imageSize()
		treeStemDirectory()
		npcPortrait()
		hasTech()
		getMatchingTenants()
		getConfiguration()
		createItem()
		generateName()
		setConfiguration()
		techConfig()
		materialPath()
		makeCurrentVersionedJson()
		monsterMovementSettings()
		isTreasurePool()
		itemTags()
		itemType()
		evalFunction()
		monsterSkillParameter()
		assetJson()
		setConfigurationPath()
		monsterPortrait()
		recipesForItem()
		createBiome()
		behaviorModule()
		liquidStatusEffects()
		npcConfig()
		nonEmptyRegion()
		evalFunction2()
		projectileGravityMultiplier()
		npcVariant()
	}
	math = {
		tan()
		atan()
		modf()
		exp()
		type()
		acos()
		abs()
		mininteger = -9223372036854775808
		maxinteger = 9223372036854775807
		deg()
		asin()
		randomseed()
		random()
		sqrt()
		huge = inf
		min()
		log()
		pi = 3.1415926535898
		rad()
		max()
		floor()
		ult()
		cos()
		tointeger()
		fmod()
		sin()
		ceil()
	}
	widget = {
		setListSelected()
		setImage()
		setButtonCheckedImages()
		setImageRotation()
		setButtonImage()
		getListSelected()
		itemGridItems()
		addListItem()
		removeListItem()
		setButtonImages()
		blur()
		getData()
		setOptionVisible()
		playSound()
		setChecked()
		getSelectedOption()
		setFontColor()
		setSize()
		setOptionEnabled()
		clearListItems()
		setPosition()
		setProgress()
		getText()
		getSliderValue()
		setButtonEnabled()
		setButtonOverlayImage()
		setData()
		setSelectedOption()
		focus()
		getSize()
		setImageScale()
		setVisible()
		getPosition()
		setText()
		getChecked()
	}
	xpcall()
	setmetatable()
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	status = {
		removeEphemeralEffect()
		resetResource()
		addPersistentEffect()
		addEphemeralEffect()
		resourceMax()
		addPersistentEffects()
		clearEphemeralEffects()
		statPositive()
		modifyResource()
		statusProperty()
		resourcePercentage()
		resource()
		isResource()
		setResourcePercentage()
		getPersistentEffects()
		resourcePositive()
		clearPersistentEffects()
		giveResource()
		overConsumeResource()
		damageTakenSince()
		activeUniqueStatusEffectSummary()
		addEphemeralEffects()
		setStatusProperty()
		resourceLocked()
		modifyResourcePercentage()
		stat()
		clearAllPersistentEffects()
		setResourceLocked()
		resetAllResources()
		resourceNames()
		setPersistentEffects()
		inflictedDamageSince()
		consumeResource()
		inflictedHitsSince()
		setResource()
	}
	utf8 = {
		charpattern = "[
[03:23:42.448] [Warn] 	coroutine = {
		wrap()
		resume()
		create()
		isyieldable()
		status()
		running()
		yield()
	}
	jarray()
	type()
	init()
	require()
	table = {
		insert()
		unpack()
		pack()
		concat()
		sort()
		move()
		remove()
	}
	_VERSION = "Lua 5.3"
	update()
	rawequal()
	world = {
		isMonster()
		entityPortrait()
		entityQuery()
		itemDropQuery()
		entityVelocity()
		damageTiles()
		entityHealth()
		debugPoint()
		debugLine()
		entityExists()
		entityUniqueId()
		timeOfDay()
		entityGender()
		entityAggressive()
		magnitude()
		mod()
		platformerPathStart()
		containerItemAt()
		breathable()
		entityHasCountOfItem()
		npcType()
		sendEntityMessage()
		liquidAt()
		liquidAlongLine()
		isTileProtected()
		destroyLiquid()
		spawnLiquid()
		isNpc()
		getProperty()
		gravity()
		entityMoney()
		objectLineQuery()
		spawnMonster()
		lineCollision()
		lineTileCollision()
		rectCollision()
		getObjectParameter()
		entityHandItem()
		setProperty()
		entityHandItemDescriptor()
		time()
		placeMaterial()
		entityName()
		findUniqueEntity()
		threatLevel()
		placeObject()
		spawnTreasure()
		spawnVehicle()
		damageTileArea()
		windLevel()
		tileIsOccupied()
		containerTakeAt()
		loungeableOccupied()
		resolvePolyCollision()
		nearestTo()
		spawnStagehand()
		polyCollision()
		containerOpen()
		pointCollision()
		distance()
		rectTileCollision()
		debugPoly()
		pointTileCollision()
		containerStackItems()
		collisionBlocksAlongLine()
		entityDamageTeam()
		containerAvailable()
		containerItemApply()
		farmableStage()
		containerSize()
		polyContains()
		stagehandType()
		containerItemsCanFit()
		placeMod()
		containerTakeNumItemsAt()
		dayLength()
		callScriptedEntity()
		spawnProjectile()
		containerItemsFitWhere()
		npcLineQuery()
		npcQuery()
		containerTakeAll()
		findPlatformerPath()
		entityDescription()
		xwrap()
		spawnItem()
		containerSwapItemsNoCombine()
		containerAddItems()
		objectSpaces()
		playerQuery()
		containerConsumeAt()
		monsterType()
		entityType()
		containerSwapItems()
		debugText()
		day()
		containerPutItemsAt()
		entitySpecies()
		loungeableQuery()
		lightLevel()
		entityCanDamage()
		underground()
		spawnNpc()
		material()
		monsterQuery()
		objectQuery()
		containerConsume()
		entityLineQuery()
		containerClose()
		entityPosition()
		objectAt()
		containerItems()
	}
	tonumber()
	ic = {
		stripColor()
		giveBack()
		renameThis()
		checkStack()
		sortFunc()
		sort()
		itemAmount()
		amountEquipped()
		sort_relative()
		itemConfig()
		searchBox()
		clientVersion = 1
		quickstack()
		searchButton()
		renameButton()
		lock()
		getQuality()
	}
	assert()
	rawset()
	getmetatable()
	string = {
		rep()
		gmatch()
		reverse()
		pack()
		char()
		sub()
		format()
		byte()
		match()
		dump()
		find()
		unpack()
		packsize()
		upper()
		gsub()
		lower()
		len()
	}
	pcall()
	player = {
		consumeItemWithParameter()
		shipUpgrades()
		altHandItemTags()
		upgradeShip()
		serverUuid()
		gender()
		worldId()
		equippedTech()
		completeMission()
		inventoryTags()
		removeEssentialItem()
		hasItem()
		recordEvent()
		addBookmark()
		lounge()
		cleanupItems()
		consumeItem()
		makeTechUnavailable()
		setUniverseFlag()
		giveBlueprint()
		hasItemWithParameter()
		species()
		playCinematic()
		altHandItem()
		primaryHandItemTags()
		availableTechs()
		enabledTechs()
		enableTech()
		giveItem()
		playTime()
		setIntroComplete()
		essentialItem()
		ownShipWorldId()
		makeTechAvailable()
		warp()
		equipTech()
		startQuest()
		enableMission()
		hasQuest()
		itemsWithTag()
		isLounging()
		primaryHandItem()
		confirm()
		hasCompletedQuest()
		hasCountOfItem()
		equippedItem()
		setEquippedItem()
		radioMessage()
		giveEssentialItem()
		introComplete()
		canStartQuest()
		consumeTaggedItem()
		getItemWithParameter()
	}
	config = {
		getParameter()
	}
	root = {
		questConfig()
		treeFoliageDirectory()
		getConfigurationPath()
		loadVersionedJson()
		materialHealth()
		tenantConfig()
		itemConfig()
		materialMiningSound()
		projectileConfig()
		imageSpaces()
		techType()
		createTreasure()
		materialFootstepSound()
		itemHasTag()
		imageSize()
		treeStemDirectory()
		npcPortrait()
		hasTech()
		getMatchingTenants()
		getConfiguration()
		createItem()
		generateName()
		setConfiguration()
		techConfig()
		materialPath()
		makeCurrentVersionedJson()
		monsterMovementSettings()
		isTreasurePool()
		itemTags()
		itemType()
		evalFunction()
		monsterSkillParameter()
		assetJson()
		setConfigurationPath()
		monsterPortrait()
		recipesForItem()
		createBiome()
		behaviorModule()
		liquidStatusEffects()
		npcConfig()
		nonEmptyRegion()
		evalFunction2()
		projectileGravityMultiplier()
		npcVariant()
	}
	math = {
		tan()
		atan()
		modf()
		exp()
		type()
		acos()
		abs()
		mininteger = -9223372036854775808
		maxinteger = 9223372036854775807
		deg()
		asin()
		randomseed()
		random()
		sqrt()
		huge = inf
		min()
		log()
		pi = 3.1415926535898
		rad()
		max()
		floor()
		ult()
		cos()
		tointeger()
		fmod()
		sin()
		ceil()
	}
	widget = {
		setListSelected()
		setImage()
		setButtonCheckedImages()
		setImageRotation()
		setButtonImage()
		getListSelected()
		itemGridItems()
		addListItem()
		removeListItem()
		setButtonImages()
		blur()
		getData()
		setOptionVisible()
		playSound()
		setChecked()
		getSelectedOption()
		setFontColor()
		setSize()
		setOptionEnabled()
		clearListItems()
		setPosition()
		setProgress()
		getText()
		getSliderValue()
		setButtonEnabled()
		setButtonOverlayImage()
		setData()
		setSelectedOption()
		focus()
		getSize()
		setImageScale()
		setVisible()
		getPosition()
		setText()
		getChecked()
	}
	xpcall()
	setmetatable()
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	status = {
		removeEphemeralEffect()
		resetResource()
		addPersistentEffect()
		addEphemeralEffect()
		resourceMax()
		addPersistentEffects()
		clearEphemeralEffects()
		statPositive()
		modifyResource()
		statusProperty()
		resourcePercentage()
		resource()
		isResource()
		setResourcePercentage()
		getPersistentEffects()
		resourcePositive()
		clearPersistentEffects()
		giveResource()
		overConsumeResource()
		damageTakenSince()
		activeUniqueStatusEffectSummary()
		addEphemeralEffects()
		setStatusProperty()
		resourceLocked()
		modifyResourcePercentage()
		stat()
		clearAllPersistentEffects()
		setResourceLocked()
		resetAllResources()
		resourceNames()
		setPersistentEffects()
		inflictedDamageSince()
		consumeResource()
		inflictedHitsSince()
		setResource()
	}
	utf8 = {
		charpattern = "[
[03:23:49.513] [Warn] 	coroutine = {
		wrap()
		resume()
		create()
		isyieldable()
		status()
		running()
		yield()
	}
	jarray()
	type()
	init()
	require()
	table = {
		insert()
		unpack()
		pack()
		concat()
		sort()
		move()
		remove()
	}
	_VERSION = "Lua 5.3"
	update()
	rawequal()
	world = {
		isMonster()
		entityPortrait()
		entityQuery()
		itemDropQuery()
		entityVelocity()
		damageTiles()
		entityHealth()
		debugPoint()
		debugLine()
		entityExists()
		entityUniqueId()
		timeOfDay()
		entityGender()
		entityAggressive()
		magnitude()
		mod()
		platformerPathStart()
		containerItemAt()
		breathable()
		entityHasCountOfItem()
		npcType()
		sendEntityMessage()
		liquidAt()
		liquidAlongLine()
		isTileProtected()
		destroyLiquid()
		spawnLiquid()
		isNpc()
		getProperty()
		gravity()
		entityMoney()
		objectLineQuery()
		spawnMonster()
		lineCollision()
		lineTileCollision()
		rectCollision()
		getObjectParameter()
		entityHandItem()
		setProperty()
		entityHandItemDescriptor()
		time()
		placeMaterial()
		entityName()
		findUniqueEntity()
		threatLevel()
		placeObject()
		spawnTreasure()
		spawnVehicle()
		damageTileArea()
		windLevel()
		tileIsOccupied()
		containerTakeAt()
		loungeableOccupied()
		resolvePolyCollision()
		nearestTo()
		spawnStagehand()
		polyCollision()
		containerOpen()
		pointCollision()
		distance()
		rectTileCollision()
		debugPoly()
		pointTileCollision()
		containerStackItems()
		collisionBlocksAlongLine()
		entityDamageTeam()
		containerAvailable()
		containerItemApply()
		farmableStage()
		containerSize()
		polyContains()
		stagehandType()
		containerItemsCanFit()
		placeMod()
		containerTakeNumItemsAt()
		dayLength()
		callScriptedEntity()
		spawnProjectile()
		containerItemsFitWhere()
		npcLineQuery()
		npcQuery()
		containerTakeAll()
		findPlatformerPath()
		entityDescription()
		xwrap()
		spawnItem()
		containerSwapItemsNoCombine()
		containerAddItems()
		objectSpaces()
		playerQuery()
		containerConsumeAt()
		monsterType()
		entityType()
		containerSwapItems()
		debugText()
		day()
		containerPutItemsAt()
		entitySpecies()
		loungeableQuery()
		lightLevel()
		entityCanDamage()
		underground()
		spawnNpc()
		material()
		monsterQuery()
		objectQuery()
		containerConsume()
		entityLineQuery()
		containerClose()
		entityPosition()
		objectAt()
		containerItems()
	}
	tonumber()
	ic = {
		stripColor()
		giveBack()
		renameThis()
		checkStack()
		sortFunc()
		sort()
		itemAmount()
		amountEquipped()
		sort_relative()
		itemConfig()
		searchBox()
		clientVersion = 1
		quickstack()
		searchButton()
		renameButton()
		lock()
		getQuality()
	}
	assert()
	rawset()
	getmetatable()
	string = {
		rep()
		gmatch()
		reverse()
		pack()
		char()
		sub()
		format()
		byte()
		match()
		dump()
		find()
		unpack()
		packsize()
		upper()
		gsub()
		lower()
		len()
	}
	pcall()
	player = {
		consumeItemWithParameter()
		shipUpgrades()
		altHandItemTags()
		upgradeShip()
		serverUuid()
		gender()
		worldId()
		equippedTech()
		completeMission()
		inventoryTags()
		removeEssentialItem()
		hasItem()
		recordEvent()
		addBookmark()
		lounge()
		cleanupItems()
		consumeItem()
		makeTechUnavailable()
		setUniverseFlag()
		giveBlueprint()
		hasItemWithParameter()
		species()
		playCinematic()
		altHandItem()
		primaryHandItemTags()
		availableTechs()
		enabledTechs()
		enableTech()
		giveItem()
		playTime()
		setIntroComplete()
		essentialItem()
		ownShipWorldId()
		makeTechAvailable()
		warp()
		equipTech()
		startQuest()
		enableMission()
		hasQuest()
		itemsWithTag()
		isLounging()
		primaryHandItem()
		confirm()
		hasCompletedQuest()
		hasCountOfItem()
		equippedItem()
		setEquippedItem()
		radioMessage()
		giveEssentialItem()
		introComplete()
		canStartQuest()
		consumeTaggedItem()
		getItemWithParameter()
	}
	config = {
		getParameter()
	}
	root = {
		questConfig()
		treeFoliageDirectory()
		getConfigurationPath()
		loadVersionedJson()
		materialHealth()
		tenantConfig()
		itemConfig()
		materialMiningSound()
		projectileConfig()
		imageSpaces()
		techType()
		createTreasure()
		materialFootstepSound()
		itemHasTag()
		imageSize()
		treeStemDirectory()
		npcPortrait()
		hasTech()
		getMatchingTenants()
		getConfiguration()
		createItem()
		generateName()
		setConfiguration()
		techConfig()
		materialPath()
		makeCurrentVersionedJson()
		monsterMovementSettings()
		isTreasurePool()
		itemTags()
		itemType()
		evalFunction()
		monsterSkillParameter()
		assetJson()
		setConfigurationPath()
		monsterPortrait()
		recipesForItem()
		createBiome()
		behaviorModule()
		liquidStatusEffects()
		npcConfig()
		nonEmptyRegion()
		evalFunction2()
		projectileGravityMultiplier()
		npcVariant()
	}
	math = {
		tan()
		atan()
		modf()
		exp()
		type()
		acos()
		abs()
		mininteger = -9223372036854775808
		maxinteger = 9223372036854775807
		deg()
		asin()
		randomseed()
		random()
		sqrt()
		huge = inf
		min()
		log()
		pi = 3.1415926535898
		rad()
		max()
		floor()
		ult()
		cos()
		tointeger()
		fmod()
		sin()
		ceil()
	}
	widget = {
		setListSelected()
		setImage()
		setButtonCheckedImages()
		setImageRotation()
		setButtonImage()
		getListSelected()
		itemGridItems()
		addListItem()
		removeListItem()
		setButtonImages()
		blur()
		getData()
		setOptionVisible()
		playSound()
		setChecked()
		getSelectedOption()
		setFontColor()
		setSize()
		setOptionEnabled()
		clearListItems()
		setPosition()
		setProgress()
		getText()
		getSliderValue()
		setButtonEnabled()
		setButtonOverlayImage()
		setData()
		setSelectedOption()
		focus()
		getSize()
		setImageScale()
		setVisible()
		getPosition()
		setText()
		getChecked()
	}
	xpcall()
	setmetatable()
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	status = {
		removeEphemeralEffect()
		resetResource()
		addPersistentEffect()
		addEphemeralEffect()
		resourceMax()
		addPersistentEffects()
		clearEphemeralEffects()
		statPositive()
		modifyResource()
		statusProperty()
		resourcePercentage()
		resource()
		isResource()
		setResourcePercentage()
		getPersistentEffects()
		resourcePositive()
		clearPersistentEffects()
		giveResource()
		overConsumeResource()
		damageTakenSince()
		activeUniqueStatusEffectSummary()
		addEphemeralEffects()
		setStatusProperty()
		resourceLocked()
		modifyResourcePercentage()
		stat()
		clearAllPersistentEffects()
		setResourceLocked()
		resetAllResources()
		resourceNames()
		setPersistentEffects()
		inflictedDamageSince()
		consumeResource()
		inflictedHitsSince()
		setResource()
	}
	utf8 = {
		charpattern = "[
[03:24:24.014] [Warn] 	coroutine = {
		wrap()
		resume()
		create()
		isyieldable()
		status()
		running()
		yield()
	}
	jarray()
	type()
	init()
	require()
	table = {
		insert()
		unpack()
		pack()
		concat()
		sort()
		move()
		remove()
	}
	_VERSION = "Lua 5.3"
	update()
	rawequal()
	world = {
		isMonster()
		entityPortrait()
		entityQuery()
		itemDropQuery()
		entityVelocity()
		damageTiles()
		entityHealth()
		debugPoint()
		debugLine()
		entityExists()
		entityUniqueId()
		timeOfDay()
		entityGender()
		entityAggressive()
		magnitude()
		mod()
		platformerPathStart()
		containerItemAt()
		breathable()
		entityHasCountOfItem()
		npcType()
		sendEntityMessage()
		liquidAt()
		liquidAlongLine()
		isTileProtected()
		destroyLiquid()
		spawnLiquid()
		isNpc()
		getProperty()
		gravity()
		entityMoney()
		objectLineQuery()
		spawnMonster()
		lineCollision()
		lineTileCollision()
		rectCollision()
		getObjectParameter()
		entityHandItem()
		setProperty()
		entityHandItemDescriptor()
		time()
		placeMaterial()
		entityName()
		findUniqueEntity()
		threatLevel()
		placeObject()
		spawnTreasure()
		spawnVehicle()
		damageTileArea()
		windLevel()
		tileIsOccupied()
		containerTakeAt()
		loungeableOccupied()
		resolvePolyCollision()
		nearestTo()
		spawnStagehand()
		polyCollision()
		containerOpen()
		pointCollision()
		distance()
		rectTileCollision()
		debugPoly()
		pointTileCollision()
		containerStackItems()
		collisionBlocksAlongLine()
		entityDamageTeam()
		containerAvailable()
		containerItemApply()
		farmableStage()
		containerSize()
		polyContains()
		stagehandType()
		containerItemsCanFit()
		placeMod()
		containerTakeNumItemsAt()
		dayLength()
		callScriptedEntity()
		spawnProjectile()
		containerItemsFitWhere()
		npcLineQuery()
		npcQuery()
		containerTakeAll()
		findPlatformerPath()
		entityDescription()
		xwrap()
		spawnItem()
		containerSwapItemsNoCombine()
		containerAddItems()
		objectSpaces()
		playerQuery()
		containerConsumeAt()
		monsterType()
		entityType()
		containerSwapItems()
		debugText()
		day()
		containerPutItemsAt()
		entitySpecies()
		loungeableQuery()
		lightLevel()
		entityCanDamage()
		underground()
		spawnNpc()
		material()
		monsterQuery()
		objectQuery()
		containerConsume()
		entityLineQuery()
		containerClose()
		entityPosition()
		objectAt()
		containerItems()
	}
	tonumber()
	ic = {
		stripColor()
		giveBack()
		renameThis()
		checkStack()
		sortFunc()
		sort()
		itemAmount()
		amountEquipped()
		sort_relative()
		itemConfig()
		searchBox()
		clientVersion = 1
		quickstack()
		searchButton()
		renameButton()
		lock()
		getQuality()
	}
	assert()
	rawset()
	getmetatable()
	string = {
		rep()
		gmatch()
		reverse()
		pack()
		char()
		sub()
		format()
		byte()
		match()
		dump()
		find()
		unpack()
		packsize()
		upper()
		gsub()
		lower()
		len()
	}
	pcall()
	player = {
		consumeItemWithParameter()
		shipUpgrades()
		altHandItemTags()
		upgradeShip()
		serverUuid()
		gender()
		worldId()
		equippedTech()
		completeMission()
		inventoryTags()
		removeEssentialItem()
		hasItem()
		recordEvent()
		addBookmark()
		lounge()
		cleanupItems()
		consumeItem()
		makeTechUnavailable()
		setUniverseFlag()
		giveBlueprint()
		hasItemWithParameter()
		species()
		playCinematic()
		altHandItem()
		primaryHandItemTags()
		availableTechs()
		enabledTechs()
		enableTech()
		giveItem()
		playTime()
		setIntroComplete()
		essentialItem()
		ownShipWorldId()
		makeTechAvailable()
		warp()
		equipTech()
		startQuest()
		enableMission()
		hasQuest()
		itemsWithTag()
		isLounging()
		primaryHandItem()
		confirm()
		hasCompletedQuest()
		hasCountOfItem()
		equippedItem()
		setEquippedItem()
		radioMessage()
		giveEssentialItem()
		introComplete()
		canStartQuest()
		consumeTaggedItem()
		getItemWithParameter()
	}
	config = {
		getParameter()
	}
	root = {
		questConfig()
		treeFoliageDirectory()
		getConfigurationPath()
		loadVersionedJson()
		materialHealth()
		tenantConfig()
		itemConfig()
		materialMiningSound()
		projectileConfig()
		imageSpaces()
		techType()
		createTreasure()
		materialFootstepSound()
		itemHasTag()
		imageSize()
		treeStemDirectory()
		npcPortrait()
		hasTech()
		getMatchingTenants()
		getConfiguration()
		createItem()
		generateName()
		setConfiguration()
		techConfig()
		materialPath()
		makeCurrentVersionedJson()
		monsterMovementSettings()
		isTreasurePool()
		itemTags()
		itemType()
		evalFunction()
		monsterSkillParameter()
		assetJson()
		setConfigurationPath()
		monsterPortrait()
		recipesForItem()
		createBiome()
		behaviorModule()
		liquidStatusEffects()
		npcConfig()
		nonEmptyRegion()
		evalFunction2()
		projectileGravityMultiplier()
		npcVariant()
	}
	math = {
		tan()
		atan()
		modf()
		exp()
		type()
		acos()
		abs()
		mininteger = -9223372036854775808
		maxinteger = 9223372036854775807
		deg()
		asin()
		randomseed()
		random()
		sqrt()
		huge = inf
		min()
		log()
		pi = 3.1415926535898
		rad()
		max()
		floor()
		ult()
		cos()
		tointeger()
		fmod()
		sin()
		ceil()
	}
	widget = {
		setListSelected()
		setImage()
		setButtonCheckedImages()
		setImageRotation()
		setButtonImage()
		getListSelected()
		itemGridItems()
		addListItem()
		removeListItem()
		setButtonImages()
		blur()
		getData()
		setOptionVisible()
		playSound()
		setChecked()
		getSelectedOption()
		setFontColor()
		setSize()
		setOptionEnabled()
		clearListItems()
		setPosition()
		setProgress()
		getText()
		getSliderValue()
		setButtonEnabled()
		setButtonOverlayImage()
		setData()
		setSelectedOption()
		focus()
		getSize()
		setImageScale()
		setVisible()
		getPosition()
		setText()
		getChecked()
	}
	xpcall()
	setmetatable()
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	status = {
		removeEphemeralEffect()
		resetResource()
		addPersistentEffect()
		addEphemeralEffect()
		resourceMax()
		addPersistentEffects()
		clearEphemeralEffects()
		statPositive()
		modifyResource()
		statusProperty()
		resourcePercentage()
		resource()
		isResource()
		setResourcePercentage()
		getPersistentEffects()
		resourcePositive()
		clearPersistentEffects()
		giveResource()
		overConsumeResource()
		damageTakenSince()
		activeUniqueStatusEffectSummary()
		addEphemeralEffects()
		setStatusProperty()
		resourceLocked()
		modifyResourcePercentage()
		stat()
		clearAllPersistentEffects()
		setResourceLocked()
		resetAllResources()
		resourceNames()
		setPersistentEffects()
		inflictedDamageSince()
		consumeResource()
		inflictedHitsSince()
		setResource()
	}
	utf8 = {
		charpattern = "[
[03:24:25.324] [Warn] 	coroutine = {
		wrap()
		resume()
		create()
		isyieldable()
		status()
		running()
		yield()
	}
	jarray()
	type()
	init()
	require()
	table = {
		insert()
		unpack()
		pack()
		concat()
		sort()
		move()
		remove()
	}
	_VERSION = "Lua 5.3"
	update()
	rawequal()
	world = {
		isMonster()
		entityPortrait()
		entityQuery()
		itemDropQuery()
		entityVelocity()
		damageTiles()
		entityHealth()
		debugPoint()
		debugLine()
		entityExists()
		entityUniqueId()
		timeOfDay()
		entityGender()
		entityAggressive()
		magnitude()
		mod()
		platformerPathStart()
		containerItemAt()
		breathable()
		entityHasCountOfItem()
		npcType()
		sendEntityMessage()
		liquidAt()
		liquidAlongLine()
		isTileProtected()
		destroyLiquid()
		spawnLiquid()
		isNpc()
		getProperty()
		gravity()
		entityMoney()
		objectLineQuery()
		spawnMonster()
		lineCollision()
		lineTileCollision()
		rectCollision()
		getObjectParameter()
		entityHandItem()
		setProperty()
		entityHandItemDescriptor()
		time()
		placeMaterial()
		entityName()
		findUniqueEntity()
		threatLevel()
		placeObject()
		spawnTreasure()
		spawnVehicle()
		damageTileArea()
		windLevel()
		tileIsOccupied()
		containerTakeAt()
		loungeableOccupied()
		resolvePolyCollision()
		nearestTo()
		spawnStagehand()
		polyCollision()
		containerOpen()
		pointCollision()
		distance()
		rectTileCollision()
		debugPoly()
		pointTileCollision()
		containerStackItems()
		collisionBlocksAlongLine()
		entityDamageTeam()
		containerAvailable()
		containerItemApply()
		farmableStage()
		containerSize()
		polyContains()
		stagehandType()
		containerItemsCanFit()
		placeMod()
		containerTakeNumItemsAt()
		dayLength()
		callScriptedEntity()
		spawnProjectile()
		containerItemsFitWhere()
		npcLineQuery()
		npcQuery()
		containerTakeAll()
		findPlatformerPath()
		entityDescription()
		xwrap()
		spawnItem()
		containerSwapItemsNoCombine()
		containerAddItems()
		objectSpaces()
		playerQuery()
		containerConsumeAt()
		monsterType()
		entityType()
		containerSwapItems()
		debugText()
		day()
		containerPutItemsAt()
		entitySpecies()
		loungeableQuery()
		lightLevel()
		entityCanDamage()
		underground()
		spawnNpc()
		material()
		monsterQuery()
		objectQuery()
		containerConsume()
		entityLineQuery()
		containerClose()
		entityPosition()
		objectAt()
		containerItems()
	}
	tonumber()
	ic = {
		stripColor()
		giveBack()
		renameThis()
		checkStack()
		sortFunc()
		sort()
		itemAmount()
		amountEquipped()
		sort_relative()
		itemConfig()
		searchBox()
		clientVersion = 1
		quickstack()
		searchButton()
		renameButton()
		lock()
		getQuality()
	}
	assert()
	rawset()
	getmetatable()
	string = {
		rep()
		gmatch()
		reverse()
		pack()
		char()
		sub()
		format()
		byte()
		match()
		dump()
		find()
		unpack()
		packsize()
		upper()
		gsub()
		lower()
		len()
	}
	pcall()
	player = {
		consumeItemWithParameter()
		shipUpgrades()
		altHandItemTags()
		upgradeShip()
		serverUuid()
		gender()
		worldId()
		equippedTech()
		completeMission()
		inventoryTags()
		removeEssentialItem()
		hasItem()
		recordEvent()
		addBookmark()
		lounge()
		cleanupItems()
		consumeItem()
		makeTechUnavailable()
		setUniverseFlag()
		giveBlueprint()
		hasItemWithParameter()
		species()
		playCinematic()
		altHandItem()
		primaryHandItemTags()
		availableTechs()
		enabledTechs()
		enableTech()
		giveItem()
		playTime()
		setIntroComplete()
		essentialItem()
		ownShipWorldId()
		makeTechAvailable()
		warp()
		equipTech()
		startQuest()
		enableMission()
		hasQuest()
		itemsWithTag()
		isLounging()
		primaryHandItem()
		confirm()
		hasCompletedQuest()
		hasCountOfItem()
		equippedItem()
		setEquippedItem()
		radioMessage()
		giveEssentialItem()
		introComplete()
		canStartQuest()
		consumeTaggedItem()
		getItemWithParameter()
	}
	config = {
		getParameter()
	}
	root = {
		questConfig()
		treeFoliageDirectory()
		getConfigurationPath()
		loadVersionedJson()
		materialHealth()
		tenantConfig()
		itemConfig()
		materialMiningSound()
		projectileConfig()
		imageSpaces()
		techType()
		createTreasure()
		materialFootstepSound()
		itemHasTag()
		imageSize()
		treeStemDirectory()
		npcPortrait()
		hasTech()
		getMatchingTenants()
		getConfiguration()
		createItem()
		generateName()
		setConfiguration()
		techConfig()
		materialPath()
		makeCurrentVersionedJson()
		monsterMovementSettings()
		isTreasurePool()
		itemTags()
		itemType()
		evalFunction()
		monsterSkillParameter()
		assetJson()
		setConfigurationPath()
		monsterPortrait()
		recipesForItem()
		createBiome()
		behaviorModule()
		liquidStatusEffects()
		npcConfig()
		nonEmptyRegion()
		evalFunction2()
		projectileGravityMultiplier()
		npcVariant()
	}
	math = {
		tan()
		atan()
		modf()
		exp()
		type()
		acos()
		abs()
		mininteger = -9223372036854775808
		maxinteger = 9223372036854775807
		deg()
		asin()
		randomseed()
		random()
		sqrt()
		huge = inf
		min()
		log()
		pi = 3.1415926535898
		rad()
		max()
		floor()
		ult()
		cos()
		tointeger()
		fmod()
		sin()
		ceil()
	}
	widget = {
		setListSelected()
		setImage()
		setButtonCheckedImages()
		setImageRotation()
		setButtonImage()
		getListSelected()
		itemGridItems()
		addListItem()
		removeListItem()
		setButtonImages()
		blur()
		getData()
		setOptionVisible()
		playSound()
		setChecked()
		getSelectedOption()
		setFontColor()
		setSize()
		setOptionEnabled()
		clearListItems()
		setPosition()
		setProgress()
		getText()
		getSliderValue()
		setButtonEnabled()
		setButtonOverlayImage()
		setData()
		setSelectedOption()
		focus()
		getSize()
		setImageScale()
		setVisible()
		getPosition()
		setText()
		getChecked()
	}
	xpcall()
	setmetatable()
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	status = {
		removeEphemeralEffect()
		resetResource()
		addPersistentEffect()
		addEphemeralEffect()
		resourceMax()
		addPersistentEffects()
		clearEphemeralEffects()
		statPositive()
		modifyResource()
		statusProperty()
		resourcePercentage()
		resource()
		isResource()
		setResourcePercentage()
		getPersistentEffects()
		resourcePositive()
		clearPersistentEffects()
		giveResource()
		overConsumeResource()
		damageTakenSince()
		activeUniqueStatusEffectSummary()
		addEphemeralEffects()
		setStatusProperty()
		resourceLocked()
		modifyResourcePercentage()
		stat()
		clearAllPersistentEffects()
		setResourceLocked()
		resetAllResources()
		resourceNames()
		setPersistentEffects()
		inflictedDamageSince()
		consumeResource()
		inflictedHitsSince()
		setResource()
	}
	utf8 = {
		charpattern = "[
[03:24:30.857] [Warn] 	coroutine = {
		wrap()
		resume()
		create()
		isyieldable()
		status()
		running()
		yield()
	}
	jarray()
	type()
	init()
	require()
	table = {
		insert()
		unpack()
		pack()
		concat()
		sort()
		move()
		remove()
	}
	_VERSION = "Lua 5.3"
	update()
	rawequal()
	world = {
		isMonster()
		entityPortrait()
		entityQuery()
		itemDropQuery()
		entityVelocity()
		damageTiles()
		entityHealth()
		debugPoint()
		debugLine()
		entityExists()
		entityUniqueId()
		timeOfDay()
		entityGender()
		entityAggressive()
		magnitude()
		mod()
		platformerPathStart()
		containerItemAt()
		breathable()
		entityHasCountOfItem()
		npcType()
		sendEntityMessage()
		liquidAt()
		liquidAlongLine()
		isTileProtected()
		destroyLiquid()
		spawnLiquid()
		isNpc()
		getProperty()
		gravity()
		entityMoney()
		objectLineQuery()
		spawnMonster()
		lineCollision()
		lineTileCollision()
		rectCollision()
		getObjectParameter()
		entityHandItem()
		setProperty()
		entityHandItemDescriptor()
		time()
		placeMaterial()
		entityName()
		findUniqueEntity()
		threatLevel()
		placeObject()
		spawnTreasure()
		spawnVehicle()
		damageTileArea()
		windLevel()
		tileIsOccupied()
		containerTakeAt()
		loungeableOccupied()
		resolvePolyCollision()
		nearestTo()
		spawnStagehand()
		polyCollision()
		containerOpen()
		pointCollision()
		distance()
		rectTileCollision()
		debugPoly()
		pointTileCollision()
		containerStackItems()
		collisionBlocksAlongLine()
		entityDamageTeam()
		containerAvailable()
		containerItemApply()
		farmableStage()
		containerSize()
		polyContains()
		stagehandType()
		containerItemsCanFit()
		placeMod()
		containerTakeNumItemsAt()
		dayLength()
		callScriptedEntity()
		spawnProjectile()
		containerItemsFitWhere()
		npcLineQuery()
		npcQuery()
		containerTakeAll()
		findPlatformerPath()
		entityDescription()
		xwrap()
		spawnItem()
		containerSwapItemsNoCombine()
		containerAddItems()
		objectSpaces()
		playerQuery()
		containerConsumeAt()
		monsterType()
		entityType()
		containerSwapItems()
		debugText()
		day()
		containerPutItemsAt()
		entitySpecies()
		loungeableQuery()
		lightLevel()
		entityCanDamage()
		underground()
		spawnNpc()
		material()
		monsterQuery()
		objectQuery()
		containerConsume()
		entityLineQuery()
		containerClose()
		entityPosition()
		objectAt()
		containerItems()
	}
	tonumber()
	ic = {
		stripColor()
		giveBack()
		renameThis()
		checkStack()
		sortFunc()
		sort()
		itemAmount()
		amountEquipped()
		sort_relative()
		itemConfig()
		searchBox()
		clientVersion = 1
		quickstack()
		searchButton()
		renameButton()
		lock()
		getQuality()
	}
	assert()
	rawset()
	getmetatable()
	string = {
		rep()
		gmatch()
		reverse()
		pack()
		char()
		sub()
		format()
		byte()
		match()
		dump()
		find()
		unpack()
		packsize()
		upper()
		gsub()
		lower()
		len()
	}
	pcall()
	player = {
		consumeItemWithParameter()
		shipUpgrades()
		altHandItemTags()
		upgradeShip()
		serverUuid()
		gender()
		worldId()
		equippedTech()
		completeMission()
		inventoryTags()
		removeEssentialItem()
		hasItem()
		recordEvent()
		addBookmark()
		lounge()
		cleanupItems()
		consumeItem()
		makeTechUnavailable()
		setUniverseFlag()
		giveBlueprint()
		hasItemWithParameter()
		species()
		playCinematic()
		altHandItem()
		primaryHandItemTags()
		availableTechs()
		enabledTechs()
		enableTech()
		giveItem()
		playTime()
		setIntroComplete()
		essentialItem()
		ownShipWorldId()
		makeTechAvailable()
		warp()
		equipTech()
		startQuest()
		enableMission()
		hasQuest()
		itemsWithTag()
		isLounging()
		primaryHandItem()
		confirm()
		hasCompletedQuest()
		hasCountOfItem()
		equippedItem()
		setEquippedItem()
		radioMessage()
		giveEssentialItem()
		introComplete()
		canStartQuest()
		consumeTaggedItem()
		getItemWithParameter()
	}
	config = {
		getParameter()
	}
	root = {
		questConfig()
		treeFoliageDirectory()
		getConfigurationPath()
		loadVersionedJson()
		materialHealth()
		tenantConfig()
		itemConfig()
		materialMiningSound()
		projectileConfig()
		imageSpaces()
		techType()
		createTreasure()
		materialFootstepSound()
		itemHasTag()
		imageSize()
		treeStemDirectory()
		npcPortrait()
		hasTech()
		getMatchingTenants()
		getConfiguration()
		createItem()
		generateName()
		setConfiguration()
		techConfig()
		materialPath()
		makeCurrentVersionedJson()
		monsterMovementSettings()
		isTreasurePool()
		itemTags()
		itemType()
		evalFunction()
		monsterSkillParameter()
		assetJson()
		setConfigurationPath()
		monsterPortrait()
		recipesForItem()
		createBiome()
		behaviorModule()
		liquidStatusEffects()
		npcConfig()
		nonEmptyRegion()
		evalFunction2()
		projectileGravityMultiplier()
		npcVariant()
	}
	math = {
		tan()
		atan()
		modf()
		exp()
		type()
		acos()
		abs()
		mininteger = -9223372036854775808
		maxinteger = 9223372036854775807
		deg()
		asin()
		randomseed()
		random()
		sqrt()
		huge = inf
		min()
		log()
		pi = 3.1415926535898
		rad()
		max()
		floor()
		ult()
		cos()
		tointeger()
		fmod()
		sin()
		ceil()
	}
	widget = {
		setListSelected()
		setImage()
		setButtonCheckedImages()
		setImageRotation()
		setButtonImage()
		getListSelected()
		itemGridItems()
		addListItem()
		removeListItem()
		setButtonImages()
		blur()
		getData()
		setOptionVisible()
		playSound()
		setChecked()
		getSelectedOption()
		setFontColor()
		setSize()
		setOptionEnabled()
		clearListItems()
		setPosition()
		setProgress()
		getText()
		getSliderValue()
		setButtonEnabled()
		setButtonOverlayImage()
		setData()
		setSelectedOption()
		focus()
		getSize()
		setImageScale()
		setVisible()
		getPosition()
		setText()
		getChecked()
	}
	xpcall()
	setmetatable()
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	status = {
		removeEphemeralEffect()
		resetResource()
		addPersistentEffect()
		addEphemeralEffect()
		resourceMax()
		addPersistentEffects()
		clearEphemeralEffects()
		statPositive()
		modifyResource()
		statusProperty()
		resourcePercentage()
		resource()
		isResource()
		setResourcePercentage()
		getPersistentEffects()
		resourcePositive()
		clearPersistentEffects()
		giveResource()
		overConsumeResource()
		damageTakenSince()
		activeUniqueStatusEffectSummary()
		addEphemeralEffects()
		setStatusProperty()
		resourceLocked()
		modifyResourcePercentage()
		stat()
		clearAllPersistentEffects()
		setResourceLocked()
		resetAllResources()
		resourceNames()
		setPersistentEffects()
		inflictedDamageSince()
		consumeResource()
		inflictedHitsSince()
		setResource()
	}
	utf8 = {
		charpattern = "[
[03:24:39.490] [Info] [IC] [Sort] Time elapsed: 0.011
[03:24:41.271] [Info] [IC] [Sort] Time elapsed: 0.011
[03:24:42.437] [Warn] 	coroutine = {
		wrap()
		resume()
		create()
		isyieldable()
		status()
		running()
		yield()
	}
	jarray()
	type()
	init()
	require()
	table = {
		insert()
		unpack()
		pack()
		concat()
		sort()
		move()
		remove()
	}
	_VERSION = "Lua 5.3"
	update()
	rawequal()
	world = {
		isMonster()
		entityPortrait()
		entityQuery()
		itemDropQuery()
		entityVelocity()
		damageTiles()
		entityHealth()
		debugPoint()
		debugLine()
		entityExists()
		entityUniqueId()
		timeOfDay()
		entityGender()
		entityAggressive()
		magnitude()
		mod()
		platformerPathStart()
		containerItemAt()
		breathable()
		entityHasCountOfItem()
		npcType()
		sendEntityMessage()
		liquidAt()
		liquidAlongLine()
		isTileProtected()
		destroyLiquid()
		spawnLiquid()
		isNpc()
		getProperty()
		gravity()
		entityMoney()
		objectLineQuery()
		spawnMonster()
		lineCollision()
		lineTileCollision()
		rectCollision()
		getObjectParameter()
		entityHandItem()
		setProperty()
		entityHandItemDescriptor()
		time()
		placeMaterial()
		entityName()
		findUniqueEntity()
		threatLevel()
		placeObject()
		spawnTreasure()
		spawnVehicle()
		damageTileArea()
		windLevel()
		tileIsOccupied()
		containerTakeAt()
		loungeableOccupied()
		resolvePolyCollision()
		nearestTo()
		spawnStagehand()
		polyCollision()
		containerOpen()
		pointCollision()
		distance()
		rectTileCollision()
		debugPoly()
		pointTileCollision()
		containerStackItems()
		collisionBlocksAlongLine()
		entityDamageTeam()
		containerAvailable()
		containerItemApply()
		farmableStage()
		containerSize()
		polyContains()
		stagehandType()
		containerItemsCanFit()
		placeMod()
		containerTakeNumItemsAt()
		dayLength()
		callScriptedEntity()
		spawnProjectile()
		containerItemsFitWhere()
		npcLineQuery()
		npcQuery()
		containerTakeAll()
		findPlatformerPath()
		entityDescription()
		xwrap()
		spawnItem()
		containerSwapItemsNoCombine()
		containerAddItems()
		objectSpaces()
		playerQuery()
		containerConsumeAt()
		monsterType()
		entityType()
		containerSwapItems()
		debugText()
		day()
		containerPutItemsAt()
		entitySpecies()
		loungeableQuery()
		lightLevel()
		entityCanDamage()
		underground()
		spawnNpc()
		material()
		monsterQuery()
		objectQuery()
		containerConsume()
		entityLineQuery()
		containerClose()
		entityPosition()
		objectAt()
		containerItems()
	}
	tonumber()
	ic = {
		stripColor()
		giveBack()
		renameThis()
		checkStack()
		sortFunc()
		sort()
		itemAmount()
		amountEquipped()
		sort_relative()
		itemConfig()
		searchBox()
		clientVersion = 1
		quickstack()
		searchButton()
		renameButton()
		lock()
		getQuality()
	}
	assert()
	rawset()
	getmetatable()
	string = {
		rep()
		gmatch()
		reverse()
		pack()
		char()
		sub()
		format()
		byte()
		match()
		dump()
		find()
		unpack()
		packsize()
		upper()
		gsub()
		lower()
		len()
	}
	pcall()
	player = {
		consumeItemWithParameter()
		shipUpgrades()
		altHandItemTags()
		upgradeShip()
		serverUuid()
		gender()
		worldId()
		equippedTech()
		completeMission()
		inventoryTags()
		removeEssentialItem()
		hasItem()
		recordEvent()
		addBookmark()
		lounge()
		cleanupItems()
		consumeItem()
		makeTechUnavailable()
		setUniverseFlag()
		giveBlueprint()
		hasItemWithParameter()
		species()
		playCinematic()
		altHandItem()
		primaryHandItemTags()
		availableTechs()
		enabledTechs()
		enableTech()
		giveItem()
		playTime()
		setIntroComplete()
		essentialItem()
		ownShipWorldId()
		makeTechAvailable()
		warp()
		equipTech()
		startQuest()
		enableMission()
		hasQuest()
		itemsWithTag()
		isLounging()
		primaryHandItem()
		confirm()
		hasCompletedQuest()
		hasCountOfItem()
		equippedItem()
		setEquippedItem()
		radioMessage()
		giveEssentialItem()
		introComplete()
		canStartQuest()
		consumeTaggedItem()
		getItemWithParameter()
	}
	config = {
		getParameter()
	}
	root = {
		questConfig()
		treeFoliageDirectory()
		getConfigurationPath()
		loadVersionedJson()
		materialHealth()
		tenantConfig()
		itemConfig()
		materialMiningSound()
		projectileConfig()
		imageSpaces()
		techType()
		createTreasure()
		materialFootstepSound()
		itemHasTag()
		imageSize()
		treeStemDirectory()
		npcPortrait()
		hasTech()
		getMatchingTenants()
		getConfiguration()
		createItem()
		generateName()
		setConfiguration()
		techConfig()
		materialPath()
		makeCurrentVersionedJson()
		monsterMovementSettings()
		isTreasurePool()
		itemTags()
		itemType()
		evalFunction()
		monsterSkillParameter()
		assetJson()
		setConfigurationPath()
		monsterPortrait()
		recipesForItem()
		createBiome()
		behaviorModule()
		liquidStatusEffects()
		npcConfig()
		nonEmptyRegion()
		evalFunction2()
		projectileGravityMultiplier()
		npcVariant()
	}
	math = {
		tan()
		atan()
		modf()
		exp()
		type()
		acos()
		abs()
		mininteger = -9223372036854775808
		maxinteger = 9223372036854775807
		deg()
		asin()
		randomseed()
		random()
		sqrt()
		huge = inf
		min()
		log()
		pi = 3.1415926535898
		rad()
		max()
		floor()
		ult()
		cos()
		tointeger()
		fmod()
		sin()
		ceil()
	}
	widget = {
		setListSelected()
		setImage()
		setButtonCheckedImages()
		setImageRotation()
		setButtonImage()
		getListSelected()
		itemGridItems()
		addListItem()
		removeListItem()
		setButtonImages()
		blur()
		getData()
		setOptionVisible()
		playSound()
		setChecked()
		getSelectedOption()
		setFontColor()
		setSize()
		setOptionEnabled()
		clearListItems()
		setPosition()
		setProgress()
		getText()
		getSliderValue()
		setButtonEnabled()
		setButtonOverlayImage()
		setData()
		setSelectedOption()
		focus()
		getSize()
		setImageScale()
		setVisible()
		getPosition()
		setText()
		getChecked()
	}
	xpcall()
	setmetatable()
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	status = {
		removeEphemeralEffect()
		resetResource()
		addPersistentEffect()
		addEphemeralEffect()
		resourceMax()
		addPersistentEffects()
		clearEphemeralEffects()
		statPositive()
		modifyResource()
		statusProperty()
		resourcePercentage()
		resource()
		isResource()
		setResourcePercentage()
		getPersistentEffects()
		resourcePositive()
		clearPersistentEffects()
		giveResource()
		overConsumeResource()
		damageTakenSince()
		activeUniqueStatusEffectSummary()
		addEphemeralEffects()
		setStatusProperty()
		resourceLocked()
		modifyResourcePercentage()
		stat()
		clearAllPersistentEffects()
		setResourceLocked()
		resetAllResources()
		resourceNames()
		setPersistentEffects()
		inflictedDamageSince()
		consumeResource()
		inflictedHitsSince()
		setResource()
	}
	utf8 = {
		charpattern = "[
[03:24:43.716] [Warn] 	coroutine = {
		wrap()
		resume()
		create()
		isyieldable()
		status()
		running()
		yield()
	}
	jarray()
	type()
	init()
	require()
	table = {
		insert()
		unpack()
		pack()
		concat()
		sort()
		move()
		remove()
	}
	_VERSION = "Lua 5.3"
	update()
	rawequal()
	world = {
		isMonster()
		entityPortrait()
		entityQuery()
		itemDropQuery()
		entityVelocity()
		damageTiles()
		entityHealth()
		debugPoint()
		debugLine()
		entityExists()
		entityUniqueId()
		timeOfDay()
		entityGender()
		entityAggressive()
		magnitude()
		mod()
		platformerPathStart()
		containerItemAt()
		breathable()
		entityHasCountOfItem()
		npcType()
		sendEntityMessage()
		liquidAt()
		liquidAlongLine()
		isTileProtected()
		destroyLiquid()
		spawnLiquid()
		isNpc()
		getProperty()
		gravity()
		entityMoney()
		objectLineQuery()
		spawnMonster()
		lineCollision()
		lineTileCollision()
		rectCollision()
		getObjectParameter()
		entityHandItem()
		setProperty()
		entityHandItemDescriptor()
		time()
		placeMaterial()
		entityName()
		findUniqueEntity()
		threatLevel()
		placeObject()
		spawnTreasure()
		spawnVehicle()
		damageTileArea()
		windLevel()
		tileIsOccupied()
		containerTakeAt()
		loungeableOccupied()
		resolvePolyCollision()
		nearestTo()
		spawnStagehand()
		polyCollision()
		containerOpen()
		pointCollision()
		distance()
		rectTileCollision()
		debugPoly()
		pointTileCollision()
		containerStackItems()
		collisionBlocksAlongLine()
		entityDamageTeam()
		containerAvailable()
		containerItemApply()
		farmableStage()
		containerSize()
		polyContains()
		stagehandType()
		containerItemsCanFit()
		placeMod()
		containerTakeNumItemsAt()
		dayLength()
		callScriptedEntity()
		spawnProjectile()
		containerItemsFitWhere()
		npcLineQuery()
		npcQuery()
		containerTakeAll()
		findPlatformerPath()
		entityDescription()
		xwrap()
		spawnItem()
		containerSwapItemsNoCombine()
		containerAddItems()
		objectSpaces()
		playerQuery()
		containerConsumeAt()
		monsterType()
		entityType()
		containerSwapItems()
		debugText()
		day()
		containerPutItemsAt()
		entitySpecies()
		loungeableQuery()
		lightLevel()
		entityCanDamage()
		underground()
		spawnNpc()
		material()
		monsterQuery()
		objectQuery()
		containerConsume()
		entityLineQuery()
		containerClose()
		entityPosition()
		objectAt()
		containerItems()
	}
	tonumber()
	ic = {
		stripColor()
		giveBack()
		renameThis()
		checkStack()
		sortFunc()
		sort()
		itemAmount()
		amountEquipped()
		sort_relative()
		itemConfig()
		searchBox()
		clientVersion = 1
		quickstack()
		searchButton()
		renameButton()
		lock()
		getQuality()
	}
	assert()
	rawset()
	getmetatable()
	string = {
		rep()
		gmatch()
		reverse()
		pack()
		char()
		sub()
		format()
		byte()
		match()
		dump()
		find()
		unpack()
		packsize()
		upper()
		gsub()
		lower()
		len()
	}
	pcall()
	player = {
		consumeItemWithParameter()
		shipUpgrades()
		altHandItemTags()
		upgradeShip()
		serverUuid()
		gender()
		worldId()
		equippedTech()
		completeMission()
		inventoryTags()
		removeEssentialItem()
		hasItem()
		recordEvent()
		addBookmark()
		lounge()
		cleanupItems()
		consumeItem()
		makeTechUnavailable()
		setUniverseFlag()
		giveBlueprint()
		hasItemWithParameter()
		species()
		playCinematic()
		altHandItem()
		primaryHandItemTags()
		availableTechs()
		enabledTechs()
		enableTech()
		giveItem()
		playTime()
		setIntroComplete()
		essentialItem()
		ownShipWorldId()
		makeTechAvailable()
		warp()
		equipTech()
		startQuest()
		enableMission()
		hasQuest()
		itemsWithTag()
		isLounging()
		primaryHandItem()
		confirm()
		hasCompletedQuest()
		hasCountOfItem()
		equippedItem()
		setEquippedItem()
		radioMessage()
		giveEssentialItem()
		introComplete()
		canStartQuest()
		consumeTaggedItem()
		getItemWithParameter()
	}
	config = {
		getParameter()
	}
	root = {
		questConfig()
		treeFoliageDirectory()
		getConfigurationPath()
		loadVersionedJson()
		materialHealth()
		tenantConfig()
		itemConfig()
		materialMiningSound()
		projectileConfig()
		imageSpaces()
		techType()
		createTreasure()
		materialFootstepSound()
		itemHasTag()
		imageSize()
		treeStemDirectory()
		npcPortrait()
		hasTech()
		getMatchingTenants()
		getConfiguration()
		createItem()
		generateName()
		setConfiguration()
		techConfig()
		materialPath()
		makeCurrentVersionedJson()
		monsterMovementSettings()
		isTreasurePool()
		itemTags()
		itemType()
		evalFunction()
		monsterSkillParameter()
		assetJson()
		setConfigurationPath()
		monsterPortrait()
		recipesForItem()
		createBiome()
		behaviorModule()
		liquidStatusEffects()
		npcConfig()
		nonEmptyRegion()
		evalFunction2()
		projectileGravityMultiplier()
		npcVariant()
	}
	math = {
		tan()
		atan()
		modf()
		exp()
		type()
		acos()
		abs()
		mininteger = -9223372036854775808
		maxinteger = 9223372036854775807
		deg()
		asin()
		randomseed()
		random()
		sqrt()
		huge = inf
		min()
		log()
		pi = 3.1415926535898
		rad()
		max()
		floor()
		ult()
		cos()
		tointeger()
		fmod()
		sin()
		ceil()
	}
	widget = {
		setListSelected()
		setImage()
		setButtonCheckedImages()
		setImageRotation()
		setButtonImage()
		getListSelected()
		itemGridItems()
		addListItem()
		removeListItem()
		setButtonImages()
		blur()
		getData()
		setOptionVisible()
		playSound()
		setChecked()
		getSelectedOption()
		setFontColor()
		setSize()
		setOptionEnabled()
		clearListItems()
		setPosition()
		setProgress()
		getText()
		getSliderValue()
		setButtonEnabled()
		setButtonOverlayImage()
		setData()
		setSelectedOption()
		focus()
		getSize()
		setImageScale()
		setVisible()
		getPosition()
		setText()
		getChecked()
	}
	xpcall()
	setmetatable()
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	status = {
		removeEphemeralEffect()
		resetResource()
		addPersistentEffect()
		addEphemeralEffect()
		resourceMax()
		addPersistentEffects()
		clearEphemeralEffects()
		statPositive()
		modifyResource()
		statusProperty()
		resourcePercentage()
		resource()
		isResource()
		setResourcePercentage()
		getPersistentEffects()
		resourcePositive()
		clearPersistentEffects()
		giveResource()
		overConsumeResource()
		damageTakenSince()
		activeUniqueStatusEffectSummary()
		addEphemeralEffects()
		setStatusProperty()
		resourceLocked()
		modifyResourcePercentage()
		stat()
		clearAllPersistentEffects()
		setResourceLocked()
		resetAllResources()
		resourceNames()
		setPersistentEffects()
		inflictedDamageSince()
		consumeResource()
		inflictedHitsSince()
		setResource()
	}
	utf8 = {
		charpattern = "[
[03:24:59.273] [Warn] 	coroutine = {
		wrap()
		resume()
		create()
		isyieldable()
		status()
		running()
		yield()
	}
	jarray()
	type()
	init()
	require()
	table = {
		insert()
		unpack()
		pack()
		concat()
		sort()
		move()
		remove()
	}
	_VERSION = "Lua 5.3"
	update()
	rawequal()
	world = {
		isMonster()
		entityPortrait()
		entityQuery()
		itemDropQuery()
		entityVelocity()
		damageTiles()
		entityHealth()
		debugPoint()
		debugLine()
		entityExists()
		entityUniqueId()
		timeOfDay()
		entityGender()
		entityAggressive()
		magnitude()
		mod()
		platformerPathStart()
		containerItemAt()
		breathable()
		entityHasCountOfItem()
		npcType()
		sendEntityMessage()
		liquidAt()
		liquidAlongLine()
		isTileProtected()
		destroyLiquid()
		spawnLiquid()
		isNpc()
		getProperty()
		gravity()
		entityMoney()
		objectLineQuery()
		spawnMonster()
		lineCollision()
		lineTileCollision()
		rectCollision()
		getObjectParameter()
		entityHandItem()
		setProperty()
		entityHandItemDescriptor()
		time()
		placeMaterial()
		entityName()
		findUniqueEntity()
		threatLevel()
		placeObject()
		spawnTreasure()
		spawnVehicle()
		damageTileArea()
		windLevel()
		tileIsOccupied()
		containerTakeAt()
		loungeableOccupied()
		resolvePolyCollision()
		nearestTo()
		spawnStagehand()
		polyCollision()
		containerOpen()
		pointCollision()
		distance()
		rectTileCollision()
		debugPoly()
		pointTileCollision()
		containerStackItems()
		collisionBlocksAlongLine()
		entityDamageTeam()
		containerAvailable()
		containerItemApply()
		farmableStage()
		containerSize()
		polyContains()
		stagehandType()
		containerItemsCanFit()
		placeMod()
		containerTakeNumItemsAt()
		dayLength()
		callScriptedEntity()
		spawnProjectile()
		containerItemsFitWhere()
		npcLineQuery()
		npcQuery()
		containerTakeAll()
		findPlatformerPath()
		entityDescription()
		xwrap()
		spawnItem()
		containerSwapItemsNoCombine()
		containerAddItems()
		objectSpaces()
		playerQuery()
		containerConsumeAt()
		monsterType()
		entityType()
		containerSwapItems()
		debugText()
		day()
		containerPutItemsAt()
		entitySpecies()
		loungeableQuery()
		lightLevel()
		entityCanDamage()
		underground()
		spawnNpc()
		material()
		monsterQuery()
		objectQuery()
		containerConsume()
		entityLineQuery()
		containerClose()
		entityPosition()
		objectAt()
		containerItems()
	}
	tonumber()
	ic = {
		stripColor()
		giveBack()
		renameThis()
		checkStack()
		sortFunc()
		sort()
		itemAmount()
		amountEquipped()
		sort_relative()
		itemConfig()
		searchBox()
		clientVersion = 1
		quickstack()
		searchButton()
		renameButton()
		lock()
		getQuality()
	}
	assert()
	rawset()
	getmetatable()
	string = {
		rep()
		gmatch()
		reverse()
		pack()
		char()
		sub()
		format()
		byte()
		match()
		dump()
		find()
		unpack()
		packsize()
		upper()
		gsub()
		lower()
		len()
	}
	pcall()
	player = {
		consumeItemWithParameter()
		shipUpgrades()
		altHandItemTags()
		upgradeShip()
		serverUuid()
		gender()
		worldId()
		equippedTech()
		completeMission()
		inventoryTags()
		removeEssentialItem()
		hasItem()
		recordEvent()
		addBookmark()
		lounge()
		cleanupItems()
		consumeItem()
		makeTechUnavailable()
		setUniverseFlag()
		giveBlueprint()
		hasItemWithParameter()
		species()
		playCinematic()
		altHandItem()
		primaryHandItemTags()
		availableTechs()
		enabledTechs()
		enableTech()
		giveItem()
		playTime()
		setIntroComplete()
		essentialItem()
		ownShipWorldId()
		makeTechAvailable()
		warp()
		equipTech()
		startQuest()
		enableMission()
		hasQuest()
		itemsWithTag()
		isLounging()
		primaryHandItem()
		confirm()
		hasCompletedQuest()
		hasCountOfItem()
		equippedItem()
		setEquippedItem()
		radioMessage()
		giveEssentialItem()
		introComplete()
		canStartQuest()
		consumeTaggedItem()
		getItemWithParameter()
	}
	config = {
		getParameter()
	}
	root = {
		questConfig()
		treeFoliageDirectory()
		getConfigurationPath()
		loadVersionedJson()
		materialHealth()
		tenantConfig()
		itemConfig()
		materialMiningSound()
		projectileConfig()
		imageSpaces()
		techType()
		createTreasure()
		materialFootstepSound()
		itemHasTag()
		imageSize()
		treeStemDirectory()
		npcPortrait()
		hasTech()
		getMatchingTenants()
		getConfiguration()
		createItem()
		generateName()
		setConfiguration()
		techConfig()
		materialPath()
		makeCurrentVersionedJson()
		monsterMovementSettings()
		isTreasurePool()
		itemTags()
		itemType()
		evalFunction()
		monsterSkillParameter()
		assetJson()
		setConfigurationPath()
		monsterPortrait()
		recipesForItem()
		createBiome()
		behaviorModule()
		liquidStatusEffects()
		npcConfig()
		nonEmptyRegion()
		evalFunction2()
		projectileGravityMultiplier()
		npcVariant()
	}
	math = {
		tan()
		atan()
		modf()
		exp()
		type()
		acos()
		abs()
		mininteger = -9223372036854775808
		maxinteger = 9223372036854775807
		deg()
		asin()
		randomseed()
		random()
		sqrt()
		huge = inf
		min()
		log()
		pi = 3.1415926535898
		rad()
		max()
		floor()
		ult()
		cos()
		tointeger()
		fmod()
		sin()
		ceil()
	}
	widget = {
		setListSelected()
		setImage()
		setButtonCheckedImages()
		setImageRotation()
		setButtonImage()
		getListSelected()
		itemGridItems()
		addListItem()
		removeListItem()
		setButtonImages()
		blur()
		getData()
		setOptionVisible()
		playSound()
		setChecked()
		getSelectedOption()
		setFontColor()
		setSize()
		setOptionEnabled()
		clearListItems()
		setPosition()
		setProgress()
		getText()
		getSliderValue()
		setButtonEnabled()
		setButtonOverlayImage()
		setData()
		setSelectedOption()
		focus()
		getSize()
		setImageScale()
		setVisible()
		getPosition()
		setText()
		getChecked()
	}
	xpcall()
	setmetatable()
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	status = {
		removeEphemeralEffect()
		resetResource()
		addPersistentEffect()
		addEphemeralEffect()
		resourceMax()
		addPersistentEffects()
		clearEphemeralEffects()
		statPositive()
		modifyResource()
		statusProperty()
		resourcePercentage()
		resource()
		isResource()
		setResourcePercentage()
		getPersistentEffects()
		resourcePositive()
		clearPersistentEffects()
		giveResource()
		overConsumeResource()
		damageTakenSince()
		activeUniqueStatusEffectSummary()
		addEphemeralEffects()
		setStatusProperty()
		resourceLocked()
		modifyResourcePercentage()
		stat()
		clearAllPersistentEffects()
		setResourceLocked()
		resetAllResources()
		resourceNames()
		setPersistentEffects()
		inflictedDamageSince()
		consumeResource()
		inflictedHitsSince()
		setResource()
	}
	utf8 = {
		charpattern = "[
[03:25:54.071] [Warn] 	coroutine = {
		wrap()
		resume()
		create()
		isyieldable()
		status()
		running()
		yield()
	}
	jarray()
	type()
	init()
	require()
	table = {
		insert()
		unpack()
		pack()
		concat()
		sort()
		move()
		remove()
	}
	_VERSION = "Lua 5.3"
	update()
	rawequal()
	world = {
		isMonster()
		entityPortrait()
		entityQuery()
		itemDropQuery()
		entityVelocity()
		damageTiles()
		entityHealth()
		debugPoint()
		debugLine()
		entityExists()
		entityUniqueId()
		timeOfDay()
		entityGender()
		entityAggressive()
		magnitude()
		mod()
		platformerPathStart()
		containerItemAt()
		breathable()
		entityHasCountOfItem()
		npcType()
		sendEntityMessage()
		liquidAt()
		liquidAlongLine()
		isTileProtected()
		destroyLiquid()
		spawnLiquid()
		isNpc()
		getProperty()
		gravity()
		entityMoney()
		objectLineQuery()
		spawnMonster()
		lineCollision()
		lineTileCollision()
		rectCollision()
		getObjectParameter()
		entityHandItem()
		setProperty()
		entityHandItemDescriptor()
		time()
		placeMaterial()
		entityName()
		findUniqueEntity()
		threatLevel()
		placeObject()
		spawnTreasure()
		spawnVehicle()
		damageTileArea()
		windLevel()
		tileIsOccupied()
		containerTakeAt()
		loungeableOccupied()
		resolvePolyCollision()
		nearestTo()
		spawnStagehand()
		polyCollision()
		containerOpen()
		pointCollision()
		distance()
		rectTileCollision()
		debugPoly()
		pointTileCollision()
		containerStackItems()
		collisionBlocksAlongLine()
		entityDamageTeam()
		containerAvailable()
		containerItemApply()
		farmableStage()
		containerSize()
		polyContains()
		stagehandType()
		containerItemsCanFit()
		placeMod()
		containerTakeNumItemsAt()
		dayLength()
		callScriptedEntity()
		spawnProjectile()
		containerItemsFitWhere()
		npcLineQuery()
		npcQuery()
		containerTakeAll()
		findPlatformerPath()
		entityDescription()
		xwrap()
		spawnItem()
		containerSwapItemsNoCombine()
		containerAddItems()
		objectSpaces()
		playerQuery()
		containerConsumeAt()
		monsterType()
		entityType()
		containerSwapItems()
		debugText()
		day()
		containerPutItemsAt()
		entitySpecies()
		loungeableQuery()
		lightLevel()
		entityCanDamage()
		underground()
		spawnNpc()
		material()
		monsterQuery()
		objectQuery()
		containerConsume()
		entityLineQuery()
		containerClose()
		entityPosition()
		objectAt()
		containerItems()
	}
	tonumber()
	ic = {
		stripColor()
		giveBack()
		renameThis()
		checkStack()
		sortFunc()
		sort()
		itemAmount()
		amountEquipped()
		sort_relative()
		itemConfig()
		searchBox()
		clientVersion = 1
		quickstack()
		searchButton()
		renameButton()
		lock()
		getQuality()
	}
	assert()
	rawset()
	getmetatable()
	string = {
		rep()
		gmatch()
		reverse()
		pack()
		char()
		sub()
		format()
		byte()
		match()
		dump()
		find()
		unpack()
		packsize()
		upper()
		gsub()
		lower()
		len()
	}
	pcall()
	player = {
		consumeItemWithParameter()
		shipUpgrades()
		altHandItemTags()
		upgradeShip()
		serverUuid()
		gender()
		worldId()
		equippedTech()
		completeMission()
		inventoryTags()
		removeEssentialItem()
		hasItem()
		recordEvent()
		addBookmark()
		lounge()
		cleanupItems()
		consumeItem()
		makeTechUnavailable()
		setUniverseFlag()
		giveBlueprint()
		hasItemWithParameter()
		species()
		playCinematic()
		altHandItem()
		primaryHandItemTags()
		availableTechs()
		enabledTechs()
		enableTech()
		giveItem()
		playTime()
		setIntroComplete()
		essentialItem()
		ownShipWorldId()
		makeTechAvailable()
		warp()
		equipTech()
		startQuest()
		enableMission()
		hasQuest()
		itemsWithTag()
		isLounging()
		primaryHandItem()
		confirm()
		hasCompletedQuest()
		hasCountOfItem()
		equippedItem()
		setEquippedItem()
		radioMessage()
		giveEssentialItem()
		introComplete()
		canStartQuest()
		consumeTaggedItem()
		getItemWithParameter()
	}
	config = {
		getParameter()
	}
	root = {
		questConfig()
		treeFoliageDirectory()
		getConfigurationPath()
		loadVersionedJson()
		materialHealth()
		tenantConfig()
		itemConfig()
		materialMiningSound()
		projectileConfig()
		imageSpaces()
		techType()
		createTreasure()
		materialFootstepSound()
		itemHasTag()
		imageSize()
		treeStemDirectory()
		npcPortrait()
		hasTech()
		getMatchingTenants()
		getConfiguration()
		createItem()
		generateName()
		setConfiguration()
		techConfig()
		materialPath()
		makeCurrentVersionedJson()
		monsterMovementSettings()
		isTreasurePool()
		itemTags()
		itemType()
		evalFunction()
		monsterSkillParameter()
		assetJson()
		setConfigurationPath()
		monsterPortrait()
		recipesForItem()
		createBiome()
		behaviorModule()
		liquidStatusEffects()
		npcConfig()
		nonEmptyRegion()
		evalFunction2()
		projectileGravityMultiplier()
		npcVariant()
	}
	math = {
		tan()
		atan()
		modf()
		exp()
		type()
		acos()
		abs()
		mininteger = -9223372036854775808
		maxinteger = 9223372036854775807
		deg()
		asin()
		randomseed()
		random()
		sqrt()
		huge = inf
		min()
		log()
		pi = 3.1415926535898
		rad()
		max()
		floor()
		ult()
		cos()
		tointeger()
		fmod()
		sin()
		ceil()
	}
	widget = {
		setListSelected()
		setImage()
		setButtonCheckedImages()
		setImageRotation()
		setButtonImage()
		getListSelected()
		itemGridItems()
		addListItem()
		removeListItem()
		setButtonImages()
		blur()
		getData()
		setOptionVisible()
		playSound()
		setChecked()
		getSelectedOption()
		setFontColor()
		setSize()
		setOptionEnabled()
		clearListItems()
		setPosition()
		setProgress()
		getText()
		getSliderValue()
		setButtonEnabled()
		setButtonOverlayImage()
		setData()
		setSelectedOption()
		focus()
		getSize()
		setImageScale()
		setVisible()
		getPosition()
		setText()
		getChecked()
	}
	xpcall()
	setmetatable()
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	status = {
		removeEphemeralEffect()
		resetResource()
		addPersistentEffect()
		addEphemeralEffect()
		resourceMax()
		addPersistentEffects()
		clearEphemeralEffects()
		statPositive()
		modifyResource()
		statusProperty()
		resourcePercentage()
		resource()
		isResource()
		setResourcePercentage()
		getPersistentEffects()
		resourcePositive()
		clearPersistentEffects()
		giveResource()
		overConsumeResource()
		damageTakenSince()
		activeUniqueStatusEffectSummary()
		addEphemeralEffects()
		setStatusProperty()
		resourceLocked()
		modifyResourcePercentage()
		stat()
		clearAllPersistentEffects()
		setResourceLocked()
		resetAllResources()
		resourceNames()
		setPersistentEffects()
		inflictedDamageSince()
		consumeResource()
		inflictedHitsSince()
		setResource()
	}
	utf8 = {
		charpattern = "[
[03:25:55.630] [Warn] 	coroutine = {
		wrap()
		resume()
		create()
		isyieldable()
		status()
		running()
		yield()
	}
	jarray()
	type()
	init()
	require()
	table = {
		insert()
		unpack()
		pack()
		concat()
		sort()
		move()
		remove()
	}
	_VERSION = "Lua 5.3"
	update()
	rawequal()
	world = {
		isMonster()
		entityPortrait()
		entityQuery()
		itemDropQuery()
		entityVelocity()
		damageTiles()
		entityHealth()
		debugPoint()
		debugLine()
		entityExists()
		entityUniqueId()
		timeOfDay()
		entityGender()
		entityAggressive()
		magnitude()
		mod()
		platformerPathStart()
		containerItemAt()
		breathable()
		entityHasCountOfItem()
		npcType()
		sendEntityMessage()
		liquidAt()
		liquidAlongLine()
		isTileProtected()
		destroyLiquid()
		spawnLiquid()
		isNpc()
		getProperty()
		gravity()
		entityMoney()
		objectLineQuery()
		spawnMonster()
		lineCollision()
		lineTileCollision()
		rectCollision()
		getObjectParameter()
		entityHandItem()
		setProperty()
		entityHandItemDescriptor()
		time()
		placeMaterial()
		entityName()
		findUniqueEntity()
		threatLevel()
		placeObject()
		spawnTreasure()
		spawnVehicle()
		damageTileArea()
		windLevel()
		tileIsOccupied()
		containerTakeAt()
		loungeableOccupied()
		resolvePolyCollision()
		nearestTo()
		spawnStagehand()
		polyCollision()
		containerOpen()
		pointCollision()
		distance()
		rectTileCollision()
		debugPoly()
		pointTileCollision()
		containerStackItems()
		collisionBlocksAlongLine()
		entityDamageTeam()
		containerAvailable()
		containerItemApply()
		farmableStage()
		containerSize()
		polyContains()
		stagehandType()
		containerItemsCanFit()
		placeMod()
		containerTakeNumItemsAt()
		dayLength()
		callScriptedEntity()
		spawnProjectile()
		containerItemsFitWhere()
		npcLineQuery()
		npcQuery()
		containerTakeAll()
		findPlatformerPath()
		entityDescription()
		xwrap()
		spawnItem()
		containerSwapItemsNoCombine()
		containerAddItems()
		objectSpaces()
		playerQuery()
		containerConsumeAt()
		monsterType()
		entityType()
		containerSwapItems()
		debugText()
		day()
		containerPutItemsAt()
		entitySpecies()
		loungeableQuery()
		lightLevel()
		entityCanDamage()
		underground()
		spawnNpc()
		material()
		monsterQuery()
		objectQuery()
		containerConsume()
		entityLineQuery()
		containerClose()
		entityPosition()
		objectAt()
		containerItems()
	}
	tonumber()
	ic = {
		stripColor()
		giveBack()
		renameThis()
		checkStack()
		sortFunc()
		sort()
		itemAmount()
		amountEquipped()
		sort_relative()
		itemConfig()
		searchBox()
		clientVersion = 1
		quickstack()
		searchButton()
		renameButton()
		lock()
		getQuality()
	}
	assert()
	rawset()
	getmetatable()
	string = {
		rep()
		gmatch()
		reverse()
		pack()
		char()
		sub()
		format()
		byte()
		match()
		dump()
		find()
		unpack()
		packsize()
		upper()
		gsub()
		lower()
		len()
	}
	pcall()
	player = {
		consumeItemWithParameter()
		shipUpgrades()
		altHandItemTags()
		upgradeShip()
		serverUuid()
		gender()
		worldId()
		equippedTech()
		completeMission()
		inventoryTags()
		removeEssentialItem()
		hasItem()
		recordEvent()
		addBookmark()
		lounge()
		cleanupItems()
		consumeItem()
		makeTechUnavailable()
		setUniverseFlag()
		giveBlueprint()
		hasItemWithParameter()
		species()
		playCinematic()
		altHandItem()
		primaryHandItemTags()
		availableTechs()
		enabledTechs()
		enableTech()
		giveItem()
		playTime()
		setIntroComplete()
		essentialItem()
		ownShipWorldId()
		makeTechAvailable()
		warp()
		equipTech()
		startQuest()
		enableMission()
		hasQuest()
		itemsWithTag()
		isLounging()
		primaryHandItem()
		confirm()
		hasCompletedQuest()
		hasCountOfItem()
		equippedItem()
		setEquippedItem()
		radioMessage()
		giveEssentialItem()
		introComplete()
		canStartQuest()
		consumeTaggedItem()
		getItemWithParameter()
	}
	config = {
		getParameter()
	}
	root = {
		questConfig()
		treeFoliageDirectory()
		getConfigurationPath()
		loadVersionedJson()
		materialHealth()
		tenantConfig()
		itemConfig()
		materialMiningSound()
		projectileConfig()
		imageSpaces()
		techType()
		createTreasure()
		materialFootstepSound()
		itemHasTag()
		imageSize()
		treeStemDirectory()
		npcPortrait()
		hasTech()
		getMatchingTenants()
		getConfiguration()
		createItem()
		generateName()
		setConfiguration()
		techConfig()
		materialPath()
		makeCurrentVersionedJson()
		monsterMovementSettings()
		isTreasurePool()
		itemTags()
		itemType()
		evalFunction()
		monsterSkillParameter()
		assetJson()
		setConfigurationPath()
		monsterPortrait()
		recipesForItem()
		createBiome()
		behaviorModule()
		liquidStatusEffects()
		npcConfig()
		nonEmptyRegion()
		evalFunction2()
		projectileGravityMultiplier()
		npcVariant()
	}
	math = {
		tan()
		atan()
		modf()
		exp()
		type()
		acos()
		abs()
		mininteger = -9223372036854775808
		maxinteger = 9223372036854775807
		deg()
		asin()
		randomseed()
		random()
		sqrt()
		huge = inf
		min()
		log()
		pi = 3.1415926535898
		rad()
		max()
		floor()
		ult()
		cos()
		tointeger()
		fmod()
		sin()
		ceil()
	}
	widget = {
		setListSelected()
		setImage()
		setButtonCheckedImages()
		setImageRotation()
		setButtonImage()
		getListSelected()
		itemGridItems()
		addListItem()
		removeListItem()
		setButtonImages()
		blur()
		getData()
		setOptionVisible()
		playSound()
		setChecked()
		getSelectedOption()
		setFontColor()
		setSize()
		setOptionEnabled()
		clearListItems()
		setPosition()
		setProgress()
		getText()
		getSliderValue()
		setButtonEnabled()
		setButtonOverlayImage()
		setData()
		setSelectedOption()
		focus()
		getSize()
		setImageScale()
		setVisible()
		getPosition()
		setText()
		getChecked()
	}
	xpcall()
	setmetatable()
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	status = {
		removeEphemeralEffect()
		resetResource()
		addPersistentEffect()
		addEphemeralEffect()
		resourceMax()
		addPersistentEffects()
		clearEphemeralEffects()
		statPositive()
		modifyResource()
		statusProperty()
		resourcePercentage()
		resource()
		isResource()
		setResourcePercentage()
		getPersistentEffects()
		resourcePositive()
		clearPersistentEffects()
		giveResource()
		overConsumeResource()
		damageTakenSince()
		activeUniqueStatusEffectSummary()
		addEphemeralEffects()
		setStatusProperty()
		resourceLocked()
		modifyResourcePercentage()
		stat()
		clearAllPersistentEffects()
		setResourceLocked()
		resetAllResources()
		resourceNames()
		setPersistentEffects()
		inflictedDamageSince()
		consumeResource()
		inflictedHitsSince()
		setResource()
	}
	utf8 = {
		charpattern = "[
[03:25:57.047] [Warn] 	coroutine = {
		wrap()
		resume()
		create()
		isyieldable()
		status()
		running()
		yield()
	}
	jarray()
	type()
	init()
	require()
	table = {
		insert()
		unpack()
		pack()
		concat()
		sort()
		move()
		remove()
	}
	_VERSION = "Lua 5.3"
	update()
	rawequal()
	world = {
		isMonster()
		entityPortrait()
		entityQuery()
		itemDropQuery()
		entityVelocity()
		damageTiles()
		entityHealth()
		debugPoint()
		debugLine()
		entityExists()
		entityUniqueId()
		timeOfDay()
		entityGender()
		entityAggressive()
		magnitude()
		mod()
		platformerPathStart()
		containerItemAt()
		breathable()
		entityHasCountOfItem()
		npcType()
		sendEntityMessage()
		liquidAt()
		liquidAlongLine()
		isTileProtected()
		destroyLiquid()
		spawnLiquid()
		isNpc()
		getProperty()
		gravity()
		entityMoney()
		objectLineQuery()
		spawnMonster()
		lineCollision()
		lineTileCollision()
		rectCollision()
		getObjectParameter()
		entityHandItem()
		setProperty()
		entityHandItemDescriptor()
		time()
		placeMaterial()
		entityName()
		findUniqueEntity()
		threatLevel()
		placeObject()
		spawnTreasure()
		spawnVehicle()
		damageTileArea()
		windLevel()
		tileIsOccupied()
		containerTakeAt()
		loungeableOccupied()
		resolvePolyCollision()
		nearestTo()
		spawnStagehand()
		polyCollision()
		containerOpen()
		pointCollision()
		distance()
		rectTileCollision()
		debugPoly()
		pointTileCollision()
		containerStackItems()
		collisionBlocksAlongLine()
		entityDamageTeam()
		containerAvailable()
		containerItemApply()
		farmableStage()
		containerSize()
		polyContains()
		stagehandType()
		containerItemsCanFit()
		placeMod()
		containerTakeNumItemsAt()
		dayLength()
		callScriptedEntity()
		spawnProjectile()
		containerItemsFitWhere()
		npcLineQuery()
		npcQuery()
		containerTakeAll()
		findPlatformerPath()
		entityDescription()
		xwrap()
		spawnItem()
		containerSwapItemsNoCombine()
		containerAddItems()
		objectSpaces()
		playerQuery()
		containerConsumeAt()
		monsterType()
		entityType()
		containerSwapItems()
		debugText()
		day()
		containerPutItemsAt()
		entitySpecies()
		loungeableQuery()
		lightLevel()
		entityCanDamage()
		underground()
		spawnNpc()
		material()
		monsterQuery()
		objectQuery()
		containerConsume()
		entityLineQuery()
		containerClose()
		entityPosition()
		objectAt()
		containerItems()
	}
	tonumber()
	ic = {
		stripColor()
		giveBack()
		renameThis()
		checkStack()
		sortFunc()
		sort()
		itemAmount()
		amountEquipped()
		sort_relative()
		itemConfig()
		searchBox()
		clientVersion = 1
		quickstack()
		searchButton()
		renameButton()
		lock()
		getQuality()
	}
	assert()
	rawset()
	getmetatable()
	string = {
		rep()
		gmatch()
		reverse()
		pack()
		char()
		sub()
		format()
		byte()
		match()
		dump()
		find()
		unpack()
		packsize()
		upper()
		gsub()
		lower()
		len()
	}
	pcall()
	player = {
		consumeItemWithParameter()
		shipUpgrades()
		altHandItemTags()
		upgradeShip()
		serverUuid()
		gender()
		worldId()
		equippedTech()
		completeMission()
		inventoryTags()
		removeEssentialItem()
		hasItem()
		recordEvent()
		addBookmark()
		lounge()
		cleanupItems()
		consumeItem()
		makeTechUnavailable()
		setUniverseFlag()
		giveBlueprint()
		hasItemWithParameter()
		species()
		playCinematic()
		altHandItem()
		primaryHandItemTags()
		availableTechs()
		enabledTechs()
		enableTech()
		giveItem()
		playTime()
		setIntroComplete()
		essentialItem()
		ownShipWorldId()
		makeTechAvailable()
		warp()
		equipTech()
		startQuest()
		enableMission()
		hasQuest()
		itemsWithTag()
		isLounging()
		primaryHandItem()
		confirm()
		hasCompletedQuest()
		hasCountOfItem()
		equippedItem()
		setEquippedItem()
		radioMessage()
		giveEssentialItem()
		introComplete()
		canStartQuest()
		consumeTaggedItem()
		getItemWithParameter()
	}
	config = {
		getParameter()
	}
	root = {
		questConfig()
		treeFoliageDirectory()
		getConfigurationPath()
		loadVersionedJson()
		materialHealth()
		tenantConfig()
		itemConfig()
		materialMiningSound()
		projectileConfig()
		imageSpaces()
		techType()
		createTreasure()
		materialFootstepSound()
		itemHasTag()
		imageSize()
		treeStemDirectory()
		npcPortrait()
		hasTech()
		getMatchingTenants()
		getConfiguration()
		createItem()
		generateName()
		setConfiguration()
		techConfig()
		materialPath()
		makeCurrentVersionedJson()
		monsterMovementSettings()
		isTreasurePool()
		itemTags()
		itemType()
		evalFunction()
		monsterSkillParameter()
		assetJson()
		setConfigurationPath()
		monsterPortrait()
		recipesForItem()
		createBiome()
		behaviorModule()
		liquidStatusEffects()
		npcConfig()
		nonEmptyRegion()
		evalFunction2()
		projectileGravityMultiplier()
		npcVariant()
	}
	math = {
		tan()
		atan()
		modf()
		exp()
		type()
		acos()
		abs()
		mininteger = -9223372036854775808
		maxinteger = 9223372036854775807
		deg()
		asin()
		randomseed()
		random()
		sqrt()
		huge = inf
		min()
		log()
		pi = 3.1415926535898
		rad()
		max()
		floor()
		ult()
		cos()
		tointeger()
		fmod()
		sin()
		ceil()
	}
	widget = {
		setListSelected()
		setImage()
		setButtonCheckedImages()
		setImageRotation()
		setButtonImage()
		getListSelected()
		itemGridItems()
		addListItem()
		removeListItem()
		setButtonImages()
		blur()
		getData()
		setOptionVisible()
		playSound()
		setChecked()
		getSelectedOption()
		setFontColor()
		setSize()
		setOptionEnabled()
		clearListItems()
		setPosition()
		setProgress()
		getText()
		getSliderValue()
		setButtonEnabled()
		setButtonOverlayImage()
		setData()
		setSelectedOption()
		focus()
		getSize()
		setImageScale()
		setVisible()
		getPosition()
		setText()
		getChecked()
	}
	xpcall()
	setmetatable()
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	status = {
		removeEphemeralEffect()
		resetResource()
		addPersistentEffect()
		addEphemeralEffect()
		resourceMax()
		addPersistentEffects()
		clearEphemeralEffects()
		statPositive()
		modifyResource()
		statusProperty()
		resourcePercentage()
		resource()
		isResource()
		setResourcePercentage()
		getPersistentEffects()
		resourcePositive()
		clearPersistentEffects()
		giveResource()
		overConsumeResource()
		damageTakenSince()
		activeUniqueStatusEffectSummary()
		addEphemeralEffects()
		setStatusProperty()
		resourceLocked()
		modifyResourcePercentage()
		stat()
		clearAllPersistentEffects()
		setResourceLocked()
		resetAllResources()
		resourceNames()
		setPersistentEffects()
		inflictedDamageSince()
		consumeResource()
		inflictedHitsSince()
		setResource()
	}
	utf8 = {
		charpattern = "[
[03:26:06.515] [Warn] 	coroutine = {
		wrap()
		resume()
		create()
		isyieldable()
		status()
		running()
		yield()
	}
	jarray()
	type()
	init()
	require()
	table = {
		insert()
		unpack()
		pack()
		concat()
		sort()
		move()
		remove()
	}
	_VERSION = "Lua 5.3"
	update()
	rawequal()
	world = {
		isMonster()
		entityPortrait()
		entityQuery()
		itemDropQuery()
		entityVelocity()
		damageTiles()
		entityHealth()
		debugPoint()
		debugLine()
		entityExists()
		entityUniqueId()
		timeOfDay()
		entityGender()
		entityAggressive()
		magnitude()
		mod()
		platformerPathStart()
		containerItemAt()
		breathable()
		entityHasCountOfItem()
		npcType()
		sendEntityMessage()
		liquidAt()
		liquidAlongLine()
		isTileProtected()
		destroyLiquid()
		spawnLiquid()
		isNpc()
		getProperty()
		gravity()
		entityMoney()
		objectLineQuery()
		spawnMonster()
		lineCollision()
		lineTileCollision()
		rectCollision()
		getObjectParameter()
		entityHandItem()
		setProperty()
		entityHandItemDescriptor()
		time()
		placeMaterial()
		entityName()
		findUniqueEntity()
		threatLevel()
		placeObject()
		spawnTreasure()
		spawnVehicle()
		damageTileArea()
		windLevel()
		tileIsOccupied()
		containerTakeAt()
		loungeableOccupied()
		resolvePolyCollision()
		nearestTo()
		spawnStagehand()
		polyCollision()
		containerOpen()
		pointCollision()
		distance()
		rectTileCollision()
		debugPoly()
		pointTileCollision()
		containerStackItems()
		collisionBlocksAlongLine()
		entityDamageTeam()
		containerAvailable()
		containerItemApply()
		farmableStage()
		containerSize()
		polyContains()
		stagehandType()
		containerItemsCanFit()
		placeMod()
		containerTakeNumItemsAt()
		dayLength()
		callScriptedEntity()
		spawnProjectile()
		containerItemsFitWhere()
		npcLineQuery()
		npcQuery()
		containerTakeAll()
		findPlatformerPath()
		entityDescription()
		xwrap()
		spawnItem()
		containerSwapItemsNoCombine()
		containerAddItems()
		objectSpaces()
		playerQuery()
		containerConsumeAt()
		monsterType()
		entityType()
		containerSwapItems()
		debugText()
		day()
		containerPutItemsAt()
		entitySpecies()
		loungeableQuery()
		lightLevel()
		entityCanDamage()
		underground()
		spawnNpc()
		material()
		monsterQuery()
		objectQuery()
		containerConsume()
		entityLineQuery()
		containerClose()
		entityPosition()
		objectAt()
		containerItems()
	}
	tonumber()
	ic = {
		stripColor()
		giveBack()
		renameThis()
		checkStack()
		sortFunc()
		sort()
		itemAmount()
		amountEquipped()
		sort_relative()
		itemConfig()
		searchBox()
		clientVersion = 1
		quickstack()
		searchButton()
		renameButton()
		lock()
		getQuality()
	}
	assert()
	rawset()
	getmetatable()
	string = {
		rep()
		gmatch()
		reverse()
		pack()
		char()
		sub()
		format()
		byte()
		match()
		dump()
		find()
		unpack()
		packsize()
		upper()
		gsub()
		lower()
		len()
	}
	pcall()
	player = {
		consumeItemWithParameter()
		shipUpgrades()
		altHandItemTags()
		upgradeShip()
		serverUuid()
		gender()
		worldId()
		equippedTech()
		completeMission()
		inventoryTags()
		removeEssentialItem()
		hasItem()
		recordEvent()
		addBookmark()
		lounge()
		cleanupItems()
		consumeItem()
		makeTechUnavailable()
		setUniverseFlag()
		giveBlueprint()
		hasItemWithParameter()
		species()
		playCinematic()
		altHandItem()
		primaryHandItemTags()
		availableTechs()
		enabledTechs()
		enableTech()
		giveItem()
		playTime()
		setIntroComplete()
		essentialItem()
		ownShipWorldId()
		makeTechAvailable()
		warp()
		equipTech()
		startQuest()
		enableMission()
		hasQuest()
		itemsWithTag()
		isLounging()
		primaryHandItem()
		confirm()
		hasCompletedQuest()
		hasCountOfItem()
		equippedItem()
		setEquippedItem()
		radioMessage()
		giveEssentialItem()
		introComplete()
		canStartQuest()
		consumeTaggedItem()
		getItemWithParameter()
	}
	config = {
		getParameter()
	}
	root = {
		questConfig()
		treeFoliageDirectory()
		getConfigurationPath()
		loadVersionedJson()
		materialHealth()
		tenantConfig()
		itemConfig()
		materialMiningSound()
		projectileConfig()
		imageSpaces()
		techType()
		createTreasure()
		materialFootstepSound()
		itemHasTag()
		imageSize()
		treeStemDirectory()
		npcPortrait()
		hasTech()
		getMatchingTenants()
		getConfiguration()
		createItem()
		generateName()
		setConfiguration()
		techConfig()
		materialPath()
		makeCurrentVersionedJson()
		monsterMovementSettings()
		isTreasurePool()
		itemTags()
		itemType()
		evalFunction()
		monsterSkillParameter()
		assetJson()
		setConfigurationPath()
		monsterPortrait()
		recipesForItem()
		createBiome()
		behaviorModule()
		liquidStatusEffects()
		npcConfig()
		nonEmptyRegion()
		evalFunction2()
		projectileGravityMultiplier()
		npcVariant()
	}
	math = {
		tan()
		atan()
		modf()
		exp()
		type()
		acos()
		abs()
		mininteger = -9223372036854775808
		maxinteger = 9223372036854775807
		deg()
		asin()
		randomseed()
		random()
		sqrt()
		huge = inf
		min()
		log()
		pi = 3.1415926535898
		rad()
		max()
		floor()
		ult()
		cos()
		tointeger()
		fmod()
		sin()
		ceil()
	}
	widget = {
		setListSelected()
		setImage()
		setButtonCheckedImages()
		setImageRotation()
		setButtonImage()
		getListSelected()
		itemGridItems()
		addListItem()
		removeListItem()
		setButtonImages()
		blur()
		getData()
		setOptionVisible()
		playSound()
		setChecked()
		getSelectedOption()
		setFontColor()
		setSize()
		setOptionEnabled()
		clearListItems()
		setPosition()
		setProgress()
		getText()
		getSliderValue()
		setButtonEnabled()
		setButtonOverlayImage()
		setData()
		setSelectedOption()
		focus()
		getSize()
		setImageScale()
		setVisible()
		getPosition()
		setText()
		getChecked()
	}
	xpcall()
	setmetatable()
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	status = {
		removeEphemeralEffect()
		resetResource()
		addPersistentEffect()
		addEphemeralEffect()
		resourceMax()
		addPersistentEffects()
		clearEphemeralEffects()
		statPositive()
		modifyResource()
		statusProperty()
		resourcePercentage()
		resource()
		isResource()
		setResourcePercentage()
		getPersistentEffects()
		resourcePositive()
		clearPersistentEffects()
		giveResource()
		overConsumeResource()
		damageTakenSince()
		activeUniqueStatusEffectSummary()
		addEphemeralEffects()
		setStatusProperty()
		resourceLocked()
		modifyResourcePercentage()
		stat()
		clearAllPersistentEffects()
		setResourceLocked()
		resetAllResources()
		resourceNames()
		setPersistentEffects()
		inflictedDamageSince()
		consumeResource()
		inflictedHitsSince()
		setResource()
	}
	utf8 = {
		charpattern = "[
[03:26:07.299] [Warn] 	coroutine = {
		wrap()
		resume()
		create()
		isyieldable()
		status()
		running()
		yield()
	}
	jarray()
	type()
	init()
	require()
	table = {
		insert()
		unpack()
		pack()
		concat()
		sort()
		move()
		remove()
	}
	_VERSION = "Lua 5.3"
	update()
	rawequal()
	world = {
		isMonster()
		entityPortrait()
		entityQuery()
		itemDropQuery()
		entityVelocity()
		damageTiles()
		entityHealth()
		debugPoint()
		debugLine()
		entityExists()
		entityUniqueId()
		timeOfDay()
		entityGender()
		entityAggressive()
		magnitude()
		mod()
		platformerPathStart()
		containerItemAt()
		breathable()
		entityHasCountOfItem()
		npcType()
		sendEntityMessage()
		liquidAt()
		liquidAlongLine()
		isTileProtected()
		destroyLiquid()
		spawnLiquid()
		isNpc()
		getProperty()
		gravity()
		entityMoney()
		objectLineQuery()
		spawnMonster()
		lineCollision()
		lineTileCollision()
		rectCollision()
		getObjectParameter()
		entityHandItem()
		setProperty()
		entityHandItemDescriptor()
		time()
		placeMaterial()
		entityName()
		findUniqueEntity()
		threatLevel()
		placeObject()
		spawnTreasure()
		spawnVehicle()
		damageTileArea()
		windLevel()
		tileIsOccupied()
		containerTakeAt()
		loungeableOccupied()
		resolvePolyCollision()
		nearestTo()
		spawnStagehand()
		polyCollision()
		containerOpen()
		pointCollision()
		distance()
		rectTileCollision()
		debugPoly()
		pointTileCollision()
		containerStackItems()
		collisionBlocksAlongLine()
		entityDamageTeam()
		containerAvailable()
		containerItemApply()
		farmableStage()
		containerSize()
		polyContains()
		stagehandType()
		containerItemsCanFit()
		placeMod()
		containerTakeNumItemsAt()
		dayLength()
		callScriptedEntity()
		spawnProjectile()
		containerItemsFitWhere()
		npcLineQuery()
		npcQuery()
		containerTakeAll()
		findPlatformerPath()
		entityDescription()
		xwrap()
		spawnItem()
		containerSwapItemsNoCombine()
		containerAddItems()
		objectSpaces()
		playerQuery()
		containerConsumeAt()
		monsterType()
		entityType()
		containerSwapItems()
		debugText()
		day()
		containerPutItemsAt()
		entitySpecies()
		loungeableQuery()
		lightLevel()
		entityCanDamage()
		underground()
		spawnNpc()
		material()
		monsterQuery()
		objectQuery()
		containerConsume()
		entityLineQuery()
		containerClose()
		entityPosition()
		objectAt()
		containerItems()
	}
	tonumber()
	ic = {
		stripColor()
		giveBack()
		renameThis()
		checkStack()
		sortFunc()
		sort()
		itemAmount()
		amountEquipped()
		sort_relative()
		itemConfig()
		searchBox()
		clientVersion = 1
		quickstack()
		searchButton()
		renameButton()
		lock()
		getQuality()
	}
	assert()
	rawset()
	getmetatable()
	string = {
		rep()
		gmatch()
		reverse()
		pack()
		char()
		sub()
		format()
		byte()
		match()
		dump()
		find()
		unpack()
		packsize()
		upper()
		gsub()
		lower()
		len()
	}
	pcall()
	player = {
		consumeItemWithParameter()
		shipUpgrades()
		altHandItemTags()
		upgradeShip()
		serverUuid()
		gender()
		worldId()
		equippedTech()
		completeMission()
		inventoryTags()
		removeEssentialItem()
		hasItem()
		recordEvent()
		addBookmark()
		lounge()
		cleanupItems()
		consumeItem()
		makeTechUnavailable()
		setUniverseFlag()
		giveBlueprint()
		hasItemWithParameter()
		species()
		playCinematic()
		altHandItem()
		primaryHandItemTags()
		availableTechs()
		enabledTechs()
		enableTech()
		giveItem()
		playTime()
		setIntroComplete()
		essentialItem()
		ownShipWorldId()
		makeTechAvailable()
		warp()
		equipTech()
		startQuest()
		enableMission()
		hasQuest()
		itemsWithTag()
		isLounging()
		primaryHandItem()
		confirm()
		hasCompletedQuest()
		hasCountOfItem()
		equippedItem()
		setEquippedItem()
		radioMessage()
		giveEssentialItem()
		introComplete()
		canStartQuest()
		consumeTaggedItem()
		getItemWithParameter()
	}
	config = {
		getParameter()
	}
	root = {
		questConfig()
		treeFoliageDirectory()
		getConfigurationPath()
		loadVersionedJson()
		materialHealth()
		tenantConfig()
		itemConfig()
		materialMiningSound()
		projectileConfig()
		imageSpaces()
		techType()
		createTreasure()
		materialFootstepSound()
		itemHasTag()
		imageSize()
		treeStemDirectory()
		npcPortrait()
		hasTech()
		getMatchingTenants()
		getConfiguration()
		createItem()
		generateName()
		setConfiguration()
		techConfig()
		materialPath()
		makeCurrentVersionedJson()
		monsterMovementSettings()
		isTreasurePool()
		itemTags()
		itemType()
		evalFunction()
		monsterSkillParameter()
		assetJson()
		setConfigurationPath()
		monsterPortrait()
		recipesForItem()
		createBiome()
		behaviorModule()
		liquidStatusEffects()
		npcConfig()
		nonEmptyRegion()
		evalFunction2()
		projectileGravityMultiplier()
		npcVariant()
	}
	math = {
		tan()
		atan()
		modf()
		exp()
		type()
		acos()
		abs()
		mininteger = -9223372036854775808
		maxinteger = 9223372036854775807
		deg()
		asin()
		randomseed()
		random()
		sqrt()
		huge = inf
		min()
		log()
		pi = 3.1415926535898
		rad()
		max()
		floor()
		ult()
		cos()
		tointeger()
		fmod()
		sin()
		ceil()
	}
	widget = {
		setListSelected()
		setImage()
		setButtonCheckedImages()
		setImageRotation()
		setButtonImage()
		getListSelected()
		itemGridItems()
		addListItem()
		removeListItem()
		setButtonImages()
		blur()
		getData()
		setOptionVisible()
		playSound()
		setChecked()
		getSelectedOption()
		setFontColor()
		setSize()
		setOptionEnabled()
		clearListItems()
		setPosition()
		setProgress()
		getText()
		getSliderValue()
		setButtonEnabled()
		setButtonOverlayImage()
		setData()
		setSelectedOption()
		focus()
		getSize()
		setImageScale()
		setVisible()
		getPosition()
		setText()
		getChecked()
	}
	xpcall()
	setmetatable()
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	status = {
		removeEphemeralEffect()
		resetResource()
		addPersistentEffect()
		addEphemeralEffect()
		resourceMax()
		addPersistentEffects()
		clearEphemeralEffects()
		statPositive()
		modifyResource()
		statusProperty()
		resourcePercentage()
		resource()
		isResource()
		setResourcePercentage()
		getPersistentEffects()
		resourcePositive()
		clearPersistentEffects()
		giveResource()
		overConsumeResource()
		damageTakenSince()
		activeUniqueStatusEffectSummary()
		addEphemeralEffects()
		setStatusProperty()
		resourceLocked()
		modifyResourcePercentage()
		stat()
		clearAllPersistentEffects()
		setResourceLocked()
		resetAllResources()
		resourceNames()
		setPersistentEffects()
		inflictedDamageSince()
		consumeResource()
		inflictedHitsSince()
		setResource()
	}
	utf8 = {
		charpattern = "[
[03:26:25.030] [Warn] 	coroutine = {
		wrap()
		resume()
		create()
		isyieldable()
		status()
		running()
		yield()
	}
	jarray()
	type()
	init()
	require()
	table = {
		insert()
		unpack()
		pack()
		concat()
		sort()
		move()
		remove()
	}
	_VERSION = "Lua 5.3"
	update()
	rawequal()
	world = {
		isMonster()
		entityPortrait()
		entityQuery()
		itemDropQuery()
		entityVelocity()
		damageTiles()
		entityHealth()
		debugPoint()
		debugLine()
		entityExists()
		entityUniqueId()
		timeOfDay()
		entityGender()
		entityAggressive()
		magnitude()
		mod()
		platformerPathStart()
		containerItemAt()
		breathable()
		entityHasCountOfItem()
		npcType()
		sendEntityMessage()
		liquidAt()
		liquidAlongLine()
		isTileProtected()
		destroyLiquid()
		spawnLiquid()
		isNpc()
		getProperty()
		gravity()
		entityMoney()
		objectLineQuery()
		spawnMonster()
		lineCollision()
		lineTileCollision()
		rectCollision()
		getObjectParameter()
		entityHandItem()
		setProperty()
		entityHandItemDescriptor()
		time()
		placeMaterial()
		entityName()
		findUniqueEntity()
		threatLevel()
		placeObject()
		spawnTreasure()
		spawnVehicle()
		damageTileArea()
		windLevel()
		tileIsOccupied()
		containerTakeAt()
		loungeableOccupied()
		resolvePolyCollision()
		nearestTo()
		spawnStagehand()
		polyCollision()
		containerOpen()
		pointCollision()
		distance()
		rectTileCollision()
		debugPoly()
		pointTileCollision()
		containerStackItems()
		collisionBlocksAlongLine()
		entityDamageTeam()
		containerAvailable()
		containerItemApply()
		farmableStage()
		containerSize()
		polyContains()
		stagehandType()
		containerItemsCanFit()
		placeMod()
		containerTakeNumItemsAt()
		dayLength()
		callScriptedEntity()
		spawnProjectile()
		containerItemsFitWhere()
		npcLineQuery()
		npcQuery()
		containerTakeAll()
		findPlatformerPath()
		entityDescription()
		xwrap()
		spawnItem()
		containerSwapItemsNoCombine()
		containerAddItems()
		objectSpaces()
		playerQuery()
		containerConsumeAt()
		monsterType()
		entityType()
		containerSwapItems()
		debugText()
		day()
		containerPutItemsAt()
		entitySpecies()
		loungeableQuery()
		lightLevel()
		entityCanDamage()
		underground()
		spawnNpc()
		material()
		monsterQuery()
		objectQuery()
		containerConsume()
		entityLineQuery()
		containerClose()
		entityPosition()
		objectAt()
		containerItems()
	}
	tonumber()
	ic = {
		stripColor()
		giveBack()
		renameThis()
		checkStack()
		sortFunc()
		sort()
		itemAmount()
		amountEquipped()
		sort_relative()
		itemConfig()
		searchBox()
		clientVersion = 1
		quickstack()
		searchButton()
		renameButton()
		lock()
		getQuality()
	}
	assert()
	rawset()
	getmetatable()
	string = {
		rep()
		gmatch()
		reverse()
		pack()
		char()
		sub()
		format()
		byte()
		match()
		dump()
		find()
		unpack()
		packsize()
		upper()
		gsub()
		lower()
		len()
	}
	pcall()
	player = {
		consumeItemWithParameter()
		shipUpgrades()
		altHandItemTags()
		upgradeShip()
		serverUuid()
		gender()
		worldId()
		equippedTech()
		completeMission()
		inventoryTags()
		removeEssentialItem()
		hasItem()
		recordEvent()
		addBookmark()
		lounge()
		cleanupItems()
		consumeItem()
		makeTechUnavailable()
		setUniverseFlag()
		giveBlueprint()
		hasItemWithParameter()
		species()
		playCinematic()
		altHandItem()
		primaryHandItemTags()
		availableTechs()
		enabledTechs()
		enableTech()
		giveItem()
		playTime()
		setIntroComplete()
		essentialItem()
		ownShipWorldId()
		makeTechAvailable()
		warp()
		equipTech()
		startQuest()
		enableMission()
		hasQuest()
		itemsWithTag()
		isLounging()
		primaryHandItem()
		confirm()
		hasCompletedQuest()
		hasCountOfItem()
		equippedItem()
		setEquippedItem()
		radioMessage()
		giveEssentialItem()
		introComplete()
		canStartQuest()
		consumeTaggedItem()
		getItemWithParameter()
	}
	config = {
		getParameter()
	}
	root = {
		questConfig()
		treeFoliageDirectory()
		getConfigurationPath()
		loadVersionedJson()
		materialHealth()
		tenantConfig()
		itemConfig()
		materialMiningSound()
		projectileConfig()
		imageSpaces()
		techType()
		createTreasure()
		materialFootstepSound()
		itemHasTag()
		imageSize()
		treeStemDirectory()
		npcPortrait()
		hasTech()
		getMatchingTenants()
		getConfiguration()
		createItem()
		generateName()
		setConfiguration()
		techConfig()
		materialPath()
		makeCurrentVersionedJson()
		monsterMovementSettings()
		isTreasurePool()
		itemTags()
		itemType()
		evalFunction()
		monsterSkillParameter()
		assetJson()
		setConfigurationPath()
		monsterPortrait()
		recipesForItem()
		createBiome()
		behaviorModule()
		liquidStatusEffects()
		npcConfig()
		nonEmptyRegion()
		evalFunction2()
		projectileGravityMultiplier()
		npcVariant()
	}
	math = {
		tan()
		atan()
		modf()
		exp()
		type()
		acos()
		abs()
		mininteger = -9223372036854775808
		maxinteger = 9223372036854775807
		deg()
		asin()
		randomseed()
		random()
		sqrt()
		huge = inf
		min()
		log()
		pi = 3.1415926535898
		rad()
		max()
		floor()
		ult()
		cos()
		tointeger()
		fmod()
		sin()
		ceil()
	}
	widget = {
		setListSelected()
		setImage()
		setButtonCheckedImages()
		setImageRotation()
		setButtonImage()
		getListSelected()
		itemGridItems()
		addListItem()
		removeListItem()
		setButtonImages()
		blur()
		getData()
		setOptionVisible()
		playSound()
		setChecked()
		getSelectedOption()
		setFontColor()
		setSize()
		setOptionEnabled()
		clearListItems()
		setPosition()
		setProgress()
		getText()
		getSliderValue()
		setButtonEnabled()
		setButtonOverlayImage()
		setData()
		setSelectedOption()
		focus()
		getSize()
		setImageScale()
		setVisible()
		getPosition()
		setText()
		getChecked()
	}
	xpcall()
	setmetatable()
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	status = {
		removeEphemeralEffect()
		resetResource()
		addPersistentEffect()
		addEphemeralEffect()
		resourceMax()
		addPersistentEffects()
		clearEphemeralEffects()
		statPositive()
		modifyResource()
		statusProperty()
		resourcePercentage()
		resource()
		isResource()
		setResourcePercentage()
		getPersistentEffects()
		resourcePositive()
		clearPersistentEffects()
		giveResource()
		overConsumeResource()
		damageTakenSince()
		activeUniqueStatusEffectSummary()
		addEphemeralEffects()
		setStatusProperty()
		resourceLocked()
		modifyResourcePercentage()
		stat()
		clearAllPersistentEffects()
		setResourceLocked()
		resetAllResources()
		resourceNames()
		setPersistentEffects()
		inflictedDamageSince()
		consumeResource()
		inflictedHitsSince()
		setResource()
	}
	utf8 = {
		charpattern = "[
[03:26:27.589] [Info] [IC] [Sort] Time elapsed: 0.012
[03:27:14.969] [Warn] 	coroutine = {
		wrap()
		resume()
		create()
		isyieldable()
		status()
		running()
		yield()
	}
	jarray()
	type()
	init()
	require()
	table = {
		insert()
		unpack()
		pack()
		concat()
		sort()
		move()
		remove()
	}
	_VERSION = "Lua 5.3"
	update()
	rawequal()
	world = {
		isMonster()
		entityPortrait()
		entityQuery()
		itemDropQuery()
		entityVelocity()
		damageTiles()
		entityHealth()
		debugPoint()
		debugLine()
		entityExists()
		entityUniqueId()
		timeOfDay()
		entityGender()
		entityAggressive()
		magnitude()
		mod()
		platformerPathStart()
		containerItemAt()
		breathable()
		entityHasCountOfItem()
		npcType()
		sendEntityMessage()
		liquidAt()
		liquidAlongLine()
		isTileProtected()
		destroyLiquid()
		spawnLiquid()
		isNpc()
		getProperty()
		gravity()
		entityMoney()
		objectLineQuery()
		spawnMonster()
		lineCollision()
		lineTileCollision()
		rectCollision()
		getObjectParameter()
		entityHandItem()
		setProperty()
		entityHandItemDescriptor()
		time()
		placeMaterial()
		entityName()
		findUniqueEntity()
		threatLevel()
		placeObject()
		spawnTreasure()
		spawnVehicle()
		damageTileArea()
		windLevel()
		tileIsOccupied()
		containerTakeAt()
		loungeableOccupied()
		resolvePolyCollision()
		nearestTo()
		spawnStagehand()
		polyCollision()
		containerOpen()
		pointCollision()
		distance()
		rectTileCollision()
		debugPoly()
		pointTileCollision()
		containerStackItems()
		collisionBlocksAlongLine()
		entityDamageTeam()
		containerAvailable()
		containerItemApply()
		farmableStage()
		containerSize()
		polyContains()
		stagehandType()
		containerItemsCanFit()
		placeMod()
		containerTakeNumItemsAt()
		dayLength()
		callScriptedEntity()
		spawnProjectile()
		containerItemsFitWhere()
		npcLineQuery()
		npcQuery()
		containerTakeAll()
		findPlatformerPath()
		entityDescription()
		xwrap()
		spawnItem()
		containerSwapItemsNoCombine()
		containerAddItems()
		objectSpaces()
		playerQuery()
		containerConsumeAt()
		monsterType()
		entityType()
		containerSwapItems()
		debugText()
		day()
		containerPutItemsAt()
		entitySpecies()
		loungeableQuery()
		lightLevel()
		entityCanDamage()
		underground()
		spawnNpc()
		material()
		monsterQuery()
		objectQuery()
		containerConsume()
		entityLineQuery()
		containerClose()
		entityPosition()
		objectAt()
		containerItems()
	}
	tonumber()
	ic = {
		stripColor()
		giveBack()
		renameThis()
		checkStack()
		sortFunc()
		sort()
		itemAmount()
		amountEquipped()
		sort_relative()
		itemConfig()
		searchBox()
		clientVersion = 1
		quickstack()
		searchButton()
		renameButton()
		lock()
		getQuality()
	}
	assert()
	rawset()
	getmetatable()
	string = {
		rep()
		gmatch()
		reverse()
		pack()
		char()
		sub()
		format()
		byte()
		match()
		dump()
		find()
		unpack()
		packsize()
		upper()
		gsub()
		lower()
		len()
	}
	pcall()
	player = {
		consumeItemWithParameter()
		shipUpgrades()
		altHandItemTags()
		upgradeShip()
		serverUuid()
		gender()
		worldId()
		equippedTech()
		completeMission()
		inventoryTags()
		removeEssentialItem()
		hasItem()
		recordEvent()
		addBookmark()
		lounge()
		cleanupItems()
		consumeItem()
		makeTechUnavailable()
		setUniverseFlag()
		giveBlueprint()
		hasItemWithParameter()
		species()
		playCinematic()
		altHandItem()
		primaryHandItemTags()
		availableTechs()
		enabledTechs()
		enableTech()
		giveItem()
		playTime()
		setIntroComplete()
		essentialItem()
		ownShipWorldId()
		makeTechAvailable()
		warp()
		equipTech()
		startQuest()
		enableMission()
		hasQuest()
		itemsWithTag()
		isLounging()
		primaryHandItem()
		confirm()
		hasCompletedQuest()
		hasCountOfItem()
		equippedItem()
		setEquippedItem()
		radioMessage()
		giveEssentialItem()
		introComplete()
		canStartQuest()
		consumeTaggedItem()
		getItemWithParameter()
	}
	config = {
		getParameter()
	}
	root = {
		questConfig()
		treeFoliageDirectory()
		getConfigurationPath()
		loadVersionedJson()
		materialHealth()
		tenantConfig()
		itemConfig()
		materialMiningSound()
		projectileConfig()
		imageSpaces()
		techType()
		createTreasure()
		materialFootstepSound()
		itemHasTag()
		imageSize()
		treeStemDirectory()
		npcPortrait()
		hasTech()
		getMatchingTenants()
		getConfiguration()
		createItem()
		generateName()
		setConfiguration()
		techConfig()
		materialPath()
		makeCurrentVersionedJson()
		monsterMovementSettings()
		isTreasurePool()
		itemTags()
		itemType()
		evalFunction()
		monsterSkillParameter()
		assetJson()
		setConfigurationPath()
		monsterPortrait()
		recipesForItem()
		createBiome()
		behaviorModule()
		liquidStatusEffects()
		npcConfig()
		nonEmptyRegion()
		evalFunction2()
		projectileGravityMultiplier()
		npcVariant()
	}
	math = {
		tan()
		atan()
		modf()
		exp()
		type()
		acos()
		abs()
		mininteger = -9223372036854775808
		maxinteger = 9223372036854775807
		deg()
		asin()
		randomseed()
		random()
		sqrt()
		huge = inf
		min()
		log()
		pi = 3.1415926535898
		rad()
		max()
		floor()
		ult()
		cos()
		tointeger()
		fmod()
		sin()
		ceil()
	}
	widget = {
		setListSelected()
		setImage()
		setButtonCheckedImages()
		setImageRotation()
		setButtonImage()
		getListSelected()
		itemGridItems()
		addListItem()
		removeListItem()
		setButtonImages()
		blur()
		getData()
		setOptionVisible()
		playSound()
		setChecked()
		getSelectedOption()
		setFontColor()
		setSize()
		setOptionEnabled()
		clearListItems()
		setPosition()
		setProgress()
		getText()
		getSliderValue()
		setButtonEnabled()
		setButtonOverlayImage()
		setData()
		setSelectedOption()
		focus()
		getSize()
		setImageScale()
		setVisible()
		getPosition()
		setText()
		getChecked()
	}
	xpcall()
	setmetatable()
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	status = {
		removeEphemeralEffect()
		resetResource()
		addPersistentEffect()
		addEphemeralEffect()
		resourceMax()
		addPersistentEffects()
		clearEphemeralEffects()
		statPositive()
		modifyResource()
		statusProperty()
		resourcePercentage()
		resource()
		isResource()
		setResourcePercentage()
		getPersistentEffects()
		resourcePositive()
		clearPersistentEffects()
		giveResource()
		overConsumeResource()
		damageTakenSince()
		activeUniqueStatusEffectSummary()
		addEphemeralEffects()
		setStatusProperty()
		resourceLocked()
		modifyResourcePercentage()
		stat()
		clearAllPersistentEffects()
		setResourceLocked()
		resetAllResources()
		resourceNames()
		setPersistentEffects()
		inflictedDamageSince()
		consumeResource()
		inflictedHitsSince()
		setResource()
	}
	utf8 = {
		charpattern = "[
[03:27:18.214] [Info] [IC] [Sort] Time elapsed: 0.001
[03:27:40.147] [Warn] 	coroutine = {
		wrap()
		resume()
		create()
		isyieldable()
		status()
		running()
		yield()
	}
	jarray()
	type()
	init()
	require()
	table = {
		insert()
		unpack()
		pack()
		concat()
		sort()
		move()
		remove()
	}
	_VERSION = "Lua 5.3"
	update()
	rawequal()
	world = {
		isMonster()
		entityPortrait()
		entityQuery()
		itemDropQuery()
		entityVelocity()
		damageTiles()
		entityHealth()
		debugPoint()
		debugLine()
		entityExists()
		entityUniqueId()
		timeOfDay()
		entityGender()
		entityAggressive()
		magnitude()
		mod()
		platformerPathStart()
		containerItemAt()
		breathable()
		entityHasCountOfItem()
		npcType()
		sendEntityMessage()
		liquidAt()
		liquidAlongLine()
		isTileProtected()
		destroyLiquid()
		spawnLiquid()
		isNpc()
		getProperty()
		gravity()
		entityMoney()
		objectLineQuery()
		spawnMonster()
		lineCollision()
		lineTileCollision()
		rectCollision()
		getObjectParameter()
		entityHandItem()
		setProperty()
		entityHandItemDescriptor()
		time()
		placeMaterial()
		entityName()
		findUniqueEntity()
		threatLevel()
		placeObject()
		spawnTreasure()
		spawnVehicle()
		damageTileArea()
		windLevel()
		tileIsOccupied()
		containerTakeAt()
		loungeableOccupied()
		resolvePolyCollision()
		nearestTo()
		spawnStagehand()
		polyCollision()
		containerOpen()
		pointCollision()
		distance()
		rectTileCollision()
		debugPoly()
		pointTileCollision()
		containerStackItems()
		collisionBlocksAlongLine()
		entityDamageTeam()
		containerAvailable()
		containerItemApply()
		farmableStage()
		containerSize()
		polyContains()
		stagehandType()
		containerItemsCanFit()
		placeMod()
		containerTakeNumItemsAt()
		dayLength()
		callScriptedEntity()
		spawnProjectile()
		containerItemsFitWhere()
		npcLineQuery()
		npcQuery()
		containerTakeAll()
		findPlatformerPath()
		entityDescription()
		xwrap()
		spawnItem()
		containerSwapItemsNoCombine()
		containerAddItems()
		objectSpaces()
		playerQuery()
		containerConsumeAt()
		monsterType()
		entityType()
		containerSwapItems()
		debugText()
		day()
		containerPutItemsAt()
		entitySpecies()
		loungeableQuery()
		lightLevel()
		entityCanDamage()
		underground()
		spawnNpc()
		material()
		monsterQuery()
		objectQuery()
		containerConsume()
		entityLineQuery()
		containerClose()
		entityPosition()
		objectAt()
		containerItems()
	}
	tonumber()
	ic = {
		stripColor()
		giveBack()
		renameThis()
		checkStack()
		sortFunc()
		sort()
		itemAmount()
		amountEquipped()
		sort_relative()
		itemConfig()
		searchBox()
		clientVersion = 1
		quickstack()
		searchButton()
		renameButton()
		lock()
		getQuality()
	}
	assert()
	rawset()
	getmetatable()
	string = {
		rep()
		gmatch()
		reverse()
		pack()
		char()
		sub()
		format()
		byte()
		match()
		dump()
		find()
		unpack()
		packsize()
		upper()
		gsub()
		lower()
		len()
	}
	pcall()
	player = {
		consumeItemWithParameter()
		shipUpgrades()
		altHandItemTags()
		upgradeShip()
		serverUuid()
		gender()
		worldId()
		equippedTech()
		completeMission()
		inventoryTags()
		removeEssentialItem()
		hasItem()
		recordEvent()
		addBookmark()
		lounge()
		cleanupItems()
		consumeItem()
		makeTechUnavailable()
		setUniverseFlag()
		giveBlueprint()
		hasItemWithParameter()
		species()
		playCinematic()
		altHandItem()
		primaryHandItemTags()
		availableTechs()
		enabledTechs()
		enableTech()
		giveItem()
		playTime()
		setIntroComplete()
		essentialItem()
		ownShipWorldId()
		makeTechAvailable()
		warp()
		equipTech()
		startQuest()
		enableMission()
		hasQuest()
		itemsWithTag()
		isLounging()
		primaryHandItem()
		confirm()
		hasCompletedQuest()
		hasCountOfItem()
		equippedItem()
		setEquippedItem()
		radioMessage()
		giveEssentialItem()
		introComplete()
		canStartQuest()
		consumeTaggedItem()
		getItemWithParameter()
	}
	config = {
		getParameter()
	}
	root = {
		questConfig()
		treeFoliageDirectory()
		getConfigurationPath()
		loadVersionedJson()
		materialHealth()
		tenantConfig()
		itemConfig()
		materialMiningSound()
		projectileConfig()
		imageSpaces()
		techType()
		createTreasure()
		materialFootstepSound()
		itemHasTag()
		imageSize()
		treeStemDirectory()
		npcPortrait()
		hasTech()
		getMatchingTenants()
		getConfiguration()
		createItem()
		generateName()
		setConfiguration()
		techConfig()
		materialPath()
		makeCurrentVersionedJson()
		monsterMovementSettings()
		isTreasurePool()
		itemTags()
		itemType()
		evalFunction()
		monsterSkillParameter()
		assetJson()
		setConfigurationPath()
		monsterPortrait()
		recipesForItem()
		createBiome()
		behaviorModule()
		liquidStatusEffects()
		npcConfig()
		nonEmptyRegion()
		evalFunction2()
		projectileGravityMultiplier()
		npcVariant()
	}
	math = {
		tan()
		atan()
		modf()
		exp()
		type()
		acos()
		abs()
		mininteger = -9223372036854775808
		maxinteger = 9223372036854775807
		deg()
		asin()
		randomseed()
		random()
		sqrt()
		huge = inf
		min()
		log()
		pi = 3.1415926535898
		rad()
		max()
		floor()
		ult()
		cos()
		tointeger()
		fmod()
		sin()
		ceil()
	}
	widget = {
		setListSelected()
		setImage()
		setButtonCheckedImages()
		setImageRotation()
		setButtonImage()
		getListSelected()
		itemGridItems()
		addListItem()
		removeListItem()
		setButtonImages()
		blur()
		getData()
		setOptionVisible()
		playSound()
		setChecked()
		getSelectedOption()
		setFontColor()
		setSize()
		setOptionEnabled()
		clearListItems()
		setPosition()
		setProgress()
		getText()
		getSliderValue()
		setButtonEnabled()
		setButtonOverlayImage()
		setData()
		setSelectedOption()
		focus()
		getSize()
		setImageScale()
		setVisible()
		getPosition()
		setText()
		getChecked()
	}
	xpcall()
	setmetatable()
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	status = {
		removeEphemeralEffect()
		resetResource()
		addPersistentEffect()
		addEphemeralEffect()
		resourceMax()
		addPersistentEffects()
		clearEphemeralEffects()
		statPositive()
		modifyResource()
		statusProperty()
		resourcePercentage()
		resource()
		isResource()
		setResourcePercentage()
		getPersistentEffects()
		resourcePositive()
		clearPersistentEffects()
		giveResource()
		overConsumeResource()
		damageTakenSince()
		activeUniqueStatusEffectSummary()
		addEphemeralEffects()
		setStatusProperty()
		resourceLocked()
		modifyResourcePercentage()
		stat()
		clearAllPersistentEffects()
		setResourceLocked()
		resetAllResources()
		resourceNames()
		setPersistentEffects()
		inflictedDamageSince()
		consumeResource()
		inflictedHitsSince()
		setResource()
	}
	utf8 = {
		charpattern = "[
[03:27:45.901] [Warn] 	coroutine = {
		wrap()
		resume()
		create()
		isyieldable()
		status()
		running()
		yield()
	}
	jarray()
	type()
	init()
	require()
	table = {
		insert()
		unpack()
		pack()
		concat()
		sort()
		move()
		remove()
	}
	_VERSION = "Lua 5.3"
	update()
	rawequal()
	world = {
		isMonster()
		entityPortrait()
		entityQuery()
		itemDropQuery()
		entityVelocity()
		damageTiles()
		entityHealth()
		debugPoint()
		debugLine()
		entityExists()
		entityUniqueId()
		timeOfDay()
		entityGender()
		entityAggressive()
		magnitude()
		mod()
		platformerPathStart()
		containerItemAt()
		breathable()
		entityHasCountOfItem()
		npcType()
		sendEntityMessage()
		liquidAt()
		liquidAlongLine()
		isTileProtected()
		destroyLiquid()
		spawnLiquid()
		isNpc()
		getProperty()
		gravity()
		entityMoney()
		objectLineQuery()
		spawnMonster()
		lineCollision()
		lineTileCollision()
		rectCollision()
		getObjectParameter()
		entityHandItem()
		setProperty()
		entityHandItemDescriptor()
		time()
		placeMaterial()
		entityName()
		findUniqueEntity()
		threatLevel()
		placeObject()
		spawnTreasure()
		spawnVehicle()
		damageTileArea()
		windLevel()
		tileIsOccupied()
		containerTakeAt()
		loungeableOccupied()
		resolvePolyCollision()
		nearestTo()
		spawnStagehand()
		polyCollision()
		containerOpen()
		pointCollision()
		distance()
		rectTileCollision()
		debugPoly()
		pointTileCollision()
		containerStackItems()
		collisionBlocksAlongLine()
		entityDamageTeam()
		containerAvailable()
		containerItemApply()
		farmableStage()
		containerSize()
		polyContains()
		stagehandType()
		containerItemsCanFit()
		placeMod()
		containerTakeNumItemsAt()
		dayLength()
		callScriptedEntity()
		spawnProjectile()
		containerItemsFitWhere()
		npcLineQuery()
		npcQuery()
		containerTakeAll()
		findPlatformerPath()
		entityDescription()
		xwrap()
		spawnItem()
		containerSwapItemsNoCombine()
		containerAddItems()
		objectSpaces()
		playerQuery()
		containerConsumeAt()
		monsterType()
		entityType()
		containerSwapItems()
		debugText()
		day()
		containerPutItemsAt()
		entitySpecies()
		loungeableQuery()
		lightLevel()
		entityCanDamage()
		underground()
		spawnNpc()
		material()
		monsterQuery()
		objectQuery()
		containerConsume()
		entityLineQuery()
		containerClose()
		entityPosition()
		objectAt()
		containerItems()
	}
	tonumber()
	ic = {
		stripColor()
		giveBack()
		renameThis()
		checkStack()
		sortFunc()
		sort()
		itemAmount()
		amountEquipped()
		sort_relative()
		itemConfig()
		searchBox()
		clientVersion = 1
		quickstack()
		searchButton()
		renameButton()
		lock()
		getQuality()
	}
	assert()
	rawset()
	getmetatable()
	string = {
		rep()
		gmatch()
		reverse()
		pack()
		char()
		sub()
		format()
		byte()
		match()
		dump()
		find()
		unpack()
		packsize()
		upper()
		gsub()
		lower()
		len()
	}
	pcall()
	player = {
		consumeItemWithParameter()
		shipUpgrades()
		altHandItemTags()
		upgradeShip()
		serverUuid()
		gender()
		worldId()
		equippedTech()
		completeMission()
		inventoryTags()
		removeEssentialItem()
		hasItem()
		recordEvent()
		addBookmark()
		lounge()
		cleanupItems()
		consumeItem()
		makeTechUnavailable()
		setUniverseFlag()
		giveBlueprint()
		hasItemWithParameter()
		species()
		playCinematic()
		altHandItem()
		primaryHandItemTags()
		availableTechs()
		enabledTechs()
		enableTech()
		giveItem()
		playTime()
		setIntroComplete()
		essentialItem()
		ownShipWorldId()
		makeTechAvailable()
		warp()
		equipTech()
		startQuest()
		enableMission()
		hasQuest()
		itemsWithTag()
		isLounging()
		primaryHandItem()
		confirm()
		hasCompletedQuest()
		hasCountOfItem()
		equippedItem()
		setEquippedItem()
		radioMessage()
		giveEssentialItem()
		introComplete()
		canStartQuest()
		consumeTaggedItem()
		getItemWithParameter()
	}
	config = {
		getParameter()
	}
	root = {
		questConfig()
		treeFoliageDirectory()
		getConfigurationPath()
		loadVersionedJson()
		materialHealth()
		tenantConfig()
		itemConfig()
		materialMiningSound()
		projectileConfig()
		imageSpaces()
		techType()
		createTreasure()
		materialFootstepSound()
		itemHasTag()
		imageSize()
		treeStemDirectory()
		npcPortrait()
		hasTech()
		getMatchingTenants()
		getConfiguration()
		createItem()
		generateName()
		setConfiguration()
		techConfig()
		materialPath()
		makeCurrentVersionedJson()
		monsterMovementSettings()
		isTreasurePool()
		itemTags()
		itemType()
		evalFunction()
		monsterSkillParameter()
		assetJson()
		setConfigurationPath()
		monsterPortrait()
		recipesForItem()
		createBiome()
		behaviorModule()
		liquidStatusEffects()
		npcConfig()
		nonEmptyRegion()
		evalFunction2()
		projectileGravityMultiplier()
		npcVariant()
	}
	math = {
		tan()
		atan()
		modf()
		exp()
		type()
		acos()
		abs()
		mininteger = -9223372036854775808
		maxinteger = 9223372036854775807
		deg()
		asin()
		randomseed()
		random()
		sqrt()
		huge = inf
		min()
		log()
		pi = 3.1415926535898
		rad()
		max()
		floor()
		ult()
		cos()
		tointeger()
		fmod()
		sin()
		ceil()
	}
	widget = {
		setListSelected()
		setImage()
		setButtonCheckedImages()
		setImageRotation()
		setButtonImage()
		getListSelected()
		itemGridItems()
		addListItem()
		removeListItem()
		setButtonImages()
		blur()
		getData()
		setOptionVisible()
		playSound()
		setChecked()
		getSelectedOption()
		setFontColor()
		setSize()
		setOptionEnabled()
		clearListItems()
		setPosition()
		setProgress()
		getText()
		getSliderValue()
		setButtonEnabled()
		setButtonOverlayImage()
		setData()
		setSelectedOption()
		focus()
		getSize()
		setImageScale()
		setVisible()
		getPosition()
		setText()
		getChecked()
	}
	xpcall()
	setmetatable()
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	status = {
		removeEphemeralEffect()
		resetResource()
		addPersistentEffect()
		addEphemeralEffect()
		resourceMax()
		addPersistentEffects()
		clearEphemeralEffects()
		statPositive()
		modifyResource()
		statusProperty()
		resourcePercentage()
		resource()
		isResource()
		setResourcePercentage()
		getPersistentEffects()
		resourcePositive()
		clearPersistentEffects()
		giveResource()
		overConsumeResource()
		damageTakenSince()
		activeUniqueStatusEffectSummary()
		addEphemeralEffects()
		setStatusProperty()
		resourceLocked()
		modifyResourcePercentage()
		stat()
		clearAllPersistentEffects()
		setResourceLocked()
		resetAllResources()
		resourceNames()
		setPersistentEffects()
		inflictedDamageSince()
		consumeResource()
		inflictedHitsSince()
		setResource()
	}
	utf8 = {
		charpattern = "[
[03:27:47.439] [Warn] 	coroutine = {
		wrap()
		resume()
		create()
		isyieldable()
		status()
		running()
		yield()
	}
	jarray()
	type()
	init()
	require()
	table = {
		insert()
		unpack()
		pack()
		concat()
		sort()
		move()
		remove()
	}
	_VERSION = "Lua 5.3"
	update()
	rawequal()
	world = {
		isMonster()
		entityPortrait()
		entityQuery()
		itemDropQuery()
		entityVelocity()
		damageTiles()
		entityHealth()
		debugPoint()
		debugLine()
		entityExists()
		entityUniqueId()
		timeOfDay()
		entityGender()
		entityAggressive()
		magnitude()
		mod()
		platformerPathStart()
		containerItemAt()
		breathable()
		entityHasCountOfItem()
		npcType()
		sendEntityMessage()
		liquidAt()
		liquidAlongLine()
		isTileProtected()
		destroyLiquid()
		spawnLiquid()
		isNpc()
		getProperty()
		gravity()
		entityMoney()
		objectLineQuery()
		spawnMonster()
		lineCollision()
		lineTileCollision()
		rectCollision()
		getObjectParameter()
		entityHandItem()
		setProperty()
		entityHandItemDescriptor()
		time()
		placeMaterial()
		entityName()
		findUniqueEntity()
		threatLevel()
		placeObject()
		spawnTreasure()
		spawnVehicle()
		damageTileArea()
		windLevel()
		tileIsOccupied()
		containerTakeAt()
		loungeableOccupied()
		resolvePolyCollision()
		nearestTo()
		spawnStagehand()
		polyCollision()
		containerOpen()
		pointCollision()
		distance()
		rectTileCollision()
		debugPoly()
		pointTileCollision()
		containerStackItems()
		collisionBlocksAlongLine()
		entityDamageTeam()
		containerAvailable()
		containerItemApply()
		farmableStage()
		containerSize()
		polyContains()
		stagehandType()
		containerItemsCanFit()
		placeMod()
		containerTakeNumItemsAt()
		dayLength()
		callScriptedEntity()
		spawnProjectile()
		containerItemsFitWhere()
		npcLineQuery()
		npcQuery()
		containerTakeAll()
		findPlatformerPath()
		entityDescription()
		xwrap()
		spawnItem()
		containerSwapItemsNoCombine()
		containerAddItems()
		objectSpaces()
		playerQuery()
		containerConsumeAt()
		monsterType()
		entityType()
		containerSwapItems()
		debugText()
		day()
		containerPutItemsAt()
		entitySpecies()
		loungeableQuery()
		lightLevel()
		entityCanDamage()
		underground()
		spawnNpc()
		material()
		monsterQuery()
		objectQuery()
		containerConsume()
		entityLineQuery()
		containerClose()
		entityPosition()
		objectAt()
		containerItems()
	}
	tonumber()
	ic = {
		stripColor()
		giveBack()
		renameThis()
		checkStack()
		sortFunc()
		sort()
		itemAmount()
		amountEquipped()
		sort_relative()
		itemConfig()
		searchBox()
		clientVersion = 1
		quickstack()
		searchButton()
		renameButton()
		lock()
		getQuality()
	}
	assert()
	rawset()
	getmetatable()
	string = {
		rep()
		gmatch()
		reverse()
		pack()
		char()
		sub()
		format()
		byte()
		match()
		dump()
		find()
		unpack()
		packsize()
		upper()
		gsub()
		lower()
		len()
	}
	pcall()
	player = {
		consumeItemWithParameter()
		shipUpgrades()
		altHandItemTags()
		upgradeShip()
		serverUuid()
		gender()
		worldId()
		equippedTech()
		completeMission()
		inventoryTags()
		removeEssentialItem()
		hasItem()
		recordEvent()
		addBookmark()
		lounge()
		cleanupItems()
		consumeItem()
		makeTechUnavailable()
		setUniverseFlag()
		giveBlueprint()
		hasItemWithParameter()
		species()
		playCinematic()
		altHandItem()
		primaryHandItemTags()
		availableTechs()
		enabledTechs()
		enableTech()
		giveItem()
		playTime()
		setIntroComplete()
		essentialItem()
		ownShipWorldId()
		makeTechAvailable()
		warp()
		equipTech()
		startQuest()
		enableMission()
		hasQuest()
		itemsWithTag()
		isLounging()
		primaryHandItem()
		confirm()
		hasCompletedQuest()
		hasCountOfItem()
		equippedItem()
		setEquippedItem()
		radioMessage()
		giveEssentialItem()
		introComplete()
		canStartQuest()
		consumeTaggedItem()
		getItemWithParameter()
	}
	config = {
		getParameter()
	}
	root = {
		questConfig()
		treeFoliageDirectory()
		getConfigurationPath()
		loadVersionedJson()
		materialHealth()
		tenantConfig()
		itemConfig()
		materialMiningSound()
		projectileConfig()
		imageSpaces()
		techType()
		createTreasure()
		materialFootstepSound()
		itemHasTag()
		imageSize()
		treeStemDirectory()
		npcPortrait()
		hasTech()
		getMatchingTenants()
		getConfiguration()
		createItem()
		generateName()
		setConfiguration()
		techConfig()
		materialPath()
		makeCurrentVersionedJson()
		monsterMovementSettings()
		isTreasurePool()
		itemTags()
		itemType()
		evalFunction()
		monsterSkillParameter()
		assetJson()
		setConfigurationPath()
		monsterPortrait()
		recipesForItem()
		createBiome()
		behaviorModule()
		liquidStatusEffects()
		npcConfig()
		nonEmptyRegion()
		evalFunction2()
		projectileGravityMultiplier()
		npcVariant()
	}
	math = {
		tan()
		atan()
		modf()
		exp()
		type()
		acos()
		abs()
		mininteger = -9223372036854775808
		maxinteger = 9223372036854775807
		deg()
		asin()
		randomseed()
		random()
		sqrt()
		huge = inf
		min()
		log()
		pi = 3.1415926535898
		rad()
		max()
		floor()
		ult()
		cos()
		tointeger()
		fmod()
		sin()
		ceil()
	}
	widget = {
		setListSelected()
		setImage()
		setButtonCheckedImages()
		setImageRotation()
		setButtonImage()
		getListSelected()
		itemGridItems()
		addListItem()
		removeListItem()
		setButtonImages()
		blur()
		getData()
		setOptionVisible()
		playSound()
		setChecked()
		getSelectedOption()
		setFontColor()
		setSize()
		setOptionEnabled()
		clearListItems()
		setPosition()
		setProgress()
		getText()
		getSliderValue()
		setButtonEnabled()
		setButtonOverlayImage()
		setData()
		setSelectedOption()
		focus()
		getSize()
		setImageScale()
		setVisible()
		getPosition()
		setText()
		getChecked()
	}
	xpcall()
	setmetatable()
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	status = {
		removeEphemeralEffect()
		resetResource()
		addPersistentEffect()
		addEphemeralEffect()
		resourceMax()
		addPersistentEffects()
		clearEphemeralEffects()
		statPositive()
		modifyResource()
		statusProperty()
		resourcePercentage()
		resource()
		isResource()
		setResourcePercentage()
		getPersistentEffects()
		resourcePositive()
		clearPersistentEffects()
		giveResource()
		overConsumeResource()
		damageTakenSince()
		activeUniqueStatusEffectSummary()
		addEphemeralEffects()
		setStatusProperty()
		resourceLocked()
		modifyResourcePercentage()
		stat()
		clearAllPersistentEffects()
		setResourceLocked()
		resetAllResources()
		resourceNames()
		setPersistentEffects()
		inflictedDamageSince()
		consumeResource()
		inflictedHitsSince()
		setResource()
	}
	utf8 = {
		charpattern = "[
[03:28:02.165] [Warn] 	coroutine = {
		wrap()
		resume()
		create()
		isyieldable()
		status()
		running()
		yield()
	}
	jarray()
	type()
	init()
	require()
	table = {
		insert()
		unpack()
		pack()
		concat()
		sort()
		move()
		remove()
	}
	_VERSION = "Lua 5.3"
	update()
	rawequal()
	world = {
		isMonster()
		entityPortrait()
		entityQuery()
		itemDropQuery()
		entityVelocity()
		damageTiles()
		entityHealth()
		debugPoint()
		debugLine()
		entityExists()
		entityUniqueId()
		timeOfDay()
		entityGender()
		entityAggressive()
		magnitude()
		mod()
		platformerPathStart()
		containerItemAt()
		breathable()
		entityHasCountOfItem()
		npcType()
		sendEntityMessage()
		liquidAt()
		liquidAlongLine()
		isTileProtected()
		destroyLiquid()
		spawnLiquid()
		isNpc()
		getProperty()
		gravity()
		entityMoney()
		objectLineQuery()
		spawnMonster()
		lineCollision()
		lineTileCollision()
		rectCollision()
		getObjectParameter()
		entityHandItem()
		setProperty()
		entityHandItemDescriptor()
		time()
		placeMaterial()
		entityName()
		findUniqueEntity()
		threatLevel()
		placeObject()
		spawnTreasure()
		spawnVehicle()
		damageTileArea()
		windLevel()
		tileIsOccupied()
		containerTakeAt()
		loungeableOccupied()
		resolvePolyCollision()
		nearestTo()
		spawnStagehand()
		polyCollision()
		containerOpen()
		pointCollision()
		distance()
		rectTileCollision()
		debugPoly()
		pointTileCollision()
		containerStackItems()
		collisionBlocksAlongLine()
		entityDamageTeam()
		containerAvailable()
		containerItemApply()
		farmableStage()
		containerSize()
		polyContains()
		stagehandType()
		containerItemsCanFit()
		placeMod()
		containerTakeNumItemsAt()
		dayLength()
		callScriptedEntity()
		spawnProjectile()
		containerItemsFitWhere()
		npcLineQuery()
		npcQuery()
		containerTakeAll()
		findPlatformerPath()
		entityDescription()
		xwrap()
		spawnItem()
		containerSwapItemsNoCombine()
		containerAddItems()
		objectSpaces()
		playerQuery()
		containerConsumeAt()
		monsterType()
		entityType()
		containerSwapItems()
		debugText()
		day()
		containerPutItemsAt()
		entitySpecies()
		loungeableQuery()
		lightLevel()
		entityCanDamage()
		underground()
		spawnNpc()
		material()
		monsterQuery()
		objectQuery()
		containerConsume()
		entityLineQuery()
		containerClose()
		entityPosition()
		objectAt()
		containerItems()
	}
	tonumber()
	ic = {
		stripColor()
		giveBack()
		renameThis()
		checkStack()
		sortFunc()
		sort()
		itemAmount()
		amountEquipped()
		sort_relative()
		itemConfig()
		searchBox()
		clientVersion = 1
		quickstack()
		searchButton()
		renameButton()
		lock()
		getQuality()
	}
	assert()
	rawset()
	getmetatable()
	string = {
		rep()
		gmatch()
		reverse()
		pack()
		char()
		sub()
		format()
		byte()
		match()
		dump()
		find()
		unpack()
		packsize()
		upper()
		gsub()
		lower()
		len()
	}
	pcall()
	player = {
		consumeItemWithParameter()
		shipUpgrades()
		altHandItemTags()
		upgradeShip()
		serverUuid()
		gender()
		worldId()
		equippedTech()
		completeMission()
		inventoryTags()
		removeEssentialItem()
		hasItem()
		recordEvent()
		addBookmark()
		lounge()
		cleanupItems()
		consumeItem()
		makeTechUnavailable()
		setUniverseFlag()
		giveBlueprint()
		hasItemWithParameter()
		species()
		playCinematic()
		altHandItem()
		primaryHandItemTags()
		availableTechs()
		enabledTechs()
		enableTech()
		giveItem()
		playTime()
		setIntroComplete()
		essentialItem()
		ownShipWorldId()
		makeTechAvailable()
		warp()
		equipTech()
		startQuest()
		enableMission()
		hasQuest()
		itemsWithTag()
		isLounging()
		primaryHandItem()
		confirm()
		hasCompletedQuest()
		hasCountOfItem()
		equippedItem()
		setEquippedItem()
		radioMessage()
		giveEssentialItem()
		introComplete()
		canStartQuest()
		consumeTaggedItem()
		getItemWithParameter()
	}
	config = {
		getParameter()
	}
	root = {
		questConfig()
		treeFoliageDirectory()
		getConfigurationPath()
		loadVersionedJson()
		materialHealth()
		tenantConfig()
		itemConfig()
		materialMiningSound()
		projectileConfig()
		imageSpaces()
		techType()
		createTreasure()
		materialFootstepSound()
		itemHasTag()
		imageSize()
		treeStemDirectory()
		npcPortrait()
		hasTech()
		getMatchingTenants()
		getConfiguration()
		createItem()
		generateName()
		setConfiguration()
		techConfig()
		materialPath()
		makeCurrentVersionedJson()
		monsterMovementSettings()
		isTreasurePool()
		itemTags()
		itemType()
		evalFunction()
		monsterSkillParameter()
		assetJson()
		setConfigurationPath()
		monsterPortrait()
		recipesForItem()
		createBiome()
		behaviorModule()
		liquidStatusEffects()
		npcConfig()
		nonEmptyRegion()
		evalFunction2()
		projectileGravityMultiplier()
		npcVariant()
	}
	math = {
		tan()
		atan()
		modf()
		exp()
		type()
		acos()
		abs()
		mininteger = -9223372036854775808
		maxinteger = 9223372036854775807
		deg()
		asin()
		randomseed()
		random()
		sqrt()
		huge = inf
		min()
		log()
		pi = 3.1415926535898
		rad()
		max()
		floor()
		ult()
		cos()
		tointeger()
		fmod()
		sin()
		ceil()
	}
	widget = {
		setListSelected()
		setImage()
		setButtonCheckedImages()
		setImageRotation()
		setButtonImage()
		getListSelected()
		itemGridItems()
		addListItem()
		removeListItem()
		setButtonImages()
		blur()
		getData()
		setOptionVisible()
		playSound()
		setChecked()
		getSelectedOption()
		setFontColor()
		setSize()
		setOptionEnabled()
		clearListItems()
		setPosition()
		setProgress()
		getText()
		getSliderValue()
		setButtonEnabled()
		setButtonOverlayImage()
		setData()
		setSelectedOption()
		focus()
		getSize()
		setImageScale()
		setVisible()
		getPosition()
		setText()
		getChecked()
	}
	xpcall()
	setmetatable()
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	status = {
		removeEphemeralEffect()
		resetResource()
		addPersistentEffect()
		addEphemeralEffect()
		resourceMax()
		addPersistentEffects()
		clearEphemeralEffects()
		statPositive()
		modifyResource()
		statusProperty()
		resourcePercentage()
		resource()
		isResource()
		setResourcePercentage()
		getPersistentEffects()
		resourcePositive()
		clearPersistentEffects()
		giveResource()
		overConsumeResource()
		damageTakenSince()
		activeUniqueStatusEffectSummary()
		addEphemeralEffects()
		setStatusProperty()
		resourceLocked()
		modifyResourcePercentage()
		stat()
		clearAllPersistentEffects()
		setResourceLocked()
		resetAllResources()
		resourceNames()
		setPersistentEffects()
		inflictedDamageSince()
		consumeResource()
		inflictedHitsSince()
		setResource()
	}
	utf8 = {
		charpattern = "[
[03:28:06.608] [Warn] 	coroutine = {
		wrap()
		resume()
		create()
		isyieldable()
		status()
		running()
		yield()
	}
	jarray()
	type()
	init()
	require()
	table = {
		insert()
		unpack()
		pack()
		concat()
		sort()
		move()
		remove()
	}
	_VERSION = "Lua 5.3"
	update()
	rawequal()
	world = {
		isMonster()
		entityPortrait()
		entityQuery()
		itemDropQuery()
		entityVelocity()
		damageTiles()
		entityHealth()
		debugPoint()
		debugLine()
		entityExists()
		entityUniqueId()
		timeOfDay()
		entityGender()
		entityAggressive()
		magnitude()
		mod()
		platformerPathStart()
		containerItemAt()
		breathable()
		entityHasCountOfItem()
		npcType()
		sendEntityMessage()
		liquidAt()
		liquidAlongLine()
		isTileProtected()
		destroyLiquid()
		spawnLiquid()
		isNpc()
		getProperty()
		gravity()
		entityMoney()
		objectLineQuery()
		spawnMonster()
		lineCollision()
		lineTileCollision()
		rectCollision()
		getObjectParameter()
		entityHandItem()
		setProperty()
		entityHandItemDescriptor()
		time()
		placeMaterial()
		entityName()
		findUniqueEntity()
		threatLevel()
		placeObject()
		spawnTreasure()
		spawnVehicle()
		damageTileArea()
		windLevel()
		tileIsOccupied()
		containerTakeAt()
		loungeableOccupied()
		resolvePolyCollision()
		nearestTo()
		spawnStagehand()
		polyCollision()
		containerOpen()
		pointCollision()
		distance()
		rectTileCollision()
		debugPoly()
		pointTileCollision()
		containerStackItems()
		collisionBlocksAlongLine()
		entityDamageTeam()
		containerAvailable()
		containerItemApply()
		farmableStage()
		containerSize()
		polyContains()
		stagehandType()
		containerItemsCanFit()
		placeMod()
		containerTakeNumItemsAt()
		dayLength()
		callScriptedEntity()
		spawnProjectile()
		containerItemsFitWhere()
		npcLineQuery()
		npcQuery()
		containerTakeAll()
		findPlatformerPath()
		entityDescription()
		xwrap()
		spawnItem()
		containerSwapItemsNoCombine()
		containerAddItems()
		objectSpaces()
		playerQuery()
		containerConsumeAt()
		monsterType()
		entityType()
		containerSwapItems()
		debugText()
		day()
		containerPutItemsAt()
		entitySpecies()
		loungeableQuery()
		lightLevel()
		entityCanDamage()
		underground()
		spawnNpc()
		material()
		monsterQuery()
		objectQuery()
		containerConsume()
		entityLineQuery()
		containerClose()
		entityPosition()
		objectAt()
		containerItems()
	}
	tonumber()
	ic = {
		stripColor()
		giveBack()
		renameThis()
		checkStack()
		sortFunc()
		sort()
		itemAmount()
		amountEquipped()
		sort_relative()
		itemConfig()
		searchBox()
		clientVersion = 1
		quickstack()
		searchButton()
		renameButton()
		lock()
		getQuality()
	}
	assert()
	rawset()
	getmetatable()
	string = {
		rep()
		gmatch()
		reverse()
		pack()
		char()
		sub()
		format()
		byte()
		match()
		dump()
		find()
		unpack()
		packsize()
		upper()
		gsub()
		lower()
		len()
	}
	pcall()
	player = {
		consumeItemWithParameter()
		shipUpgrades()
		altHandItemTags()
		upgradeShip()
		serverUuid()
		gender()
		worldId()
		equippedTech()
		completeMission()
		inventoryTags()
		removeEssentialItem()
		hasItem()
		recordEvent()
		addBookmark()
		lounge()
		cleanupItems()
		consumeItem()
		makeTechUnavailable()
		setUniverseFlag()
		giveBlueprint()
		hasItemWithParameter()
		species()
		playCinematic()
		altHandItem()
		primaryHandItemTags()
		availableTechs()
		enabledTechs()
		enableTech()
		giveItem()
		playTime()
		setIntroComplete()
		essentialItem()
		ownShipWorldId()
		makeTechAvailable()
		warp()
		equipTech()
		startQuest()
		enableMission()
		hasQuest()
		itemsWithTag()
		isLounging()
		primaryHandItem()
		confirm()
		hasCompletedQuest()
		hasCountOfItem()
		equippedItem()
		setEquippedItem()
		radioMessage()
		giveEssentialItem()
		introComplete()
		canStartQuest()
		consumeTaggedItem()
		getItemWithParameter()
	}
	config = {
		getParameter()
	}
	root = {
		questConfig()
		treeFoliageDirectory()
		getConfigurationPath()
		loadVersionedJson()
		materialHealth()
		tenantConfig()
		itemConfig()
		materialMiningSound()
		projectileConfig()
		imageSpaces()
		techType()
		createTreasure()
		materialFootstepSound()
		itemHasTag()
		imageSize()
		treeStemDirectory()
		npcPortrait()
		hasTech()
		getMatchingTenants()
		getConfiguration()
		createItem()
		generateName()
		setConfiguration()
		techConfig()
		materialPath()
		makeCurrentVersionedJson()
		monsterMovementSettings()
		isTreasurePool()
		itemTags()
		itemType()
		evalFunction()
		monsterSkillParameter()
		assetJson()
		setConfigurationPath()
		monsterPortrait()
		recipesForItem()
		createBiome()
		behaviorModule()
		liquidStatusEffects()
		npcConfig()
		nonEmptyRegion()
		evalFunction2()
		projectileGravityMultiplier()
		npcVariant()
	}
	math = {
		tan()
		atan()
		modf()
		exp()
		type()
		acos()
		abs()
		mininteger = -9223372036854775808
		maxinteger = 9223372036854775807
		deg()
		asin()
		randomseed()
		random()
		sqrt()
		huge = inf
		min()
		log()
		pi = 3.1415926535898
		rad()
		max()
		floor()
		ult()
		cos()
		tointeger()
		fmod()
		sin()
		ceil()
	}
	widget = {
		setListSelected()
		setImage()
		setButtonCheckedImages()
		setImageRotation()
		setButtonImage()
		getListSelected()
		itemGridItems()
		addListItem()
		removeListItem()
		setButtonImages()
		blur()
		getData()
		setOptionVisible()
		playSound()
		setChecked()
		getSelectedOption()
		setFontColor()
		setSize()
		setOptionEnabled()
		clearListItems()
		setPosition()
		setProgress()
		getText()
		getSliderValue()
		setButtonEnabled()
		setButtonOverlayImage()
		setData()
		setSelectedOption()
		focus()
		getSize()
		setImageScale()
		setVisible()
		getPosition()
		setText()
		getChecked()
	}
	xpcall()
	setmetatable()
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	status = {
		removeEphemeralEffect()
		resetResource()
		addPersistentEffect()
		addEphemeralEffect()
		resourceMax()
		addPersistentEffects()
		clearEphemeralEffects()
		statPositive()
		modifyResource()
		statusProperty()
		resourcePercentage()
		resource()
		isResource()
		setResourcePercentage()
		getPersistentEffects()
		resourcePositive()
		clearPersistentEffects()
		giveResource()
		overConsumeResource()
		damageTakenSince()
		activeUniqueStatusEffectSummary()
		addEphemeralEffects()
		setStatusProperty()
		resourceLocked()
		modifyResourcePercentage()
		stat()
		clearAllPersistentEffects()
		setResourceLocked()
		resetAllResources()
		resourceNames()
		setPersistentEffects()
		inflictedDamageSince()
		consumeResource()
		inflictedHitsSince()
		setResource()
	}
	utf8 = {
		charpattern = "[
[03:28:26.343] [Warn] 	coroutine = {
		wrap()
		resume()
		create()
		isyieldable()
		status()
		running()
		yield()
	}
	jarray()
	type()
	init()
	require()
	table = {
		insert()
		unpack()
		pack()
		concat()
		sort()
		move()
		remove()
	}
	_VERSION = "Lua 5.3"
	update()
	rawequal()
	world = {
		isMonster()
		entityPortrait()
		entityQuery()
		itemDropQuery()
		entityVelocity()
		damageTiles()
		entityHealth()
		debugPoint()
		debugLine()
		entityExists()
		entityUniqueId()
		timeOfDay()
		entityGender()
		entityAggressive()
		magnitude()
		mod()
		platformerPathStart()
		containerItemAt()
		breathable()
		entityHasCountOfItem()
		npcType()
		sendEntityMessage()
		liquidAt()
		liquidAlongLine()
		isTileProtected()
		destroyLiquid()
		spawnLiquid()
		isNpc()
		getProperty()
		gravity()
		entityMoney()
		objectLineQuery()
		spawnMonster()
		lineCollision()
		lineTileCollision()
		rectCollision()
		getObjectParameter()
		entityHandItem()
		setProperty()
		entityHandItemDescriptor()
		time()
		placeMaterial()
		entityName()
		findUniqueEntity()
		threatLevel()
		placeObject()
		spawnTreasure()
		spawnVehicle()
		damageTileArea()
		windLevel()
		tileIsOccupied()
		containerTakeAt()
		loungeableOccupied()
		resolvePolyCollision()
		nearestTo()
		spawnStagehand()
		polyCollision()
		containerOpen()
		pointCollision()
		distance()
		rectTileCollision()
		debugPoly()
		pointTileCollision()
		containerStackItems()
		collisionBlocksAlongLine()
		entityDamageTeam()
		containerAvailable()
		containerItemApply()
		farmableStage()
		containerSize()
		polyContains()
		stagehandType()
		containerItemsCanFit()
		placeMod()
		containerTakeNumItemsAt()
		dayLength()
		callScriptedEntity()
		spawnProjectile()
		containerItemsFitWhere()
		npcLineQuery()
		npcQuery()
		containerTakeAll()
		findPlatformerPath()
		entityDescription()
		xwrap()
		spawnItem()
		containerSwapItemsNoCombine()
		containerAddItems()
		objectSpaces()
		playerQuery()
		containerConsumeAt()
		monsterType()
		entityType()
		containerSwapItems()
		debugText()
		day()
		containerPutItemsAt()
		entitySpecies()
		loungeableQuery()
		lightLevel()
		entityCanDamage()
		underground()
		spawnNpc()
		material()
		monsterQuery()
		objectQuery()
		containerConsume()
		entityLineQuery()
		containerClose()
		entityPosition()
		objectAt()
		containerItems()
	}
	tonumber()
	ic = {
		stripColor()
		giveBack()
		renameThis()
		checkStack()
		sortFunc()
		sort()
		itemAmount()
		amountEquipped()
		sort_relative()
		itemConfig()
		searchBox()
		clientVersion = 1
		quickstack()
		searchButton()
		renameButton()
		lock()
		getQuality()
	}
	assert()
	rawset()
	getmetatable()
	string = {
		rep()
		gmatch()
		reverse()
		pack()
		char()
		sub()
		format()
		byte()
		match()
		dump()
		find()
		unpack()
		packsize()
		upper()
		gsub()
		lower()
		len()
	}
	pcall()
	player = {
		consumeItemWithParameter()
		shipUpgrades()
		altHandItemTags()
		upgradeShip()
		serverUuid()
		gender()
		worldId()
		equippedTech()
		completeMission()
		inventoryTags()
		removeEssentialItem()
		hasItem()
		recordEvent()
		addBookmark()
		lounge()
		cleanupItems()
		consumeItem()
		makeTechUnavailable()
		setUniverseFlag()
		giveBlueprint()
		hasItemWithParameter()
		species()
		playCinematic()
		altHandItem()
		primaryHandItemTags()
		availableTechs()
		enabledTechs()
		enableTech()
		giveItem()
		playTime()
		setIntroComplete()
		essentialItem()
		ownShipWorldId()
		makeTechAvailable()
		warp()
		equipTech()
		startQuest()
		enableMission()
		hasQuest()
		itemsWithTag()
		isLounging()
		primaryHandItem()
		confirm()
		hasCompletedQuest()
		hasCountOfItem()
		equippedItem()
		setEquippedItem()
		radioMessage()
		giveEssentialItem()
		introComplete()
		canStartQuest()
		consumeTaggedItem()
		getItemWithParameter()
	}
	config = {
		getParameter()
	}
	root = {
		questConfig()
		treeFoliageDirectory()
		getConfigurationPath()
		loadVersionedJson()
		materialHealth()
		tenantConfig()
		itemConfig()
		materialMiningSound()
		projectileConfig()
		imageSpaces()
		techType()
		createTreasure()
		materialFootstepSound()
		itemHasTag()
		imageSize()
		treeStemDirectory()
		npcPortrait()
		hasTech()
		getMatchingTenants()
		getConfiguration()
		createItem()
		generateName()
		setConfiguration()
		techConfig()
		materialPath()
		makeCurrentVersionedJson()
		monsterMovementSettings()
		isTreasurePool()
		itemTags()
		itemType()
		evalFunction()
		monsterSkillParameter()
		assetJson()
		setConfigurationPath()
		monsterPortrait()
		recipesForItem()
		createBiome()
		behaviorModule()
		liquidStatusEffects()
		npcConfig()
		nonEmptyRegion()
		evalFunction2()
		projectileGravityMultiplier()
		npcVariant()
	}
	math = {
		tan()
		atan()
		modf()
		exp()
		type()
		acos()
		abs()
		mininteger = -9223372036854775808
		maxinteger = 9223372036854775807
		deg()
		asin()
		randomseed()
		random()
		sqrt()
		huge = inf
		min()
		log()
		pi = 3.1415926535898
		rad()
		max()
		floor()
		ult()
		cos()
		tointeger()
		fmod()
		sin()
		ceil()
	}
	widget = {
		setListSelected()
		setImage()
		setButtonCheckedImages()
		setImageRotation()
		setButtonImage()
		getListSelected()
		itemGridItems()
		addListItem()
		removeListItem()
		setButtonImages()
		blur()
		getData()
		setOptionVisible()
		playSound()
		setChecked()
		getSelectedOption()
		setFontColor()
		setSize()
		setOptionEnabled()
		clearListItems()
		setPosition()
		setProgress()
		getText()
		getSliderValue()
		setButtonEnabled()
		setButtonOverlayImage()
		setData()
		setSelectedOption()
		focus()
		getSize()
		setImageScale()
		setVisible()
		getPosition()
		setText()
		getChecked()
	}
	xpcall()
	setmetatable()
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	status = {
		removeEphemeralEffect()
		resetResource()
		addPersistentEffect()
		addEphemeralEffect()
		resourceMax()
		addPersistentEffects()
		clearEphemeralEffects()
		statPositive()
		modifyResource()
		statusProperty()
		resourcePercentage()
		resource()
		isResource()
		setResourcePercentage()
		getPersistentEffects()
		resourcePositive()
		clearPersistentEffects()
		giveResource()
		overConsumeResource()
		damageTakenSince()
		activeUniqueStatusEffectSummary()
		addEphemeralEffects()
		setStatusProperty()
		resourceLocked()
		modifyResourcePercentage()
		stat()
		clearAllPersistentEffects()
		setResourceLocked()
		resetAllResources()
		resourceNames()
		setPersistentEffects()
		inflictedDamageSince()
		consumeResource()
		inflictedHitsSince()
		setResource()
	}
	utf8 = {
		charpattern = "[
[03:28:31.818] [Warn] 	coroutine = {
		wrap()
		resume()
		create()
		isyieldable()
		status()
		running()
		yield()
	}
	jarray()
	type()
	init()
	require()
	table = {
		insert()
		unpack()
		pack()
		concat()
		sort()
		move()
		remove()
	}
	_VERSION = "Lua 5.3"
	update()
	rawequal()
	world = {
		isMonster()
		entityPortrait()
		entityQuery()
		itemDropQuery()
		entityVelocity()
		damageTiles()
		entityHealth()
		debugPoint()
		debugLine()
		entityExists()
		entityUniqueId()
		timeOfDay()
		entityGender()
		entityAggressive()
		magnitude()
		mod()
		platformerPathStart()
		containerItemAt()
		breathable()
		entityHasCountOfItem()
		npcType()
		sendEntityMessage()
		liquidAt()
		liquidAlongLine()
		isTileProtected()
		destroyLiquid()
		spawnLiquid()
		isNpc()
		getProperty()
		gravity()
		entityMoney()
		objectLineQuery()
		spawnMonster()
		lineCollision()
		lineTileCollision()
		rectCollision()
		getObjectParameter()
		entityHandItem()
		setProperty()
		entityHandItemDescriptor()
		time()
		placeMaterial()
		entityName()
		findUniqueEntity()
		threatLevel()
		placeObject()
		spawnTreasure()
		spawnVehicle()
		damageTileArea()
		windLevel()
		tileIsOccupied()
		containerTakeAt()
		loungeableOccupied()
		resolvePolyCollision()
		nearestTo()
		spawnStagehand()
		polyCollision()
		containerOpen()
		pointCollision()
		distance()
		rectTileCollision()
		debugPoly()
		pointTileCollision()
		containerStackItems()
		collisionBlocksAlongLine()
		entityDamageTeam()
		containerAvailable()
		containerItemApply()
		farmableStage()
		containerSize()
		polyContains()
		stagehandType()
		containerItemsCanFit()
		placeMod()
		containerTakeNumItemsAt()
		dayLength()
		callScriptedEntity()
		spawnProjectile()
		containerItemsFitWhere()
		npcLineQuery()
		npcQuery()
		containerTakeAll()
		findPlatformerPath()
		entityDescription()
		xwrap()
		spawnItem()
		containerSwapItemsNoCombine()
		containerAddItems()
		objectSpaces()
		playerQuery()
		containerConsumeAt()
		monsterType()
		entityType()
		containerSwapItems()
		debugText()
		day()
		containerPutItemsAt()
		entitySpecies()
		loungeableQuery()
		lightLevel()
		entityCanDamage()
		underground()
		spawnNpc()
		material()
		monsterQuery()
		objectQuery()
		containerConsume()
		entityLineQuery()
		containerClose()
		entityPosition()
		objectAt()
		containerItems()
	}
	tonumber()
	ic = {
		stripColor()
		giveBack()
		renameThis()
		checkStack()
		sortFunc()
		sort()
		itemAmount()
		amountEquipped()
		sort_relative()
		itemConfig()
		searchBox()
		clientVersion = 1
		quickstack()
		searchButton()
		renameButton()
		lock()
		getQuality()
	}
	assert()
	rawset()
	getmetatable()
	string = {
		rep()
		gmatch()
		reverse()
		pack()
		char()
		sub()
		format()
		byte()
		match()
		dump()
		find()
		unpack()
		packsize()
		upper()
		gsub()
		lower()
		len()
	}
	pcall()
	player = {
		consumeItemWithParameter()
		shipUpgrades()
		altHandItemTags()
		upgradeShip()
		serverUuid()
		gender()
		worldId()
		equippedTech()
		completeMission()
		inventoryTags()
		removeEssentialItem()
		hasItem()
		recordEvent()
		addBookmark()
		lounge()
		cleanupItems()
		consumeItem()
		makeTechUnavailable()
		setUniverseFlag()
		giveBlueprint()
		hasItemWithParameter()
		species()
		playCinematic()
		altHandItem()
		primaryHandItemTags()
		availableTechs()
		enabledTechs()
		enableTech()
		giveItem()
		playTime()
		setIntroComplete()
		essentialItem()
		ownShipWorldId()
		makeTechAvailable()
		warp()
		equipTech()
		startQuest()
		enableMission()
		hasQuest()
		itemsWithTag()
		isLounging()
		primaryHandItem()
		confirm()
		hasCompletedQuest()
		hasCountOfItem()
		equippedItem()
		setEquippedItem()
		radioMessage()
		giveEssentialItem()
		introComplete()
		canStartQuest()
		consumeTaggedItem()
		getItemWithParameter()
	}
	config = {
		getParameter()
	}
	root = {
		questConfig()
		treeFoliageDirectory()
		getConfigurationPath()
		loadVersionedJson()
		materialHealth()
		tenantConfig()
		itemConfig()
		materialMiningSound()
		projectileConfig()
		imageSpaces()
		techType()
		createTreasure()
		materialFootstepSound()
		itemHasTag()
		imageSize()
		treeStemDirectory()
		npcPortrait()
		hasTech()
		getMatchingTenants()
		getConfiguration()
		createItem()
		generateName()
		setConfiguration()
		techConfig()
		materialPath()
		makeCurrentVersionedJson()
		monsterMovementSettings()
		isTreasurePool()
		itemTags()
		itemType()
		evalFunction()
		monsterSkillParameter()
		assetJson()
		setConfigurationPath()
		monsterPortrait()
		recipesForItem()
		createBiome()
		behaviorModule()
		liquidStatusEffects()
		npcConfig()
		nonEmptyRegion()
		evalFunction2()
		projectileGravityMultiplier()
		npcVariant()
	}
	math = {
		tan()
		atan()
		modf()
		exp()
		type()
		acos()
		abs()
		mininteger = -9223372036854775808
		maxinteger = 9223372036854775807
		deg()
		asin()
		randomseed()
		random()
		sqrt()
		huge = inf
		min()
		log()
		pi = 3.1415926535898
		rad()
		max()
		floor()
		ult()
		cos()
		tointeger()
		fmod()
		sin()
		ceil()
	}
	widget = {
		setListSelected()
		setImage()
		setButtonCheckedImages()
		setImageRotation()
		setButtonImage()
		getListSelected()
		itemGridItems()
		addListItem()
		removeListItem()
		setButtonImages()
		blur()
		getData()
		setOptionVisible()
		playSound()
		setChecked()
		getSelectedOption()
		setFontColor()
		setSize()
		setOptionEnabled()
		clearListItems()
		setPosition()
		setProgress()
		getText()
		getSliderValue()
		setButtonEnabled()
		setButtonOverlayImage()
		setData()
		setSelectedOption()
		focus()
		getSize()
		setImageScale()
		setVisible()
		getPosition()
		setText()
		getChecked()
	}
	xpcall()
	setmetatable()
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	status = {
		removeEphemeralEffect()
		resetResource()
		addPersistentEffect()
		addEphemeralEffect()
		resourceMax()
		addPersistentEffects()
		clearEphemeralEffects()
		statPositive()
		modifyResource()
		statusProperty()
		resourcePercentage()
		resource()
		isResource()
		setResourcePercentage()
		getPersistentEffects()
		resourcePositive()
		clearPersistentEffects()
		giveResource()
		overConsumeResource()
		damageTakenSince()
		activeUniqueStatusEffectSummary()
		addEphemeralEffects()
		setStatusProperty()
		resourceLocked()
		modifyResourcePercentage()
		stat()
		clearAllPersistentEffects()
		setResourceLocked()
		resetAllResources()
		resourceNames()
		setPersistentEffects()
		inflictedDamageSince()
		consumeResource()
		inflictedHitsSince()
		setResource()
	}
	utf8 = {
		charpattern = "[
[03:29:04.236] [Warn] 	coroutine = {
		wrap()
		resume()
		create()
		isyieldable()
		status()
		running()
		yield()
	}
	jarray()
	type()
	init()
	require()
	table = {
		insert()
		unpack()
		pack()
		concat()
		sort()
		move()
		remove()
	}
	_VERSION = "Lua 5.3"
	update()
	rawequal()
	world = {
		isMonster()
		entityPortrait()
		entityQuery()
		itemDropQuery()
		entityVelocity()
		damageTiles()
		entityHealth()
		debugPoint()
		debugLine()
		entityExists()
		entityUniqueId()
		timeOfDay()
		entityGender()
		entityAggressive()
		magnitude()
		mod()
		platformerPathStart()
		containerItemAt()
		breathable()
		entityHasCountOfItem()
		npcType()
		sendEntityMessage()
		liquidAt()
		liquidAlongLine()
		isTileProtected()
		destroyLiquid()
		spawnLiquid()
		isNpc()
		getProperty()
		gravity()
		entityMoney()
		objectLineQuery()
		spawnMonster()
		lineCollision()
		lineTileCollision()
		rectCollision()
		getObjectParameter()
		entityHandItem()
		setProperty()
		entityHandItemDescriptor()
		time()
		placeMaterial()
		entityName()
		findUniqueEntity()
		threatLevel()
		placeObject()
		spawnTreasure()
		spawnVehicle()
		damageTileArea()
		windLevel()
		tileIsOccupied()
		containerTakeAt()
		loungeableOccupied()
		resolvePolyCollision()
		nearestTo()
		spawnStagehand()
		polyCollision()
		containerOpen()
		pointCollision()
		distance()
		rectTileCollision()
		debugPoly()
		pointTileCollision()
		containerStackItems()
		collisionBlocksAlongLine()
		entityDamageTeam()
		containerAvailable()
		containerItemApply()
		farmableStage()
		containerSize()
		polyContains()
		stagehandType()
		containerItemsCanFit()
		placeMod()
		containerTakeNumItemsAt()
		dayLength()
		callScriptedEntity()
		spawnProjectile()
		containerItemsFitWhere()
		npcLineQuery()
		npcQuery()
		containerTakeAll()
		findPlatformerPath()
		entityDescription()
		xwrap()
		spawnItem()
		containerSwapItemsNoCombine()
		containerAddItems()
		objectSpaces()
		playerQuery()
		containerConsumeAt()
		monsterType()
		entityType()
		containerSwapItems()
		debugText()
		day()
		containerPutItemsAt()
		entitySpecies()
		loungeableQuery()
		lightLevel()
		entityCanDamage()
		underground()
		spawnNpc()
		material()
		monsterQuery()
		objectQuery()
		containerConsume()
		entityLineQuery()
		containerClose()
		entityPosition()
		objectAt()
		containerItems()
	}
	tonumber()
	ic = {
		stripColor()
		giveBack()
		renameThis()
		checkStack()
		sortFunc()
		sort()
		itemAmount()
		amountEquipped()
		sort_relative()
		itemConfig()
		searchBox()
		clientVersion = 1
		quickstack()
		searchButton()
		renameButton()
		lock()
		getQuality()
	}
	assert()
	rawset()
	getmetatable()
	string = {
		rep()
		gmatch()
		reverse()
		pack()
		char()
		sub()
		format()
		byte()
		match()
		dump()
		find()
		unpack()
		packsize()
		upper()
		gsub()
		lower()
		len()
	}
	pcall()
	player = {
		consumeItemWithParameter()
		shipUpgrades()
		altHandItemTags()
		upgradeShip()
		serverUuid()
		gender()
		worldId()
		equippedTech()
		completeMission()
		inventoryTags()
		removeEssentialItem()
		hasItem()
		recordEvent()
		addBookmark()
		lounge()
		cleanupItems()
		consumeItem()
		makeTechUnavailable()
		setUniverseFlag()
		giveBlueprint()
		hasItemWithParameter()
		species()
		playCinematic()
		altHandItem()
		primaryHandItemTags()
		availableTechs()
		enabledTechs()
		enableTech()
		giveItem()
		playTime()
		setIntroComplete()
		essentialItem()
		ownShipWorldId()
		makeTechAvailable()
		warp()
		equipTech()
		startQuest()
		enableMission()
		hasQuest()
		itemsWithTag()
		isLounging()
		primaryHandItem()
		confirm()
		hasCompletedQuest()
		hasCountOfItem()
		equippedItem()
		setEquippedItem()
		radioMessage()
		giveEssentialItem()
		introComplete()
		canStartQuest()
		consumeTaggedItem()
		getItemWithParameter()
	}
	config = {
		getParameter()
	}
	root = {
		questConfig()
		treeFoliageDirectory()
		getConfigurationPath()
		loadVersionedJson()
		materialHealth()
		tenantConfig()
		itemConfig()
		materialMiningSound()
		projectileConfig()
		imageSpaces()
		techType()
		createTreasure()
		materialFootstepSound()
		itemHasTag()
		imageSize()
		treeStemDirectory()
		npcPortrait()
		hasTech()
		getMatchingTenants()
		getConfiguration()
		createItem()
		generateName()
		setConfiguration()
		techConfig()
		materialPath()
		makeCurrentVersionedJson()
		monsterMovementSettings()
		isTreasurePool()
		itemTags()
		itemType()
		evalFunction()
		monsterSkillParameter()
		assetJson()
		setConfigurationPath()
		monsterPortrait()
		recipesForItem()
		createBiome()
		behaviorModule()
		liquidStatusEffects()
		npcConfig()
		nonEmptyRegion()
		evalFunction2()
		projectileGravityMultiplier()
		npcVariant()
	}
	math = {
		tan()
		atan()
		modf()
		exp()
		type()
		acos()
		abs()
		mininteger = -9223372036854775808
		maxinteger = 9223372036854775807
		deg()
		asin()
		randomseed()
		random()
		sqrt()
		huge = inf
		min()
		log()
		pi = 3.1415926535898
		rad()
		max()
		floor()
		ult()
		cos()
		tointeger()
		fmod()
		sin()
		ceil()
	}
	widget = {
		setListSelected()
		setImage()
		setButtonCheckedImages()
		setImageRotation()
		setButtonImage()
		getListSelected()
		itemGridItems()
		addListItem()
		removeListItem()
		setButtonImages()
		blur()
		getData()
		setOptionVisible()
		playSound()
		setChecked()
		getSelectedOption()
		setFontColor()
		setSize()
		setOptionEnabled()
		clearListItems()
		setPosition()
		setProgress()
		getText()
		getSliderValue()
		setButtonEnabled()
		setButtonOverlayImage()
		setData()
		setSelectedOption()
		focus()
		getSize()
		setImageScale()
		setVisible()
		getPosition()
		setText()
		getChecked()
	}
	xpcall()
	setmetatable()
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	status = {
		removeEphemeralEffect()
		resetResource()
		addPersistentEffect()
		addEphemeralEffect()
		resourceMax()
		addPersistentEffects()
		clearEphemeralEffects()
		statPositive()
		modifyResource()
		statusProperty()
		resourcePercentage()
		resource()
		isResource()
		setResourcePercentage()
		getPersistentEffects()
		resourcePositive()
		clearPersistentEffects()
		giveResource()
		overConsumeResource()
		damageTakenSince()
		activeUniqueStatusEffectSummary()
		addEphemeralEffects()
		setStatusProperty()
		resourceLocked()
		modifyResourcePercentage()
		stat()
		clearAllPersistentEffects()
		setResourceLocked()
		resetAllResources()
		resourceNames()
		setPersistentEffects()
		inflictedDamageSince()
		consumeResource()
		inflictedHitsSince()
		setResource()
	}
	utf8 = {
		charpattern = "[
[03:29:43.298] [Warn] 	coroutine = {
		wrap()
		resume()
		create()
		isyieldable()
		status()
		running()
		yield()
	}
	jarray()
	type()
	init()
	require()
	table = {
		insert()
		unpack()
		pack()
		concat()
		sort()
		move()
		remove()
	}
	_VERSION = "Lua 5.3"
	update()
	rawequal()
	world = {
		isMonster()
		entityPortrait()
		entityQuery()
		itemDropQuery()
		entityVelocity()
		damageTiles()
		entityHealth()
		debugPoint()
		debugLine()
		entityExists()
		entityUniqueId()
		timeOfDay()
		entityGender()
		entityAggressive()
		magnitude()
		mod()
		platformerPathStart()
		containerItemAt()
		breathable()
		entityHasCountOfItem()
		npcType()
		sendEntityMessage()
		liquidAt()
		liquidAlongLine()
		isTileProtected()
		destroyLiquid()
		spawnLiquid()
		isNpc()
		getProperty()
		gravity()
		entityMoney()
		objectLineQuery()
		spawnMonster()
		lineCollision()
		lineTileCollision()
		rectCollision()
		getObjectParameter()
		entityHandItem()
		setProperty()
		entityHandItemDescriptor()
		time()
		placeMaterial()
		entityName()
		findUniqueEntity()
		threatLevel()
		placeObject()
		spawnTreasure()
		spawnVehicle()
		damageTileArea()
		windLevel()
		tileIsOccupied()
		containerTakeAt()
		loungeableOccupied()
		resolvePolyCollision()
		nearestTo()
		spawnStagehand()
		polyCollision()
		containerOpen()
		pointCollision()
		distance()
		rectTileCollision()
		debugPoly()
		pointTileCollision()
		containerStackItems()
		collisionBlocksAlongLine()
		entityDamageTeam()
		containerAvailable()
		containerItemApply()
		farmableStage()
		containerSize()
		polyContains()
		stagehandType()
		containerItemsCanFit()
		placeMod()
		containerTakeNumItemsAt()
		dayLength()
		callScriptedEntity()
		spawnProjectile()
		containerItemsFitWhere()
		npcLineQuery()
		npcQuery()
		containerTakeAll()
		findPlatformerPath()
		entityDescription()
		xwrap()
		spawnItem()
		containerSwapItemsNoCombine()
		containerAddItems()
		objectSpaces()
		playerQuery()
		containerConsumeAt()
		monsterType()
		entityType()
		containerSwapItems()
		debugText()
		day()
		containerPutItemsAt()
		entitySpecies()
		loungeableQuery()
		lightLevel()
		entityCanDamage()
		underground()
		spawnNpc()
		material()
		monsterQuery()
		objectQuery()
		containerConsume()
		entityLineQuery()
		containerClose()
		entityPosition()
		objectAt()
		containerItems()
	}
	tonumber()
	ic = {
		stripColor()
		giveBack()
		renameThis()
		checkStack()
		sortFunc()
		sort()
		itemAmount()
		amountEquipped()
		sort_relative()
		itemConfig()
		searchBox()
		clientVersion = 1
		quickstack()
		searchButton()
		renameButton()
		lock()
		getQuality()
	}
	assert()
	rawset()
	getmetatable()
	string = {
		rep()
		gmatch()
		reverse()
		pack()
		char()
		sub()
		format()
		byte()
		match()
		dump()
		find()
		unpack()
		packsize()
		upper()
		gsub()
		lower()
		len()
	}
	pcall()
	player = {
		consumeItemWithParameter()
		shipUpgrades()
		altHandItemTags()
		upgradeShip()
		serverUuid()
		gender()
		worldId()
		equippedTech()
		completeMission()
		inventoryTags()
		removeEssentialItem()
		hasItem()
		recordEvent()
		addBookmark()
		lounge()
		cleanupItems()
		consumeItem()
		makeTechUnavailable()
		setUniverseFlag()
		giveBlueprint()
		hasItemWithParameter()
		species()
		playCinematic()
		altHandItem()
		primaryHandItemTags()
		availableTechs()
		enabledTechs()
		enableTech()
		giveItem()
		playTime()
		setIntroComplete()
		essentialItem()
		ownShipWorldId()
		makeTechAvailable()
		warp()
		equipTech()
		startQuest()
		enableMission()
		hasQuest()
		itemsWithTag()
		isLounging()
		primaryHandItem()
		confirm()
		hasCompletedQuest()
		hasCountOfItem()
		equippedItem()
		setEquippedItem()
		radioMessage()
		giveEssentialItem()
		introComplete()
		canStartQuest()
		consumeTaggedItem()
		getItemWithParameter()
	}
	config = {
		getParameter()
	}
	root = {
		questConfig()
		treeFoliageDirectory()
		getConfigurationPath()
		loadVersionedJson()
		materialHealth()
		tenantConfig()
		itemConfig()
		materialMiningSound()
		projectileConfig()
		imageSpaces()
		techType()
		createTreasure()
		materialFootstepSound()
		itemHasTag()
		imageSize()
		treeStemDirectory()
		npcPortrait()
		hasTech()
		getMatchingTenants()
		getConfiguration()
		createItem()
		generateName()
		setConfiguration()
		techConfig()
		materialPath()
		makeCurrentVersionedJson()
		monsterMovementSettings()
		isTreasurePool()
		itemTags()
		itemType()
		evalFunction()
		monsterSkillParameter()
		assetJson()
		setConfigurationPath()
		monsterPortrait()
		recipesForItem()
		createBiome()
		behaviorModule()
		liquidStatusEffects()
		npcConfig()
		nonEmptyRegion()
		evalFunction2()
		projectileGravityMultiplier()
		npcVariant()
	}
	math = {
		tan()
		atan()
		modf()
		exp()
		type()
		acos()
		abs()
		mininteger = -9223372036854775808
		maxinteger = 9223372036854775807
		deg()
		asin()
		randomseed()
		random()
		sqrt()
		huge = inf
		min()
		log()
		pi = 3.1415926535898
		rad()
		max()
		floor()
		ult()
		cos()
		tointeger()
		fmod()
		sin()
		ceil()
	}
	widget = {
		setListSelected()
		setImage()
		setButtonCheckedImages()
		setImageRotation()
		setButtonImage()
		getListSelected()
		itemGridItems()
		addListItem()
		removeListItem()
		setButtonImages()
		blur()
		getData()
		setOptionVisible()
		playSound()
		setChecked()
		getSelectedOption()
		setFontColor()
		setSize()
		setOptionEnabled()
		clearListItems()
		setPosition()
		setProgress()
		getText()
		getSliderValue()
		setButtonEnabled()
		setButtonOverlayImage()
		setData()
		setSelectedOption()
		focus()
		getSize()
		setImageScale()
		setVisible()
		getPosition()
		setText()
		getChecked()
	}
	xpcall()
	setmetatable()
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	status = {
		removeEphemeralEffect()
		resetResource()
		addPersistentEffect()
		addEphemeralEffect()
		resourceMax()
		addPersistentEffects()
		clearEphemeralEffects()
		statPositive()
		modifyResource()
		statusProperty()
		resourcePercentage()
		resource()
		isResource()
		setResourcePercentage()
		getPersistentEffects()
		resourcePositive()
		clearPersistentEffects()
		giveResource()
		overConsumeResource()
		damageTakenSince()
		activeUniqueStatusEffectSummary()
		addEphemeralEffects()
		setStatusProperty()
		resourceLocked()
		modifyResourcePercentage()
		stat()
		clearAllPersistentEffects()
		setResourceLocked()
		resetAllResources()
		resourceNames()
		setPersistentEffects()
		inflictedDamageSince()
		consumeResource()
		inflictedHitsSince()
		setResource()
	}
	utf8 = {
		charpattern = "[
[03:29:44.750] [Warn] 	coroutine = {
		wrap()
		resume()
		create()
		isyieldable()
		status()
		running()
		yield()
	}
	jarray()
	type()
	init()
	require()
	table = {
		insert()
		unpack()
		pack()
		concat()
		sort()
		move()
		remove()
	}
	_VERSION = "Lua 5.3"
	update()
	rawequal()
	world = {
		isMonster()
		entityPortrait()
		entityQuery()
		itemDropQuery()
		entityVelocity()
		damageTiles()
		entityHealth()
		debugPoint()
		debugLine()
		entityExists()
		entityUniqueId()
		timeOfDay()
		entityGender()
		entityAggressive()
		magnitude()
		mod()
		platformerPathStart()
		containerItemAt()
		breathable()
		entityHasCountOfItem()
		npcType()
		sendEntityMessage()
		liquidAt()
		liquidAlongLine()
		isTileProtected()
		destroyLiquid()
		spawnLiquid()
		isNpc()
		getProperty()
		gravity()
		entityMoney()
		objectLineQuery()
		spawnMonster()
		lineCollision()
		lineTileCollision()
		rectCollision()
		getObjectParameter()
		entityHandItem()
		setProperty()
		entityHandItemDescriptor()
		time()
		placeMaterial()
		entityName()
		findUniqueEntity()
		threatLevel()
		placeObject()
		spawnTreasure()
		spawnVehicle()
		damageTileArea()
		windLevel()
		tileIsOccupied()
		containerTakeAt()
		loungeableOccupied()
		resolvePolyCollision()
		nearestTo()
		spawnStagehand()
		polyCollision()
		containerOpen()
		pointCollision()
		distance()
		rectTileCollision()
		debugPoly()
		pointTileCollision()
		containerStackItems()
		collisionBlocksAlongLine()
		entityDamageTeam()
		containerAvailable()
		containerItemApply()
		farmableStage()
		containerSize()
		polyContains()
		stagehandType()
		containerItemsCanFit()
		placeMod()
		containerTakeNumItemsAt()
		dayLength()
		callScriptedEntity()
		spawnProjectile()
		containerItemsFitWhere()
		npcLineQuery()
		npcQuery()
		containerTakeAll()
		findPlatformerPath()
		entityDescription()
		xwrap()
		spawnItem()
		containerSwapItemsNoCombine()
		containerAddItems()
		objectSpaces()
		playerQuery()
		containerConsumeAt()
		monsterType()
		entityType()
		containerSwapItems()
		debugText()
		day()
		containerPutItemsAt()
		entitySpecies()
		loungeableQuery()
		lightLevel()
		entityCanDamage()
		underground()
		spawnNpc()
		material()
		monsterQuery()
		objectQuery()
		containerConsume()
		entityLineQuery()
		containerClose()
		entityPosition()
		objectAt()
		containerItems()
	}
	tonumber()
	ic = {
		stripColor()
		giveBack()
		renameThis()
		checkStack()
		sortFunc()
		sort()
		itemAmount()
		amountEquipped()
		sort_relative()
		itemConfig()
		searchBox()
		clientVersion = 1
		quickstack()
		searchButton()
		renameButton()
		lock()
		getQuality()
	}
	assert()
	rawset()
	getmetatable()
	string = {
		rep()
		gmatch()
		reverse()
		pack()
		char()
		sub()
		format()
		byte()
		match()
		dump()
		find()
		unpack()
		packsize()
		upper()
		gsub()
		lower()
		len()
	}
	pcall()
	player = {
		consumeItemWithParameter()
		shipUpgrades()
		altHandItemTags()
		upgradeShip()
		serverUuid()
		gender()
		worldId()
		equippedTech()
		completeMission()
		inventoryTags()
		removeEssentialItem()
		hasItem()
		recordEvent()
		addBookmark()
		lounge()
		cleanupItems()
		consumeItem()
		makeTechUnavailable()
		setUniverseFlag()
		giveBlueprint()
		hasItemWithParameter()
		species()
		playCinematic()
		altHandItem()
		primaryHandItemTags()
		availableTechs()
		enabledTechs()
		enableTech()
		giveItem()
		playTime()
		setIntroComplete()
		essentialItem()
		ownShipWorldId()
		makeTechAvailable()
		warp()
		equipTech()
		startQuest()
		enableMission()
		hasQuest()
		itemsWithTag()
		isLounging()
		primaryHandItem()
		confirm()
		hasCompletedQuest()
		hasCountOfItem()
		equippedItem()
		setEquippedItem()
		radioMessage()
		giveEssentialItem()
		introComplete()
		canStartQuest()
		consumeTaggedItem()
		getItemWithParameter()
	}
	config = {
		getParameter()
	}
	root = {
		questConfig()
		treeFoliageDirectory()
		getConfigurationPath()
		loadVersionedJson()
		materialHealth()
		tenantConfig()
		itemConfig()
		materialMiningSound()
		projectileConfig()
		imageSpaces()
		techType()
		createTreasure()
		materialFootstepSound()
		itemHasTag()
		imageSize()
		treeStemDirectory()
		npcPortrait()
		hasTech()
		getMatchingTenants()
		getConfiguration()
		createItem()
		generateName()
		setConfiguration()
		techConfig()
		materialPath()
		makeCurrentVersionedJson()
		monsterMovementSettings()
		isTreasurePool()
		itemTags()
		itemType()
		evalFunction()
		monsterSkillParameter()
		assetJson()
		setConfigurationPath()
		monsterPortrait()
		recipesForItem()
		createBiome()
		behaviorModule()
		liquidStatusEffects()
		npcConfig()
		nonEmptyRegion()
		evalFunction2()
		projectileGravityMultiplier()
		npcVariant()
	}
	math = {
		tan()
		atan()
		modf()
		exp()
		type()
		acos()
		abs()
		mininteger = -9223372036854775808
		maxinteger = 9223372036854775807
		deg()
		asin()
		randomseed()
		random()
		sqrt()
		huge = inf
		min()
		log()
		pi = 3.1415926535898
		rad()
		max()
		floor()
		ult()
		cos()
		tointeger()
		fmod()
		sin()
		ceil()
	}
	widget = {
		setListSelected()
		setImage()
		setButtonCheckedImages()
		setImageRotation()
		setButtonImage()
		getListSelected()
		itemGridItems()
		addListItem()
		removeListItem()
		setButtonImages()
		blur()
		getData()
		setOptionVisible()
		playSound()
		setChecked()
		getSelectedOption()
		setFontColor()
		setSize()
		setOptionEnabled()
		clearListItems()
		setPosition()
		setProgress()
		getText()
		getSliderValue()
		setButtonEnabled()
		setButtonOverlayImage()
		setData()
		setSelectedOption()
		focus()
		getSize()
		setImageScale()
		setVisible()
		getPosition()
		setText()
		getChecked()
	}
	xpcall()
	setmetatable()
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	status = {
		removeEphemeralEffect()
		resetResource()
		addPersistentEffect()
		addEphemeralEffect()
		resourceMax()
		addPersistentEffects()
		clearEphemeralEffects()
		statPositive()
		modifyResource()
		statusProperty()
		resourcePercentage()
		resource()
		isResource()
		setResourcePercentage()
		getPersistentEffects()
		resourcePositive()
		clearPersistentEffects()
		giveResource()
		overConsumeResource()
		damageTakenSince()
		activeUniqueStatusEffectSummary()
		addEphemeralEffects()
		setStatusProperty()
		resourceLocked()
		modifyResourcePercentage()
		stat()
		clearAllPersistentEffects()
		setResourceLocked()
		resetAllResources()
		resourceNames()
		setPersistentEffects()
		inflictedDamageSince()
		consumeResource()
		inflictedHitsSince()
		setResource()
	}
	utf8 = {
		charpattern = "[
[03:29:46.106] [Warn] 	coroutine = {
		wrap()
		resume()
		create()
		isyieldable()
		status()
		running()
		yield()
	}
	jarray()
	type()
	init()
	require()
	table = {
		insert()
		unpack()
		pack()
		concat()
		sort()
		move()
		remove()
	}
	_VERSION = "Lua 5.3"
	update()
	rawequal()
	world = {
		isMonster()
		entityPortrait()
		entityQuery()
		itemDropQuery()
		entityVelocity()
		damageTiles()
		entityHealth()
		debugPoint()
		debugLine()
		entityExists()
		entityUniqueId()
		timeOfDay()
		entityGender()
		entityAggressive()
		magnitude()
		mod()
		platformerPathStart()
		containerItemAt()
		breathable()
		entityHasCountOfItem()
		npcType()
		sendEntityMessage()
		liquidAt()
		liquidAlongLine()
		isTileProtected()
		destroyLiquid()
		spawnLiquid()
		isNpc()
		getProperty()
		gravity()
		entityMoney()
		objectLineQuery()
		spawnMonster()
		lineCollision()
		lineTileCollision()
		rectCollision()
		getObjectParameter()
		entityHandItem()
		setProperty()
		entityHandItemDescriptor()
		time()
		placeMaterial()
		entityName()
		findUniqueEntity()
		threatLevel()
		placeObject()
		spawnTreasure()
		spawnVehicle()
		damageTileArea()
		windLevel()
		tileIsOccupied()
		containerTakeAt()
		loungeableOccupied()
		resolvePolyCollision()
		nearestTo()
		spawnStagehand()
		polyCollision()
		containerOpen()
		pointCollision()
		distance()
		rectTileCollision()
		debugPoly()
		pointTileCollision()
		containerStackItems()
		collisionBlocksAlongLine()
		entityDamageTeam()
		containerAvailable()
		containerItemApply()
		farmableStage()
		containerSize()
		polyContains()
		stagehandType()
		containerItemsCanFit()
		placeMod()
		containerTakeNumItemsAt()
		dayLength()
		callScriptedEntity()
		spawnProjectile()
		containerItemsFitWhere()
		npcLineQuery()
		npcQuery()
		containerTakeAll()
		findPlatformerPath()
		entityDescription()
		xwrap()
		spawnItem()
		containerSwapItemsNoCombine()
		containerAddItems()
		objectSpaces()
		playerQuery()
		containerConsumeAt()
		monsterType()
		entityType()
		containerSwapItems()
		debugText()
		day()
		containerPutItemsAt()
		entitySpecies()
		loungeableQuery()
		lightLevel()
		entityCanDamage()
		underground()
		spawnNpc()
		material()
		monsterQuery()
		objectQuery()
		containerConsume()
		entityLineQuery()
		containerClose()
		entityPosition()
		objectAt()
		containerItems()
	}
	tonumber()
	ic = {
		stripColor()
		giveBack()
		renameThis()
		checkStack()
		sortFunc()
		sort()
		itemAmount()
		amountEquipped()
		sort_relative()
		itemConfig()
		searchBox()
		clientVersion = 1
		quickstack()
		searchButton()
		renameButton()
		lock()
		getQuality()
	}
	assert()
	rawset()
	getmetatable()
	string = {
		rep()
		gmatch()
		reverse()
		pack()
		char()
		sub()
		format()
		byte()
		match()
		dump()
		find()
		unpack()
		packsize()
		upper()
		gsub()
		lower()
		len()
	}
	pcall()
	player = {
		consumeItemWithParameter()
		shipUpgrades()
		altHandItemTags()
		upgradeShip()
		serverUuid()
		gender()
		worldId()
		equippedTech()
		completeMission()
		inventoryTags()
		removeEssentialItem()
		hasItem()
		recordEvent()
		addBookmark()
		lounge()
		cleanupItems()
		consumeItem()
		makeTechUnavailable()
		setUniverseFlag()
		giveBlueprint()
		hasItemWithParameter()
		species()
		playCinematic()
		altHandItem()
		primaryHandItemTags()
		availableTechs()
		enabledTechs()
		enableTech()
		giveItem()
		playTime()
		setIntroComplete()
		essentialItem()
		ownShipWorldId()
		makeTechAvailable()
		warp()
		equipTech()
		startQuest()
		enableMission()
		hasQuest()
		itemsWithTag()
		isLounging()
		primaryHandItem()
		confirm()
		hasCompletedQuest()
		hasCountOfItem()
		equippedItem()
		setEquippedItem()
		radioMessage()
		giveEssentialItem()
		introComplete()
		canStartQuest()
		consumeTaggedItem()
		getItemWithParameter()
	}
	config = {
		getParameter()
	}
	root = {
		questConfig()
		treeFoliageDirectory()
		getConfigurationPath()
		loadVersionedJson()
		materialHealth()
		tenantConfig()
		itemConfig()
		materialMiningSound()
		projectileConfig()
		imageSpaces()
		techType()
		createTreasure()
		materialFootstepSound()
		itemHasTag()
		imageSize()
		treeStemDirectory()
		npcPortrait()
		hasTech()
		getMatchingTenants()
		getConfiguration()
		createItem()
		generateName()
		setConfiguration()
		techConfig()
		materialPath()
		makeCurrentVersionedJson()
		monsterMovementSettings()
		isTreasurePool()
		itemTags()
		itemType()
		evalFunction()
		monsterSkillParameter()
		assetJson()
		setConfigurationPath()
		monsterPortrait()
		recipesForItem()
		createBiome()
		behaviorModule()
		liquidStatusEffects()
		npcConfig()
		nonEmptyRegion()
		evalFunction2()
		projectileGravityMultiplier()
		npcVariant()
	}
	math = {
		tan()
		atan()
		modf()
		exp()
		type()
		acos()
		abs()
		mininteger = -9223372036854775808
		maxinteger = 9223372036854775807
		deg()
		asin()
		randomseed()
		random()
		sqrt()
		huge = inf
		min()
		log()
		pi = 3.1415926535898
		rad()
		max()
		floor()
		ult()
		cos()
		tointeger()
		fmod()
		sin()
		ceil()
	}
	widget = {
		setListSelected()
		setImage()
		setButtonCheckedImages()
		setImageRotation()
		setButtonImage()
		getListSelected()
		itemGridItems()
		addListItem()
		removeListItem()
		setButtonImages()
		blur()
		getData()
		setOptionVisible()
		playSound()
		setChecked()
		getSelectedOption()
		setFontColor()
		setSize()
		setOptionEnabled()
		clearListItems()
		setPosition()
		setProgress()
		getText()
		getSliderValue()
		setButtonEnabled()
		setButtonOverlayImage()
		setData()
		setSelectedOption()
		focus()
		getSize()
		setImageScale()
		setVisible()
		getPosition()
		setText()
		getChecked()
	}
	xpcall()
	setmetatable()
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	status = {
		removeEphemeralEffect()
		resetResource()
		addPersistentEffect()
		addEphemeralEffect()
		resourceMax()
		addPersistentEffects()
		clearEphemeralEffects()
		statPositive()
		modifyResource()
		statusProperty()
		resourcePercentage()
		resource()
		isResource()
		setResourcePercentage()
		getPersistentEffects()
		resourcePositive()
		clearPersistentEffects()
		giveResource()
		overConsumeResource()
		damageTakenSince()
		activeUniqueStatusEffectSummary()
		addEphemeralEffects()
		setStatusProperty()
		resourceLocked()
		modifyResourcePercentage()
		stat()
		clearAllPersistentEffects()
		setResourceLocked()
		resetAllResources()
		resourceNames()
		setPersistentEffects()
		inflictedDamageSince()
		consumeResource()
		inflictedHitsSince()
		setResource()
	}
	utf8 = {
		charpattern = "[
[03:29:47.964] [Warn] 	coroutine = {
		wrap()
		resume()
		create()
		isyieldable()
		status()
		running()
		yield()
	}
	jarray()
	type()
	init()
	require()
	table = {
		insert()
		unpack()
		pack()
		concat()
		sort()
		move()
		remove()
	}
	_VERSION = "Lua 5.3"
	update()
	rawequal()
	world = {
		isMonster()
		entityPortrait()
		entityQuery()
		itemDropQuery()
		entityVelocity()
		damageTiles()
		entityHealth()
		debugPoint()
		debugLine()
		entityExists()
		entityUniqueId()
		timeOfDay()
		entityGender()
		entityAggressive()
		magnitude()
		mod()
		platformerPathStart()
		containerItemAt()
		breathable()
		entityHasCountOfItem()
		npcType()
		sendEntityMessage()
		liquidAt()
		liquidAlongLine()
		isTileProtected()
		destroyLiquid()
		spawnLiquid()
		isNpc()
		getProperty()
		gravity()
		entityMoney()
		objectLineQuery()
		spawnMonster()
		lineCollision()
		lineTileCollision()
		rectCollision()
		getObjectParameter()
		entityHandItem()
		setProperty()
		entityHandItemDescriptor()
		time()
		placeMaterial()
		entityName()
		findUniqueEntity()
		threatLevel()
		placeObject()
		spawnTreasure()
		spawnVehicle()
		damageTileArea()
		windLevel()
		tileIsOccupied()
		containerTakeAt()
		loungeableOccupied()
		resolvePolyCollision()
		nearestTo()
		spawnStagehand()
		polyCollision()
		containerOpen()
		pointCollision()
		distance()
		rectTileCollision()
		debugPoly()
		pointTileCollision()
		containerStackItems()
		collisionBlocksAlongLine()
		entityDamageTeam()
		containerAvailable()
		containerItemApply()
		farmableStage()
		containerSize()
		polyContains()
		stagehandType()
		containerItemsCanFit()
		placeMod()
		containerTakeNumItemsAt()
		dayLength()
		callScriptedEntity()
		spawnProjectile()
		containerItemsFitWhere()
		npcLineQuery()
		npcQuery()
		containerTakeAll()
		findPlatformerPath()
		entityDescription()
		xwrap()
		spawnItem()
		containerSwapItemsNoCombine()
		containerAddItems()
		objectSpaces()
		playerQuery()
		containerConsumeAt()
		monsterType()
		entityType()
		containerSwapItems()
		debugText()
		day()
		containerPutItemsAt()
		entitySpecies()
		loungeableQuery()
		lightLevel()
		entityCanDamage()
		underground()
		spawnNpc()
		material()
		monsterQuery()
		objectQuery()
		containerConsume()
		entityLineQuery()
		containerClose()
		entityPosition()
		objectAt()
		containerItems()
	}
	tonumber()
	ic = {
		stripColor()
		giveBack()
		renameThis()
		checkStack()
		sortFunc()
		sort()
		itemAmount()
		amountEquipped()
		sort_relative()
		itemConfig()
		searchBox()
		clientVersion = 1
		quickstack()
		searchButton()
		renameButton()
		lock()
		getQuality()
	}
	assert()
	rawset()
	getmetatable()
	string = {
		rep()
		gmatch()
		reverse()
		pack()
		char()
		sub()
		format()
		byte()
		match()
		dump()
		find()
		unpack()
		packsize()
		upper()
		gsub()
		lower()
		len()
	}
	pcall()
	player = {
		consumeItemWithParameter()
		shipUpgrades()
		altHandItemTags()
		upgradeShip()
		serverUuid()
		gender()
		worldId()
		equippedTech()
		completeMission()
		inventoryTags()
		removeEssentialItem()
		hasItem()
		recordEvent()
		addBookmark()
		lounge()
		cleanupItems()
		consumeItem()
		makeTechUnavailable()
		setUniverseFlag()
		giveBlueprint()
		hasItemWithParameter()
		species()
		playCinematic()
		altHandItem()
		primaryHandItemTags()
		availableTechs()
		enabledTechs()
		enableTech()
		giveItem()
		playTime()
		setIntroComplete()
		essentialItem()
		ownShipWorldId()
		makeTechAvailable()
		warp()
		equipTech()
		startQuest()
		enableMission()
		hasQuest()
		itemsWithTag()
		isLounging()
		primaryHandItem()
		confirm()
		hasCompletedQuest()
		hasCountOfItem()
		equippedItem()
		setEquippedItem()
		radioMessage()
		giveEssentialItem()
		introComplete()
		canStartQuest()
		consumeTaggedItem()
		getItemWithParameter()
	}
	config = {
		getParameter()
	}
	root = {
		questConfig()
		treeFoliageDirectory()
		getConfigurationPath()
		loadVersionedJson()
		materialHealth()
		tenantConfig()
		itemConfig()
		materialMiningSound()
		projectileConfig()
		imageSpaces()
		techType()
		createTreasure()
		materialFootstepSound()
		itemHasTag()
		imageSize()
		treeStemDirectory()
		npcPortrait()
		hasTech()
		getMatchingTenants()
		getConfiguration()
		createItem()
		generateName()
		setConfiguration()
		techConfig()
		materialPath()
		makeCurrentVersionedJson()
		monsterMovementSettings()
		isTreasurePool()
		itemTags()
		itemType()
		evalFunction()
		monsterSkillParameter()
		assetJson()
		setConfigurationPath()
		monsterPortrait()
		recipesForItem()
		createBiome()
		behaviorModule()
		liquidStatusEffects()
		npcConfig()
		nonEmptyRegion()
		evalFunction2()
		projectileGravityMultiplier()
		npcVariant()
	}
	math = {
		tan()
		atan()
		modf()
		exp()
		type()
		acos()
		abs()
		mininteger = -9223372036854775808
		maxinteger = 9223372036854775807
		deg()
		asin()
		randomseed()
		random()
		sqrt()
		huge = inf
		min()
		log()
		pi = 3.1415926535898
		rad()
		max()
		floor()
		ult()
		cos()
		tointeger()
		fmod()
		sin()
		ceil()
	}
	widget = {
		setListSelected()
		setImage()
		setButtonCheckedImages()
		setImageRotation()
		setButtonImage()
		getListSelected()
		itemGridItems()
		addListItem()
		removeListItem()
		setButtonImages()
		blur()
		getData()
		setOptionVisible()
		playSound()
		setChecked()
		getSelectedOption()
		setFontColor()
		setSize()
		setOptionEnabled()
		clearListItems()
		setPosition()
		setProgress()
		getText()
		getSliderValue()
		setButtonEnabled()
		setButtonOverlayImage()
		setData()
		setSelectedOption()
		focus()
		getSize()
		setImageScale()
		setVisible()
		getPosition()
		setText()
		getChecked()
	}
	xpcall()
	setmetatable()
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	status = {
		removeEphemeralEffect()
		resetResource()
		addPersistentEffect()
		addEphemeralEffect()
		resourceMax()
		addPersistentEffects()
		clearEphemeralEffects()
		statPositive()
		modifyResource()
		statusProperty()
		resourcePercentage()
		resource()
		isResource()
		setResourcePercentage()
		getPersistentEffects()
		resourcePositive()
		clearPersistentEffects()
		giveResource()
		overConsumeResource()
		damageTakenSince()
		activeUniqueStatusEffectSummary()
		addEphemeralEffects()
		setStatusProperty()
		resourceLocked()
		modifyResourcePercentage()
		stat()
		clearAllPersistentEffects()
		setResourceLocked()
		resetAllResources()
		resourceNames()
		setPersistentEffects()
		inflictedDamageSince()
		consumeResource()
		inflictedHitsSince()
		setResource()
	}
	utf8 = {
		charpattern = "[
[03:29:49.125] [Info] [IC] [Sort] Time elapsed: 0.002
[03:29:50.273] [Warn] 	coroutine = {
		wrap()
		resume()
		create()
		isyieldable()
		status()
		running()
		yield()
	}
	jarray()
	type()
	init()
	require()
	table = {
		insert()
		unpack()
		pack()
		concat()
		sort()
		move()
		remove()
	}
	_VERSION = "Lua 5.3"
	update()
	rawequal()
	world = {
		isMonster()
		entityPortrait()
		entityQuery()
		itemDropQuery()
		entityVelocity()
		damageTiles()
		entityHealth()
		debugPoint()
		debugLine()
		entityExists()
		entityUniqueId()
		timeOfDay()
		entityGender()
		entityAggressive()
		magnitude()
		mod()
		platformerPathStart()
		containerItemAt()
		breathable()
		entityHasCountOfItem()
		npcType()
		sendEntityMessage()
		liquidAt()
		liquidAlongLine()
		isTileProtected()
		destroyLiquid()
		spawnLiquid()
		isNpc()
		getProperty()
		gravity()
		entityMoney()
		objectLineQuery()
		spawnMonster()
		lineCollision()
		lineTileCollision()
		rectCollision()
		getObjectParameter()
		entityHandItem()
		setProperty()
		entityHandItemDescriptor()
		time()
		placeMaterial()
		entityName()
		findUniqueEntity()
		threatLevel()
		placeObject()
		spawnTreasure()
		spawnVehicle()
		damageTileArea()
		windLevel()
		tileIsOccupied()
		containerTakeAt()
		loungeableOccupied()
		resolvePolyCollision()
		nearestTo()
		spawnStagehand()
		polyCollision()
		containerOpen()
		pointCollision()
		distance()
		rectTileCollision()
		debugPoly()
		pointTileCollision()
		containerStackItems()
		collisionBlocksAlongLine()
		entityDamageTeam()
		containerAvailable()
		containerItemApply()
		farmableStage()
		containerSize()
		polyContains()
		stagehandType()
		containerItemsCanFit()
		placeMod()
		containerTakeNumItemsAt()
		dayLength()
		callScriptedEntity()
		spawnProjectile()
		containerItemsFitWhere()
		npcLineQuery()
		npcQuery()
		containerTakeAll()
		findPlatformerPath()
		entityDescription()
		xwrap()
		spawnItem()
		containerSwapItemsNoCombine()
		containerAddItems()
		objectSpaces()
		playerQuery()
		containerConsumeAt()
		monsterType()
		entityType()
		containerSwapItems()
		debugText()
		day()
		containerPutItemsAt()
		entitySpecies()
		loungeableQuery()
		lightLevel()
		entityCanDamage()
		underground()
		spawnNpc()
		material()
		monsterQuery()
		objectQuery()
		containerConsume()
		entityLineQuery()
		containerClose()
		entityPosition()
		objectAt()
		containerItems()
	}
	tonumber()
	ic = {
		stripColor()
		giveBack()
		renameThis()
		checkStack()
		sortFunc()
		sort()
		itemAmount()
		amountEquipped()
		sort_relative()
		itemConfig()
		searchBox()
		clientVersion = 1
		quickstack()
		searchButton()
		renameButton()
		lock()
		getQuality()
	}
	assert()
	rawset()
	getmetatable()
	string = {
		rep()
		gmatch()
		reverse()
		pack()
		char()
		sub()
		format()
		byte()
		match()
		dump()
		find()
		unpack()
		packsize()
		upper()
		gsub()
		lower()
		len()
	}
	pcall()
	player = {
		consumeItemWithParameter()
		shipUpgrades()
		altHandItemTags()
		upgradeShip()
		serverUuid()
		gender()
		worldId()
		equippedTech()
		completeMission()
		inventoryTags()
		removeEssentialItem()
		hasItem()
		recordEvent()
		addBookmark()
		lounge()
		cleanupItems()
		consumeItem()
		makeTechUnavailable()
		setUniverseFlag()
		giveBlueprint()
		hasItemWithParameter()
		species()
		playCinematic()
		altHandItem()
		primaryHandItemTags()
		availableTechs()
		enabledTechs()
		enableTech()
		giveItem()
		playTime()
		setIntroComplete()
		essentialItem()
		ownShipWorldId()
		makeTechAvailable()
		warp()
		equipTech()
		startQuest()
		enableMission()
		hasQuest()
		itemsWithTag()
		isLounging()
		primaryHandItem()
		confirm()
		hasCompletedQuest()
		hasCountOfItem()
		equippedItem()
		setEquippedItem()
		radioMessage()
		giveEssentialItem()
		introComplete()
		canStartQuest()
		consumeTaggedItem()
		getItemWithParameter()
	}
	config = {
		getParameter()
	}
	root = {
		questConfig()
		treeFoliageDirectory()
		getConfigurationPath()
		loadVersionedJson()
		materialHealth()
		tenantConfig()
		itemConfig()
		materialMiningSound()
		projectileConfig()
		imageSpaces()
		techType()
		createTreasure()
		materialFootstepSound()
		itemHasTag()
		imageSize()
		treeStemDirectory()
		npcPortrait()
		hasTech()
		getMatchingTenants()
		getConfiguration()
		createItem()
		generateName()
		setConfiguration()
		techConfig()
		materialPath()
		makeCurrentVersionedJson()
		monsterMovementSettings()
		isTreasurePool()
		itemTags()
		itemType()
		evalFunction()
		monsterSkillParameter()
		assetJson()
		setConfigurationPath()
		monsterPortrait()
		recipesForItem()
		createBiome()
		behaviorModule()
		liquidStatusEffects()
		npcConfig()
		nonEmptyRegion()
		evalFunction2()
		projectileGravityMultiplier()
		npcVariant()
	}
	math = {
		tan()
		atan()
		modf()
		exp()
		type()
		acos()
		abs()
		mininteger = -9223372036854775808
		maxinteger = 9223372036854775807
		deg()
		asin()
		randomseed()
		random()
		sqrt()
		huge = inf
		min()
		log()
		pi = 3.1415926535898
		rad()
		max()
		floor()
		ult()
		cos()
		tointeger()
		fmod()
		sin()
		ceil()
	}
	widget = {
		setListSelected()
		setImage()
		setButtonCheckedImages()
		setImageRotation()
		setButtonImage()
		getListSelected()
		itemGridItems()
		addListItem()
		removeListItem()
		setButtonImages()
		blur()
		getData()
		setOptionVisible()
		playSound()
		setChecked()
		getSelectedOption()
		setFontColor()
		setSize()
		setOptionEnabled()
		clearListItems()
		setPosition()
		setProgress()
		getText()
		getSliderValue()
		setButtonEnabled()
		setButtonOverlayImage()
		setData()
		setSelectedOption()
		focus()
		getSize()
		setImageScale()
		setVisible()
		getPosition()
		setText()
		getChecked()
	}
	xpcall()
	setmetatable()
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	status = {
		removeEphemeralEffect()
		resetResource()
		addPersistentEffect()
		addEphemeralEffect()
		resourceMax()
		addPersistentEffects()
		clearEphemeralEffects()
		statPositive()
		modifyResource()
		statusProperty()
		resourcePercentage()
		resource()
		isResource()
		setResourcePercentage()
		getPersistentEffects()
		resourcePositive()
		clearPersistentEffects()
		giveResource()
		overConsumeResource()
		damageTakenSince()
		activeUniqueStatusEffectSummary()
		addEphemeralEffects()
		setStatusProperty()
		resourceLocked()
		modifyResourcePercentage()
		stat()
		clearAllPersistentEffects()
		setResourceLocked()
		resetAllResources()
		resourceNames()
		setPersistentEffects()
		inflictedDamageSince()
		consumeResource()
		inflictedHitsSince()
		setResource()
	}
	utf8 = {
		charpattern = "[
[03:29:51.747] [Warn] 	coroutine = {
		wrap()
		resume()
		create()
		isyieldable()
		status()
		running()
		yield()
	}
	jarray()
	type()
	init()
	require()
	table = {
		insert()
		unpack()
		pack()
		concat()
		sort()
		move()
		remove()
	}
	_VERSION = "Lua 5.3"
	update()
	rawequal()
	world = {
		isMonster()
		entityPortrait()
		entityQuery()
		itemDropQuery()
		entityVelocity()
		damageTiles()
		entityHealth()
		debugPoint()
		debugLine()
		entityExists()
		entityUniqueId()
		timeOfDay()
		entityGender()
		entityAggressive()
		magnitude()
		mod()
		platformerPathStart()
		containerItemAt()
		breathable()
		entityHasCountOfItem()
		npcType()
		sendEntityMessage()
		liquidAt()
		liquidAlongLine()
		isTileProtected()
		destroyLiquid()
		spawnLiquid()
		isNpc()
		getProperty()
		gravity()
		entityMoney()
		objectLineQuery()
		spawnMonster()
		lineCollision()
		lineTileCollision()
		rectCollision()
		getObjectParameter()
		entityHandItem()
		setProperty()
		entityHandItemDescriptor()
		time()
		placeMaterial()
		entityName()
		findUniqueEntity()
		threatLevel()
		placeObject()
		spawnTreasure()
		spawnVehicle()
		damageTileArea()
		windLevel()
		tileIsOccupied()
		containerTakeAt()
		loungeableOccupied()
		resolvePolyCollision()
		nearestTo()
		spawnStagehand()
		polyCollision()
		containerOpen()
		pointCollision()
		distance()
		rectTileCollision()
		debugPoly()
		pointTileCollision()
		containerStackItems()
		collisionBlocksAlongLine()
		entityDamageTeam()
		containerAvailable()
		containerItemApply()
		farmableStage()
		containerSize()
		polyContains()
		stagehandType()
		containerItemsCanFit()
		placeMod()
		containerTakeNumItemsAt()
		dayLength()
		callScriptedEntity()
		spawnProjectile()
		containerItemsFitWhere()
		npcLineQuery()
		npcQuery()
		containerTakeAll()
		findPlatformerPath()
		entityDescription()
		xwrap()
		spawnItem()
		containerSwapItemsNoCombine()
		containerAddItems()
		objectSpaces()
		playerQuery()
		containerConsumeAt()
		monsterType()
		entityType()
		containerSwapItems()
		debugText()
		day()
		containerPutItemsAt()
		entitySpecies()
		loungeableQuery()
		lightLevel()
		entityCanDamage()
		underground()
		spawnNpc()
		material()
		monsterQuery()
		objectQuery()
		containerConsume()
		entityLineQuery()
		containerClose()
		entityPosition()
		objectAt()
		containerItems()
	}
	tonumber()
	ic = {
		stripColor()
		giveBack()
		renameThis()
		checkStack()
		sortFunc()
		sort()
		itemAmount()
		amountEquipped()
		sort_relative()
		itemConfig()
		searchBox()
		clientVersion = 1
		quickstack()
		searchButton()
		renameButton()
		lock()
		getQuality()
	}
	assert()
	rawset()
	getmetatable()
	string = {
		rep()
		gmatch()
		reverse()
		pack()
		char()
		sub()
		format()
		byte()
		match()
		dump()
		find()
		unpack()
		packsize()
		upper()
		gsub()
		lower()
		len()
	}
	pcall()
	player = {
		consumeItemWithParameter()
		shipUpgrades()
		altHandItemTags()
		upgradeShip()
		serverUuid()
		gender()
		worldId()
		equippedTech()
		completeMission()
		inventoryTags()
		removeEssentialItem()
		hasItem()
		recordEvent()
		addBookmark()
		lounge()
		cleanupItems()
		consumeItem()
		makeTechUnavailable()
		setUniverseFlag()
		giveBlueprint()
		hasItemWithParameter()
		species()
		playCinematic()
		altHandItem()
		primaryHandItemTags()
		availableTechs()
		enabledTechs()
		enableTech()
		giveItem()
		playTime()
		setIntroComplete()
		essentialItem()
		ownShipWorldId()
		makeTechAvailable()
		warp()
		equipTech()
		startQuest()
		enableMission()
		hasQuest()
		itemsWithTag()
		isLounging()
		primaryHandItem()
		confirm()
		hasCompletedQuest()
		hasCountOfItem()
		equippedItem()
		setEquippedItem()
		radioMessage()
		giveEssentialItem()
		introComplete()
		canStartQuest()
		consumeTaggedItem()
		getItemWithParameter()
	}
	config = {
		getParameter()
	}
	root = {
		questConfig()
		treeFoliageDirectory()
		getConfigurationPath()
		loadVersionedJson()
		materialHealth()
		tenantConfig()
		itemConfig()
		materialMiningSound()
		projectileConfig()
		imageSpaces()
		techType()
		createTreasure()
		materialFootstepSound()
		itemHasTag()
		imageSize()
		treeStemDirectory()
		npcPortrait()
		hasTech()
		getMatchingTenants()
		getConfiguration()
		createItem()
		generateName()
		setConfiguration()
		techConfig()
		materialPath()
		makeCurrentVersionedJson()
		monsterMovementSettings()
		isTreasurePool()
		itemTags()
		itemType()
		evalFunction()
		monsterSkillParameter()
		assetJson()
		setConfigurationPath()
		monsterPortrait()
		recipesForItem()
		createBiome()
		behaviorModule()
		liquidStatusEffects()
		npcConfig()
		nonEmptyRegion()
		evalFunction2()
		projectileGravityMultiplier()
		npcVariant()
	}
	math = {
		tan()
		atan()
		modf()
		exp()
		type()
		acos()
		abs()
		mininteger = -9223372036854775808
		maxinteger = 9223372036854775807
		deg()
		asin()
		randomseed()
		random()
		sqrt()
		huge = inf
		min()
		log()
		pi = 3.1415926535898
		rad()
		max()
		floor()
		ult()
		cos()
		tointeger()
		fmod()
		sin()
		ceil()
	}
	widget = {
		setListSelected()
		setImage()
		setButtonCheckedImages()
		setImageRotation()
		setButtonImage()
		getListSelected()
		itemGridItems()
		addListItem()
		removeListItem()
		setButtonImages()
		blur()
		getData()
		setOptionVisible()
		playSound()
		setChecked()
		getSelectedOption()
		setFontColor()
		setSize()
		setOptionEnabled()
		clearListItems()
		setPosition()
		setProgress()
		getText()
		getSliderValue()
		setButtonEnabled()
		setButtonOverlayImage()
		setData()
		setSelectedOption()
		focus()
		getSize()
		setImageScale()
		setVisible()
		getPosition()
		setText()
		getChecked()
	}
	xpcall()
	setmetatable()
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	status = {
		removeEphemeralEffect()
		resetResource()
		addPersistentEffect()
		addEphemeralEffect()
		resourceMax()
		addPersistentEffects()
		clearEphemeralEffects()
		statPositive()
		modifyResource()
		statusProperty()
		resourcePercentage()
		resource()
		isResource()
		setResourcePercentage()
		getPersistentEffects()
		resourcePositive()
		clearPersistentEffects()
		giveResource()
		overConsumeResource()
		damageTakenSince()
		activeUniqueStatusEffectSummary()
		addEphemeralEffects()
		setStatusProperty()
		resourceLocked()
		modifyResourcePercentage()
		stat()
		clearAllPersistentEffects()
		setResourceLocked()
		resetAllResources()
		resourceNames()
		setPersistentEffects()
		inflictedDamageSince()
		consumeResource()
		inflictedHitsSince()
		setResource()
	}
	utf8 = {
		charpattern = "[
[03:29:52.997] [Warn] 	coroutine = {
		wrap()
		resume()
		create()
		isyieldable()
		status()
		running()
		yield()
	}
	jarray()
	type()
	init()
	require()
	table = {
		insert()
		unpack()
		pack()
		concat()
		sort()
		move()
		remove()
	}
	_VERSION = "Lua 5.3"
	update()
	rawequal()
	world = {
		isMonster()
		entityPortrait()
		entityQuery()
		itemDropQuery()
		entityVelocity()
		damageTiles()
		entityHealth()
		debugPoint()
		debugLine()
		entityExists()
		entityUniqueId()
		timeOfDay()
		entityGender()
		entityAggressive()
		magnitude()
		mod()
		platformerPathStart()
		containerItemAt()
		breathable()
		entityHasCountOfItem()
		npcType()
		sendEntityMessage()
		liquidAt()
		liquidAlongLine()
		isTileProtected()
		destroyLiquid()
		spawnLiquid()
		isNpc()
		getProperty()
		gravity()
		entityMoney()
		objectLineQuery()
		spawnMonster()
		lineCollision()
		lineTileCollision()
		rectCollision()
		getObjectParameter()
		entityHandItem()
		setProperty()
		entityHandItemDescriptor()
		time()
		placeMaterial()
		entityName()
		findUniqueEntity()
		threatLevel()
		placeObject()
		spawnTreasure()
		spawnVehicle()
		damageTileArea()
		windLevel()
		tileIsOccupied()
		containerTakeAt()
		loungeableOccupied()
		resolvePolyCollision()
		nearestTo()
		spawnStagehand()
		polyCollision()
		containerOpen()
		pointCollision()
		distance()
		rectTileCollision()
		debugPoly()
		pointTileCollision()
		containerStackItems()
		collisionBlocksAlongLine()
		entityDamageTeam()
		containerAvailable()
		containerItemApply()
		farmableStage()
		containerSize()
		polyContains()
		stagehandType()
		containerItemsCanFit()
		placeMod()
		containerTakeNumItemsAt()
		dayLength()
		callScriptedEntity()
		spawnProjectile()
		containerItemsFitWhere()
		npcLineQuery()
		npcQuery()
		containerTakeAll()
		findPlatformerPath()
		entityDescription()
		xwrap()
		spawnItem()
		containerSwapItemsNoCombine()
		containerAddItems()
		objectSpaces()
		playerQuery()
		containerConsumeAt()
		monsterType()
		entityType()
		containerSwapItems()
		debugText()
		day()
		containerPutItemsAt()
		entitySpecies()
		loungeableQuery()
		lightLevel()
		entityCanDamage()
		underground()
		spawnNpc()
		material()
		monsterQuery()
		objectQuery()
		containerConsume()
		entityLineQuery()
		containerClose()
		entityPosition()
		objectAt()
		containerItems()
	}
	tonumber()
	ic = {
		stripColor()
		giveBack()
		renameThis()
		checkStack()
		sortFunc()
		sort()
		itemAmount()
		amountEquipped()
		sort_relative()
		itemConfig()
		searchBox()
		clientVersion = 1
		quickstack()
		searchButton()
		renameButton()
		lock()
		getQuality()
	}
	assert()
	rawset()
	getmetatable()
	string = {
		rep()
		gmatch()
		reverse()
		pack()
		char()
		sub()
		format()
		byte()
		match()
		dump()
		find()
		unpack()
		packsize()
		upper()
		gsub()
		lower()
		len()
	}
	pcall()
	player = {
		consumeItemWithParameter()
		shipUpgrades()
		altHandItemTags()
		upgradeShip()
		serverUuid()
		gender()
		worldId()
		equippedTech()
		completeMission()
		inventoryTags()
		removeEssentialItem()
		hasItem()
		recordEvent()
		addBookmark()
		lounge()
		cleanupItems()
		consumeItem()
		makeTechUnavailable()
		setUniverseFlag()
		giveBlueprint()
		hasItemWithParameter()
		species()
		playCinematic()
		altHandItem()
		primaryHandItemTags()
		availableTechs()
		enabledTechs()
		enableTech()
		giveItem()
		playTime()
		setIntroComplete()
		essentialItem()
		ownShipWorldId()
		makeTechAvailable()
		warp()
		equipTech()
		startQuest()
		enableMission()
		hasQuest()
		itemsWithTag()
		isLounging()
		primaryHandItem()
		confirm()
		hasCompletedQuest()
		hasCountOfItem()
		equippedItem()
		setEquippedItem()
		radioMessage()
		giveEssentialItem()
		introComplete()
		canStartQuest()
		consumeTaggedItem()
		getItemWithParameter()
	}
	config = {
		getParameter()
	}
	root = {
		questConfig()
		treeFoliageDirectory()
		getConfigurationPath()
		loadVersionedJson()
		materialHealth()
		tenantConfig()
		itemConfig()
		materialMiningSound()
		projectileConfig()
		imageSpaces()
		techType()
		createTreasure()
		materialFootstepSound()
		itemHasTag()
		imageSize()
		treeStemDirectory()
		npcPortrait()
		hasTech()
		getMatchingTenants()
		getConfiguration()
		createItem()
		generateName()
		setConfiguration()
		techConfig()
		materialPath()
		makeCurrentVersionedJson()
		monsterMovementSettings()
		isTreasurePool()
		itemTags()
		itemType()
		evalFunction()
		monsterSkillParameter()
		assetJson()
		setConfigurationPath()
		monsterPortrait()
		recipesForItem()
		createBiome()
		behaviorModule()
		liquidStatusEffects()
		npcConfig()
		nonEmptyRegion()
		evalFunction2()
		projectileGravityMultiplier()
		npcVariant()
	}
	math = {
		tan()
		atan()
		modf()
		exp()
		type()
		acos()
		abs()
		mininteger = -9223372036854775808
		maxinteger = 9223372036854775807
		deg()
		asin()
		randomseed()
		random()
		sqrt()
		huge = inf
		min()
		log()
		pi = 3.1415926535898
		rad()
		max()
		floor()
		ult()
		cos()
		tointeger()
		fmod()
		sin()
		ceil()
	}
	widget = {
		setListSelected()
		setImage()
		setButtonCheckedImages()
		setImageRotation()
		setButtonImage()
		getListSelected()
		itemGridItems()
		addListItem()
		removeListItem()
		setButtonImages()
		blur()
		getData()
		setOptionVisible()
		playSound()
		setChecked()
		getSelectedOption()
		setFontColor()
		setSize()
		setOptionEnabled()
		clearListItems()
		setPosition()
		setProgress()
		getText()
		getSliderValue()
		setButtonEnabled()
		setButtonOverlayImage()
		setData()
		setSelectedOption()
		focus()
		getSize()
		setImageScale()
		setVisible()
		getPosition()
		setText()
		getChecked()
	}
	xpcall()
	setmetatable()
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	status = {
		removeEphemeralEffect()
		resetResource()
		addPersistentEffect()
		addEphemeralEffect()
		resourceMax()
		addPersistentEffects()
		clearEphemeralEffects()
		statPositive()
		modifyResource()
		statusProperty()
		resourcePercentage()
		resource()
		isResource()
		setResourcePercentage()
		getPersistentEffects()
		resourcePositive()
		clearPersistentEffects()
		giveResource()
		overConsumeResource()
		damageTakenSince()
		activeUniqueStatusEffectSummary()
		addEphemeralEffects()
		setStatusProperty()
		resourceLocked()
		modifyResourcePercentage()
		stat()
		clearAllPersistentEffects()
		setResourceLocked()
		resetAllResources()
		resourceNames()
		setPersistentEffects()
		inflictedDamageSince()
		consumeResource()
		inflictedHitsSince()
		setResource()
	}
	utf8 = {
		charpattern = "[
[03:30:05.549] [Warn] 	coroutine = {
		wrap()
		resume()
		create()
		isyieldable()
		status()
		running()
		yield()
	}
	jarray()
	type()
	init()
	require()
	table = {
		insert()
		unpack()
		pack()
		concat()
		sort()
		move()
		remove()
	}
	_VERSION = "Lua 5.3"
	update()
	rawequal()
	world = {
		isMonster()
		entityPortrait()
		entityQuery()
		itemDropQuery()
		entityVelocity()
		damageTiles()
		entityHealth()
		debugPoint()
		debugLine()
		entityExists()
		entityUniqueId()
		timeOfDay()
		entityGender()
		entityAggressive()
		magnitude()
		mod()
		platformerPathStart()
		containerItemAt()
		breathable()
		entityHasCountOfItem()
		npcType()
		sendEntityMessage()
		liquidAt()
		liquidAlongLine()
		isTileProtected()
		destroyLiquid()
		spawnLiquid()
		isNpc()
		getProperty()
		gravity()
		entityMoney()
		objectLineQuery()
		spawnMonster()
		lineCollision()
		lineTileCollision()
		rectCollision()
		getObjectParameter()
		entityHandItem()
		setProperty()
		entityHandItemDescriptor()
		time()
		placeMaterial()
		entityName()
		findUniqueEntity()
		threatLevel()
		placeObject()
		spawnTreasure()
		spawnVehicle()
		damageTileArea()
		windLevel()
		tileIsOccupied()
		containerTakeAt()
		loungeableOccupied()
		resolvePolyCollision()
		nearestTo()
		spawnStagehand()
		polyCollision()
		containerOpen()
		pointCollision()
		distance()
		rectTileCollision()
		debugPoly()
		pointTileCollision()
		containerStackItems()
		collisionBlocksAlongLine()
		entityDamageTeam()
		containerAvailable()
		containerItemApply()
		farmableStage()
		containerSize()
		polyContains()
		stagehandType()
		containerItemsCanFit()
		placeMod()
		containerTakeNumItemsAt()
		dayLength()
		callScriptedEntity()
		spawnProjectile()
		containerItemsFitWhere()
		npcLineQuery()
		npcQuery()
		containerTakeAll()
		findPlatformerPath()
		entityDescription()
		xwrap()
		spawnItem()
		containerSwapItemsNoCombine()
		containerAddItems()
		objectSpaces()
		playerQuery()
		containerConsumeAt()
		monsterType()
		entityType()
		containerSwapItems()
		debugText()
		day()
		containerPutItemsAt()
		entitySpecies()
		loungeableQuery()
		lightLevel()
		entityCanDamage()
		underground()
		spawnNpc()
		material()
		monsterQuery()
		objectQuery()
		containerConsume()
		entityLineQuery()
		containerClose()
		entityPosition()
		objectAt()
		containerItems()
	}
	tonumber()
	ic = {
		stripColor()
		giveBack()
		renameThis()
		checkStack()
		sortFunc()
		sort()
		itemAmount()
		amountEquipped()
		sort_relative()
		itemConfig()
		searchBox()
		clientVersion = 1
		quickstack()
		searchButton()
		renameButton()
		lock()
		getQuality()
	}
	assert()
	rawset()
	getmetatable()
	string = {
		rep()
		gmatch()
		reverse()
		pack()
		char()
		sub()
		format()
		byte()
		match()
		dump()
		find()
		unpack()
		packsize()
		upper()
		gsub()
		lower()
		len()
	}
	pcall()
	player = {
		consumeItemWithParameter()
		shipUpgrades()
		altHandItemTags()
		upgradeShip()
		serverUuid()
		gender()
		worldId()
		equippedTech()
		completeMission()
		inventoryTags()
		removeEssentialItem()
		hasItem()
		recordEvent()
		addBookmark()
		lounge()
		cleanupItems()
		consumeItem()
		makeTechUnavailable()
		setUniverseFlag()
		giveBlueprint()
		hasItemWithParameter()
		species()
		playCinematic()
		altHandItem()
		primaryHandItemTags()
		availableTechs()
		enabledTechs()
		enableTech()
		giveItem()
		playTime()
		setIntroComplete()
		essentialItem()
		ownShipWorldId()
		makeTechAvailable()
		warp()
		equipTech()
		startQuest()
		enableMission()
		hasQuest()
		itemsWithTag()
		isLounging()
		primaryHandItem()
		confirm()
		hasCompletedQuest()
		hasCountOfItem()
		equippedItem()
		setEquippedItem()
		radioMessage()
		giveEssentialItem()
		introComplete()
		canStartQuest()
		consumeTaggedItem()
		getItemWithParameter()
	}
	config = {
		getParameter()
	}
	root = {
		questConfig()
		treeFoliageDirectory()
		getConfigurationPath()
		loadVersionedJson()
		materialHealth()
		tenantConfig()
		itemConfig()
		materialMiningSound()
		projectileConfig()
		imageSpaces()
		techType()
		createTreasure()
		materialFootstepSound()
		itemHasTag()
		imageSize()
		treeStemDirectory()
		npcPortrait()
		hasTech()
		getMatchingTenants()
		getConfiguration()
		createItem()
		generateName()
		setConfiguration()
		techConfig()
		materialPath()
		makeCurrentVersionedJson()
		monsterMovementSettings()
		isTreasurePool()
		itemTags()
		itemType()
		evalFunction()
		monsterSkillParameter()
		assetJson()
		setConfigurationPath()
		monsterPortrait()
		recipesForItem()
		createBiome()
		behaviorModule()
		liquidStatusEffects()
		npcConfig()
		nonEmptyRegion()
		evalFunction2()
		projectileGravityMultiplier()
		npcVariant()
	}
	math = {
		tan()
		atan()
		modf()
		exp()
		type()
		acos()
		abs()
		mininteger = -9223372036854775808
		maxinteger = 9223372036854775807
		deg()
		asin()
		randomseed()
		random()
		sqrt()
		huge = inf
		min()
		log()
		pi = 3.1415926535898
		rad()
		max()
		floor()
		ult()
		cos()
		tointeger()
		fmod()
		sin()
		ceil()
	}
	widget = {
		setListSelected()
		setImage()
		setButtonCheckedImages()
		setImageRotation()
		setButtonImage()
		getListSelected()
		itemGridItems()
		addListItem()
		removeListItem()
		setButtonImages()
		blur()
		getData()
		setOptionVisible()
		playSound()
		setChecked()
		getSelectedOption()
		setFontColor()
		setSize()
		setOptionEnabled()
		clearListItems()
		setPosition()
		setProgress()
		getText()
		getSliderValue()
		setButtonEnabled()
		setButtonOverlayImage()
		setData()
		setSelectedOption()
		focus()
		getSize()
		setImageScale()
		setVisible()
		getPosition()
		setText()
		getChecked()
	}
	xpcall()
	setmetatable()
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	status = {
		removeEphemeralEffect()
		resetResource()
		addPersistentEffect()
		addEphemeralEffect()
		resourceMax()
		addPersistentEffects()
		clearEphemeralEffects()
		statPositive()
		modifyResource()
		statusProperty()
		resourcePercentage()
		resource()
		isResource()
		setResourcePercentage()
		getPersistentEffects()
		resourcePositive()
		clearPersistentEffects()
		giveResource()
		overConsumeResource()
		damageTakenSince()
		activeUniqueStatusEffectSummary()
		addEphemeralEffects()
		setStatusProperty()
		resourceLocked()
		modifyResourcePercentage()
		stat()
		clearAllPersistentEffects()
		setResourceLocked()
		resetAllResources()
		resourceNames()
		setPersistentEffects()
		inflictedDamageSince()
		consumeResource()
		inflictedHitsSince()
		setResource()
	}
	utf8 = {
		charpattern = "[
[03:30:49.012] [Warn] 	coroutine = {
		wrap()
		resume()
		create()
		isyieldable()
		status()
		running()
		yield()
	}
	jarray()
	type()
	init()
	require()
	table = {
		insert()
		unpack()
		pack()
		concat()
		sort()
		move()
		remove()
	}
	_VERSION = "Lua 5.3"
	update()
	rawequal()
	world = {
		isMonster()
		entityPortrait()
		entityQuery()
		itemDropQuery()
		entityVelocity()
		damageTiles()
		entityHealth()
		debugPoint()
		debugLine()
		entityExists()
		entityUniqueId()
		timeOfDay()
		entityGender()
		entityAggressive()
		magnitude()
		mod()
		platformerPathStart()
		containerItemAt()
		breathable()
		entityHasCountOfItem()
		npcType()
		sendEntityMessage()
		liquidAt()
		liquidAlongLine()
		isTileProtected()
		destroyLiquid()
		spawnLiquid()
		isNpc()
		getProperty()
		gravity()
		entityMoney()
		objectLineQuery()
		spawnMonster()
		lineCollision()
		lineTileCollision()
		rectCollision()
		getObjectParameter()
		entityHandItem()
		setProperty()
		entityHandItemDescriptor()
		time()
		placeMaterial()
		entityName()
		findUniqueEntity()
		threatLevel()
		placeObject()
		spawnTreasure()
		spawnVehicle()
		damageTileArea()
		windLevel()
		tileIsOccupied()
		containerTakeAt()
		loungeableOccupied()
		resolvePolyCollision()
		nearestTo()
		spawnStagehand()
		polyCollision()
		containerOpen()
		pointCollision()
		distance()
		rectTileCollision()
		debugPoly()
		pointTileCollision()
		containerStackItems()
		collisionBlocksAlongLine()
		entityDamageTeam()
		containerAvailable()
		containerItemApply()
		farmableStage()
		containerSize()
		polyContains()
		stagehandType()
		containerItemsCanFit()
		placeMod()
		containerTakeNumItemsAt()
		dayLength()
		callScriptedEntity()
		spawnProjectile()
		containerItemsFitWhere()
		npcLineQuery()
		npcQuery()
		containerTakeAll()
		findPlatformerPath()
		entityDescription()
		xwrap()
		spawnItem()
		containerSwapItemsNoCombine()
		containerAddItems()
		objectSpaces()
		playerQuery()
		containerConsumeAt()
		monsterType()
		entityType()
		containerSwapItems()
		debugText()
		day()
		containerPutItemsAt()
		entitySpecies()
		loungeableQuery()
		lightLevel()
		entityCanDamage()
		underground()
		spawnNpc()
		material()
		monsterQuery()
		objectQuery()
		containerConsume()
		entityLineQuery()
		containerClose()
		entityPosition()
		objectAt()
		containerItems()
	}
	tonumber()
	ic = {
		stripColor()
		giveBack()
		renameThis()
		checkStack()
		sortFunc()
		sort()
		itemAmount()
		amountEquipped()
		sort_relative()
		itemConfig()
		searchBox()
		clientVersion = 1
		quickstack()
		searchButton()
		renameButton()
		lock()
		getQuality()
	}
	assert()
	rawset()
	getmetatable()
	string = {
		rep()
		gmatch()
		reverse()
		pack()
		char()
		sub()
		format()
		byte()
		match()
		dump()
		find()
		unpack()
		packsize()
		upper()
		gsub()
		lower()
		len()
	}
	pcall()
	player = {
		consumeItemWithParameter()
		shipUpgrades()
		altHandItemTags()
		upgradeShip()
		serverUuid()
		gender()
		worldId()
		equippedTech()
		completeMission()
		inventoryTags()
		removeEssentialItem()
		hasItem()
		recordEvent()
		addBookmark()
		lounge()
		cleanupItems()
		consumeItem()
		makeTechUnavailable()
		setUniverseFlag()
		giveBlueprint()
		hasItemWithParameter()
		species()
		playCinematic()
		altHandItem()
		primaryHandItemTags()
		availableTechs()
		enabledTechs()
		enableTech()
		giveItem()
		playTime()
		setIntroComplete()
		essentialItem()
		ownShipWorldId()
		makeTechAvailable()
		warp()
		equipTech()
		startQuest()
		enableMission()
		hasQuest()
		itemsWithTag()
		isLounging()
		primaryHandItem()
		confirm()
		hasCompletedQuest()
		hasCountOfItem()
		equippedItem()
		setEquippedItem()
		radioMessage()
		giveEssentialItem()
		introComplete()
		canStartQuest()
		consumeTaggedItem()
		getItemWithParameter()
	}
	config = {
		getParameter()
	}
	root = {
		questConfig()
		treeFoliageDirectory()
		getConfigurationPath()
		loadVersionedJson()
		materialHealth()
		tenantConfig()
		itemConfig()
		materialMiningSound()
		projectileConfig()
		imageSpaces()
		techType()
		createTreasure()
		materialFootstepSound()
		itemHasTag()
		imageSize()
		treeStemDirectory()
		npcPortrait()
		hasTech()
		getMatchingTenants()
		getConfiguration()
		createItem()
		generateName()
		setConfiguration()
		techConfig()
		materialPath()
		makeCurrentVersionedJson()
		monsterMovementSettings()
		isTreasurePool()
		itemTags()
		itemType()
		evalFunction()
		monsterSkillParameter()
		assetJson()
		setConfigurationPath()
		monsterPortrait()
		recipesForItem()
		createBiome()
		behaviorModule()
		liquidStatusEffects()
		npcConfig()
		nonEmptyRegion()
		evalFunction2()
		projectileGravityMultiplier()
		npcVariant()
	}
	math = {
		tan()
		atan()
		modf()
		exp()
		type()
		acos()
		abs()
		mininteger = -9223372036854775808
		maxinteger = 9223372036854775807
		deg()
		asin()
		randomseed()
		random()
		sqrt()
		huge = inf
		min()
		log()
		pi = 3.1415926535898
		rad()
		max()
		floor()
		ult()
		cos()
		tointeger()
		fmod()
		sin()
		ceil()
	}
	widget = {
		setListSelected()
		setImage()
		setButtonCheckedImages()
		setImageRotation()
		setButtonImage()
		getListSelected()
		itemGridItems()
		addListItem()
		removeListItem()
		setButtonImages()
		blur()
		getData()
		setOptionVisible()
		playSound()
		setChecked()
		getSelectedOption()
		setFontColor()
		setSize()
		setOptionEnabled()
		clearListItems()
		setPosition()
		setProgress()
		getText()
		getSliderValue()
		setButtonEnabled()
		setButtonOverlayImage()
		setData()
		setSelectedOption()
		focus()
		getSize()
		setImageScale()
		setVisible()
		getPosition()
		setText()
		getChecked()
	}
	xpcall()
	setmetatable()
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	status = {
		removeEphemeralEffect()
		resetResource()
		addPersistentEffect()
		addEphemeralEffect()
		resourceMax()
		addPersistentEffects()
		clearEphemeralEffects()
		statPositive()
		modifyResource()
		statusProperty()
		resourcePercentage()
		resource()
		isResource()
		setResourcePercentage()
		getPersistentEffects()
		resourcePositive()
		clearPersistentEffects()
		giveResource()
		overConsumeResource()
		damageTakenSince()
		activeUniqueStatusEffectSummary()
		addEphemeralEffects()
		setStatusProperty()
		resourceLocked()
		modifyResourcePercentage()
		stat()
		clearAllPersistentEffects()
		setResourceLocked()
		resetAllResources()
		resourceNames()
		setPersistentEffects()
		inflictedDamageSince()
		consumeResource()
		inflictedHitsSince()
		setResource()
	}
	utf8 = {
		charpattern = "[
[03:30:50.211] [Warn] 	coroutine = {
		wrap()
		resume()
		create()
		isyieldable()
		status()
		running()
		yield()
	}
	jarray()
	type()
	init()
	require()
	table = {
		insert()
		unpack()
		pack()
		concat()
		sort()
		move()
		remove()
	}
	_VERSION = "Lua 5.3"
	update()
	rawequal()
	world = {
		isMonster()
		entityPortrait()
		entityQuery()
		itemDropQuery()
		entityVelocity()
		damageTiles()
		entityHealth()
		debugPoint()
		debugLine()
		entityExists()
		entityUniqueId()
		timeOfDay()
		entityGender()
		entityAggressive()
		magnitude()
		mod()
		platformerPathStart()
		containerItemAt()
		breathable()
		entityHasCountOfItem()
		npcType()
		sendEntityMessage()
		liquidAt()
		liquidAlongLine()
		isTileProtected()
		destroyLiquid()
		spawnLiquid()
		isNpc()
		getProperty()
		gravity()
		entityMoney()
		objectLineQuery()
		spawnMonster()
		lineCollision()
		lineTileCollision()
		rectCollision()
		getObjectParameter()
		entityHandItem()
		setProperty()
		entityHandItemDescriptor()
		time()
		placeMaterial()
		entityName()
		findUniqueEntity()
		threatLevel()
		placeObject()
		spawnTreasure()
		spawnVehicle()
		damageTileArea()
		windLevel()
		tileIsOccupied()
		containerTakeAt()
		loungeableOccupied()
		resolvePolyCollision()
		nearestTo()
		spawnStagehand()
		polyCollision()
		containerOpen()
		pointCollision()
		distance()
		rectTileCollision()
		debugPoly()
		pointTileCollision()
		containerStackItems()
		collisionBlocksAlongLine()
		entityDamageTeam()
		containerAvailable()
		containerItemApply()
		farmableStage()
		containerSize()
		polyContains()
		stagehandType()
		containerItemsCanFit()
		placeMod()
		containerTakeNumItemsAt()
		dayLength()
		callScriptedEntity()
		spawnProjectile()
		containerItemsFitWhere()
		npcLineQuery()
		npcQuery()
		containerTakeAll()
		findPlatformerPath()
		entityDescription()
		xwrap()
		spawnItem()
		containerSwapItemsNoCombine()
		containerAddItems()
		objectSpaces()
		playerQuery()
		containerConsumeAt()
		monsterType()
		entityType()
		containerSwapItems()
		debugText()
		day()
		containerPutItemsAt()
		entitySpecies()
		loungeableQuery()
		lightLevel()
		entityCanDamage()
		underground()
		spawnNpc()
		material()
		monsterQuery()
		objectQuery()
		containerConsume()
		entityLineQuery()
		containerClose()
		entityPosition()
		objectAt()
		containerItems()
	}
	tonumber()
	ic = {
		stripColor()
		giveBack()
		renameThis()
		checkStack()
		sortFunc()
		sort()
		itemAmount()
		amountEquipped()
		sort_relative()
		itemConfig()
		searchBox()
		clientVersion = 1
		quickstack()
		searchButton()
		renameButton()
		lock()
		getQuality()
	}
	assert()
	rawset()
	getmetatable()
	string = {
		rep()
		gmatch()
		reverse()
		pack()
		char()
		sub()
		format()
		byte()
		match()
		dump()
		find()
		unpack()
		packsize()
		upper()
		gsub()
		lower()
		len()
	}
	pcall()
	player = {
		consumeItemWithParameter()
		shipUpgrades()
		altHandItemTags()
		upgradeShip()
		serverUuid()
		gender()
		worldId()
		equippedTech()
		completeMission()
		inventoryTags()
		removeEssentialItem()
		hasItem()
		recordEvent()
		addBookmark()
		lounge()
		cleanupItems()
		consumeItem()
		makeTechUnavailable()
		setUniverseFlag()
		giveBlueprint()
		hasItemWithParameter()
		species()
		playCinematic()
		altHandItem()
		primaryHandItemTags()
		availableTechs()
		enabledTechs()
		enableTech()
		giveItem()
		playTime()
		setIntroComplete()
		essentialItem()
		ownShipWorldId()
		makeTechAvailable()
		warp()
		equipTech()
		startQuest()
		enableMission()
		hasQuest()
		itemsWithTag()
		isLounging()
		primaryHandItem()
		confirm()
		hasCompletedQuest()
		hasCountOfItem()
		equippedItem()
		setEquippedItem()
		radioMessage()
		giveEssentialItem()
		introComplete()
		canStartQuest()
		consumeTaggedItem()
		getItemWithParameter()
	}
	config = {
		getParameter()
	}
	root = {
		questConfig()
		treeFoliageDirectory()
		getConfigurationPath()
		loadVersionedJson()
		materialHealth()
		tenantConfig()
		itemConfig()
		materialMiningSound()
		projectileConfig()
		imageSpaces()
		techType()
		createTreasure()
		materialFootstepSound()
		itemHasTag()
		imageSize()
		treeStemDirectory()
		npcPortrait()
		hasTech()
		getMatchingTenants()
		getConfiguration()
		createItem()
		generateName()
		setConfiguration()
		techConfig()
		materialPath()
		makeCurrentVersionedJson()
		monsterMovementSettings()
		isTreasurePool()
		itemTags()
		itemType()
		evalFunction()
		monsterSkillParameter()
		assetJson()
		setConfigurationPath()
		monsterPortrait()
		recipesForItem()
		createBiome()
		behaviorModule()
		liquidStatusEffects()
		npcConfig()
		nonEmptyRegion()
		evalFunction2()
		projectileGravityMultiplier()
		npcVariant()
	}
	math = {
		tan()
		atan()
		modf()
		exp()
		type()
		acos()
		abs()
		mininteger = -9223372036854775808
		maxinteger = 9223372036854775807
		deg()
		asin()
		randomseed()
		random()
		sqrt()
		huge = inf
		min()
		log()
		pi = 3.1415926535898
		rad()
		max()
		floor()
		ult()
		cos()
		tointeger()
		fmod()
		sin()
		ceil()
	}
	widget = {
		setListSelected()
		setImage()
		setButtonCheckedImages()
		setImageRotation()
		setButtonImage()
		getListSelected()
		itemGridItems()
		addListItem()
		removeListItem()
		setButtonImages()
		blur()
		getData()
		setOptionVisible()
		playSound()
		setChecked()
		getSelectedOption()
		setFontColor()
		setSize()
		setOptionEnabled()
		clearListItems()
		setPosition()
		setProgress()
		getText()
		getSliderValue()
		setButtonEnabled()
		setButtonOverlayImage()
		setData()
		setSelectedOption()
		focus()
		getSize()
		setImageScale()
		setVisible()
		getPosition()
		setText()
		getChecked()
	}
	xpcall()
	setmetatable()
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	status = {
		removeEphemeralEffect()
		resetResource()
		addPersistentEffect()
		addEphemeralEffect()
		resourceMax()
		addPersistentEffects()
		clearEphemeralEffects()
		statPositive()
		modifyResource()
		statusProperty()
		resourcePercentage()
		resource()
		isResource()
		setResourcePercentage()
		getPersistentEffects()
		resourcePositive()
		clearPersistentEffects()
		giveResource()
		overConsumeResource()
		damageTakenSince()
		activeUniqueStatusEffectSummary()
		addEphemeralEffects()
		setStatusProperty()
		resourceLocked()
		modifyResourcePercentage()
		stat()
		clearAllPersistentEffects()
		setResourceLocked()
		resetAllResources()
		resourceNames()
		setPersistentEffects()
		inflictedDamageSince()
		consumeResource()
		inflictedHitsSince()
		setResource()
	}
	utf8 = {
		charpattern = "[
[03:30:51.397] [Warn] 	coroutine = {
		wrap()
		resume()
		create()
		isyieldable()
		status()
		running()
		yield()
	}
	jarray()
	type()
	init()
	require()
	table = {
		insert()
		unpack()
		pack()
		concat()
		sort()
		move()
		remove()
	}
	_VERSION = "Lua 5.3"
	update()
	rawequal()
	world = {
		isMonster()
		entityPortrait()
		entityQuery()
		itemDropQuery()
		entityVelocity()
		damageTiles()
		entityHealth()
		debugPoint()
		debugLine()
		entityExists()
		entityUniqueId()
		timeOfDay()
		entityGender()
		entityAggressive()
		magnitude()
		mod()
		platformerPathStart()
		containerItemAt()
		breathable()
		entityHasCountOfItem()
		npcType()
		sendEntityMessage()
		liquidAt()
		liquidAlongLine()
		isTileProtected()
		destroyLiquid()
		spawnLiquid()
		isNpc()
		getProperty()
		gravity()
		entityMoney()
		objectLineQuery()
		spawnMonster()
		lineCollision()
		lineTileCollision()
		rectCollision()
		getObjectParameter()
		entityHandItem()
		setProperty()
		entityHandItemDescriptor()
		time()
		placeMaterial()
		entityName()
		findUniqueEntity()
		threatLevel()
		placeObject()
		spawnTreasure()
		spawnVehicle()
		damageTileArea()
		windLevel()
		tileIsOccupied()
		containerTakeAt()
		loungeableOccupied()
		resolvePolyCollision()
		nearestTo()
		spawnStagehand()
		polyCollision()
		containerOpen()
		pointCollision()
		distance()
		rectTileCollision()
		debugPoly()
		pointTileCollision()
		containerStackItems()
		collisionBlocksAlongLine()
		entityDamageTeam()
		containerAvailable()
		containerItemApply()
		farmableStage()
		containerSize()
		polyContains()
		stagehandType()
		containerItemsCanFit()
		placeMod()
		containerTakeNumItemsAt()
		dayLength()
		callScriptedEntity()
		spawnProjectile()
		containerItemsFitWhere()
		npcLineQuery()
		npcQuery()
		containerTakeAll()
		findPlatformerPath()
		entityDescription()
		xwrap()
		spawnItem()
		containerSwapItemsNoCombine()
		containerAddItems()
		objectSpaces()
		playerQuery()
		containerConsumeAt()
		monsterType()
		entityType()
		containerSwapItems()
		debugText()
		day()
		containerPutItemsAt()
		entitySpecies()
		loungeableQuery()
		lightLevel()
		entityCanDamage()
		underground()
		spawnNpc()
		material()
		monsterQuery()
		objectQuery()
		containerConsume()
		entityLineQuery()
		containerClose()
		entityPosition()
		objectAt()
		containerItems()
	}
	tonumber()
	ic = {
		stripColor()
		giveBack()
		renameThis()
		checkStack()
		sortFunc()
		sort()
		itemAmount()
		amountEquipped()
		sort_relative()
		itemConfig()
		searchBox()
		clientVersion = 1
		quickstack()
		searchButton()
		renameButton()
		lock()
		getQuality()
	}
	assert()
	rawset()
	getmetatable()
	string = {
		rep()
		gmatch()
		reverse()
		pack()
		char()
		sub()
		format()
		byte()
		match()
		dump()
		find()
		unpack()
		packsize()
		upper()
		gsub()
		lower()
		len()
	}
	pcall()
	player = {
		consumeItemWithParameter()
		shipUpgrades()
		altHandItemTags()
		upgradeShip()
		serverUuid()
		gender()
		worldId()
		equippedTech()
		completeMission()
		inventoryTags()
		removeEssentialItem()
		hasItem()
		recordEvent()
		addBookmark()
		lounge()
		cleanupItems()
		consumeItem()
		makeTechUnavailable()
		setUniverseFlag()
		giveBlueprint()
		hasItemWithParameter()
		species()
		playCinematic()
		altHandItem()
		primaryHandItemTags()
		availableTechs()
		enabledTechs()
		enableTech()
		giveItem()
		playTime()
		setIntroComplete()
		essentialItem()
		ownShipWorldId()
		makeTechAvailable()
		warp()
		equipTech()
		startQuest()
		enableMission()
		hasQuest()
		itemsWithTag()
		isLounging()
		primaryHandItem()
		confirm()
		hasCompletedQuest()
		hasCountOfItem()
		equippedItem()
		setEquippedItem()
		radioMessage()
		giveEssentialItem()
		introComplete()
		canStartQuest()
		consumeTaggedItem()
		getItemWithParameter()
	}
	config = {
		getParameter()
	}
	root = {
		questConfig()
		treeFoliageDirectory()
		getConfigurationPath()
		loadVersionedJson()
		materialHealth()
		tenantConfig()
		itemConfig()
		materialMiningSound()
		projectileConfig()
		imageSpaces()
		techType()
		createTreasure()
		materialFootstepSound()
		itemHasTag()
		imageSize()
		treeStemDirectory()
		npcPortrait()
		hasTech()
		getMatchingTenants()
		getConfiguration()
		createItem()
		generateName()
		setConfiguration()
		techConfig()
		materialPath()
		makeCurrentVersionedJson()
		monsterMovementSettings()
		isTreasurePool()
		itemTags()
		itemType()
		evalFunction()
		monsterSkillParameter()
		assetJson()
		setConfigurationPath()
		monsterPortrait()
		recipesForItem()
		createBiome()
		behaviorModule()
		liquidStatusEffects()
		npcConfig()
		nonEmptyRegion()
		evalFunction2()
		projectileGravityMultiplier()
		npcVariant()
	}
	math = {
		tan()
		atan()
		modf()
		exp()
		type()
		acos()
		abs()
		mininteger = -9223372036854775808
		maxinteger = 9223372036854775807
		deg()
		asin()
		randomseed()
		random()
		sqrt()
		huge = inf
		min()
		log()
		pi = 3.1415926535898
		rad()
		max()
		floor()
		ult()
		cos()
		tointeger()
		fmod()
		sin()
		ceil()
	}
	widget = {
		setListSelected()
		setImage()
		setButtonCheckedImages()
		setImageRotation()
		setButtonImage()
		getListSelected()
		itemGridItems()
		addListItem()
		removeListItem()
		setButtonImages()
		blur()
		getData()
		setOptionVisible()
		playSound()
		setChecked()
		getSelectedOption()
		setFontColor()
		setSize()
		setOptionEnabled()
		clearListItems()
		setPosition()
		setProgress()
		getText()
		getSliderValue()
		setButtonEnabled()
		setButtonOverlayImage()
		setData()
		setSelectedOption()
		focus()
		getSize()
		setImageScale()
		setVisible()
		getPosition()
		setText()
		getChecked()
	}
	xpcall()
	setmetatable()
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	status = {
		removeEphemeralEffect()
		resetResource()
		addPersistentEffect()
		addEphemeralEffect()
		resourceMax()
		addPersistentEffects()
		clearEphemeralEffects()
		statPositive()
		modifyResource()
		statusProperty()
		resourcePercentage()
		resource()
		isResource()
		setResourcePercentage()
		getPersistentEffects()
		resourcePositive()
		clearPersistentEffects()
		giveResource()
		overConsumeResource()
		damageTakenSince()
		activeUniqueStatusEffectSummary()
		addEphemeralEffects()
		setStatusProperty()
		resourceLocked()
		modifyResourcePercentage()
		stat()
		clearAllPersistentEffects()
		setResourceLocked()
		resetAllResources()
		resourceNames()
		setPersistentEffects()
		inflictedDamageSince()
		consumeResource()
		inflictedHitsSince()
		setResource()
	}
	utf8 = {
		charpattern = "[
[03:30:55.790] [Warn] 	coroutine = {
		wrap()
		resume()
		create()
		isyieldable()
		status()
		running()
		yield()
	}
	jarray()
	type()
	init()
	require()
	table = {
		insert()
		unpack()
		pack()
		concat()
		sort()
		move()
		remove()
	}
	_VERSION = "Lua 5.3"
	update()
	rawequal()
	world = {
		isMonster()
		entityPortrait()
		entityQuery()
		itemDropQuery()
		entityVelocity()
		damageTiles()
		entityHealth()
		debugPoint()
		debugLine()
		entityExists()
		entityUniqueId()
		timeOfDay()
		entityGender()
		entityAggressive()
		magnitude()
		mod()
		platformerPathStart()
		containerItemAt()
		breathable()
		entityHasCountOfItem()
		npcType()
		sendEntityMessage()
		liquidAt()
		liquidAlongLine()
		isTileProtected()
		destroyLiquid()
		spawnLiquid()
		isNpc()
		getProperty()
		gravity()
		entityMoney()
		objectLineQuery()
		spawnMonster()
		lineCollision()
		lineTileCollision()
		rectCollision()
		getObjectParameter()
		entityHandItem()
		setProperty()
		entityHandItemDescriptor()
		time()
		placeMaterial()
		entityName()
		findUniqueEntity()
		threatLevel()
		placeObject()
		spawnTreasure()
		spawnVehicle()
		damageTileArea()
		windLevel()
		tileIsOccupied()
		containerTakeAt()
		loungeableOccupied()
		resolvePolyCollision()
		nearestTo()
		spawnStagehand()
		polyCollision()
		containerOpen()
		pointCollision()
		distance()
		rectTileCollision()
		debugPoly()
		pointTileCollision()
		containerStackItems()
		collisionBlocksAlongLine()
		entityDamageTeam()
		containerAvailable()
		containerItemApply()
		farmableStage()
		containerSize()
		polyContains()
		stagehandType()
		containerItemsCanFit()
		placeMod()
		containerTakeNumItemsAt()
		dayLength()
		callScriptedEntity()
		spawnProjectile()
		containerItemsFitWhere()
		npcLineQuery()
		npcQuery()
		containerTakeAll()
		findPlatformerPath()
		entityDescription()
		xwrap()
		spawnItem()
		containerSwapItemsNoCombine()
		containerAddItems()
		objectSpaces()
		playerQuery()
		containerConsumeAt()
		monsterType()
		entityType()
		containerSwapItems()
		debugText()
		day()
		containerPutItemsAt()
		entitySpecies()
		loungeableQuery()
		lightLevel()
		entityCanDamage()
		underground()
		spawnNpc()
		material()
		monsterQuery()
		objectQuery()
		containerConsume()
		entityLineQuery()
		containerClose()
		entityPosition()
		objectAt()
		containerItems()
	}
	tonumber()
	ic = {
		stripColor()
		giveBack()
		renameThis()
		checkStack()
		sortFunc()
		sort()
		itemAmount()
		amountEquipped()
		sort_relative()
		itemConfig()
		searchBox()
		clientVersion = 1
		quickstack()
		searchButton()
		renameButton()
		lock()
		getQuality()
	}
	assert()
	rawset()
	getmetatable()
	string = {
		rep()
		gmatch()
		reverse()
		pack()
		char()
		sub()
		format()
		byte()
		match()
		dump()
		find()
		unpack()
		packsize()
		upper()
		gsub()
		lower()
		len()
	}
	pcall()
	player = {
		consumeItemWithParameter()
		shipUpgrades()
		altHandItemTags()
		upgradeShip()
		serverUuid()
		gender()
		worldId()
		equippedTech()
		completeMission()
		inventoryTags()
		removeEssentialItem()
		hasItem()
		recordEvent()
		addBookmark()
		lounge()
		cleanupItems()
		consumeItem()
		makeTechUnavailable()
		setUniverseFlag()
		giveBlueprint()
		hasItemWithParameter()
		species()
		playCinematic()
		altHandItem()
		primaryHandItemTags()
		availableTechs()
		enabledTechs()
		enableTech()
		giveItem()
		playTime()
		setIntroComplete()
		essentialItem()
		ownShipWorldId()
		makeTechAvailable()
		warp()
		equipTech()
		startQuest()
		enableMission()
		hasQuest()
		itemsWithTag()
		isLounging()
		primaryHandItem()
		confirm()
		hasCompletedQuest()
		hasCountOfItem()
		equippedItem()
		setEquippedItem()
		radioMessage()
		giveEssentialItem()
		introComplete()
		canStartQuest()
		consumeTaggedItem()
		getItemWithParameter()
	}
	config = {
		getParameter()
	}
	root = {
		questConfig()
		treeFoliageDirectory()
		getConfigurationPath()
		loadVersionedJson()
		materialHealth()
		tenantConfig()
		itemConfig()
		materialMiningSound()
		projectileConfig()
		imageSpaces()
		techType()
		createTreasure()
		materialFootstepSound()
		itemHasTag()
		imageSize()
		treeStemDirectory()
		npcPortrait()
		hasTech()
		getMatchingTenants()
		getConfiguration()
		createItem()
		generateName()
		setConfiguration()
		techConfig()
		materialPath()
		makeCurrentVersionedJson()
		monsterMovementSettings()
		isTreasurePool()
		itemTags()
		itemType()
		evalFunction()
		monsterSkillParameter()
		assetJson()
		setConfigurationPath()
		monsterPortrait()
		recipesForItem()
		createBiome()
		behaviorModule()
		liquidStatusEffects()
		npcConfig()
		nonEmptyRegion()
		evalFunction2()
		projectileGravityMultiplier()
		npcVariant()
	}
	math = {
		tan()
		atan()
		modf()
		exp()
		type()
		acos()
		abs()
		mininteger = -9223372036854775808
		maxinteger = 9223372036854775807
		deg()
		asin()
		randomseed()
		random()
		sqrt()
		huge = inf
		min()
		log()
		pi = 3.1415926535898
		rad()
		max()
		floor()
		ult()
		cos()
		tointeger()
		fmod()
		sin()
		ceil()
	}
	widget = {
		setListSelected()
		setImage()
		setButtonCheckedImages()
		setImageRotation()
		setButtonImage()
		getListSelected()
		itemGridItems()
		addListItem()
		removeListItem()
		setButtonImages()
		blur()
		getData()
		setOptionVisible()
		playSound()
		setChecked()
		getSelectedOption()
		setFontColor()
		setSize()
		setOptionEnabled()
		clearListItems()
		setPosition()
		setProgress()
		getText()
		getSliderValue()
		setButtonEnabled()
		setButtonOverlayImage()
		setData()
		setSelectedOption()
		focus()
		getSize()
		setImageScale()
		setVisible()
		getPosition()
		setText()
		getChecked()
	}
	xpcall()
	setmetatable()
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	status = {
		removeEphemeralEffect()
		resetResource()
		addPersistentEffect()
		addEphemeralEffect()
		resourceMax()
		addPersistentEffects()
		clearEphemeralEffects()
		statPositive()
		modifyResource()
		statusProperty()
		resourcePercentage()
		resource()
		isResource()
		setResourcePercentage()
		getPersistentEffects()
		resourcePositive()
		clearPersistentEffects()
		giveResource()
		overConsumeResource()
		damageTakenSince()
		activeUniqueStatusEffectSummary()
		addEphemeralEffects()
		setStatusProperty()
		resourceLocked()
		modifyResourcePercentage()
		stat()
		clearAllPersistentEffects()
		setResourceLocked()
		resetAllResources()
		resourceNames()
		setPersistentEffects()
		inflictedDamageSince()
		consumeResource()
		inflictedHitsSince()
		setResource()
	}
	utf8 = {
		charpattern = "[
[03:30:59.899] [Warn] 	coroutine = {
		wrap()
		resume()
		create()
		isyieldable()
		status()
		running()
		yield()
	}
	jarray()
	type()
	init()
	require()
	table = {
		insert()
		unpack()
		pack()
		concat()
		sort()
		move()
		remove()
	}
	_VERSION = "Lua 5.3"
	update()
	rawequal()
	world = {
		isMonster()
		entityPortrait()
		entityQuery()
		itemDropQuery()
		entityVelocity()
		damageTiles()
		entityHealth()
		debugPoint()
		debugLine()
		entityExists()
		entityUniqueId()
		timeOfDay()
		entityGender()
		entityAggressive()
		magnitude()
		mod()
		platformerPathStart()
		containerItemAt()
		breathable()
		entityHasCountOfItem()
		npcType()
		sendEntityMessage()
		liquidAt()
		liquidAlongLine()
		isTileProtected()
		destroyLiquid()
		spawnLiquid()
		isNpc()
		getProperty()
		gravity()
		entityMoney()
		objectLineQuery()
		spawnMonster()
		lineCollision()
		lineTileCollision()
		rectCollision()
		getObjectParameter()
		entityHandItem()
		setProperty()
		entityHandItemDescriptor()
		time()
		placeMaterial()
		entityName()
		findUniqueEntity()
		threatLevel()
		placeObject()
		spawnTreasure()
		spawnVehicle()
		damageTileArea()
		windLevel()
		tileIsOccupied()
		containerTakeAt()
		loungeableOccupied()
		resolvePolyCollision()
		nearestTo()
		spawnStagehand()
		polyCollision()
		containerOpen()
		pointCollision()
		distance()
		rectTileCollision()
		debugPoly()
		pointTileCollision()
		containerStackItems()
		collisionBlocksAlongLine()
		entityDamageTeam()
		containerAvailable()
		containerItemApply()
		farmableStage()
		containerSize()
		polyContains()
		stagehandType()
		containerItemsCanFit()
		placeMod()
		containerTakeNumItemsAt()
		dayLength()
		callScriptedEntity()
		spawnProjectile()
		containerItemsFitWhere()
		npcLineQuery()
		npcQuery()
		containerTakeAll()
		findPlatformerPath()
		entityDescription()
		xwrap()
		spawnItem()
		containerSwapItemsNoCombine()
		containerAddItems()
		objectSpaces()
		playerQuery()
		containerConsumeAt()
		monsterType()
		entityType()
		containerSwapItems()
		debugText()
		day()
		containerPutItemsAt()
		entitySpecies()
		loungeableQuery()
		lightLevel()
		entityCanDamage()
		underground()
		spawnNpc()
		material()
		monsterQuery()
		objectQuery()
		containerConsume()
		entityLineQuery()
		containerClose()
		entityPosition()
		objectAt()
		containerItems()
	}
	tonumber()
	ic = {
		stripColor()
		giveBack()
		renameThis()
		checkStack()
		sortFunc()
		sort()
		itemAmount()
		amountEquipped()
		sort_relative()
		itemConfig()
		searchBox()
		clientVersion = 1
		quickstack()
		searchButton()
		renameButton()
		lock()
		getQuality()
	}
	assert()
	rawset()
	getmetatable()
	string = {
		rep()
		gmatch()
		reverse()
		pack()
		char()
		sub()
		format()
		byte()
		match()
		dump()
		find()
		unpack()
		packsize()
		upper()
		gsub()
		lower()
		len()
	}
	pcall()
	player = {
		consumeItemWithParameter()
		shipUpgrades()
		altHandItemTags()
		upgradeShip()
		serverUuid()
		gender()
		worldId()
		equippedTech()
		completeMission()
		inventoryTags()
		removeEssentialItem()
		hasItem()
		recordEvent()
		addBookmark()
		lounge()
		cleanupItems()
		consumeItem()
		makeTechUnavailable()
		setUniverseFlag()
		giveBlueprint()
		hasItemWithParameter()
		species()
		playCinematic()
		altHandItem()
		primaryHandItemTags()
		availableTechs()
		enabledTechs()
		enableTech()
		giveItem()
		playTime()
		setIntroComplete()
		essentialItem()
		ownShipWorldId()
		makeTechAvailable()
		warp()
		equipTech()
		startQuest()
		enableMission()
		hasQuest()
		itemsWithTag()
		isLounging()
		primaryHandItem()
		confirm()
		hasCompletedQuest()
		hasCountOfItem()
		equippedItem()
		setEquippedItem()
		radioMessage()
		giveEssentialItem()
		introComplete()
		canStartQuest()
		consumeTaggedItem()
		getItemWithParameter()
	}
	config = {
		getParameter()
	}
	root = {
		questConfig()
		treeFoliageDirectory()
		getConfigurationPath()
		loadVersionedJson()
		materialHealth()
		tenantConfig()
		itemConfig()
		materialMiningSound()
		projectileConfig()
		imageSpaces()
		techType()
		createTreasure()
		materialFootstepSound()
		itemHasTag()
		imageSize()
		treeStemDirectory()
		npcPortrait()
		hasTech()
		getMatchingTenants()
		getConfiguration()
		createItem()
		generateName()
		setConfiguration()
		techConfig()
		materialPath()
		makeCurrentVersionedJson()
		monsterMovementSettings()
		isTreasurePool()
		itemTags()
		itemType()
		evalFunction()
		monsterSkillParameter()
		assetJson()
		setConfigurationPath()
		monsterPortrait()
		recipesForItem()
		createBiome()
		behaviorModule()
		liquidStatusEffects()
		npcConfig()
		nonEmptyRegion()
		evalFunction2()
		projectileGravityMultiplier()
		npcVariant()
	}
	math = {
		tan()
		atan()
		modf()
		exp()
		type()
		acos()
		abs()
		mininteger = -9223372036854775808
		maxinteger = 9223372036854775807
		deg()
		asin()
		randomseed()
		random()
		sqrt()
		huge = inf
		min()
		log()
		pi = 3.1415926535898
		rad()
		max()
		floor()
		ult()
		cos()
		tointeger()
		fmod()
		sin()
		ceil()
	}
	widget = {
		setListSelected()
		setImage()
		setButtonCheckedImages()
		setImageRotation()
		setButtonImage()
		getListSelected()
		itemGridItems()
		addListItem()
		removeListItem()
		setButtonImages()
		blur()
		getData()
		setOptionVisible()
		playSound()
		setChecked()
		getSelectedOption()
		setFontColor()
		setSize()
		setOptionEnabled()
		clearListItems()
		setPosition()
		setProgress()
		getText()
		getSliderValue()
		setButtonEnabled()
		setButtonOverlayImage()
		setData()
		setSelectedOption()
		focus()
		getSize()
		setImageScale()
		setVisible()
		getPosition()
		setText()
		getChecked()
	}
	xpcall()
	setmetatable()
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	status = {
		removeEphemeralEffect()
		resetResource()
		addPersistentEffect()
		addEphemeralEffect()
		resourceMax()
		addPersistentEffects()
		clearEphemeralEffects()
		statPositive()
		modifyResource()
		statusProperty()
		resourcePercentage()
		resource()
		isResource()
		setResourcePercentage()
		getPersistentEffects()
		resourcePositive()
		clearPersistentEffects()
		giveResource()
		overConsumeResource()
		damageTakenSince()
		activeUniqueStatusEffectSummary()
		addEphemeralEffects()
		setStatusProperty()
		resourceLocked()
		modifyResourcePercentage()
		stat()
		clearAllPersistentEffects()
		setResourceLocked()
		resetAllResources()
		resourceNames()
		setPersistentEffects()
		inflictedDamageSince()
		consumeResource()
		inflictedHitsSince()
		setResource()
	}
	utf8 = {
		charpattern = "[
[03:31:01.354] [Warn] 	coroutine = {
		wrap()
		resume()
		create()
		isyieldable()
		status()
		running()
		yield()
	}
	jarray()
	type()
	init()
	require()
	table = {
		insert()
		unpack()
		pack()
		concat()
		sort()
		move()
		remove()
	}
	_VERSION = "Lua 5.3"
	update()
	rawequal()
	world = {
		isMonster()
		entityPortrait()
		entityQuery()
		itemDropQuery()
		entityVelocity()
		damageTiles()
		entityHealth()
		debugPoint()
		debugLine()
		entityExists()
		entityUniqueId()
		timeOfDay()
		entityGender()
		entityAggressive()
		magnitude()
		mod()
		platformerPathStart()
		containerItemAt()
		breathable()
		entityHasCountOfItem()
		npcType()
		sendEntityMessage()
		liquidAt()
		liquidAlongLine()
		isTileProtected()
		destroyLiquid()
		spawnLiquid()
		isNpc()
		getProperty()
		gravity()
		entityMoney()
		objectLineQuery()
		spawnMonster()
		lineCollision()
		lineTileCollision()
		rectCollision()
		getObjectParameter()
		entityHandItem()
		setProperty()
		entityHandItemDescriptor()
		time()
		placeMaterial()
		entityName()
		findUniqueEntity()
		threatLevel()
		placeObject()
		spawnTreasure()
		spawnVehicle()
		damageTileArea()
		windLevel()
		tileIsOccupied()
		containerTakeAt()
		loungeableOccupied()
		resolvePolyCollision()
		nearestTo()
		spawnStagehand()
		polyCollision()
		containerOpen()
		pointCollision()
		distance()
		rectTileCollision()
		debugPoly()
		pointTileCollision()
		containerStackItems()
		collisionBlocksAlongLine()
		entityDamageTeam()
		containerAvailable()
		containerItemApply()
		farmableStage()
		containerSize()
		polyContains()
		stagehandType()
		containerItemsCanFit()
		placeMod()
		containerTakeNumItemsAt()
		dayLength()
		callScriptedEntity()
		spawnProjectile()
		containerItemsFitWhere()
		npcLineQuery()
		npcQuery()
		containerTakeAll()
		findPlatformerPath()
		entityDescription()
		xwrap()
		spawnItem()
		containerSwapItemsNoCombine()
		containerAddItems()
		objectSpaces()
		playerQuery()
		containerConsumeAt()
		monsterType()
		entityType()
		containerSwapItems()
		debugText()
		day()
		containerPutItemsAt()
		entitySpecies()
		loungeableQuery()
		lightLevel()
		entityCanDamage()
		underground()
		spawnNpc()
		material()
		monsterQuery()
		objectQuery()
		containerConsume()
		entityLineQuery()
		containerClose()
		entityPosition()
		objectAt()
		containerItems()
	}
	tonumber()
	ic = {
		stripColor()
		giveBack()
		renameThis()
		checkStack()
		sortFunc()
		sort()
		itemAmount()
		amountEquipped()
		sort_relative()
		itemConfig()
		searchBox()
		clientVersion = 1
		quickstack()
		searchButton()
		renameButton()
		lock()
		getQuality()
	}
	assert()
	rawset()
	getmetatable()
	string = {
		rep()
		gmatch()
		reverse()
		pack()
		char()
		sub()
		format()
		byte()
		match()
		dump()
		find()
		unpack()
		packsize()
		upper()
		gsub()
		lower()
		len()
	}
	pcall()
	player = {
		consumeItemWithParameter()
		shipUpgrades()
		altHandItemTags()
		upgradeShip()
		serverUuid()
		gender()
		worldId()
		equippedTech()
		completeMission()
		inventoryTags()
		removeEssentialItem()
		hasItem()
		recordEvent()
		addBookmark()
		lounge()
		cleanupItems()
		consumeItem()
		makeTechUnavailable()
		setUniverseFlag()
		giveBlueprint()
		hasItemWithParameter()
		species()
		playCinematic()
		altHandItem()
		primaryHandItemTags()
		availableTechs()
		enabledTechs()
		enableTech()
		giveItem()
		playTime()
		setIntroComplete()
		essentialItem()
		ownShipWorldId()
		makeTechAvailable()
		warp()
		equipTech()
		startQuest()
		enableMission()
		hasQuest()
		itemsWithTag()
		isLounging()
		primaryHandItem()
		confirm()
		hasCompletedQuest()
		hasCountOfItem()
		equippedItem()
		setEquippedItem()
		radioMessage()
		giveEssentialItem()
		introComplete()
		canStartQuest()
		consumeTaggedItem()
		getItemWithParameter()
	}
	config = {
		getParameter()
	}
	root = {
		questConfig()
		treeFoliageDirectory()
		getConfigurationPath()
		loadVersionedJson()
		materialHealth()
		tenantConfig()
		itemConfig()
		materialMiningSound()
		projectileConfig()
		imageSpaces()
		techType()
		createTreasure()
		materialFootstepSound()
		itemHasTag()
		imageSize()
		treeStemDirectory()
		npcPortrait()
		hasTech()
		getMatchingTenants()
		getConfiguration()
		createItem()
		generateName()
		setConfiguration()
		techConfig()
		materialPath()
		makeCurrentVersionedJson()
		monsterMovementSettings()
		isTreasurePool()
		itemTags()
		itemType()
		evalFunction()
		monsterSkillParameter()
		assetJson()
		setConfigurationPath()
		monsterPortrait()
		recipesForItem()
		createBiome()
		behaviorModule()
		liquidStatusEffects()
		npcConfig()
		nonEmptyRegion()
		evalFunction2()
		projectileGravityMultiplier()
		npcVariant()
	}
	math = {
		tan()
		atan()
		modf()
		exp()
		type()
		acos()
		abs()
		mininteger = -9223372036854775808
		maxinteger = 9223372036854775807
		deg()
		asin()
		randomseed()
		random()
		sqrt()
		huge = inf
		min()
		log()
		pi = 3.1415926535898
		rad()
		max()
		floor()
		ult()
		cos()
		tointeger()
		fmod()
		sin()
		ceil()
	}
	widget = {
		setListSelected()
		setImage()
		setButtonCheckedImages()
		setImageRotation()
		setButtonImage()
		getListSelected()
		itemGridItems()
		addListItem()
		removeListItem()
		setButtonImages()
		blur()
		getData()
		setOptionVisible()
		playSound()
		setChecked()
		getSelectedOption()
		setFontColor()
		setSize()
		setOptionEnabled()
		clearListItems()
		setPosition()
		setProgress()
		getText()
		getSliderValue()
		setButtonEnabled()
		setButtonOverlayImage()
		setData()
		setSelectedOption()
		focus()
		getSize()
		setImageScale()
		setVisible()
		getPosition()
		setText()
		getChecked()
	}
	xpcall()
	setmetatable()
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	status = {
		removeEphemeralEffect()
		resetResource()
		addPersistentEffect()
		addEphemeralEffect()
		resourceMax()
		addPersistentEffects()
		clearEphemeralEffects()
		statPositive()
		modifyResource()
		statusProperty()
		resourcePercentage()
		resource()
		isResource()
		setResourcePercentage()
		getPersistentEffects()
		resourcePositive()
		clearPersistentEffects()
		giveResource()
		overConsumeResource()
		damageTakenSince()
		activeUniqueStatusEffectSummary()
		addEphemeralEffects()
		setStatusProperty()
		resourceLocked()
		modifyResourcePercentage()
		stat()
		clearAllPersistentEffects()
		setResourceLocked()
		resetAllResources()
		resourceNames()
		setPersistentEffects()
		inflictedDamageSince()
		consumeResource()
		inflictedHitsSince()
		setResource()
	}
	utf8 = {
		charpattern = "[
[03:31:02.762] [Info] [IC] [Sort] Time elapsed: 0.019
[03:31:15.574] [Warn] 	coroutine = {
		wrap()
		resume()
		create()
		isyieldable()
		status()
		running()
		yield()
	}
	jarray()
	type()
	init()
	require()
	table = {
		insert()
		unpack()
		pack()
		concat()
		sort()
		move()
		remove()
	}
	_VERSION = "Lua 5.3"
	update()
	rawequal()
	world = {
		isMonster()
		entityPortrait()
		entityQuery()
		itemDropQuery()
		entityVelocity()
		damageTiles()
		entityHealth()
		debugPoint()
		debugLine()
		entityExists()
		entityUniqueId()
		timeOfDay()
		entityGender()
		entityAggressive()
		magnitude()
		mod()
		platformerPathStart()
		containerItemAt()
		breathable()
		entityHasCountOfItem()
		npcType()
		sendEntityMessage()
		liquidAt()
		liquidAlongLine()
		isTileProtected()
		destroyLiquid()
		spawnLiquid()
		isNpc()
		getProperty()
		gravity()
		entityMoney()
		objectLineQuery()
		spawnMonster()
		lineCollision()
		lineTileCollision()
		rectCollision()
		getObjectParameter()
		entityHandItem()
		setProperty()
		entityHandItemDescriptor()
		time()
		placeMaterial()
		entityName()
		findUniqueEntity()
		threatLevel()
		placeObject()
		spawnTreasure()
		spawnVehicle()
		damageTileArea()
		windLevel()
		tileIsOccupied()
		containerTakeAt()
		loungeableOccupied()
		resolvePolyCollision()
		nearestTo()
		spawnStagehand()
		polyCollision()
		containerOpen()
		pointCollision()
		distance()
		rectTileCollision()
		debugPoly()
		pointTileCollision()
		containerStackItems()
		collisionBlocksAlongLine()
		entityDamageTeam()
		containerAvailable()
		containerItemApply()
		farmableStage()
		containerSize()
		polyContains()
		stagehandType()
		containerItemsCanFit()
		placeMod()
		containerTakeNumItemsAt()
		dayLength()
		callScriptedEntity()
		spawnProjectile()
		containerItemsFitWhere()
		npcLineQuery()
		npcQuery()
		containerTakeAll()
		findPlatformerPath()
		entityDescription()
		xwrap()
		spawnItem()
		containerSwapItemsNoCombine()
		containerAddItems()
		objectSpaces()
		playerQuery()
		containerConsumeAt()
		monsterType()
		entityType()
		containerSwapItems()
		debugText()
		day()
		containerPutItemsAt()
		entitySpecies()
		loungeableQuery()
		lightLevel()
		entityCanDamage()
		underground()
		spawnNpc()
		material()
		monsterQuery()
		objectQuery()
		containerConsume()
		entityLineQuery()
		containerClose()
		entityPosition()
		objectAt()
		containerItems()
	}
	tonumber()
	ic = {
		stripColor()
		giveBack()
		renameThis()
		checkStack()
		sortFunc()
		sort()
		itemAmount()
		amountEquipped()
		sort_relative()
		itemConfig()
		searchBox()
		clientVersion = 1
		quickstack()
		searchButton()
		renameButton()
		lock()
		getQuality()
	}
	assert()
	rawset()
	getmetatable()
	string = {
		rep()
		gmatch()
		reverse()
		pack()
		char()
		sub()
		format()
		byte()
		match()
		dump()
		find()
		unpack()
		packsize()
		upper()
		gsub()
		lower()
		len()
	}
	pcall()
	player = {
		consumeItemWithParameter()
		shipUpgrades()
		altHandItemTags()
		upgradeShip()
		serverUuid()
		gender()
		worldId()
		equippedTech()
		completeMission()
		inventoryTags()
		removeEssentialItem()
		hasItem()
		recordEvent()
		addBookmark()
		lounge()
		cleanupItems()
		consumeItem()
		makeTechUnavailable()
		setUniverseFlag()
		giveBlueprint()
		hasItemWithParameter()
		species()
		playCinematic()
		altHandItem()
		primaryHandItemTags()
		availableTechs()
		enabledTechs()
		enableTech()
		giveItem()
		playTime()
		setIntroComplete()
		essentialItem()
		ownShipWorldId()
		makeTechAvailable()
		warp()
		equipTech()
		startQuest()
		enableMission()
		hasQuest()
		itemsWithTag()
		isLounging()
		primaryHandItem()
		confirm()
		hasCompletedQuest()
		hasCountOfItem()
		equippedItem()
		setEquippedItem()
		radioMessage()
		giveEssentialItem()
		introComplete()
		canStartQuest()
		consumeTaggedItem()
		getItemWithParameter()
	}
	config = {
		getParameter()
	}
	root = {
		questConfig()
		treeFoliageDirectory()
		getConfigurationPath()
		loadVersionedJson()
		materialHealth()
		tenantConfig()
		itemConfig()
		materialMiningSound()
		projectileConfig()
		imageSpaces()
		techType()
		createTreasure()
		materialFootstepSound()
		itemHasTag()
		imageSize()
		treeStemDirectory()
		npcPortrait()
		hasTech()
		getMatchingTenants()
		getConfiguration()
		createItem()
		generateName()
		setConfiguration()
		techConfig()
		materialPath()
		makeCurrentVersionedJson()
		monsterMovementSettings()
		isTreasurePool()
		itemTags()
		itemType()
		evalFunction()
		monsterSkillParameter()
		assetJson()
		setConfigurationPath()
		monsterPortrait()
		recipesForItem()
		createBiome()
		behaviorModule()
		liquidStatusEffects()
		npcConfig()
		nonEmptyRegion()
		evalFunction2()
		projectileGravityMultiplier()
		npcVariant()
	}
	math = {
		tan()
		atan()
		modf()
		exp()
		type()
		acos()
		abs()
		mininteger = -9223372036854775808
		maxinteger = 9223372036854775807
		deg()
		asin()
		randomseed()
		random()
		sqrt()
		huge = inf
		min()
		log()
		pi = 3.1415926535898
		rad()
		max()
		floor()
		ult()
		cos()
		tointeger()
		fmod()
		sin()
		ceil()
	}
	widget = {
		setListSelected()
		setImage()
		setButtonCheckedImages()
		setImageRotation()
		setButtonImage()
		getListSelected()
		itemGridItems()
		addListItem()
		removeListItem()
		setButtonImages()
		blur()
		getData()
		setOptionVisible()
		playSound()
		setChecked()
		getSelectedOption()
		setFontColor()
		setSize()
		setOptionEnabled()
		clearListItems()
		setPosition()
		setProgress()
		getText()
		getSliderValue()
		setButtonEnabled()
		setButtonOverlayImage()
		setData()
		setSelectedOption()
		focus()
		getSize()
		setImageScale()
		setVisible()
		getPosition()
		setText()
		getChecked()
	}
	xpcall()
	setmetatable()
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	status = {
		removeEphemeralEffect()
		resetResource()
		addPersistentEffect()
		addEphemeralEffect()
		resourceMax()
		addPersistentEffects()
		clearEphemeralEffects()
		statPositive()
		modifyResource()
		statusProperty()
		resourcePercentage()
		resource()
		isResource()
		setResourcePercentage()
		getPersistentEffects()
		resourcePositive()
		clearPersistentEffects()
		giveResource()
		overConsumeResource()
		damageTakenSince()
		activeUniqueStatusEffectSummary()
		addEphemeralEffects()
		setStatusProperty()
		resourceLocked()
		modifyResourcePercentage()
		stat()
		clearAllPersistentEffects()
		setResourceLocked()
		resetAllResources()
		resourceNames()
		setPersistentEffects()
		inflictedDamageSince()
		consumeResource()
		inflictedHitsSince()
		setResource()
	}
	utf8 = {
		charpattern = "[
[03:31:16.388] [Warn] 	coroutine = {
		wrap()
		resume()
		create()
		isyieldable()
		status()
		running()
		yield()
	}
	jarray()
	type()
	init()
	require()
	table = {
		insert()
		unpack()
		pack()
		concat()
		sort()
		move()
		remove()
	}
	_VERSION = "Lua 5.3"
	update()
	rawequal()
	world = {
		isMonster()
		entityPortrait()
		entityQuery()
		itemDropQuery()
		entityVelocity()
		damageTiles()
		entityHealth()
		debugPoint()
		debugLine()
		entityExists()
		entityUniqueId()
		timeOfDay()
		entityGender()
		entityAggressive()
		magnitude()
		mod()
		platformerPathStart()
		containerItemAt()
		breathable()
		entityHasCountOfItem()
		npcType()
		sendEntityMessage()
		liquidAt()
		liquidAlongLine()
		isTileProtected()
		destroyLiquid()
		spawnLiquid()
		isNpc()
		getProperty()
		gravity()
		entityMoney()
		objectLineQuery()
		spawnMonster()
		lineCollision()
		lineTileCollision()
		rectCollision()
		getObjectParameter()
		entityHandItem()
		setProperty()
		entityHandItemDescriptor()
		time()
		placeMaterial()
		entityName()
		findUniqueEntity()
		threatLevel()
		placeObject()
		spawnTreasure()
		spawnVehicle()
		damageTileArea()
		windLevel()
		tileIsOccupied()
		containerTakeAt()
		loungeableOccupied()
		resolvePolyCollision()
		nearestTo()
		spawnStagehand()
		polyCollision()
		containerOpen()
		pointCollision()
		distance()
		rectTileCollision()
		debugPoly()
		pointTileCollision()
		containerStackItems()
		collisionBlocksAlongLine()
		entityDamageTeam()
		containerAvailable()
		containerItemApply()
		farmableStage()
		containerSize()
		polyContains()
		stagehandType()
		containerItemsCanFit()
		placeMod()
		containerTakeNumItemsAt()
		dayLength()
		callScriptedEntity()
		spawnProjectile()
		containerItemsFitWhere()
		npcLineQuery()
		npcQuery()
		containerTakeAll()
		findPlatformerPath()
		entityDescription()
		xwrap()
		spawnItem()
		containerSwapItemsNoCombine()
		containerAddItems()
		objectSpaces()
		playerQuery()
		containerConsumeAt()
		monsterType()
		entityType()
		containerSwapItems()
		debugText()
		day()
		containerPutItemsAt()
		entitySpecies()
		loungeableQuery()
		lightLevel()
		entityCanDamage()
		underground()
		spawnNpc()
		material()
		monsterQuery()
		objectQuery()
		containerConsume()
		entityLineQuery()
		containerClose()
		entityPosition()
		objectAt()
		containerItems()
	}
	tonumber()
	ic = {
		stripColor()
		giveBack()
		renameThis()
		checkStack()
		sortFunc()
		sort()
		itemAmount()
		amountEquipped()
		sort_relative()
		itemConfig()
		searchBox()
		clientVersion = 1
		quickstack()
		searchButton()
		renameButton()
		lock()
		getQuality()
	}
	assert()
	rawset()
	getmetatable()
	string = {
		rep()
		gmatch()
		reverse()
		pack()
		char()
		sub()
		format()
		byte()
		match()
		dump()
		find()
		unpack()
		packsize()
		upper()
		gsub()
		lower()
		len()
	}
	pcall()
	player = {
		consumeItemWithParameter()
		shipUpgrades()
		altHandItemTags()
		upgradeShip()
		serverUuid()
		gender()
		worldId()
		equippedTech()
		completeMission()
		inventoryTags()
		removeEssentialItem()
		hasItem()
		recordEvent()
		addBookmark()
		lounge()
		cleanupItems()
		consumeItem()
		makeTechUnavailable()
		setUniverseFlag()
		giveBlueprint()
		hasItemWithParameter()
		species()
		playCinematic()
		altHandItem()
		primaryHandItemTags()
		availableTechs()
		enabledTechs()
		enableTech()
		giveItem()
		playTime()
		setIntroComplete()
		essentialItem()
		ownShipWorldId()
		makeTechAvailable()
		warp()
		equipTech()
		startQuest()
		enableMission()
		hasQuest()
		itemsWithTag()
		isLounging()
		primaryHandItem()
		confirm()
		hasCompletedQuest()
		hasCountOfItem()
		equippedItem()
		setEquippedItem()
		radioMessage()
		giveEssentialItem()
		introComplete()
		canStartQuest()
		consumeTaggedItem()
		getItemWithParameter()
	}
	config = {
		getParameter()
	}
	root = {
		questConfig()
		treeFoliageDirectory()
		getConfigurationPath()
		loadVersionedJson()
		materialHealth()
		tenantConfig()
		itemConfig()
		materialMiningSound()
		projectileConfig()
		imageSpaces()
		techType()
		createTreasure()
		materialFootstepSound()
		itemHasTag()
		imageSize()
		treeStemDirectory()
		npcPortrait()
		hasTech()
		getMatchingTenants()
		getConfiguration()
		createItem()
		generateName()
		setConfiguration()
		techConfig()
		materialPath()
		makeCurrentVersionedJson()
		monsterMovementSettings()
		isTreasurePool()
		itemTags()
		itemType()
		evalFunction()
		monsterSkillParameter()
		assetJson()
		setConfigurationPath()
		monsterPortrait()
		recipesForItem()
		createBiome()
		behaviorModule()
		liquidStatusEffects()
		npcConfig()
		nonEmptyRegion()
		evalFunction2()
		projectileGravityMultiplier()
		npcVariant()
	}
	math = {
		tan()
		atan()
		modf()
		exp()
		type()
		acos()
		abs()
		mininteger = -9223372036854775808
		maxinteger = 9223372036854775807
		deg()
		asin()
		randomseed()
		random()
		sqrt()
		huge = inf
		min()
		log()
		pi = 3.1415926535898
		rad()
		max()
		floor()
		ult()
		cos()
		tointeger()
		fmod()
		sin()
		ceil()
	}
	widget = {
		setListSelected()
		setImage()
		setButtonCheckedImages()
		setImageRotation()
		setButtonImage()
		getListSelected()
		itemGridItems()
		addListItem()
		removeListItem()
		setButtonImages()
		blur()
		getData()
		setOptionVisible()
		playSound()
		setChecked()
		getSelectedOption()
		setFontColor()
		setSize()
		setOptionEnabled()
		clearListItems()
		setPosition()
		setProgress()
		getText()
		getSliderValue()
		setButtonEnabled()
		setButtonOverlayImage()
		setData()
		setSelectedOption()
		focus()
		getSize()
		setImageScale()
		setVisible()
		getPosition()
		setText()
		getChecked()
	}
	xpcall()
	setmetatable()
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	status = {
		removeEphemeralEffect()
		resetResource()
		addPersistentEffect()
		addEphemeralEffect()
		resourceMax()
		addPersistentEffects()
		clearEphemeralEffects()
		statPositive()
		modifyResource()
		statusProperty()
		resourcePercentage()
		resource()
		isResource()
		setResourcePercentage()
		getPersistentEffects()
		resourcePositive()
		clearPersistentEffects()
		giveResource()
		overConsumeResource()
		damageTakenSince()
		activeUniqueStatusEffectSummary()
		addEphemeralEffects()
		setStatusProperty()
		resourceLocked()
		modifyResourcePercentage()
		stat()
		clearAllPersistentEffects()
		setResourceLocked()
		resetAllResources()
		resourceNames()
		setPersistentEffects()
		inflictedDamageSince()
		consumeResource()
		inflictedHitsSince()
		setResource()
	}
	utf8 = {
		charpattern = "[
[03:31:17.745] [Warn] 	coroutine = {
		wrap()
		resume()
		create()
		isyieldable()
		status()
		running()
		yield()
	}
	jarray()
	type()
	init()
	require()
	table = {
		insert()
		unpack()
		pack()
		concat()
		sort()
		move()
		remove()
	}
	_VERSION = "Lua 5.3"
	update()
	rawequal()
	world = {
		isMonster()
		entityPortrait()
		entityQuery()
		itemDropQuery()
		entityVelocity()
		damageTiles()
		entityHealth()
		debugPoint()
		debugLine()
		entityExists()
		entityUniqueId()
		timeOfDay()
		entityGender()
		entityAggressive()
		magnitude()
		mod()
		platformerPathStart()
		containerItemAt()
		breathable()
		entityHasCountOfItem()
		npcType()
		sendEntityMessage()
		liquidAt()
		liquidAlongLine()
		isTileProtected()
		destroyLiquid()
		spawnLiquid()
		isNpc()
		getProperty()
		gravity()
		entityMoney()
		objectLineQuery()
		spawnMonster()
		lineCollision()
		lineTileCollision()
		rectCollision()
		getObjectParameter()
		entityHandItem()
		setProperty()
		entityHandItemDescriptor()
		time()
		placeMaterial()
		entityName()
		findUniqueEntity()
		threatLevel()
		placeObject()
		spawnTreasure()
		spawnVehicle()
		damageTileArea()
		windLevel()
		tileIsOccupied()
		containerTakeAt()
		loungeableOccupied()
		resolvePolyCollision()
		nearestTo()
		spawnStagehand()
		polyCollision()
		containerOpen()
		pointCollision()
		distance()
		rectTileCollision()
		debugPoly()
		pointTileCollision()
		containerStackItems()
		collisionBlocksAlongLine()
		entityDamageTeam()
		containerAvailable()
		containerItemApply()
		farmableStage()
		containerSize()
		polyContains()
		stagehandType()
		containerItemsCanFit()
		placeMod()
		containerTakeNumItemsAt()
		dayLength()
		callScriptedEntity()
		spawnProjectile()
		containerItemsFitWhere()
		npcLineQuery()
		npcQuery()
		containerTakeAll()
		findPlatformerPath()
		entityDescription()
		xwrap()
		spawnItem()
		containerSwapItemsNoCombine()
		containerAddItems()
		objectSpaces()
		playerQuery()
		containerConsumeAt()
		monsterType()
		entityType()
		containerSwapItems()
		debugText()
		day()
		containerPutItemsAt()
		entitySpecies()
		loungeableQuery()
		lightLevel()
		entityCanDamage()
		underground()
		spawnNpc()
		material()
		monsterQuery()
		objectQuery()
		containerConsume()
		entityLineQuery()
		containerClose()
		entityPosition()
		objectAt()
		containerItems()
	}
	tonumber()
	ic = {
		stripColor()
		giveBack()
		renameThis()
		checkStack()
		sortFunc()
		sort()
		itemAmount()
		amountEquipped()
		sort_relative()
		itemConfig()
		searchBox()
		clientVersion = 1
		quickstack()
		searchButton()
		renameButton()
		lock()
		getQuality()
	}
	assert()
	rawset()
	getmetatable()
	string = {
		rep()
		gmatch()
		reverse()
		pack()
		char()
		sub()
		format()
		byte()
		match()
		dump()
		find()
		unpack()
		packsize()
		upper()
		gsub()
		lower()
		len()
	}
	pcall()
	player = {
		consumeItemWithParameter()
		shipUpgrades()
		altHandItemTags()
		upgradeShip()
		serverUuid()
		gender()
		worldId()
		equippedTech()
		completeMission()
		inventoryTags()
		removeEssentialItem()
		hasItem()
		recordEvent()
		addBookmark()
		lounge()
		cleanupItems()
		consumeItem()
		makeTechUnavailable()
		setUniverseFlag()
		giveBlueprint()
		hasItemWithParameter()
		species()
		playCinematic()
		altHandItem()
		primaryHandItemTags()
		availableTechs()
		enabledTechs()
		enableTech()
		giveItem()
		playTime()
		setIntroComplete()
		essentialItem()
		ownShipWorldId()
		makeTechAvailable()
		warp()
		equipTech()
		startQuest()
		enableMission()
		hasQuest()
		itemsWithTag()
		isLounging()
		primaryHandItem()
		confirm()
		hasCompletedQuest()
		hasCountOfItem()
		equippedItem()
		setEquippedItem()
		radioMessage()
		giveEssentialItem()
		introComplete()
		canStartQuest()
		consumeTaggedItem()
		getItemWithParameter()
	}
	config = {
		getParameter()
	}
	root = {
		questConfig()
		treeFoliageDirectory()
		getConfigurationPath()
		loadVersionedJson()
		materialHealth()
		tenantConfig()
		itemConfig()
		materialMiningSound()
		projectileConfig()
		imageSpaces()
		techType()
		createTreasure()
		materialFootstepSound()
		itemHasTag()
		imageSize()
		treeStemDirectory()
		npcPortrait()
		hasTech()
		getMatchingTenants()
		getConfiguration()
		createItem()
		generateName()
		setConfiguration()
		techConfig()
		materialPath()
		makeCurrentVersionedJson()
		monsterMovementSettings()
		isTreasurePool()
		itemTags()
		itemType()
		evalFunction()
		monsterSkillParameter()
		assetJson()
		setConfigurationPath()
		monsterPortrait()
		recipesForItem()
		createBiome()
		behaviorModule()
		liquidStatusEffects()
		npcConfig()
		nonEmptyRegion()
		evalFunction2()
		projectileGravityMultiplier()
		npcVariant()
	}
	math = {
		tan()
		atan()
		modf()
		exp()
		type()
		acos()
		abs()
		mininteger = -9223372036854775808
		maxinteger = 9223372036854775807
		deg()
		asin()
		randomseed()
		random()
		sqrt()
		huge = inf
		min()
		log()
		pi = 3.1415926535898
		rad()
		max()
		floor()
		ult()
		cos()
		tointeger()
		fmod()
		sin()
		ceil()
	}
	widget = {
		setListSelected()
		setImage()
		setButtonCheckedImages()
		setImageRotation()
		setButtonImage()
		getListSelected()
		itemGridItems()
		addListItem()
		removeListItem()
		setButtonImages()
		blur()
		getData()
		setOptionVisible()
		playSound()
		setChecked()
		getSelectedOption()
		setFontColor()
		setSize()
		setOptionEnabled()
		clearListItems()
		setPosition()
		setProgress()
		getText()
		getSliderValue()
		setButtonEnabled()
		setButtonOverlayImage()
		setData()
		setSelectedOption()
		focus()
		getSize()
		setImageScale()
		setVisible()
		getPosition()
		setText()
		getChecked()
	}
	xpcall()
	setmetatable()
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	status = {
		removeEphemeralEffect()
		resetResource()
		addPersistentEffect()
		addEphemeralEffect()
		resourceMax()
		addPersistentEffects()
		clearEphemeralEffects()
		statPositive()
		modifyResource()
		statusProperty()
		resourcePercentage()
		resource()
		isResource()
		setResourcePercentage()
		getPersistentEffects()
		resourcePositive()
		clearPersistentEffects()
		giveResource()
		overConsumeResource()
		damageTakenSince()
		activeUniqueStatusEffectSummary()
		addEphemeralEffects()
		setStatusProperty()
		resourceLocked()
		modifyResourcePercentage()
		stat()
		clearAllPersistentEffects()
		setResourceLocked()
		resetAllResources()
		resourceNames()
		setPersistentEffects()
		inflictedDamageSince()
		consumeResource()
		inflictedHitsSince()
		setResource()
	}
	utf8 = {
		charpattern = "[
[03:31:18.910] [Warn] 	coroutine = {
		wrap()
		resume()
		create()
		isyieldable()
		status()
		running()
		yield()
	}
	jarray()
	type()
	init()
	require()
	table = {
		insert()
		unpack()
		pack()
		concat()
		sort()
		move()
		remove()
	}
	_VERSION = "Lua 5.3"
	update()
	rawequal()
	world = {
		isMonster()
		entityPortrait()
		entityQuery()
		itemDropQuery()
		entityVelocity()
		damageTiles()
		entityHealth()
		debugPoint()
		debugLine()
		entityExists()
		entityUniqueId()
		timeOfDay()
		entityGender()
		entityAggressive()
		magnitude()
		mod()
		platformerPathStart()
		containerItemAt()
		breathable()
		entityHasCountOfItem()
		npcType()
		sendEntityMessage()
		liquidAt()
		liquidAlongLine()
		isTileProtected()
		destroyLiquid()
		spawnLiquid()
		isNpc()
		getProperty()
		gravity()
		entityMoney()
		objectLineQuery()
		spawnMonster()
		lineCollision()
		lineTileCollision()
		rectCollision()
		getObjectParameter()
		entityHandItem()
		setProperty()
		entityHandItemDescriptor()
		time()
		placeMaterial()
		entityName()
		findUniqueEntity()
		threatLevel()
		placeObject()
		spawnTreasure()
		spawnVehicle()
		damageTileArea()
		windLevel()
		tileIsOccupied()
		containerTakeAt()
		loungeableOccupied()
		resolvePolyCollision()
		nearestTo()
		spawnStagehand()
		polyCollision()
		containerOpen()
		pointCollision()
		distance()
		rectTileCollision()
		debugPoly()
		pointTileCollision()
		containerStackItems()
		collisionBlocksAlongLine()
		entityDamageTeam()
		containerAvailable()
		containerItemApply()
		farmableStage()
		containerSize()
		polyContains()
		stagehandType()
		containerItemsCanFit()
		placeMod()
		containerTakeNumItemsAt()
		dayLength()
		callScriptedEntity()
		spawnProjectile()
		containerItemsFitWhere()
		npcLineQuery()
		npcQuery()
		containerTakeAll()
		findPlatformerPath()
		entityDescription()
		xwrap()
		spawnItem()
		containerSwapItemsNoCombine()
		containerAddItems()
		objectSpaces()
		playerQuery()
		containerConsumeAt()
		monsterType()
		entityType()
		containerSwapItems()
		debugText()
		day()
		containerPutItemsAt()
		entitySpecies()
		loungeableQuery()
		lightLevel()
		entityCanDamage()
		underground()
		spawnNpc()
		material()
		monsterQuery()
		objectQuery()
		containerConsume()
		entityLineQuery()
		containerClose()
		entityPosition()
		objectAt()
		containerItems()
	}
	tonumber()
	ic = {
		stripColor()
		giveBack()
		renameThis()
		checkStack()
		sortFunc()
		sort()
		itemAmount()
		amountEquipped()
		sort_relative()
		itemConfig()
		searchBox()
		clientVersion = 1
		quickstack()
		searchButton()
		renameButton()
		lock()
		getQuality()
	}
	assert()
	rawset()
	getmetatable()
	string = {
		rep()
		gmatch()
		reverse()
		pack()
		char()
		sub()
		format()
		byte()
		match()
		dump()
		find()
		unpack()
		packsize()
		upper()
		gsub()
		lower()
		len()
	}
	pcall()
	player = {
		consumeItemWithParameter()
		shipUpgrades()
		altHandItemTags()
		upgradeShip()
		serverUuid()
		gender()
		worldId()
		equippedTech()
		completeMission()
		inventoryTags()
		removeEssentialItem()
		hasItem()
		recordEvent()
		addBookmark()
		lounge()
		cleanupItems()
		consumeItem()
		makeTechUnavailable()
		setUniverseFlag()
		giveBlueprint()
		hasItemWithParameter()
		species()
		playCinematic()
		altHandItem()
		primaryHandItemTags()
		availableTechs()
		enabledTechs()
		enableTech()
		giveItem()
		playTime()
		setIntroComplete()
		essentialItem()
		ownShipWorldId()
		makeTechAvailable()
		warp()
		equipTech()
		startQuest()
		enableMission()
		hasQuest()
		itemsWithTag()
		isLounging()
		primaryHandItem()
		confirm()
		hasCompletedQuest()
		hasCountOfItem()
		equippedItem()
		setEquippedItem()
		radioMessage()
		giveEssentialItem()
		introComplete()
		canStartQuest()
		consumeTaggedItem()
		getItemWithParameter()
	}
	config = {
		getParameter()
	}
	root = {
		questConfig()
		treeFoliageDirectory()
		getConfigurationPath()
		loadVersionedJson()
		materialHealth()
		tenantConfig()
		itemConfig()
		materialMiningSound()
		projectileConfig()
		imageSpaces()
		techType()
		createTreasure()
		materialFootstepSound()
		itemHasTag()
		imageSize()
		treeStemDirectory()
		npcPortrait()
		hasTech()
		getMatchingTenants()
		getConfiguration()
		createItem()
		generateName()
		setConfiguration()
		techConfig()
		materialPath()
		makeCurrentVersionedJson()
		monsterMovementSettings()
		isTreasurePool()
		itemTags()
		itemType()
		evalFunction()
		monsterSkillParameter()
		assetJson()
		setConfigurationPath()
		monsterPortrait()
		recipesForItem()
		createBiome()
		behaviorModule()
		liquidStatusEffects()
		npcConfig()
		nonEmptyRegion()
		evalFunction2()
		projectileGravityMultiplier()
		npcVariant()
	}
	math = {
		tan()
		atan()
		modf()
		exp()
		type()
		acos()
		abs()
		mininteger = -9223372036854775808
		maxinteger = 9223372036854775807
		deg()
		asin()
		randomseed()
		random()
		sqrt()
		huge = inf
		min()
		log()
		pi = 3.1415926535898
		rad()
		max()
		floor()
		ult()
		cos()
		tointeger()
		fmod()
		sin()
		ceil()
	}
	widget = {
		setListSelected()
		setImage()
		setButtonCheckedImages()
		setImageRotation()
		setButtonImage()
		getListSelected()
		itemGridItems()
		addListItem()
		removeListItem()
		setButtonImages()
		blur()
		getData()
		setOptionVisible()
		playSound()
		setChecked()
		getSelectedOption()
		setFontColor()
		setSize()
		setOptionEnabled()
		clearListItems()
		setPosition()
		setProgress()
		getText()
		getSliderValue()
		setButtonEnabled()
		setButtonOverlayImage()
		setData()
		setSelectedOption()
		focus()
		getSize()
		setImageScale()
		setVisible()
		getPosition()
		setText()
		getChecked()
	}
	xpcall()
	setmetatable()
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	status = {
		removeEphemeralEffect()
		resetResource()
		addPersistentEffect()
		addEphemeralEffect()
		resourceMax()
		addPersistentEffects()
		clearEphemeralEffects()
		statPositive()
		modifyResource()
		statusProperty()
		resourcePercentage()
		resource()
		isResource()
		setResourcePercentage()
		getPersistentEffects()
		resourcePositive()
		clearPersistentEffects()
		giveResource()
		overConsumeResource()
		damageTakenSince()
		activeUniqueStatusEffectSummary()
		addEphemeralEffects()
		setStatusProperty()
		resourceLocked()
		modifyResourcePercentage()
		stat()
		clearAllPersistentEffects()
		setResourceLocked()
		resetAllResources()
		resourceNames()
		setPersistentEffects()
		inflictedDamageSince()
		consumeResource()
		inflictedHitsSince()
		setResource()
	}
	utf8 = {
		charpattern = "[
[03:34:22.840] [Warn] 	coroutine = {
		wrap()
		resume()
		create()
		isyieldable()
		status()
		running()
		yield()
	}
	jarray()
	type()
	init()
	require()
	table = {
		insert()
		unpack()
		pack()
		concat()
		sort()
		move()
		remove()
	}
	_VERSION = "Lua 5.3"
	update()
	rawequal()
	world = {
		isMonster()
		entityPortrait()
		entityQuery()
		itemDropQuery()
		entityVelocity()
		damageTiles()
		entityHealth()
		debugPoint()
		debugLine()
		entityExists()
		entityUniqueId()
		timeOfDay()
		entityGender()
		entityAggressive()
		magnitude()
		mod()
		platformerPathStart()
		containerItemAt()
		breathable()
		entityHasCountOfItem()
		npcType()
		sendEntityMessage()
		liquidAt()
		liquidAlongLine()
		isTileProtected()
		destroyLiquid()
		spawnLiquid()
		isNpc()
		getProperty()
		gravity()
		entityMoney()
		objectLineQuery()
		spawnMonster()
		lineCollision()
		lineTileCollision()
		rectCollision()
		getObjectParameter()
		entityHandItem()
		setProperty()
		entityHandItemDescriptor()
		time()
		placeMaterial()
		entityName()
		findUniqueEntity()
		threatLevel()
		placeObject()
		spawnTreasure()
		spawnVehicle()
		damageTileArea()
		windLevel()
		tileIsOccupied()
		containerTakeAt()
		loungeableOccupied()
		resolvePolyCollision()
		nearestTo()
		spawnStagehand()
		polyCollision()
		containerOpen()
		pointCollision()
		distance()
		rectTileCollision()
		debugPoly()
		pointTileCollision()
		containerStackItems()
		collisionBlocksAlongLine()
		entityDamageTeam()
		containerAvailable()
		containerItemApply()
		farmableStage()
		containerSize()
		polyContains()
		stagehandType()
		containerItemsCanFit()
		placeMod()
		containerTakeNumItemsAt()
		dayLength()
		callScriptedEntity()
		spawnProjectile()
		containerItemsFitWhere()
		npcLineQuery()
		npcQuery()
		containerTakeAll()
		findPlatformerPath()
		entityDescription()
		xwrap()
		spawnItem()
		containerSwapItemsNoCombine()
		containerAddItems()
		objectSpaces()
		playerQuery()
		containerConsumeAt()
		monsterType()
		entityType()
		containerSwapItems()
		debugText()
		day()
		containerPutItemsAt()
		entitySpecies()
		loungeableQuery()
		lightLevel()
		entityCanDamage()
		underground()
		spawnNpc()
		material()
		monsterQuery()
		objectQuery()
		containerConsume()
		entityLineQuery()
		containerClose()
		entityPosition()
		objectAt()
		containerItems()
	}
	tonumber()
	ic = {
		stripColor()
		giveBack()
		renameThis()
		checkStack()
		sortFunc()
		sort()
		itemAmount()
		amountEquipped()
		sort_relative()
		itemConfig()
		searchBox()
		clientVersion = 1
		quickstack()
		searchButton()
		renameButton()
		lock()
		getQuality()
	}
	assert()
	rawset()
	getmetatable()
	string = {
		rep()
		gmatch()
		reverse()
		pack()
		char()
		sub()
		format()
		byte()
		match()
		dump()
		find()
		unpack()
		packsize()
		upper()
		gsub()
		lower()
		len()
	}
	pcall()
	player = {
		consumeItemWithParameter()
		shipUpgrades()
		altHandItemTags()
		upgradeShip()
		serverUuid()
		gender()
		worldId()
		equippedTech()
		completeMission()
		inventoryTags()
		removeEssentialItem()
		hasItem()
		recordEvent()
		addBookmark()
		lounge()
		cleanupItems()
		consumeItem()
		makeTechUnavailable()
		setUniverseFlag()
		giveBlueprint()
		hasItemWithParameter()
		species()
		playCinematic()
		altHandItem()
		primaryHandItemTags()
		availableTechs()
		enabledTechs()
		enableTech()
		giveItem()
		playTime()
		setIntroComplete()
		essentialItem()
		ownShipWorldId()
		makeTechAvailable()
		warp()
		equipTech()
		startQuest()
		enableMission()
		hasQuest()
		itemsWithTag()
		isLounging()
		primaryHandItem()
		confirm()
		hasCompletedQuest()
		hasCountOfItem()
		equippedItem()
		setEquippedItem()
		radioMessage()
		giveEssentialItem()
		introComplete()
		canStartQuest()
		consumeTaggedItem()
		getItemWithParameter()
	}
	config = {
		getParameter()
	}
	root = {
		questConfig()
		treeFoliageDirectory()
		getConfigurationPath()
		loadVersionedJson()
		materialHealth()
		tenantConfig()
		itemConfig()
		materialMiningSound()
		projectileConfig()
		imageSpaces()
		techType()
		createTreasure()
		materialFootstepSound()
		itemHasTag()
		imageSize()
		treeStemDirectory()
		npcPortrait()
		hasTech()
		getMatchingTenants()
		getConfiguration()
		createItem()
		generateName()
		setConfiguration()
		techConfig()
		materialPath()
		makeCurrentVersionedJson()
		monsterMovementSettings()
		isTreasurePool()
		itemTags()
		itemType()
		evalFunction()
		monsterSkillParameter()
		assetJson()
		setConfigurationPath()
		monsterPortrait()
		recipesForItem()
		createBiome()
		behaviorModule()
		liquidStatusEffects()
		npcConfig()
		nonEmptyRegion()
		evalFunction2()
		projectileGravityMultiplier()
		npcVariant()
	}
	math = {
		tan()
		atan()
		modf()
		exp()
		type()
		acos()
		abs()
		mininteger = -9223372036854775808
		maxinteger = 9223372036854775807
		deg()
		asin()
		randomseed()
		random()
		sqrt()
		huge = inf
		min()
		log()
		pi = 3.1415926535898
		rad()
		max()
		floor()
		ult()
		cos()
		tointeger()
		fmod()
		sin()
		ceil()
	}
	widget = {
		setListSelected()
		setImage()
		setButtonCheckedImages()
		setImageRotation()
		setButtonImage()
		getListSelected()
		itemGridItems()
		addListItem()
		removeListItem()
		setButtonImages()
		blur()
		getData()
		setOptionVisible()
		playSound()
		setChecked()
		getSelectedOption()
		setFontColor()
		setSize()
		setOptionEnabled()
		clearListItems()
		setPosition()
		setProgress()
		getText()
		getSliderValue()
		setButtonEnabled()
		setButtonOverlayImage()
		setData()
		setSelectedOption()
		focus()
		getSize()
		setImageScale()
		setVisible()
		getPosition()
		setText()
		getChecked()
	}
	xpcall()
	setmetatable()
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	status = {
		removeEphemeralEffect()
		resetResource()
		addPersistentEffect()
		addEphemeralEffect()
		resourceMax()
		addPersistentEffects()
		clearEphemeralEffects()
		statPositive()
		modifyResource()
		statusProperty()
		resourcePercentage()
		resource()
		isResource()
		setResourcePercentage()
		getPersistentEffects()
		resourcePositive()
		clearPersistentEffects()
		giveResource()
		overConsumeResource()
		damageTakenSince()
		activeUniqueStatusEffectSummary()
		addEphemeralEffects()
		setStatusProperty()
		resourceLocked()
		modifyResourcePercentage()
		stat()
		clearAllPersistentEffects()
		setResourceLocked()
		resetAllResources()
		resourceNames()
		setPersistentEffects()
		inflictedDamageSince()
		consumeResource()
		inflictedHitsSince()
		setResource()
	}
	utf8 = {
		charpattern = "[
[03:34:44.517] [Warn] 	coroutine = {
		wrap()
		resume()
		create()
		isyieldable()
		status()
		running()
		yield()
	}
	jarray()
	type()
	init()
	require()
	table = {
		insert()
		unpack()
		pack()
		concat()
		sort()
		move()
		remove()
	}
	_VERSION = "Lua 5.3"
	update()
	rawequal()
	world = {
		isMonster()
		entityPortrait()
		entityQuery()
		itemDropQuery()
		entityVelocity()
		damageTiles()
		entityHealth()
		debugPoint()
		debugLine()
		entityExists()
		entityUniqueId()
		timeOfDay()
		entityGender()
		entityAggressive()
		magnitude()
		mod()
		platformerPathStart()
		containerItemAt()
		breathable()
		entityHasCountOfItem()
		npcType()
		sendEntityMessage()
		liquidAt()
		liquidAlongLine()
		isTileProtected()
		destroyLiquid()
		spawnLiquid()
		isNpc()
		getProperty()
		gravity()
		entityMoney()
		objectLineQuery()
		spawnMonster()
		lineCollision()
		lineTileCollision()
		rectCollision()
		getObjectParameter()
		entityHandItem()
		setProperty()
		entityHandItemDescriptor()
		time()
		placeMaterial()
		entityName()
		findUniqueEntity()
		threatLevel()
		placeObject()
		spawnTreasure()
		spawnVehicle()
		damageTileArea()
		windLevel()
		tileIsOccupied()
		containerTakeAt()
		loungeableOccupied()
		resolvePolyCollision()
		nearestTo()
		spawnStagehand()
		polyCollision()
		containerOpen()
		pointCollision()
		distance()
		rectTileCollision()
		debugPoly()
		pointTileCollision()
		containerStackItems()
		collisionBlocksAlongLine()
		entityDamageTeam()
		containerAvailable()
		containerItemApply()
		farmableStage()
		containerSize()
		polyContains()
		stagehandType()
		containerItemsCanFit()
		placeMod()
		containerTakeNumItemsAt()
		dayLength()
		callScriptedEntity()
		spawnProjectile()
		containerItemsFitWhere()
		npcLineQuery()
		npcQuery()
		containerTakeAll()
		findPlatformerPath()
		entityDescription()
		xwrap()
		spawnItem()
		containerSwapItemsNoCombine()
		containerAddItems()
		objectSpaces()
		playerQuery()
		containerConsumeAt()
		monsterType()
		entityType()
		containerSwapItems()
		debugText()
		day()
		containerPutItemsAt()
		entitySpecies()
		loungeableQuery()
		lightLevel()
		entityCanDamage()
		underground()
		spawnNpc()
		material()
		monsterQuery()
		objectQuery()
		containerConsume()
		entityLineQuery()
		containerClose()
		entityPosition()
		objectAt()
		containerItems()
	}
	tonumber()
	ic = {
		stripColor()
		giveBack()
		renameThis()
		checkStack()
		sortFunc()
		sort()
		itemAmount()
		amountEquipped()
		sort_relative()
		itemConfig()
		searchBox()
		clientVersion = 1
		quickstack()
		searchButton()
		renameButton()
		lock()
		getQuality()
	}
	assert()
	rawset()
	getmetatable()
	string = {
		rep()
		gmatch()
		reverse()
		pack()
		char()
		sub()
		format()
		byte()
		match()
		dump()
		find()
		unpack()
		packsize()
		upper()
		gsub()
		lower()
		len()
	}
	pcall()
	player = {
		consumeItemWithParameter()
		shipUpgrades()
		altHandItemTags()
		upgradeShip()
		serverUuid()
		gender()
		worldId()
		equippedTech()
		completeMission()
		inventoryTags()
		removeEssentialItem()
		hasItem()
		recordEvent()
		addBookmark()
		lounge()
		cleanupItems()
		consumeItem()
		makeTechUnavailable()
		setUniverseFlag()
		giveBlueprint()
		hasItemWithParameter()
		species()
		playCinematic()
		altHandItem()
		primaryHandItemTags()
		availableTechs()
		enabledTechs()
		enableTech()
		giveItem()
		playTime()
		setIntroComplete()
		essentialItem()
		ownShipWorldId()
		makeTechAvailable()
		warp()
		equipTech()
		startQuest()
		enableMission()
		hasQuest()
		itemsWithTag()
		isLounging()
		primaryHandItem()
		confirm()
		hasCompletedQuest()
		hasCountOfItem()
		equippedItem()
		setEquippedItem()
		radioMessage()
		giveEssentialItem()
		introComplete()
		canStartQuest()
		consumeTaggedItem()
		getItemWithParameter()
	}
	config = {
		getParameter()
	}
	root = {
		questConfig()
		treeFoliageDirectory()
		getConfigurationPath()
		loadVersionedJson()
		materialHealth()
		tenantConfig()
		itemConfig()
		materialMiningSound()
		projectileConfig()
		imageSpaces()
		techType()
		createTreasure()
		materialFootstepSound()
		itemHasTag()
		imageSize()
		treeStemDirectory()
		npcPortrait()
		hasTech()
		getMatchingTenants()
		getConfiguration()
		createItem()
		generateName()
		setConfiguration()
		techConfig()
		materialPath()
		makeCurrentVersionedJson()
		monsterMovementSettings()
		isTreasurePool()
		itemTags()
		itemType()
		evalFunction()
		monsterSkillParameter()
		assetJson()
		setConfigurationPath()
		monsterPortrait()
		recipesForItem()
		createBiome()
		behaviorModule()
		liquidStatusEffects()
		npcConfig()
		nonEmptyRegion()
		evalFunction2()
		projectileGravityMultiplier()
		npcVariant()
	}
	math = {
		tan()
		atan()
		modf()
		exp()
		type()
		acos()
		abs()
		mininteger = -9223372036854775808
		maxinteger = 9223372036854775807
		deg()
		asin()
		randomseed()
		random()
		sqrt()
		huge = inf
		min()
		log()
		pi = 3.1415926535898
		rad()
		max()
		floor()
		ult()
		cos()
		tointeger()
		fmod()
		sin()
		ceil()
	}
	widget = {
		setListSelected()
		setImage()
		setButtonCheckedImages()
		setImageRotation()
		setButtonImage()
		getListSelected()
		itemGridItems()
		addListItem()
		removeListItem()
		setButtonImages()
		blur()
		getData()
		setOptionVisible()
		playSound()
		setChecked()
		getSelectedOption()
		setFontColor()
		setSize()
		setOptionEnabled()
		clearListItems()
		setPosition()
		setProgress()
		getText()
		getSliderValue()
		setButtonEnabled()
		setButtonOverlayImage()
		setData()
		setSelectedOption()
		focus()
		getSize()
		setImageScale()
		setVisible()
		getPosition()
		setText()
		getChecked()
	}
	xpcall()
	setmetatable()
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	status = {
		removeEphemeralEffect()
		resetResource()
		addPersistentEffect()
		addEphemeralEffect()
		resourceMax()
		addPersistentEffects()
		clearEphemeralEffects()
		statPositive()
		modifyResource()
		statusProperty()
		resourcePercentage()
		resource()
		isResource()
		setResourcePercentage()
		getPersistentEffects()
		resourcePositive()
		clearPersistentEffects()
		giveResource()
		overConsumeResource()
		damageTakenSince()
		activeUniqueStatusEffectSummary()
		addEphemeralEffects()
		setStatusProperty()
		resourceLocked()
		modifyResourcePercentage()
		stat()
		clearAllPersistentEffects()
		setResourceLocked()
		resetAllResources()
		resourceNames()
		setPersistentEffects()
		inflictedDamageSince()
		consumeResource()
		inflictedHitsSince()
		setResource()
	}
	utf8 = {
		charpattern = "[
[03:34:52.433] [Info] [IC] [Sort] Time elapsed: 0.006
[03:34:57.568] [Info] [IC] [Sort] Time elapsed: 0.004
[03:40:05.592] [Warn] 	coroutine = {
		wrap()
		resume()
		create()
		isyieldable()
		status()
		running()
		yield()
	}
	jarray()
	type()
	init()
	require()
	table = {
		insert()
		unpack()
		pack()
		concat()
		sort()
		move()
		remove()
	}
	_VERSION = "Lua 5.3"
	update()
	rawequal()
	world = {
		isMonster()
		entityPortrait()
		entityQuery()
		itemDropQuery()
		entityVelocity()
		damageTiles()
		entityHealth()
		debugPoint()
		debugLine()
		entityExists()
		entityUniqueId()
		timeOfDay()
		entityGender()
		entityAggressive()
		magnitude()
		mod()
		platformerPathStart()
		containerItemAt()
		breathable()
		entityHasCountOfItem()
		npcType()
		sendEntityMessage()
		liquidAt()
		liquidAlongLine()
		isTileProtected()
		destroyLiquid()
		spawnLiquid()
		isNpc()
		getProperty()
		gravity()
		entityMoney()
		objectLineQuery()
		spawnMonster()
		lineCollision()
		lineTileCollision()
		rectCollision()
		getObjectParameter()
		entityHandItem()
		setProperty()
		entityHandItemDescriptor()
		time()
		placeMaterial()
		entityName()
		findUniqueEntity()
		threatLevel()
		placeObject()
		spawnTreasure()
		spawnVehicle()
		damageTileArea()
		windLevel()
		tileIsOccupied()
		containerTakeAt()
		loungeableOccupied()
		resolvePolyCollision()
		nearestTo()
		spawnStagehand()
		polyCollision()
		containerOpen()
		pointCollision()
		distance()
		rectTileCollision()
		debugPoly()
		pointTileCollision()
		containerStackItems()
		collisionBlocksAlongLine()
		entityDamageTeam()
		containerAvailable()
		containerItemApply()
		farmableStage()
		containerSize()
		polyContains()
		stagehandType()
		containerItemsCanFit()
		placeMod()
		containerTakeNumItemsAt()
		dayLength()
		callScriptedEntity()
		spawnProjectile()
		containerItemsFitWhere()
		npcLineQuery()
		npcQuery()
		containerTakeAll()
		findPlatformerPath()
		entityDescription()
		xwrap()
		spawnItem()
		containerSwapItemsNoCombine()
		containerAddItems()
		objectSpaces()
		playerQuery()
		containerConsumeAt()
		monsterType()
		entityType()
		containerSwapItems()
		debugText()
		day()
		containerPutItemsAt()
		entitySpecies()
		loungeableQuery()
		lightLevel()
		entityCanDamage()
		underground()
		spawnNpc()
		material()
		monsterQuery()
		objectQuery()
		containerConsume()
		entityLineQuery()
		containerClose()
		entityPosition()
		objectAt()
		containerItems()
	}
	tonumber()
	ic = {
		stripColor()
		giveBack()
		renameThis()
		checkStack()
		sortFunc()
		sort()
		itemAmount()
		amountEquipped()
		sort_relative()
		itemConfig()
		searchBox()
		clientVersion = 1
		quickstack()
		searchButton()
		renameButton()
		lock()
		getQuality()
	}
	assert()
	rawset()
	getmetatable()
	string = {
		rep()
		gmatch()
		reverse()
		pack()
		char()
		sub()
		format()
		byte()
		match()
		dump()
		find()
		unpack()
		packsize()
		upper()
		gsub()
		lower()
		len()
	}
	pcall()
	player = {
		consumeItemWithParameter()
		shipUpgrades()
		altHandItemTags()
		upgradeShip()
		serverUuid()
		gender()
		worldId()
		equippedTech()
		completeMission()
		inventoryTags()
		removeEssentialItem()
		hasItem()
		recordEvent()
		addBookmark()
		lounge()
		cleanupItems()
		consumeItem()
		makeTechUnavailable()
		setUniverseFlag()
		giveBlueprint()
		hasItemWithParameter()
		species()
		playCinematic()
		altHandItem()
		primaryHandItemTags()
		availableTechs()
		enabledTechs()
		enableTech()
		giveItem()
		playTime()
		setIntroComplete()
		essentialItem()
		ownShipWorldId()
		makeTechAvailable()
		warp()
		equipTech()
		startQuest()
		enableMission()
		hasQuest()
		itemsWithTag()
		isLounging()
		primaryHandItem()
		confirm()
		hasCompletedQuest()
		hasCountOfItem()
		equippedItem()
		setEquippedItem()
		radioMessage()
		giveEssentialItem()
		introComplete()
		canStartQuest()
		consumeTaggedItem()
		getItemWithParameter()
	}
	config = {
		getParameter()
	}
	root = {
		questConfig()
		treeFoliageDirectory()
		getConfigurationPath()
		loadVersionedJson()
		materialHealth()
		tenantConfig()
		itemConfig()
		materialMiningSound()
		projectileConfig()
		imageSpaces()
		techType()
		createTreasure()
		materialFootstepSound()
		itemHasTag()
		imageSize()
		treeStemDirectory()
		npcPortrait()
		hasTech()
		getMatchingTenants()
		getConfiguration()
		createItem()
		generateName()
		setConfiguration()
		techConfig()
		materialPath()
		makeCurrentVersionedJson()
		monsterMovementSettings()
		isTreasurePool()
		itemTags()
		itemType()
		evalFunction()
		monsterSkillParameter()
		assetJson()
		setConfigurationPath()
		monsterPortrait()
		recipesForItem()
		createBiome()
		behaviorModule()
		liquidStatusEffects()
		npcConfig()
		nonEmptyRegion()
		evalFunction2()
		projectileGravityMultiplier()
		npcVariant()
	}
	math = {
		tan()
		atan()
		modf()
		exp()
		type()
		acos()
		abs()
		mininteger = -9223372036854775808
		maxinteger = 9223372036854775807
		deg()
		asin()
		randomseed()
		random()
		sqrt()
		huge = inf
		min()
		log()
		pi = 3.1415926535898
		rad()
		max()
		floor()
		ult()
		cos()
		tointeger()
		fmod()
		sin()
		ceil()
	}
	widget = {
		setListSelected()
		setImage()
		setButtonCheckedImages()
		setImageRotation()
		setButtonImage()
		getListSelected()
		itemGridItems()
		addListItem()
		removeListItem()
		setButtonImages()
		blur()
		getData()
		setOptionVisible()
		playSound()
		setChecked()
		getSelectedOption()
		setFontColor()
		setSize()
		setOptionEnabled()
		clearListItems()
		setPosition()
		setProgress()
		getText()
		getSliderValue()
		setButtonEnabled()
		setButtonOverlayImage()
		setData()
		setSelectedOption()
		focus()
		getSize()
		setImageScale()
		setVisible()
		getPosition()
		setText()
		getChecked()
	}
	xpcall()
	setmetatable()
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	status = {
		removeEphemeralEffect()
		resetResource()
		addPersistentEffect()
		addEphemeralEffect()
		resourceMax()
		addPersistentEffects()
		clearEphemeralEffects()
		statPositive()
		modifyResource()
		statusProperty()
		resourcePercentage()
		resource()
		isResource()
		setResourcePercentage()
		getPersistentEffects()
		resourcePositive()
		clearPersistentEffects()
		giveResource()
		overConsumeResource()
		damageTakenSince()
		activeUniqueStatusEffectSummary()
		addEphemeralEffects()
		setStatusProperty()
		resourceLocked()
		modifyResourcePercentage()
		stat()
		clearAllPersistentEffects()
		setResourceLocked()
		resetAllResources()
		resourceNames()
		setPersistentEffects()
		inflictedDamageSince()
		consumeResource()
		inflictedHitsSince()
		setResource()
	}
	utf8 = {
		charpattern = "[
[03:40:24.200] [Info] [IC] [Sort] Time elapsed: 0.006
[03:40:34.698] [Info] [IC] [Sort] Time elapsed: 0.003
[03:40:54.082] [Info] [IC] [Sort] Time elapsed: 0.003
[03:41:46.152] [Warn] 	coroutine = {
		wrap()
		resume()
		create()
		isyieldable()
		status()
		running()
		yield()
	}
	jarray()
	type()
	init()
	require()
	table = {
		insert()
		unpack()
		pack()
		concat()
		sort()
		move()
		remove()
	}
	_VERSION = "Lua 5.3"
	update()
	rawequal()
	world = {
		isMonster()
		entityPortrait()
		entityQuery()
		itemDropQuery()
		entityVelocity()
		damageTiles()
		entityHealth()
		debugPoint()
		debugLine()
		entityExists()
		entityUniqueId()
		timeOfDay()
		entityGender()
		entityAggressive()
		magnitude()
		mod()
		platformerPathStart()
		containerItemAt()
		breathable()
		entityHasCountOfItem()
		npcType()
		sendEntityMessage()
		liquidAt()
		liquidAlongLine()
		isTileProtected()
		destroyLiquid()
		spawnLiquid()
		isNpc()
		getProperty()
		gravity()
		entityMoney()
		objectLineQuery()
		spawnMonster()
		lineCollision()
		lineTileCollision()
		rectCollision()
		getObjectParameter()
		entityHandItem()
		setProperty()
		entityHandItemDescriptor()
		time()
		placeMaterial()
		entityName()
		findUniqueEntity()
		threatLevel()
		placeObject()
		spawnTreasure()
		spawnVehicle()
		damageTileArea()
		windLevel()
		tileIsOccupied()
		containerTakeAt()
		loungeableOccupied()
		resolvePolyCollision()
		nearestTo()
		spawnStagehand()
		polyCollision()
		containerOpen()
		pointCollision()
		distance()
		rectTileCollision()
		debugPoly()
		pointTileCollision()
		containerStackItems()
		collisionBlocksAlongLine()
		entityDamageTeam()
		containerAvailable()
		containerItemApply()
		farmableStage()
		containerSize()
		polyContains()
		stagehandType()
		containerItemsCanFit()
		placeMod()
		containerTakeNumItemsAt()
		dayLength()
		callScriptedEntity()
		spawnProjectile()
		containerItemsFitWhere()
		npcLineQuery()
		npcQuery()
		containerTakeAll()
		findPlatformerPath()
		entityDescription()
		xwrap()
		spawnItem()
		containerSwapItemsNoCombine()
		containerAddItems()
		objectSpaces()
		playerQuery()
		containerConsumeAt()
		monsterType()
		entityType()
		containerSwapItems()
		debugText()
		day()
		containerPutItemsAt()
		entitySpecies()
		loungeableQuery()
		lightLevel()
		entityCanDamage()
		underground()
		spawnNpc()
		material()
		monsterQuery()
		objectQuery()
		containerConsume()
		entityLineQuery()
		containerClose()
		entityPosition()
		objectAt()
		containerItems()
	}
	tonumber()
	ic = {
		stripColor()
		giveBack()
		renameThis()
		checkStack()
		sortFunc()
		sort()
		itemAmount()
		amountEquipped()
		sort_relative()
		itemConfig()
		searchBox()
		clientVersion = 1
		quickstack()
		searchButton()
		renameButton()
		lock()
		getQuality()
	}
	assert()
	rawset()
	getmetatable()
	string = {
		rep()
		gmatch()
		reverse()
		pack()
		char()
		sub()
		format()
		byte()
		match()
		dump()
		find()
		unpack()
		packsize()
		upper()
		gsub()
		lower()
		len()
	}
	pcall()
	player = {
		consumeItemWithParameter()
		shipUpgrades()
		altHandItemTags()
		upgradeShip()
		serverUuid()
		gender()
		worldId()
		equippedTech()
		completeMission()
		inventoryTags()
		removeEssentialItem()
		hasItem()
		recordEvent()
		addBookmark()
		lounge()
		cleanupItems()
		consumeItem()
		makeTechUnavailable()
		setUniverseFlag()
		giveBlueprint()
		hasItemWithParameter()
		species()
		playCinematic()
		altHandItem()
		primaryHandItemTags()
		availableTechs()
		enabledTechs()
		enableTech()
		giveItem()
		playTime()
		setIntroComplete()
		essentialItem()
		ownShipWorldId()
		makeTechAvailable()
		warp()
		equipTech()
		startQuest()
		enableMission()
		hasQuest()
		itemsWithTag()
		isLounging()
		primaryHandItem()
		confirm()
		hasCompletedQuest()
		hasCountOfItem()
		equippedItem()
		setEquippedItem()
		radioMessage()
		giveEssentialItem()
		introComplete()
		canStartQuest()
		consumeTaggedItem()
		getItemWithParameter()
	}
	config = {
		getParameter()
	}
	root = {
		questConfig()
		treeFoliageDirectory()
		getConfigurationPath()
		loadVersionedJson()
		materialHealth()
		tenantConfig()
		itemConfig()
		materialMiningSound()
		projectileConfig()
		imageSpaces()
		techType()
		createTreasure()
		materialFootstepSound()
		itemHasTag()
		imageSize()
		treeStemDirectory()
		npcPortrait()
		hasTech()
		getMatchingTenants()
		getConfiguration()
		createItem()
		generateName()
		setConfiguration()
		techConfig()
		materialPath()
		makeCurrentVersionedJson()
		monsterMovementSettings()
		isTreasurePool()
		itemTags()
		itemType()
		evalFunction()
		monsterSkillParameter()
		assetJson()
		setConfigurationPath()
		monsterPortrait()
		recipesForItem()
		createBiome()
		behaviorModule()
		liquidStatusEffects()
		npcConfig()
		nonEmptyRegion()
		evalFunction2()
		projectileGravityMultiplier()
		npcVariant()
	}
	math = {
		tan()
		atan()
		modf()
		exp()
		type()
		acos()
		abs()
		mininteger = -9223372036854775808
		maxinteger = 9223372036854775807
		deg()
		asin()
		randomseed()
		random()
		sqrt()
		huge = inf
		min()
		log()
		pi = 3.1415926535898
		rad()
		max()
		floor()
		ult()
		cos()
		tointeger()
		fmod()
		sin()
		ceil()
	}
	widget = {
		setListSelected()
		setImage()
		setButtonCheckedImages()
		setImageRotation()
		setButtonImage()
		getListSelected()
		itemGridItems()
		addListItem()
		removeListItem()
		setButtonImages()
		blur()
		getData()
		setOptionVisible()
		playSound()
		setChecked()
		getSelectedOption()
		setFontColor()
		setSize()
		setOptionEnabled()
		clearListItems()
		setPosition()
		setProgress()
		getText()
		getSliderValue()
		setButtonEnabled()
		setButtonOverlayImage()
		setData()
		setSelectedOption()
		focus()
		getSize()
		setImageScale()
		setVisible()
		getPosition()
		setText()
		getChecked()
	}
	xpcall()
	setmetatable()
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	status = {
		removeEphemeralEffect()
		resetResource()
		addPersistentEffect()
		addEphemeralEffect()
		resourceMax()
		addPersistentEffects()
		clearEphemeralEffects()
		statPositive()
		modifyResource()
		statusProperty()
		resourcePercentage()
		resource()
		isResource()
		setResourcePercentage()
		getPersistentEffects()
		resourcePositive()
		clearPersistentEffects()
		giveResource()
		overConsumeResource()
		damageTakenSince()
		activeUniqueStatusEffectSummary()
		addEphemeralEffects()
		setStatusProperty()
		resourceLocked()
		modifyResourcePercentage()
		stat()
		clearAllPersistentEffects()
		setResourceLocked()
		resetAllResources()
		resourceNames()
		setPersistentEffects()
		inflictedDamageSince()
		consumeResource()
		inflictedHitsSince()
		setResource()
	}
	utf8 = {
		charpattern = "[
[03:42:00.154] [Info] [IC] [Sort] Time elapsed: 0.008
[03:45:03.615] [Warn] 	coroutine = {
		wrap()
		resume()
		create()
		isyieldable()
		status()
		running()
		yield()
	}
	jarray()
	type()
	init()
	require()
	table = {
		insert()
		unpack()
		pack()
		concat()
		sort()
		move()
		remove()
	}
	_VERSION = "Lua 5.3"
	update()
	rawequal()
	world = {
		isMonster()
		entityPortrait()
		entityQuery()
		itemDropQuery()
		entityVelocity()
		damageTiles()
		entityHealth()
		debugPoint()
		debugLine()
		entityExists()
		entityUniqueId()
		timeOfDay()
		entityGender()
		entityAggressive()
		magnitude()
		mod()
		platformerPathStart()
		containerItemAt()
		breathable()
		entityHasCountOfItem()
		npcType()
		sendEntityMessage()
		liquidAt()
		liquidAlongLine()
		isTileProtected()
		destroyLiquid()
		spawnLiquid()
		isNpc()
		getProperty()
		gravity()
		entityMoney()
		objectLineQuery()
		spawnMonster()
		lineCollision()
		lineTileCollision()
		rectCollision()
		getObjectParameter()
		entityHandItem()
		setProperty()
		entityHandItemDescriptor()
		time()
		placeMaterial()
		entityName()
		findUniqueEntity()
		threatLevel()
		placeObject()
		spawnTreasure()
		spawnVehicle()
		damageTileArea()
		windLevel()
		tileIsOccupied()
		containerTakeAt()
		loungeableOccupied()
		resolvePolyCollision()
		nearestTo()
		spawnStagehand()
		polyCollision()
		containerOpen()
		pointCollision()
		distance()
		rectTileCollision()
		debugPoly()
		pointTileCollision()
		containerStackItems()
		collisionBlocksAlongLine()
		entityDamageTeam()
		containerAvailable()
		containerItemApply()
		farmableStage()
		containerSize()
		polyContains()
		stagehandType()
		containerItemsCanFit()
		placeMod()
		containerTakeNumItemsAt()
		dayLength()
		callScriptedEntity()
		spawnProjectile()
		containerItemsFitWhere()
		npcLineQuery()
		npcQuery()
		containerTakeAll()
		findPlatformerPath()
		entityDescription()
		xwrap()
		spawnItem()
		containerSwapItemsNoCombine()
		containerAddItems()
		objectSpaces()
		playerQuery()
		containerConsumeAt()
		monsterType()
		entityType()
		containerSwapItems()
		debugText()
		day()
		containerPutItemsAt()
		entitySpecies()
		loungeableQuery()
		lightLevel()
		entityCanDamage()
		underground()
		spawnNpc()
		material()
		monsterQuery()
		objectQuery()
		containerConsume()
		entityLineQuery()
		containerClose()
		entityPosition()
		objectAt()
		containerItems()
	}
	tonumber()
	ic = {
		stripColor()
		giveBack()
		renameThis()
		checkStack()
		sortFunc()
		sort()
		itemAmount()
		amountEquipped()
		sort_relative()
		itemConfig()
		searchBox()
		clientVersion = 1
		quickstack()
		searchButton()
		renameButton()
		lock()
		getQuality()
	}
	assert()
	rawset()
	getmetatable()
	string = {
		rep()
		gmatch()
		reverse()
		pack()
		char()
		sub()
		format()
		byte()
		match()
		dump()
		find()
		unpack()
		packsize()
		upper()
		gsub()
		lower()
		len()
	}
	pcall()
	player = {
		consumeItemWithParameter()
		shipUpgrades()
		altHandItemTags()
		upgradeShip()
		serverUuid()
		gender()
		worldId()
		equippedTech()
		completeMission()
		inventoryTags()
		removeEssentialItem()
		hasItem()
		recordEvent()
		addBookmark()
		lounge()
		cleanupItems()
		consumeItem()
		makeTechUnavailable()
		setUniverseFlag()
		giveBlueprint()
		hasItemWithParameter()
		species()
		playCinematic()
		altHandItem()
		primaryHandItemTags()
		availableTechs()
		enabledTechs()
		enableTech()
		giveItem()
		playTime()
		setIntroComplete()
		essentialItem()
		ownShipWorldId()
		makeTechAvailable()
		warp()
		equipTech()
		startQuest()
		enableMission()
		hasQuest()
		itemsWithTag()
		isLounging()
		primaryHandItem()
		confirm()
		hasCompletedQuest()
		hasCountOfItem()
		equippedItem()
		setEquippedItem()
		radioMessage()
		giveEssentialItem()
		introComplete()
		canStartQuest()
		consumeTaggedItem()
		getItemWithParameter()
	}
	config = {
		getParameter()
	}
	root = {
		questConfig()
		treeFoliageDirectory()
		getConfigurationPath()
		loadVersionedJson()
		materialHealth()
		tenantConfig()
		itemConfig()
		materialMiningSound()
		projectileConfig()
		imageSpaces()
		techType()
		createTreasure()
		materialFootstepSound()
		itemHasTag()
		imageSize()
		treeStemDirectory()
		npcPortrait()
		hasTech()
		getMatchingTenants()
		getConfiguration()
		createItem()
		generateName()
		setConfiguration()
		techConfig()
		materialPath()
		makeCurrentVersionedJson()
		monsterMovementSettings()
		isTreasurePool()
		itemTags()
		itemType()
		evalFunction()
		monsterSkillParameter()
		assetJson()
		setConfigurationPath()
		monsterPortrait()
		recipesForItem()
		createBiome()
		behaviorModule()
		liquidStatusEffects()
		npcConfig()
		nonEmptyRegion()
		evalFunction2()
		projectileGravityMultiplier()
		npcVariant()
	}
	math = {
		tan()
		atan()
		modf()
		exp()
		type()
		acos()
		abs()
		mininteger = -9223372036854775808
		maxinteger = 9223372036854775807
		deg()
		asin()
		randomseed()
		random()
		sqrt()
		huge = inf
		min()
		log()
		pi = 3.1415926535898
		rad()
		max()
		floor()
		ult()
		cos()
		tointeger()
		fmod()
		sin()
		ceil()
	}
	widget = {
		setListSelected()
		setImage()
		setButtonCheckedImages()
		setImageRotation()
		setButtonImage()
		getListSelected()
		itemGridItems()
		addListItem()
		removeListItem()
		setButtonImages()
		blur()
		getData()
		setOptionVisible()
		playSound()
		setChecked()
		getSelectedOption()
		setFontColor()
		setSize()
		setOptionEnabled()
		clearListItems()
		setPosition()
		setProgress()
		getText()
		getSliderValue()
		setButtonEnabled()
		setButtonOverlayImage()
		setData()
		setSelectedOption()
		focus()
		getSize()
		setImageScale()
		setVisible()
		getPosition()
		setText()
		getChecked()
	}
	xpcall()
	setmetatable()
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	status = {
		removeEphemeralEffect()
		resetResource()
		addPersistentEffect()
		addEphemeralEffect()
		resourceMax()
		addPersistentEffects()
		clearEphemeralEffects()
		statPositive()
		modifyResource()
		statusProperty()
		resourcePercentage()
		resource()
		isResource()
		setResourcePercentage()
		getPersistentEffects()
		resourcePositive()
		clearPersistentEffects()
		giveResource()
		overConsumeResource()
		damageTakenSince()
		activeUniqueStatusEffectSummary()
		addEphemeralEffects()
		setStatusProperty()
		resourceLocked()
		modifyResourcePercentage()
		stat()
		clearAllPersistentEffects()
		setResourceLocked()
		resetAllResources()
		resourceNames()
		setPersistentEffects()
		inflictedDamageSince()
		consumeResource()
		inflictedHitsSince()
		setResource()
	}
	utf8 = {
		charpattern = "[
[03:45:08.444] [Info] [IC] [Sort] Time elapsed: 0.012
[03:45:51.164] [Warn] 	coroutine = {
		wrap()
		resume()
		create()
		isyieldable()
		status()
		running()
		yield()
	}
	jarray()
	type()
	init()
	require()
	table = {
		insert()
		unpack()
		pack()
		concat()
		sort()
		move()
		remove()
	}
	_VERSION = "Lua 5.3"
	update()
	rawequal()
	world = {
		isMonster()
		entityPortrait()
		entityQuery()
		itemDropQuery()
		entityVelocity()
		damageTiles()
		entityHealth()
		debugPoint()
		debugLine()
		entityExists()
		entityUniqueId()
		timeOfDay()
		entityGender()
		entityAggressive()
		magnitude()
		mod()
		platformerPathStart()
		containerItemAt()
		breathable()
		entityHasCountOfItem()
		npcType()
		sendEntityMessage()
		liquidAt()
		liquidAlongLine()
		isTileProtected()
		destroyLiquid()
		spawnLiquid()
		isNpc()
		getProperty()
		gravity()
		entityMoney()
		objectLineQuery()
		spawnMonster()
		lineCollision()
		lineTileCollision()
		rectCollision()
		getObjectParameter()
		entityHandItem()
		setProperty()
		entityHandItemDescriptor()
		time()
		placeMaterial()
		entityName()
		findUniqueEntity()
		threatLevel()
		placeObject()
		spawnTreasure()
		spawnVehicle()
		damageTileArea()
		windLevel()
		tileIsOccupied()
		containerTakeAt()
		loungeableOccupied()
		resolvePolyCollision()
		nearestTo()
		spawnStagehand()
		polyCollision()
		containerOpen()
		pointCollision()
		distance()
		rectTileCollision()
		debugPoly()
		pointTileCollision()
		containerStackItems()
		collisionBlocksAlongLine()
		entityDamageTeam()
		containerAvailable()
		containerItemApply()
		farmableStage()
		containerSize()
		polyContains()
		stagehandType()
		containerItemsCanFit()
		placeMod()
		containerTakeNumItemsAt()
		dayLength()
		callScriptedEntity()
		spawnProjectile()
		containerItemsFitWhere()
		npcLineQuery()
		npcQuery()
		containerTakeAll()
		findPlatformerPath()
		entityDescription()
		xwrap()
		spawnItem()
		containerSwapItemsNoCombine()
		containerAddItems()
		objectSpaces()
		playerQuery()
		containerConsumeAt()
		monsterType()
		entityType()
		containerSwapItems()
		debugText()
		day()
		containerPutItemsAt()
		entitySpecies()
		loungeableQuery()
		lightLevel()
		entityCanDamage()
		underground()
		spawnNpc()
		material()
		monsterQuery()
		objectQuery()
		containerConsume()
		entityLineQuery()
		containerClose()
		entityPosition()
		objectAt()
		containerItems()
	}
	tonumber()
	ic = {
		stripColor()
		giveBack()
		renameThis()
		checkStack()
		sortFunc()
		sort()
		itemAmount()
		amountEquipped()
		sort_relative()
		itemConfig()
		searchBox()
		clientVersion = 1
		quickstack()
		searchButton()
		renameButton()
		lock()
		getQuality()
	}
	assert()
	rawset()
	getmetatable()
	string = {
		rep()
		gmatch()
		reverse()
		pack()
		char()
		sub()
		format()
		byte()
		match()
		dump()
		find()
		unpack()
		packsize()
		upper()
		gsub()
		lower()
		len()
	}
	pcall()
	player = {
		consumeItemWithParameter()
		shipUpgrades()
		altHandItemTags()
		upgradeShip()
		serverUuid()
		gender()
		worldId()
		equippedTech()
		completeMission()
		inventoryTags()
		removeEssentialItem()
		hasItem()
		recordEvent()
		addBookmark()
		lounge()
		cleanupItems()
		consumeItem()
		makeTechUnavailable()
		setUniverseFlag()
		giveBlueprint()
		hasItemWithParameter()
		species()
		playCinematic()
		altHandItem()
		primaryHandItemTags()
		availableTechs()
		enabledTechs()
		enableTech()
		giveItem()
		playTime()
		setIntroComplete()
		essentialItem()
		ownShipWorldId()
		makeTechAvailable()
		warp()
		equipTech()
		startQuest()
		enableMission()
		hasQuest()
		itemsWithTag()
		isLounging()
		primaryHandItem()
		confirm()
		hasCompletedQuest()
		hasCountOfItem()
		equippedItem()
		setEquippedItem()
		radioMessage()
		giveEssentialItem()
		introComplete()
		canStartQuest()
		consumeTaggedItem()
		getItemWithParameter()
	}
	config = {
		getParameter()
	}
	root = {
		questConfig()
		treeFoliageDirectory()
		getConfigurationPath()
		loadVersionedJson()
		materialHealth()
		tenantConfig()
		itemConfig()
		materialMiningSound()
		projectileConfig()
		imageSpaces()
		techType()
		createTreasure()
		materialFootstepSound()
		itemHasTag()
		imageSize()
		treeStemDirectory()
		npcPortrait()
		hasTech()
		getMatchingTenants()
		getConfiguration()
		createItem()
		generateName()
		setConfiguration()
		techConfig()
		materialPath()
		makeCurrentVersionedJson()
		monsterMovementSettings()
		isTreasurePool()
		itemTags()
		itemType()
		evalFunction()
		monsterSkillParameter()
		assetJson()
		setConfigurationPath()
		monsterPortrait()
		recipesForItem()
		createBiome()
		behaviorModule()
		liquidStatusEffects()
		npcConfig()
		nonEmptyRegion()
		evalFunction2()
		projectileGravityMultiplier()
		npcVariant()
	}
	math = {
		tan()
		atan()
		modf()
		exp()
		type()
		acos()
		abs()
		mininteger = -9223372036854775808
		maxinteger = 9223372036854775807
		deg()
		asin()
		randomseed()
		random()
		sqrt()
		huge = inf
		min()
		log()
		pi = 3.1415926535898
		rad()
		max()
		floor()
		ult()
		cos()
		tointeger()
		fmod()
		sin()
		ceil()
	}
	widget = {
		setListSelected()
		setImage()
		setButtonCheckedImages()
		setImageRotation()
		setButtonImage()
		getListSelected()
		itemGridItems()
		addListItem()
		removeListItem()
		setButtonImages()
		blur()
		getData()
		setOptionVisible()
		playSound()
		setChecked()
		getSelectedOption()
		setFontColor()
		setSize()
		setOptionEnabled()
		clearListItems()
		setPosition()
		setProgress()
		getText()
		getSliderValue()
		setButtonEnabled()
		setButtonOverlayImage()
		setData()
		setSelectedOption()
		focus()
		getSize()
		setImageScale()
		setVisible()
		getPosition()
		setText()
		getChecked()
	}
	xpcall()
	setmetatable()
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	status = {
		removeEphemeralEffect()
		resetResource()
		addPersistentEffect()
		addEphemeralEffect()
		resourceMax()
		addPersistentEffects()
		clearEphemeralEffects()
		statPositive()
		modifyResource()
		statusProperty()
		resourcePercentage()
		resource()
		isResource()
		setResourcePercentage()
		getPersistentEffects()
		resourcePositive()
		clearPersistentEffects()
		giveResource()
		overConsumeResource()
		damageTakenSince()
		activeUniqueStatusEffectSummary()
		addEphemeralEffects()
		setStatusProperty()
		resourceLocked()
		modifyResourcePercentage()
		stat()
		clearAllPersistentEffects()
		setResourceLocked()
		resetAllResources()
		resourceNames()
		setPersistentEffects()
		inflictedDamageSince()
		consumeResource()
		inflictedHitsSince()
		setResource()
	}
	utf8 = {
		charpattern = "[
[03:45:52.416] [Warn] 	coroutine = {
		wrap()
		resume()
		create()
		isyieldable()
		status()
		running()
		yield()
	}
	jarray()
	type()
	init()
	require()
	table = {
		insert()
		unpack()
		pack()
		concat()
		sort()
		move()
		remove()
	}
	_VERSION = "Lua 5.3"
	update()
	rawequal()
	world = {
		isMonster()
		entityPortrait()
		entityQuery()
		itemDropQuery()
		entityVelocity()
		damageTiles()
		entityHealth()
		debugPoint()
		debugLine()
		entityExists()
		entityUniqueId()
		timeOfDay()
		entityGender()
		entityAggressive()
		magnitude()
		mod()
		platformerPathStart()
		containerItemAt()
		breathable()
		entityHasCountOfItem()
		npcType()
		sendEntityMessage()
		liquidAt()
		liquidAlongLine()
		isTileProtected()
		destroyLiquid()
		spawnLiquid()
		isNpc()
		getProperty()
		gravity()
		entityMoney()
		objectLineQuery()
		spawnMonster()
		lineCollision()
		lineTileCollision()
		rectCollision()
		getObjectParameter()
		entityHandItem()
		setProperty()
		entityHandItemDescriptor()
		time()
		placeMaterial()
		entityName()
		findUniqueEntity()
		threatLevel()
		placeObject()
		spawnTreasure()
		spawnVehicle()
		damageTileArea()
		windLevel()
		tileIsOccupied()
		containerTakeAt()
		loungeableOccupied()
		resolvePolyCollision()
		nearestTo()
		spawnStagehand()
		polyCollision()
		containerOpen()
		pointCollision()
		distance()
		rectTileCollision()
		debugPoly()
		pointTileCollision()
		containerStackItems()
		collisionBlocksAlongLine()
		entityDamageTeam()
		containerAvailable()
		containerItemApply()
		farmableStage()
		containerSize()
		polyContains()
		stagehandType()
		containerItemsCanFit()
		placeMod()
		containerTakeNumItemsAt()
		dayLength()
		callScriptedEntity()
		spawnProjectile()
		containerItemsFitWhere()
		npcLineQuery()
		npcQuery()
		containerTakeAll()
		findPlatformerPath()
		entityDescription()
		xwrap()
		spawnItem()
		containerSwapItemsNoCombine()
		containerAddItems()
		objectSpaces()
		playerQuery()
		containerConsumeAt()
		monsterType()
		entityType()
		containerSwapItems()
		debugText()
		day()
		containerPutItemsAt()
		entitySpecies()
		loungeableQuery()
		lightLevel()
		entityCanDamage()
		underground()
		spawnNpc()
		material()
		monsterQuery()
		objectQuery()
		containerConsume()
		entityLineQuery()
		containerClose()
		entityPosition()
		objectAt()
		containerItems()
	}
	tonumber()
	ic = {
		stripColor()
		giveBack()
		renameThis()
		checkStack()
		sortFunc()
		sort()
		itemAmount()
		amountEquipped()
		sort_relative()
		itemConfig()
		searchBox()
		clientVersion = 1
		quickstack()
		searchButton()
		renameButton()
		lock()
		getQuality()
	}
	assert()
	rawset()
	getmetatable()
	string = {
		rep()
		gmatch()
		reverse()
		pack()
		char()
		sub()
		format()
		byte()
		match()
		dump()
		find()
		unpack()
		packsize()
		upper()
		gsub()
		lower()
		len()
	}
	pcall()
	player = {
		consumeItemWithParameter()
		shipUpgrades()
		altHandItemTags()
		upgradeShip()
		serverUuid()
		gender()
		worldId()
		equippedTech()
		completeMission()
		inventoryTags()
		removeEssentialItem()
		hasItem()
		recordEvent()
		addBookmark()
		lounge()
		cleanupItems()
		consumeItem()
		makeTechUnavailable()
		setUniverseFlag()
		giveBlueprint()
		hasItemWithParameter()
		species()
		playCinematic()
		altHandItem()
		primaryHandItemTags()
		availableTechs()
		enabledTechs()
		enableTech()
		giveItem()
		playTime()
		setIntroComplete()
		essentialItem()
		ownShipWorldId()
		makeTechAvailable()
		warp()
		equipTech()
		startQuest()
		enableMission()
		hasQuest()
		itemsWithTag()
		isLounging()
		primaryHandItem()
		confirm()
		hasCompletedQuest()
		hasCountOfItem()
		equippedItem()
		setEquippedItem()
		radioMessage()
		giveEssentialItem()
		introComplete()
		canStartQuest()
		consumeTaggedItem()
		getItemWithParameter()
	}
	config = {
		getParameter()
	}
	root = {
		questConfig()
		treeFoliageDirectory()
		getConfigurationPath()
		loadVersionedJson()
		materialHealth()
		tenantConfig()
		itemConfig()
		materialMiningSound()
		projectileConfig()
		imageSpaces()
		techType()
		createTreasure()
		materialFootstepSound()
		itemHasTag()
		imageSize()
		treeStemDirectory()
		npcPortrait()
		hasTech()
		getMatchingTenants()
		getConfiguration()
		createItem()
		generateName()
		setConfiguration()
		techConfig()
		materialPath()
		makeCurrentVersionedJson()
		monsterMovementSettings()
		isTreasurePool()
		itemTags()
		itemType()
		evalFunction()
		monsterSkillParameter()
		assetJson()
		setConfigurationPath()
		monsterPortrait()
		recipesForItem()
		createBiome()
		behaviorModule()
		liquidStatusEffects()
		npcConfig()
		nonEmptyRegion()
		evalFunction2()
		projectileGravityMultiplier()
		npcVariant()
	}
	math = {
		tan()
		atan()
		modf()
		exp()
		type()
		acos()
		abs()
		mininteger = -9223372036854775808
		maxinteger = 9223372036854775807
		deg()
		asin()
		randomseed()
		random()
		sqrt()
		huge = inf
		min()
		log()
		pi = 3.1415926535898
		rad()
		max()
		floor()
		ult()
		cos()
		tointeger()
		fmod()
		sin()
		ceil()
	}
	widget = {
		setListSelected()
		setImage()
		setButtonCheckedImages()
		setImageRotation()
		setButtonImage()
		getListSelected()
		itemGridItems()
		addListItem()
		removeListItem()
		setButtonImages()
		blur()
		getData()
		setOptionVisible()
		playSound()
		setChecked()
		getSelectedOption()
		setFontColor()
		setSize()
		setOptionEnabled()
		clearListItems()
		setPosition()
		setProgress()
		getText()
		getSliderValue()
		setButtonEnabled()
		setButtonOverlayImage()
		setData()
		setSelectedOption()
		focus()
		getSize()
		setImageScale()
		setVisible()
		getPosition()
		setText()
		getChecked()
	}
	xpcall()
	setmetatable()
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	status = {
		removeEphemeralEffect()
		resetResource()
		addPersistentEffect()
		addEphemeralEffect()
		resourceMax()
		addPersistentEffects()
		clearEphemeralEffects()
		statPositive()
		modifyResource()
		statusProperty()
		resourcePercentage()
		resource()
		isResource()
		setResourcePercentage()
		getPersistentEffects()
		resourcePositive()
		clearPersistentEffects()
		giveResource()
		overConsumeResource()
		damageTakenSince()
		activeUniqueStatusEffectSummary()
		addEphemeralEffects()
		setStatusProperty()
		resourceLocked()
		modifyResourcePercentage()
		stat()
		clearAllPersistentEffects()
		setResourceLocked()
		resetAllResources()
		resourceNames()
		setPersistentEffects()
		inflictedDamageSince()
		consumeResource()
		inflictedHitsSince()
		setResource()
	}
	utf8 = {
		charpattern = "[
[03:45:53.482] [Warn] 	coroutine = {
		wrap()
		resume()
		create()
		isyieldable()
		status()
		running()
		yield()
	}
	jarray()
	type()
	init()
	require()
	table = {
		insert()
		unpack()
		pack()
		concat()
		sort()
		move()
		remove()
	}
	_VERSION = "Lua 5.3"
	update()
	rawequal()
	world = {
		isMonster()
		entityPortrait()
		entityQuery()
		itemDropQuery()
		entityVelocity()
		damageTiles()
		entityHealth()
		debugPoint()
		debugLine()
		entityExists()
		entityUniqueId()
		timeOfDay()
		entityGender()
		entityAggressive()
		magnitude()
		mod()
		platformerPathStart()
		containerItemAt()
		breathable()
		entityHasCountOfItem()
		npcType()
		sendEntityMessage()
		liquidAt()
		liquidAlongLine()
		isTileProtected()
		destroyLiquid()
		spawnLiquid()
		isNpc()
		getProperty()
		gravity()
		entityMoney()
		objectLineQuery()
		spawnMonster()
		lineCollision()
		lineTileCollision()
		rectCollision()
		getObjectParameter()
		entityHandItem()
		setProperty()
		entityHandItemDescriptor()
		time()
		placeMaterial()
		entityName()
		findUniqueEntity()
		threatLevel()
		placeObject()
		spawnTreasure()
		spawnVehicle()
		damageTileArea()
		windLevel()
		tileIsOccupied()
		containerTakeAt()
		loungeableOccupied()
		resolvePolyCollision()
		nearestTo()
		spawnStagehand()
		polyCollision()
		containerOpen()
		pointCollision()
		distance()
		rectTileCollision()
		debugPoly()
		pointTileCollision()
		containerStackItems()
		collisionBlocksAlongLine()
		entityDamageTeam()
		containerAvailable()
		containerItemApply()
		farmableStage()
		containerSize()
		polyContains()
		stagehandType()
		containerItemsCanFit()
		placeMod()
		containerTakeNumItemsAt()
		dayLength()
		callScriptedEntity()
		spawnProjectile()
		containerItemsFitWhere()
		npcLineQuery()
		npcQuery()
		containerTakeAll()
		findPlatformerPath()
		entityDescription()
		xwrap()
		spawnItem()
		containerSwapItemsNoCombine()
		containerAddItems()
		objectSpaces()
		playerQuery()
		containerConsumeAt()
		monsterType()
		entityType()
		containerSwapItems()
		debugText()
		day()
		containerPutItemsAt()
		entitySpecies()
		loungeableQuery()
		lightLevel()
		entityCanDamage()
		underground()
		spawnNpc()
		material()
		monsterQuery()
		objectQuery()
		containerConsume()
		entityLineQuery()
		containerClose()
		entityPosition()
		objectAt()
		containerItems()
	}
	tonumber()
	ic = {
		stripColor()
		giveBack()
		renameThis()
		checkStack()
		sortFunc()
		sort()
		itemAmount()
		amountEquipped()
		sort_relative()
		itemConfig()
		searchBox()
		clientVersion = 1
		quickstack()
		searchButton()
		renameButton()
		lock()
		getQuality()
	}
	assert()
	rawset()
	getmetatable()
	string = {
		rep()
		gmatch()
		reverse()
		pack()
		char()
		sub()
		format()
		byte()
		match()
		dump()
		find()
		unpack()
		packsize()
		upper()
		gsub()
		lower()
		len()
	}
	pcall()
	player = {
		consumeItemWithParameter()
		shipUpgrades()
		altHandItemTags()
		upgradeShip()
		serverUuid()
		gender()
		worldId()
		equippedTech()
		completeMission()
		inventoryTags()
		removeEssentialItem()
		hasItem()
		recordEvent()
		addBookmark()
		lounge()
		cleanupItems()
		consumeItem()
		makeTechUnavailable()
		setUniverseFlag()
		giveBlueprint()
		hasItemWithParameter()
		species()
		playCinematic()
		altHandItem()
		primaryHandItemTags()
		availableTechs()
		enabledTechs()
		enableTech()
		giveItem()
		playTime()
		setIntroComplete()
		essentialItem()
		ownShipWorldId()
		makeTechAvailable()
		warp()
		equipTech()
		startQuest()
		enableMission()
		hasQuest()
		itemsWithTag()
		isLounging()
		primaryHandItem()
		confirm()
		hasCompletedQuest()
		hasCountOfItem()
		equippedItem()
		setEquippedItem()
		radioMessage()
		giveEssentialItem()
		introComplete()
		canStartQuest()
		consumeTaggedItem()
		getItemWithParameter()
	}
	config = {
		getParameter()
	}
	root = {
		questConfig()
		treeFoliageDirectory()
		getConfigurationPath()
		loadVersionedJson()
		materialHealth()
		tenantConfig()
		itemConfig()
		materialMiningSound()
		projectileConfig()
		imageSpaces()
		techType()
		createTreasure()
		materialFootstepSound()
		itemHasTag()
		imageSize()
		treeStemDirectory()
		npcPortrait()
		hasTech()
		getMatchingTenants()
		getConfiguration()
		createItem()
		generateName()
		setConfiguration()
		techConfig()
		materialPath()
		makeCurrentVersionedJson()
		monsterMovementSettings()
		isTreasurePool()
		itemTags()
		itemType()
		evalFunction()
		monsterSkillParameter()
		assetJson()
		setConfigurationPath()
		monsterPortrait()
		recipesForItem()
		createBiome()
		behaviorModule()
		liquidStatusEffects()
		npcConfig()
		nonEmptyRegion()
		evalFunction2()
		projectileGravityMultiplier()
		npcVariant()
	}
	math = {
		tan()
		atan()
		modf()
		exp()
		type()
		acos()
		abs()
		mininteger = -9223372036854775808
		maxinteger = 9223372036854775807
		deg()
		asin()
		randomseed()
		random()
		sqrt()
		huge = inf
		min()
		log()
		pi = 3.1415926535898
		rad()
		max()
		floor()
		ult()
		cos()
		tointeger()
		fmod()
		sin()
		ceil()
	}
	widget = {
		setListSelected()
		setImage()
		setButtonCheckedImages()
		setImageRotation()
		setButtonImage()
		getListSelected()
		itemGridItems()
		addListItem()
		removeListItem()
		setButtonImages()
		blur()
		getData()
		setOptionVisible()
		playSound()
		setChecked()
		getSelectedOption()
		setFontColor()
		setSize()
		setOptionEnabled()
		clearListItems()
		setPosition()
		setProgress()
		getText()
		getSliderValue()
		setButtonEnabled()
		setButtonOverlayImage()
		setData()
		setSelectedOption()
		focus()
		getSize()
		setImageScale()
		setVisible()
		getPosition()
		setText()
		getChecked()
	}
	xpcall()
	setmetatable()
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	status = {
		removeEphemeralEffect()
		resetResource()
		addPersistentEffect()
		addEphemeralEffect()
		resourceMax()
		addPersistentEffects()
		clearEphemeralEffects()
		statPositive()
		modifyResource()
		statusProperty()
		resourcePercentage()
		resource()
		isResource()
		setResourcePercentage()
		getPersistentEffects()
		resourcePositive()
		clearPersistentEffects()
		giveResource()
		overConsumeResource()
		damageTakenSince()
		activeUniqueStatusEffectSummary()
		addEphemeralEffects()
		setStatusProperty()
		resourceLocked()
		modifyResourcePercentage()
		stat()
		clearAllPersistentEffects()
		setResourceLocked()
		resetAllResources()
		resourceNames()
		setPersistentEffects()
		inflictedDamageSince()
		consumeResource()
		inflictedHitsSince()
		setResource()
	}
	utf8 = {
		charpattern = "[
[03:45:54.689] [Warn] 	coroutine = {
		wrap()
		resume()
		create()
		isyieldable()
		status()
		running()
		yield()
	}
	jarray()
	type()
	init()
	require()
	table = {
		insert()
		unpack()
		pack()
		concat()
		sort()
		move()
		remove()
	}
	_VERSION = "Lua 5.3"
	update()
	rawequal()
	world = {
		isMonster()
		entityPortrait()
		entityQuery()
		itemDropQuery()
		entityVelocity()
		damageTiles()
		entityHealth()
		debugPoint()
		debugLine()
		entityExists()
		entityUniqueId()
		timeOfDay()
		entityGender()
		entityAggressive()
		magnitude()
		mod()
		platformerPathStart()
		containerItemAt()
		breathable()
		entityHasCountOfItem()
		npcType()
		sendEntityMessage()
		liquidAt()
		liquidAlongLine()
		isTileProtected()
		destroyLiquid()
		spawnLiquid()
		isNpc()
		getProperty()
		gravity()
		entityMoney()
		objectLineQuery()
		spawnMonster()
		lineCollision()
		lineTileCollision()
		rectCollision()
		getObjectParameter()
		entityHandItem()
		setProperty()
		entityHandItemDescriptor()
		time()
		placeMaterial()
		entityName()
		findUniqueEntity()
		threatLevel()
		placeObject()
		spawnTreasure()
		spawnVehicle()
		damageTileArea()
		windLevel()
		tileIsOccupied()
		containerTakeAt()
		loungeableOccupied()
		resolvePolyCollision()
		nearestTo()
		spawnStagehand()
		polyCollision()
		containerOpen()
		pointCollision()
		distance()
		rectTileCollision()
		debugPoly()
		pointTileCollision()
		containerStackItems()
		collisionBlocksAlongLine()
		entityDamageTeam()
		containerAvailable()
		containerItemApply()
		farmableStage()
		containerSize()
		polyContains()
		stagehandType()
		containerItemsCanFit()
		placeMod()
		containerTakeNumItemsAt()
		dayLength()
		callScriptedEntity()
		spawnProjectile()
		containerItemsFitWhere()
		npcLineQuery()
		npcQuery()
		containerTakeAll()
		findPlatformerPath()
		entityDescription()
		xwrap()
		spawnItem()
		containerSwapItemsNoCombine()
		containerAddItems()
		objectSpaces()
		playerQuery()
		containerConsumeAt()
		monsterType()
		entityType()
		containerSwapItems()
		debugText()
		day()
		containerPutItemsAt()
		entitySpecies()
		loungeableQuery()
		lightLevel()
		entityCanDamage()
		underground()
		spawnNpc()
		material()
		monsterQuery()
		objectQuery()
		containerConsume()
		entityLineQuery()
		containerClose()
		entityPosition()
		objectAt()
		containerItems()
	}
	tonumber()
	ic = {
		stripColor()
		giveBack()
		renameThis()
		checkStack()
		sortFunc()
		sort()
		itemAmount()
		amountEquipped()
		sort_relative()
		itemConfig()
		searchBox()
		clientVersion = 1
		quickstack()
		searchButton()
		renameButton()
		lock()
		getQuality()
	}
	assert()
	rawset()
	getmetatable()
	string = {
		rep()
		gmatch()
		reverse()
		pack()
		char()
		sub()
		format()
		byte()
		match()
		dump()
		find()
		unpack()
		packsize()
		upper()
		gsub()
		lower()
		len()
	}
	pcall()
	player = {
		consumeItemWithParameter()
		shipUpgrades()
		altHandItemTags()
		upgradeShip()
		serverUuid()
		gender()
		worldId()
		equippedTech()
		completeMission()
		inventoryTags()
		removeEssentialItem()
		hasItem()
		recordEvent()
		addBookmark()
		lounge()
		cleanupItems()
		consumeItem()
		makeTechUnavailable()
		setUniverseFlag()
		giveBlueprint()
		hasItemWithParameter()
		species()
		playCinematic()
		altHandItem()
		primaryHandItemTags()
		availableTechs()
		enabledTechs()
		enableTech()
		giveItem()
		playTime()
		setIntroComplete()
		essentialItem()
		ownShipWorldId()
		makeTechAvailable()
		warp()
		equipTech()
		startQuest()
		enableMission()
		hasQuest()
		itemsWithTag()
		isLounging()
		primaryHandItem()
		confirm()
		hasCompletedQuest()
		hasCountOfItem()
		equippedItem()
		setEquippedItem()
		radioMessage()
		giveEssentialItem()
		introComplete()
		canStartQuest()
		consumeTaggedItem()
		getItemWithParameter()
	}
	config = {
		getParameter()
	}
	root = {
		questConfig()
		treeFoliageDirectory()
		getConfigurationPath()
		loadVersionedJson()
		materialHealth()
		tenantConfig()
		itemConfig()
		materialMiningSound()
		projectileConfig()
		imageSpaces()
		techType()
		createTreasure()
		materialFootstepSound()
		itemHasTag()
		imageSize()
		treeStemDirectory()
		npcPortrait()
		hasTech()
		getMatchingTenants()
		getConfiguration()
		createItem()
		generateName()
		setConfiguration()
		techConfig()
		materialPath()
		makeCurrentVersionedJson()
		monsterMovementSettings()
		isTreasurePool()
		itemTags()
		itemType()
		evalFunction()
		monsterSkillParameter()
		assetJson()
		setConfigurationPath()
		monsterPortrait()
		recipesForItem()
		createBiome()
		behaviorModule()
		liquidStatusEffects()
		npcConfig()
		nonEmptyRegion()
		evalFunction2()
		projectileGravityMultiplier()
		npcVariant()
	}
	math = {
		tan()
		atan()
		modf()
		exp()
		type()
		acos()
		abs()
		mininteger = -9223372036854775808
		maxinteger = 9223372036854775807
		deg()
		asin()
		randomseed()
		random()
		sqrt()
		huge = inf
		min()
		log()
		pi = 3.1415926535898
		rad()
		max()
		floor()
		ult()
		cos()
		tointeger()
		fmod()
		sin()
		ceil()
	}
	widget = {
		setListSelected()
		setImage()
		setButtonCheckedImages()
		setImageRotation()
		setButtonImage()
		getListSelected()
		itemGridItems()
		addListItem()
		removeListItem()
		setButtonImages()
		blur()
		getData()
		setOptionVisible()
		playSound()
		setChecked()
		getSelectedOption()
		setFontColor()
		setSize()
		setOptionEnabled()
		clearListItems()
		setPosition()
		setProgress()
		getText()
		getSliderValue()
		setButtonEnabled()
		setButtonOverlayImage()
		setData()
		setSelectedOption()
		focus()
		getSize()
		setImageScale()
		setVisible()
		getPosition()
		setText()
		getChecked()
	}
	xpcall()
	setmetatable()
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	status = {
		removeEphemeralEffect()
		resetResource()
		addPersistentEffect()
		addEphemeralEffect()
		resourceMax()
		addPersistentEffects()
		clearEphemeralEffects()
		statPositive()
		modifyResource()
		statusProperty()
		resourcePercentage()
		resource()
		isResource()
		setResourcePercentage()
		getPersistentEffects()
		resourcePositive()
		clearPersistentEffects()
		giveResource()
		overConsumeResource()
		damageTakenSince()
		activeUniqueStatusEffectSummary()
		addEphemeralEffects()
		setStatusProperty()
		resourceLocked()
		modifyResourcePercentage()
		stat()
		clearAllPersistentEffects()
		setResourceLocked()
		resetAllResources()
		resourceNames()
		setPersistentEffects()
		inflictedDamageSince()
		consumeResource()
		inflictedHitsSince()
		setResource()
	}
	utf8 = {
		charpattern = "[
[03:46:57.276] [Warn] 	coroutine = {
		wrap()
		resume()
		create()
		isyieldable()
		status()
		running()
		yield()
	}
	jarray()
	type()
	init()
	require()
	table = {
		insert()
		unpack()
		pack()
		concat()
		sort()
		move()
		remove()
	}
	_VERSION = "Lua 5.3"
	update()
	rawequal()
	world = {
		isMonster()
		entityPortrait()
		entityQuery()
		itemDropQuery()
		entityVelocity()
		damageTiles()
		entityHealth()
		debugPoint()
		debugLine()
		entityExists()
		entityUniqueId()
		timeOfDay()
		entityGender()
		entityAggressive()
		magnitude()
		mod()
		platformerPathStart()
		containerItemAt()
		breathable()
		entityHasCountOfItem()
		npcType()
		sendEntityMessage()
		liquidAt()
		liquidAlongLine()
		isTileProtected()
		destroyLiquid()
		spawnLiquid()
		isNpc()
		getProperty()
		gravity()
		entityMoney()
		objectLineQuery()
		spawnMonster()
		lineCollision()
		lineTileCollision()
		rectCollision()
		getObjectParameter()
		entityHandItem()
		setProperty()
		entityHandItemDescriptor()
		time()
		placeMaterial()
		entityName()
		findUniqueEntity()
		threatLevel()
		placeObject()
		spawnTreasure()
		spawnVehicle()
		damageTileArea()
		windLevel()
		tileIsOccupied()
		containerTakeAt()
		loungeableOccupied()
		resolvePolyCollision()
		nearestTo()
		spawnStagehand()
		polyCollision()
		containerOpen()
		pointCollision()
		distance()
		rectTileCollision()
		debugPoly()
		pointTileCollision()
		containerStackItems()
		collisionBlocksAlongLine()
		entityDamageTeam()
		containerAvailable()
		containerItemApply()
		farmableStage()
		containerSize()
		polyContains()
		stagehandType()
		containerItemsCanFit()
		placeMod()
		containerTakeNumItemsAt()
		dayLength()
		callScriptedEntity()
		spawnProjectile()
		containerItemsFitWhere()
		npcLineQuery()
		npcQuery()
		containerTakeAll()
		findPlatformerPath()
		entityDescription()
		xwrap()
		spawnItem()
		containerSwapItemsNoCombine()
		containerAddItems()
		objectSpaces()
		playerQuery()
		containerConsumeAt()
		monsterType()
		entityType()
		containerSwapItems()
		debugText()
		day()
		containerPutItemsAt()
		entitySpecies()
		loungeableQuery()
		lightLevel()
		entityCanDamage()
		underground()
		spawnNpc()
		material()
		monsterQuery()
		objectQuery()
		containerConsume()
		entityLineQuery()
		containerClose()
		entityPosition()
		objectAt()
		containerItems()
	}
	tonumber()
	ic = {
		stripColor()
		giveBack()
		renameThis()
		checkStack()
		sortFunc()
		sort()
		itemAmount()
		amountEquipped()
		sort_relative()
		itemConfig()
		searchBox()
		clientVersion = 1
		quickstack()
		searchButton()
		renameButton()
		lock()
		getQuality()
	}
	assert()
	rawset()
	getmetatable()
	string = {
		rep()
		gmatch()
		reverse()
		pack()
		char()
		sub()
		format()
		byte()
		match()
		dump()
		find()
		unpack()
		packsize()
		upper()
		gsub()
		lower()
		len()
	}
	pcall()
	player = {
		consumeItemWithParameter()
		shipUpgrades()
		altHandItemTags()
		upgradeShip()
		serverUuid()
		gender()
		worldId()
		equippedTech()
		completeMission()
		inventoryTags()
		removeEssentialItem()
		hasItem()
		recordEvent()
		addBookmark()
		lounge()
		cleanupItems()
		consumeItem()
		makeTechUnavailable()
		setUniverseFlag()
		giveBlueprint()
		hasItemWithParameter()
		species()
		playCinematic()
		altHandItem()
		primaryHandItemTags()
		availableTechs()
		enabledTechs()
		enableTech()
		giveItem()
		playTime()
		setIntroComplete()
		essentialItem()
		ownShipWorldId()
		makeTechAvailable()
		warp()
		equipTech()
		startQuest()
		enableMission()
		hasQuest()
		itemsWithTag()
		isLounging()
		primaryHandItem()
		confirm()
		hasCompletedQuest()
		hasCountOfItem()
		equippedItem()
		setEquippedItem()
		radioMessage()
		giveEssentialItem()
		introComplete()
		canStartQuest()
		consumeTaggedItem()
		getItemWithParameter()
	}
	config = {
		getParameter()
	}
	root = {
		questConfig()
		treeFoliageDirectory()
		getConfigurationPath()
		loadVersionedJson()
		materialHealth()
		tenantConfig()
		itemConfig()
		materialMiningSound()
		projectileConfig()
		imageSpaces()
		techType()
		createTreasure()
		materialFootstepSound()
		itemHasTag()
		imageSize()
		treeStemDirectory()
		npcPortrait()
		hasTech()
		getMatchingTenants()
		getConfiguration()
		createItem()
		generateName()
		setConfiguration()
		techConfig()
		materialPath()
		makeCurrentVersionedJson()
		monsterMovementSettings()
		isTreasurePool()
		itemTags()
		itemType()
		evalFunction()
		monsterSkillParameter()
		assetJson()
		setConfigurationPath()
		monsterPortrait()
		recipesForItem()
		createBiome()
		behaviorModule()
		liquidStatusEffects()
		npcConfig()
		nonEmptyRegion()
		evalFunction2()
		projectileGravityMultiplier()
		npcVariant()
	}
	math = {
		tan()
		atan()
		modf()
		exp()
		type()
		acos()
		abs()
		mininteger = -9223372036854775808
		maxinteger = 9223372036854775807
		deg()
		asin()
		randomseed()
		random()
		sqrt()
		huge = inf
		min()
		log()
		pi = 3.1415926535898
		rad()
		max()
		floor()
		ult()
		cos()
		tointeger()
		fmod()
		sin()
		ceil()
	}
	widget = {
		setListSelected()
		setImage()
		setButtonCheckedImages()
		setImageRotation()
		setButtonImage()
		getListSelected()
		itemGridItems()
		addListItem()
		removeListItem()
		setButtonImages()
		blur()
		getData()
		setOptionVisible()
		playSound()
		setChecked()
		getSelectedOption()
		setFontColor()
		setSize()
		setOptionEnabled()
		clearListItems()
		setPosition()
		setProgress()
		getText()
		getSliderValue()
		setButtonEnabled()
		setButtonOverlayImage()
		setData()
		setSelectedOption()
		focus()
		getSize()
		setImageScale()
		setVisible()
		getPosition()
		setText()
		getChecked()
	}
	xpcall()
	setmetatable()
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	status = {
		removeEphemeralEffect()
		resetResource()
		addPersistentEffect()
		addEphemeralEffect()
		resourceMax()
		addPersistentEffects()
		clearEphemeralEffects()
		statPositive()
		modifyResource()
		statusProperty()
		resourcePercentage()
		resource()
		isResource()
		setResourcePercentage()
		getPersistentEffects()
		resourcePositive()
		clearPersistentEffects()
		giveResource()
		overConsumeResource()
		damageTakenSince()
		activeUniqueStatusEffectSummary()
		addEphemeralEffects()
		setStatusProperty()
		resourceLocked()
		modifyResourcePercentage()
		stat()
		clearAllPersistentEffects()
		setResourceLocked()
		resetAllResources()
		resourceNames()
		setPersistentEffects()
		inflictedDamageSince()
		consumeResource()
		inflictedHitsSince()
		setResource()
	}
	utf8 = {
		charpattern = "[
[03:47:03.009] [Info] [IC] [Sort] Time elapsed: 0.01
[03:47:04.519] [Warn] 	coroutine = {
		wrap()
		resume()
		create()
		isyieldable()
		status()
		running()
		yield()
	}
	jarray()
	type()
	init()
	require()
	table = {
		insert()
		unpack()
		pack()
		concat()
		sort()
		move()
		remove()
	}
	_VERSION = "Lua 5.3"
	update()
	rawequal()
	world = {
		isMonster()
		entityPortrait()
		entityQuery()
		itemDropQuery()
		entityVelocity()
		damageTiles()
		entityHealth()
		debugPoint()
		debugLine()
		entityExists()
		entityUniqueId()
		timeOfDay()
		entityGender()
		entityAggressive()
		magnitude()
		mod()
		platformerPathStart()
		containerItemAt()
		breathable()
		entityHasCountOfItem()
		npcType()
		sendEntityMessage()
		liquidAt()
		liquidAlongLine()
		isTileProtected()
		destroyLiquid()
		spawnLiquid()
		isNpc()
		getProperty()
		gravity()
		entityMoney()
		objectLineQuery()
		spawnMonster()
		lineCollision()
		lineTileCollision()
		rectCollision()
		getObjectParameter()
		entityHandItem()
		setProperty()
		entityHandItemDescriptor()
		time()
		placeMaterial()
		entityName()
		findUniqueEntity()
		threatLevel()
		placeObject()
		spawnTreasure()
		spawnVehicle()
		damageTileArea()
		windLevel()
		tileIsOccupied()
		containerTakeAt()
		loungeableOccupied()
		resolvePolyCollision()
		nearestTo()
		spawnStagehand()
		polyCollision()
		containerOpen()
		pointCollision()
		distance()
		rectTileCollision()
		debugPoly()
		pointTileCollision()
		containerStackItems()
		collisionBlocksAlongLine()
		entityDamageTeam()
		containerAvailable()
		containerItemApply()
		farmableStage()
		containerSize()
		polyContains()
		stagehandType()
		containerItemsCanFit()
		placeMod()
		containerTakeNumItemsAt()
		dayLength()
		callScriptedEntity()
		spawnProjectile()
		containerItemsFitWhere()
		npcLineQuery()
		npcQuery()
		containerTakeAll()
		findPlatformerPath()
		entityDescription()
		xwrap()
		spawnItem()
		containerSwapItemsNoCombine()
		containerAddItems()
		objectSpaces()
		playerQuery()
		containerConsumeAt()
		monsterType()
		entityType()
		containerSwapItems()
		debugText()
		day()
		containerPutItemsAt()
		entitySpecies()
		loungeableQuery()
		lightLevel()
		entityCanDamage()
		underground()
		spawnNpc()
		material()
		monsterQuery()
		objectQuery()
		containerConsume()
		entityLineQuery()
		containerClose()
		entityPosition()
		objectAt()
		containerItems()
	}
	tonumber()
	ic = {
		stripColor()
		giveBack()
		renameThis()
		checkStack()
		sortFunc()
		sort()
		itemAmount()
		amountEquipped()
		sort_relative()
		itemConfig()
		searchBox()
		clientVersion = 1
		quickstack()
		searchButton()
		renameButton()
		lock()
		getQuality()
	}
	assert()
	rawset()
	getmetatable()
	string = {
		rep()
		gmatch()
		reverse()
		pack()
		char()
		sub()
		format()
		byte()
		match()
		dump()
		find()
		unpack()
		packsize()
		upper()
		gsub()
		lower()
		len()
	}
	pcall()
	player = {
		consumeItemWithParameter()
		shipUpgrades()
		altHandItemTags()
		upgradeShip()
		serverUuid()
		gender()
		worldId()
		equippedTech()
		completeMission()
		inventoryTags()
		removeEssentialItem()
		hasItem()
		recordEvent()
		addBookmark()
		lounge()
		cleanupItems()
		consumeItem()
		makeTechUnavailable()
		setUniverseFlag()
		giveBlueprint()
		hasItemWithParameter()
		species()
		playCinematic()
		altHandItem()
		primaryHandItemTags()
		availableTechs()
		enabledTechs()
		enableTech()
		giveItem()
		playTime()
		setIntroComplete()
		essentialItem()
		ownShipWorldId()
		makeTechAvailable()
		warp()
		equipTech()
		startQuest()
		enableMission()
		hasQuest()
		itemsWithTag()
		isLounging()
		primaryHandItem()
		confirm()
		hasCompletedQuest()
		hasCountOfItem()
		equippedItem()
		setEquippedItem()
		radioMessage()
		giveEssentialItem()
		introComplete()
		canStartQuest()
		consumeTaggedItem()
		getItemWithParameter()
	}
	config = {
		getParameter()
	}
	root = {
		questConfig()
		treeFoliageDirectory()
		getConfigurationPath()
		loadVersionedJson()
		materialHealth()
		tenantConfig()
		itemConfig()
		materialMiningSound()
		projectileConfig()
		imageSpaces()
		techType()
		createTreasure()
		materialFootstepSound()
		itemHasTag()
		imageSize()
		treeStemDirectory()
		npcPortrait()
		hasTech()
		getMatchingTenants()
		getConfiguration()
		createItem()
		generateName()
		setConfiguration()
		techConfig()
		materialPath()
		makeCurrentVersionedJson()
		monsterMovementSettings()
		isTreasurePool()
		itemTags()
		itemType()
		evalFunction()
		monsterSkillParameter()
		assetJson()
		setConfigurationPath()
		monsterPortrait()
		recipesForItem()
		createBiome()
		behaviorModule()
		liquidStatusEffects()
		npcConfig()
		nonEmptyRegion()
		evalFunction2()
		projectileGravityMultiplier()
		npcVariant()
	}
	math = {
		tan()
		atan()
		modf()
		exp()
		type()
		acos()
		abs()
		mininteger = -9223372036854775808
		maxinteger = 9223372036854775807
		deg()
		asin()
		randomseed()
		random()
		sqrt()
		huge = inf
		min()
		log()
		pi = 3.1415926535898
		rad()
		max()
		floor()
		ult()
		cos()
		tointeger()
		fmod()
		sin()
		ceil()
	}
	widget = {
		setListSelected()
		setImage()
		setButtonCheckedImages()
		setImageRotation()
		setButtonImage()
		getListSelected()
		itemGridItems()
		addListItem()
		removeListItem()
		setButtonImages()
		blur()
		getData()
		setOptionVisible()
		playSound()
		setChecked()
		getSelectedOption()
		setFontColor()
		setSize()
		setOptionEnabled()
		clearListItems()
		setPosition()
		setProgress()
		getText()
		getSliderValue()
		setButtonEnabled()
		setButtonOverlayImage()
		setData()
		setSelectedOption()
		focus()
		getSize()
		setImageScale()
		setVisible()
		getPosition()
		setText()
		getChecked()
	}
	xpcall()
	setmetatable()
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	status = {
		removeEphemeralEffect()
		resetResource()
		addPersistentEffect()
		addEphemeralEffect()
		resourceMax()
		addPersistentEffects()
		clearEphemeralEffects()
		statPositive()
		modifyResource()
		statusProperty()
		resourcePercentage()
		resource()
		isResource()
		setResourcePercentage()
		getPersistentEffects()
		resourcePositive()
		clearPersistentEffects()
		giveResource()
		overConsumeResource()
		damageTakenSince()
		activeUniqueStatusEffectSummary()
		addEphemeralEffects()
		setStatusProperty()
		resourceLocked()
		modifyResourcePercentage()
		stat()
		clearAllPersistentEffects()
		setResourceLocked()
		resetAllResources()
		resourceNames()
		setPersistentEffects()
		inflictedDamageSince()
		consumeResource()
		inflictedHitsSince()
		setResource()
	}
	utf8 = {
		charpattern = "[
[03:47:05.507] [Warn] 	coroutine = {
		wrap()
		resume()
		create()
		isyieldable()
		status()
		running()
		yield()
	}
	jarray()
	type()
	init()
	require()
	table = {
		insert()
		unpack()
		pack()
		concat()
		sort()
		move()
		remove()
	}
	_VERSION = "Lua 5.3"
	update()
	rawequal()
	world = {
		isMonster()
		entityPortrait()
		entityQuery()
		itemDropQuery()
		entityVelocity()
		damageTiles()
		entityHealth()
		debugPoint()
		debugLine()
		entityExists()
		entityUniqueId()
		timeOfDay()
		entityGender()
		entityAggressive()
		magnitude()
		mod()
		platformerPathStart()
		containerItemAt()
		breathable()
		entityHasCountOfItem()
		npcType()
		sendEntityMessage()
		liquidAt()
		liquidAlongLine()
		isTileProtected()
		destroyLiquid()
		spawnLiquid()
		isNpc()
		getProperty()
		gravity()
		entityMoney()
		objectLineQuery()
		spawnMonster()
		lineCollision()
		lineTileCollision()
		rectCollision()
		getObjectParameter()
		entityHandItem()
		setProperty()
		entityHandItemDescriptor()
		time()
		placeMaterial()
		entityName()
		findUniqueEntity()
		threatLevel()
		placeObject()
		spawnTreasure()
		spawnVehicle()
		damageTileArea()
		windLevel()
		tileIsOccupied()
		containerTakeAt()
		loungeableOccupied()
		resolvePolyCollision()
		nearestTo()
		spawnStagehand()
		polyCollision()
		containerOpen()
		pointCollision()
		distance()
		rectTileCollision()
		debugPoly()
		pointTileCollision()
		containerStackItems()
		collisionBlocksAlongLine()
		entityDamageTeam()
		containerAvailable()
		containerItemApply()
		farmableStage()
		containerSize()
		polyContains()
		stagehandType()
		containerItemsCanFit()
		placeMod()
		containerTakeNumItemsAt()
		dayLength()
		callScriptedEntity()
		spawnProjectile()
		containerItemsFitWhere()
		npcLineQuery()
		npcQuery()
		containerTakeAll()
		findPlatformerPath()
		entityDescription()
		xwrap()
		spawnItem()
		containerSwapItemsNoCombine()
		containerAddItems()
		objectSpaces()
		playerQuery()
		containerConsumeAt()
		monsterType()
		entityType()
		containerSwapItems()
		debugText()
		day()
		containerPutItemsAt()
		entitySpecies()
		loungeableQuery()
		lightLevel()
		entityCanDamage()
		underground()
		spawnNpc()
		material()
		monsterQuery()
		objectQuery()
		containerConsume()
		entityLineQuery()
		containerClose()
		entityPosition()
		objectAt()
		containerItems()
	}
	tonumber()
	ic = {
		stripColor()
		giveBack()
		renameThis()
		checkStack()
		sortFunc()
		sort()
		itemAmount()
		amountEquipped()
		sort_relative()
		itemConfig()
		searchBox()
		clientVersion = 1
		quickstack()
		searchButton()
		renameButton()
		lock()
		getQuality()
	}
	assert()
	rawset()
	getmetatable()
	string = {
		rep()
		gmatch()
		reverse()
		pack()
		char()
		sub()
		format()
		byte()
		match()
		dump()
		find()
		unpack()
		packsize()
		upper()
		gsub()
		lower()
		len()
	}
	pcall()
	player = {
		consumeItemWithParameter()
		shipUpgrades()
		altHandItemTags()
		upgradeShip()
		serverUuid()
		gender()
		worldId()
		equippedTech()
		completeMission()
		inventoryTags()
		removeEssentialItem()
		hasItem()
		recordEvent()
		addBookmark()
		lounge()
		cleanupItems()
		consumeItem()
		makeTechUnavailable()
		setUniverseFlag()
		giveBlueprint()
		hasItemWithParameter()
		species()
		playCinematic()
		altHandItem()
		primaryHandItemTags()
		availableTechs()
		enabledTechs()
		enableTech()
		giveItem()
		playTime()
		setIntroComplete()
		essentialItem()
		ownShipWorldId()
		makeTechAvailable()
		warp()
		equipTech()
		startQuest()
		enableMission()
		hasQuest()
		itemsWithTag()
		isLounging()
		primaryHandItem()
		confirm()
		hasCompletedQuest()
		hasCountOfItem()
		equippedItem()
		setEquippedItem()
		radioMessage()
		giveEssentialItem()
		introComplete()
		canStartQuest()
		consumeTaggedItem()
		getItemWithParameter()
	}
	config = {
		getParameter()
	}
	root = {
		questConfig()
		treeFoliageDirectory()
		getConfigurationPath()
		loadVersionedJson()
		materialHealth()
		tenantConfig()
		itemConfig()
		materialMiningSound()
		projectileConfig()
		imageSpaces()
		techType()
		createTreasure()
		materialFootstepSound()
		itemHasTag()
		imageSize()
		treeStemDirectory()
		npcPortrait()
		hasTech()
		getMatchingTenants()
		getConfiguration()
		createItem()
		generateName()
		setConfiguration()
		techConfig()
		materialPath()
		makeCurrentVersionedJson()
		monsterMovementSettings()
		isTreasurePool()
		itemTags()
		itemType()
		evalFunction()
		monsterSkillParameter()
		assetJson()
		setConfigurationPath()
		monsterPortrait()
		recipesForItem()
		createBiome()
		behaviorModule()
		liquidStatusEffects()
		npcConfig()
		nonEmptyRegion()
		evalFunction2()
		projectileGravityMultiplier()
		npcVariant()
	}
	math = {
		tan()
		atan()
		modf()
		exp()
		type()
		acos()
		abs()
		mininteger = -9223372036854775808
		maxinteger = 9223372036854775807
		deg()
		asin()
		randomseed()
		random()
		sqrt()
		huge = inf
		min()
		log()
		pi = 3.1415926535898
		rad()
		max()
		floor()
		ult()
		cos()
		tointeger()
		fmod()
		sin()
		ceil()
	}
	widget = {
		setListSelected()
		setImage()
		setButtonCheckedImages()
		setImageRotation()
		setButtonImage()
		getListSelected()
		itemGridItems()
		addListItem()
		removeListItem()
		setButtonImages()
		blur()
		getData()
		setOptionVisible()
		playSound()
		setChecked()
		getSelectedOption()
		setFontColor()
		setSize()
		setOptionEnabled()
		clearListItems()
		setPosition()
		setProgress()
		getText()
		getSliderValue()
		setButtonEnabled()
		setButtonOverlayImage()
		setData()
		setSelectedOption()
		focus()
		getSize()
		setImageScale()
		setVisible()
		getPosition()
		setText()
		getChecked()
	}
	xpcall()
	setmetatable()
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	status = {
		removeEphemeralEffect()
		resetResource()
		addPersistentEffect()
		addEphemeralEffect()
		resourceMax()
		addPersistentEffects()
		clearEphemeralEffects()
		statPositive()
		modifyResource()
		statusProperty()
		resourcePercentage()
		resource()
		isResource()
		setResourcePercentage()
		getPersistentEffects()
		resourcePositive()
		clearPersistentEffects()
		giveResource()
		overConsumeResource()
		damageTakenSince()
		activeUniqueStatusEffectSummary()
		addEphemeralEffects()
		setStatusProperty()
		resourceLocked()
		modifyResourcePercentage()
		stat()
		clearAllPersistentEffects()
		setResourceLocked()
		resetAllResources()
		resourceNames()
		setPersistentEffects()
		inflictedDamageSince()
		consumeResource()
		inflictedHitsSince()
		setResource()
	}
	utf8 = {
		charpattern = "[
[03:47:08.634] [Warn] 	coroutine = {
		wrap()
		resume()
		create()
		isyieldable()
		status()
		running()
		yield()
	}
	jarray()
	type()
	init()
	require()
	table = {
		insert()
		unpack()
		pack()
		concat()
		sort()
		move()
		remove()
	}
	_VERSION = "Lua 5.3"
	update()
	rawequal()
	world = {
		isMonster()
		entityPortrait()
		entityQuery()
		itemDropQuery()
		entityVelocity()
		damageTiles()
		entityHealth()
		debugPoint()
		debugLine()
		entityExists()
		entityUniqueId()
		timeOfDay()
		entityGender()
		entityAggressive()
		magnitude()
		mod()
		platformerPathStart()
		containerItemAt()
		breathable()
		entityHasCountOfItem()
		npcType()
		sendEntityMessage()
		liquidAt()
		liquidAlongLine()
		isTileProtected()
		destroyLiquid()
		spawnLiquid()
		isNpc()
		getProperty()
		gravity()
		entityMoney()
		objectLineQuery()
		spawnMonster()
		lineCollision()
		lineTileCollision()
		rectCollision()
		getObjectParameter()
		entityHandItem()
		setProperty()
		entityHandItemDescriptor()
		time()
		placeMaterial()
		entityName()
		findUniqueEntity()
		threatLevel()
		placeObject()
		spawnTreasure()
		spawnVehicle()
		damageTileArea()
		windLevel()
		tileIsOccupied()
		containerTakeAt()
		loungeableOccupied()
		resolvePolyCollision()
		nearestTo()
		spawnStagehand()
		polyCollision()
		containerOpen()
		pointCollision()
		distance()
		rectTileCollision()
		debugPoly()
		pointTileCollision()
		containerStackItems()
		collisionBlocksAlongLine()
		entityDamageTeam()
		containerAvailable()
		containerItemApply()
		farmableStage()
		containerSize()
		polyContains()
		stagehandType()
		containerItemsCanFit()
		placeMod()
		containerTakeNumItemsAt()
		dayLength()
		callScriptedEntity()
		spawnProjectile()
		containerItemsFitWhere()
		npcLineQuery()
		npcQuery()
		containerTakeAll()
		findPlatformerPath()
		entityDescription()
		xwrap()
		spawnItem()
		containerSwapItemsNoCombine()
		containerAddItems()
		objectSpaces()
		playerQuery()
		containerConsumeAt()
		monsterType()
		entityType()
		containerSwapItems()
		debugText()
		day()
		containerPutItemsAt()
		entitySpecies()
		loungeableQuery()
		lightLevel()
		entityCanDamage()
		underground()
		spawnNpc()
		material()
		monsterQuery()
		objectQuery()
		containerConsume()
		entityLineQuery()
		containerClose()
		entityPosition()
		objectAt()
		containerItems()
	}
	tonumber()
	ic = {
		stripColor()
		giveBack()
		renameThis()
		checkStack()
		sortFunc()
		sort()
		itemAmount()
		amountEquipped()
		sort_relative()
		itemConfig()
		searchBox()
		clientVersion = 1
		quickstack()
		searchButton()
		renameButton()
		lock()
		getQuality()
	}
	assert()
	rawset()
	getmetatable()
	string = {
		rep()
		gmatch()
		reverse()
		pack()
		char()
		sub()
		format()
		byte()
		match()
		dump()
		find()
		unpack()
		packsize()
		upper()
		gsub()
		lower()
		len()
	}
	pcall()
	player = {
		consumeItemWithParameter()
		shipUpgrades()
		altHandItemTags()
		upgradeShip()
		serverUuid()
		gender()
		worldId()
		equippedTech()
		completeMission()
		inventoryTags()
		removeEssentialItem()
		hasItem()
		recordEvent()
		addBookmark()
		lounge()
		cleanupItems()
		consumeItem()
		makeTechUnavailable()
		setUniverseFlag()
		giveBlueprint()
		hasItemWithParameter()
		species()
		playCinematic()
		altHandItem()
		primaryHandItemTags()
		availableTechs()
		enabledTechs()
		enableTech()
		giveItem()
		playTime()
		setIntroComplete()
		essentialItem()
		ownShipWorldId()
		makeTechAvailable()
		warp()
		equipTech()
		startQuest()
		enableMission()
		hasQuest()
		itemsWithTag()
		isLounging()
		primaryHandItem()
		confirm()
		hasCompletedQuest()
		hasCountOfItem()
		equippedItem()
		setEquippedItem()
		radioMessage()
		giveEssentialItem()
		introComplete()
		canStartQuest()
		consumeTaggedItem()
		getItemWithParameter()
	}
	config = {
		getParameter()
	}
	root = {
		questConfig()
		treeFoliageDirectory()
		getConfigurationPath()
		loadVersionedJson()
		materialHealth()
		tenantConfig()
		itemConfig()
		materialMiningSound()
		projectileConfig()
		imageSpaces()
		techType()
		createTreasure()
		materialFootstepSound()
		itemHasTag()
		imageSize()
		treeStemDirectory()
		npcPortrait()
		hasTech()
		getMatchingTenants()
		getConfiguration()
		createItem()
		generateName()
		setConfiguration()
		techConfig()
		materialPath()
		makeCurrentVersionedJson()
		monsterMovementSettings()
		isTreasurePool()
		itemTags()
		itemType()
		evalFunction()
		monsterSkillParameter()
		assetJson()
		setConfigurationPath()
		monsterPortrait()
		recipesForItem()
		createBiome()
		behaviorModule()
		liquidStatusEffects()
		npcConfig()
		nonEmptyRegion()
		evalFunction2()
		projectileGravityMultiplier()
		npcVariant()
	}
	math = {
		tan()
		atan()
		modf()
		exp()
		type()
		acos()
		abs()
		mininteger = -9223372036854775808
		maxinteger = 9223372036854775807
		deg()
		asin()
		randomseed()
		random()
		sqrt()
		huge = inf
		min()
		log()
		pi = 3.1415926535898
		rad()
		max()
		floor()
		ult()
		cos()
		tointeger()
		fmod()
		sin()
		ceil()
	}
	widget = {
		setListSelected()
		setImage()
		setButtonCheckedImages()
		setImageRotation()
		setButtonImage()
		getListSelected()
		itemGridItems()
		addListItem()
		removeListItem()
		setButtonImages()
		blur()
		getData()
		setOptionVisible()
		playSound()
		setChecked()
		getSelectedOption()
		setFontColor()
		setSize()
		setOptionEnabled()
		clearListItems()
		setPosition()
		setProgress()
		getText()
		getSliderValue()
		setButtonEnabled()
		setButtonOverlayImage()
		setData()
		setSelectedOption()
		focus()
		getSize()
		setImageScale()
		setVisible()
		getPosition()
		setText()
		getChecked()
	}
	xpcall()
	setmetatable()
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	status = {
		removeEphemeralEffect()
		resetResource()
		addPersistentEffect()
		addEphemeralEffect()
		resourceMax()
		addPersistentEffects()
		clearEphemeralEffects()
		statPositive()
		modifyResource()
		statusProperty()
		resourcePercentage()
		resource()
		isResource()
		setResourcePercentage()
		getPersistentEffects()
		resourcePositive()
		clearPersistentEffects()
		giveResource()
		overConsumeResource()
		damageTakenSince()
		activeUniqueStatusEffectSummary()
		addEphemeralEffects()
		setStatusProperty()
		resourceLocked()
		modifyResourcePercentage()
		stat()
		clearAllPersistentEffects()
		setResourceLocked()
		resetAllResources()
		resourceNames()
		setPersistentEffects()
		inflictedDamageSince()
		consumeResource()
		inflictedHitsSince()
		setResource()
	}
	utf8 = {
		charpattern = "[
[03:47:09.774] [Warn] 	coroutine = {
		wrap()
		resume()
		create()
		isyieldable()
		status()
		running()
		yield()
	}
	jarray()
	type()
	init()
	require()
	table = {
		insert()
		unpack()
		pack()
		concat()
		sort()
		move()
		remove()
	}
	_VERSION = "Lua 5.3"
	update()
	rawequal()
	world = {
		isMonster()
		entityPortrait()
		entityQuery()
		itemDropQuery()
		entityVelocity()
		damageTiles()
		entityHealth()
		debugPoint()
		debugLine()
		entityExists()
		entityUniqueId()
		timeOfDay()
		entityGender()
		entityAggressive()
		magnitude()
		mod()
		platformerPathStart()
		containerItemAt()
		breathable()
		entityHasCountOfItem()
		npcType()
		sendEntityMessage()
		liquidAt()
		liquidAlongLine()
		isTileProtected()
		destroyLiquid()
		spawnLiquid()
		isNpc()
		getProperty()
		gravity()
		entityMoney()
		objectLineQuery()
		spawnMonster()
		lineCollision()
		lineTileCollision()
		rectCollision()
		getObjectParameter()
		entityHandItem()
		setProperty()
		entityHandItemDescriptor()
		time()
		placeMaterial()
		entityName()
		findUniqueEntity()
		threatLevel()
		placeObject()
		spawnTreasure()
		spawnVehicle()
		damageTileArea()
		windLevel()
		tileIsOccupied()
		containerTakeAt()
		loungeableOccupied()
		resolvePolyCollision()
		nearestTo()
		spawnStagehand()
		polyCollision()
		containerOpen()
		pointCollision()
		distance()
		rectTileCollision()
		debugPoly()
		pointTileCollision()
		containerStackItems()
		collisionBlocksAlongLine()
		entityDamageTeam()
		containerAvailable()
		containerItemApply()
		farmableStage()
		containerSize()
		polyContains()
		stagehandType()
		containerItemsCanFit()
		placeMod()
		containerTakeNumItemsAt()
		dayLength()
		callScriptedEntity()
		spawnProjectile()
		containerItemsFitWhere()
		npcLineQuery()
		npcQuery()
		containerTakeAll()
		findPlatformerPath()
		entityDescription()
		xwrap()
		spawnItem()
		containerSwapItemsNoCombine()
		containerAddItems()
		objectSpaces()
		playerQuery()
		containerConsumeAt()
		monsterType()
		entityType()
		containerSwapItems()
		debugText()
		day()
		containerPutItemsAt()
		entitySpecies()
		loungeableQuery()
		lightLevel()
		entityCanDamage()
		underground()
		spawnNpc()
		material()
		monsterQuery()
		objectQuery()
		containerConsume()
		entityLineQuery()
		containerClose()
		entityPosition()
		objectAt()
		containerItems()
	}
	tonumber()
	ic = {
		stripColor()
		giveBack()
		renameThis()
		checkStack()
		sortFunc()
		sort()
		itemAmount()
		amountEquipped()
		sort_relative()
		itemConfig()
		searchBox()
		clientVersion = 1
		quickstack()
		searchButton()
		renameButton()
		lock()
		getQuality()
	}
	assert()
	rawset()
	getmetatable()
	string = {
		rep()
		gmatch()
		reverse()
		pack()
		char()
		sub()
		format()
		byte()
		match()
		dump()
		find()
		unpack()
		packsize()
		upper()
		gsub()
		lower()
		len()
	}
	pcall()
	player = {
		consumeItemWithParameter()
		shipUpgrades()
		altHandItemTags()
		upgradeShip()
		serverUuid()
		gender()
		worldId()
		equippedTech()
		completeMission()
		inventoryTags()
		removeEssentialItem()
		hasItem()
		recordEvent()
		addBookmark()
		lounge()
		cleanupItems()
		consumeItem()
		makeTechUnavailable()
		setUniverseFlag()
		giveBlueprint()
		hasItemWithParameter()
		species()
		playCinematic()
		altHandItem()
		primaryHandItemTags()
		availableTechs()
		enabledTechs()
		enableTech()
		giveItem()
		playTime()
		setIntroComplete()
		essentialItem()
		ownShipWorldId()
		makeTechAvailable()
		warp()
		equipTech()
		startQuest()
		enableMission()
		hasQuest()
		itemsWithTag()
		isLounging()
		primaryHandItem()
		confirm()
		hasCompletedQuest()
		hasCountOfItem()
		equippedItem()
		setEquippedItem()
		radioMessage()
		giveEssentialItem()
		introComplete()
		canStartQuest()
		consumeTaggedItem()
		getItemWithParameter()
	}
	config = {
		getParameter()
	}
	root = {
		questConfig()
		treeFoliageDirectory()
		getConfigurationPath()
		loadVersionedJson()
		materialHealth()
		tenantConfig()
		itemConfig()
		materialMiningSound()
		projectileConfig()
		imageSpaces()
		techType()
		createTreasure()
		materialFootstepSound()
		itemHasTag()
		imageSize()
		treeStemDirectory()
		npcPortrait()
		hasTech()
		getMatchingTenants()
		getConfiguration()
		createItem()
		generateName()
		setConfiguration()
		techConfig()
		materialPath()
		makeCurrentVersionedJson()
		monsterMovementSettings()
		isTreasurePool()
		itemTags()
		itemType()
		evalFunction()
		monsterSkillParameter()
		assetJson()
		setConfigurationPath()
		monsterPortrait()
		recipesForItem()
		createBiome()
		behaviorModule()
		liquidStatusEffects()
		npcConfig()
		nonEmptyRegion()
		evalFunction2()
		projectileGravityMultiplier()
		npcVariant()
	}
	math = {
		tan()
		atan()
		modf()
		exp()
		type()
		acos()
		abs()
		mininteger = -9223372036854775808
		maxinteger = 9223372036854775807
		deg()
		asin()
		randomseed()
		random()
		sqrt()
		huge = inf
		min()
		log()
		pi = 3.1415926535898
		rad()
		max()
		floor()
		ult()
		cos()
		tointeger()
		fmod()
		sin()
		ceil()
	}
	widget = {
		setListSelected()
		setImage()
		setButtonCheckedImages()
		setImageRotation()
		setButtonImage()
		getListSelected()
		itemGridItems()
		addListItem()
		removeListItem()
		setButtonImages()
		blur()
		getData()
		setOptionVisible()
		playSound()
		setChecked()
		getSelectedOption()
		setFontColor()
		setSize()
		setOptionEnabled()
		clearListItems()
		setPosition()
		setProgress()
		getText()
		getSliderValue()
		setButtonEnabled()
		setButtonOverlayImage()
		setData()
		setSelectedOption()
		focus()
		getSize()
		setImageScale()
		setVisible()
		getPosition()
		setText()
		getChecked()
	}
	xpcall()
	setmetatable()
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	status = {
		removeEphemeralEffect()
		resetResource()
		addPersistentEffect()
		addEphemeralEffect()
		resourceMax()
		addPersistentEffects()
		clearEphemeralEffects()
		statPositive()
		modifyResource()
		statusProperty()
		resourcePercentage()
		resource()
		isResource()
		setResourcePercentage()
		getPersistentEffects()
		resourcePositive()
		clearPersistentEffects()
		giveResource()
		overConsumeResource()
		damageTakenSince()
		activeUniqueStatusEffectSummary()
		addEphemeralEffects()
		setStatusProperty()
		resourceLocked()
		modifyResourcePercentage()
		stat()
		clearAllPersistentEffects()
		setResourceLocked()
		resetAllResources()
		resourceNames()
		setPersistentEffects()
		inflictedDamageSince()
		consumeResource()
		inflictedHitsSince()
		setResource()
	}
	utf8 = {
		charpattern = "[
[03:47:11.044] [Warn] 	coroutine = {
		wrap()
		resume()
		create()
		isyieldable()
		status()
		running()
		yield()
	}
	jarray()
	type()
	init()
	require()
	table = {
		insert()
		unpack()
		pack()
		concat()
		sort()
		move()
		remove()
	}
	_VERSION = "Lua 5.3"
	update()
	rawequal()
	world = {
		isMonster()
		entityPortrait()
		entityQuery()
		itemDropQuery()
		entityVelocity()
		damageTiles()
		entityHealth()
		debugPoint()
		debugLine()
		entityExists()
		entityUniqueId()
		timeOfDay()
		entityGender()
		entityAggressive()
		magnitude()
		mod()
		platformerPathStart()
		containerItemAt()
		breathable()
		entityHasCountOfItem()
		npcType()
		sendEntityMessage()
		liquidAt()
		liquidAlongLine()
		isTileProtected()
		destroyLiquid()
		spawnLiquid()
		isNpc()
		getProperty()
		gravity()
		entityMoney()
		objectLineQuery()
		spawnMonster()
		lineCollision()
		lineTileCollision()
		rectCollision()
		getObjectParameter()
		entityHandItem()
		setProperty()
		entityHandItemDescriptor()
		time()
		placeMaterial()
		entityName()
		findUniqueEntity()
		threatLevel()
		placeObject()
		spawnTreasure()
		spawnVehicle()
		damageTileArea()
		windLevel()
		tileIsOccupied()
		containerTakeAt()
		loungeableOccupied()
		resolvePolyCollision()
		nearestTo()
		spawnStagehand()
		polyCollision()
		containerOpen()
		pointCollision()
		distance()
		rectTileCollision()
		debugPoly()
		pointTileCollision()
		containerStackItems()
		collisionBlocksAlongLine()
		entityDamageTeam()
		containerAvailable()
		containerItemApply()
		farmableStage()
		containerSize()
		polyContains()
		stagehandType()
		containerItemsCanFit()
		placeMod()
		containerTakeNumItemsAt()
		dayLength()
		callScriptedEntity()
		spawnProjectile()
		containerItemsFitWhere()
		npcLineQuery()
		npcQuery()
		containerTakeAll()
		findPlatformerPath()
		entityDescription()
		xwrap()
		spawnItem()
		containerSwapItemsNoCombine()
		containerAddItems()
		objectSpaces()
		playerQuery()
		containerConsumeAt()
		monsterType()
		entityType()
		containerSwapItems()
		debugText()
		day()
		containerPutItemsAt()
		entitySpecies()
		loungeableQuery()
		lightLevel()
		entityCanDamage()
		underground()
		spawnNpc()
		material()
		monsterQuery()
		objectQuery()
		containerConsume()
		entityLineQuery()
		containerClose()
		entityPosition()
		objectAt()
		containerItems()
	}
	tonumber()
	ic = {
		stripColor()
		giveBack()
		renameThis()
		checkStack()
		sortFunc()
		sort()
		itemAmount()
		amountEquipped()
		sort_relative()
		itemConfig()
		searchBox()
		clientVersion = 1
		quickstack()
		searchButton()
		renameButton()
		lock()
		getQuality()
	}
	assert()
	rawset()
	getmetatable()
	string = {
		rep()
		gmatch()
		reverse()
		pack()
		char()
		sub()
		format()
		byte()
		match()
		dump()
		find()
		unpack()
		packsize()
		upper()
		gsub()
		lower()
		len()
	}
	pcall()
	player = {
		consumeItemWithParameter()
		shipUpgrades()
		altHandItemTags()
		upgradeShip()
		serverUuid()
		gender()
		worldId()
		equippedTech()
		completeMission()
		inventoryTags()
		removeEssentialItem()
		hasItem()
		recordEvent()
		addBookmark()
		lounge()
		cleanupItems()
		consumeItem()
		makeTechUnavailable()
		setUniverseFlag()
		giveBlueprint()
		hasItemWithParameter()
		species()
		playCinematic()
		altHandItem()
		primaryHandItemTags()
		availableTechs()
		enabledTechs()
		enableTech()
		giveItem()
		playTime()
		setIntroComplete()
		essentialItem()
		ownShipWorldId()
		makeTechAvailable()
		warp()
		equipTech()
		startQuest()
		enableMission()
		hasQuest()
		itemsWithTag()
		isLounging()
		primaryHandItem()
		confirm()
		hasCompletedQuest()
		hasCountOfItem()
		equippedItem()
		setEquippedItem()
		radioMessage()
		giveEssentialItem()
		introComplete()
		canStartQuest()
		consumeTaggedItem()
		getItemWithParameter()
	}
	config = {
		getParameter()
	}
	root = {
		questConfig()
		treeFoliageDirectory()
		getConfigurationPath()
		loadVersionedJson()
		materialHealth()
		tenantConfig()
		itemConfig()
		materialMiningSound()
		projectileConfig()
		imageSpaces()
		techType()
		createTreasure()
		materialFootstepSound()
		itemHasTag()
		imageSize()
		treeStemDirectory()
		npcPortrait()
		hasTech()
		getMatchingTenants()
		getConfiguration()
		createItem()
		generateName()
		setConfiguration()
		techConfig()
		materialPath()
		makeCurrentVersionedJson()
		monsterMovementSettings()
		isTreasurePool()
		itemTags()
		itemType()
		evalFunction()
		monsterSkillParameter()
		assetJson()
		setConfigurationPath()
		monsterPortrait()
		recipesForItem()
		createBiome()
		behaviorModule()
		liquidStatusEffects()
		npcConfig()
		nonEmptyRegion()
		evalFunction2()
		projectileGravityMultiplier()
		npcVariant()
	}
	math = {
		tan()
		atan()
		modf()
		exp()
		type()
		acos()
		abs()
		mininteger = -9223372036854775808
		maxinteger = 9223372036854775807
		deg()
		asin()
		randomseed()
		random()
		sqrt()
		huge = inf
		min()
		log()
		pi = 3.1415926535898
		rad()
		max()
		floor()
		ult()
		cos()
		tointeger()
		fmod()
		sin()
		ceil()
	}
	widget = {
		setListSelected()
		setImage()
		setButtonCheckedImages()
		setImageRotation()
		setButtonImage()
		getListSelected()
		itemGridItems()
		addListItem()
		removeListItem()
		setButtonImages()
		blur()
		getData()
		setOptionVisible()
		playSound()
		setChecked()
		getSelectedOption()
		setFontColor()
		setSize()
		setOptionEnabled()
		clearListItems()
		setPosition()
		setProgress()
		getText()
		getSliderValue()
		setButtonEnabled()
		setButtonOverlayImage()
		setData()
		setSelectedOption()
		focus()
		getSize()
		setImageScale()
		setVisible()
		getPosition()
		setText()
		getChecked()
	}
	xpcall()
	setmetatable()
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	status = {
		removeEphemeralEffect()
		resetResource()
		addPersistentEffect()
		addEphemeralEffect()
		resourceMax()
		addPersistentEffects()
		clearEphemeralEffects()
		statPositive()
		modifyResource()
		statusProperty()
		resourcePercentage()
		resource()
		isResource()
		setResourcePercentage()
		getPersistentEffects()
		resourcePositive()
		clearPersistentEffects()
		giveResource()
		overConsumeResource()
		damageTakenSince()
		activeUniqueStatusEffectSummary()
		addEphemeralEffects()
		setStatusProperty()
		resourceLocked()
		modifyResourcePercentage()
		stat()
		clearAllPersistentEffects()
		setResourceLocked()
		resetAllResources()
		resourceNames()
		setPersistentEffects()
		inflictedDamageSince()
		consumeResource()
		inflictedHitsSince()
		setResource()
	}
	utf8 = {
		charpattern = "[
[03:47:49.398] [Warn] 	coroutine = {
		wrap()
		resume()
		create()
		isyieldable()
		status()
		running()
		yield()
	}
	jarray()
	type()
	init()
	require()
	table = {
		insert()
		unpack()
		pack()
		concat()
		sort()
		move()
		remove()
	}
	_VERSION = "Lua 5.3"
	update()
	rawequal()
	world = {
		isMonster()
		entityPortrait()
		entityQuery()
		itemDropQuery()
		entityVelocity()
		damageTiles()
		entityHealth()
		debugPoint()
		debugLine()
		entityExists()
		entityUniqueId()
		timeOfDay()
		entityGender()
		entityAggressive()
		magnitude()
		mod()
		platformerPathStart()
		containerItemAt()
		breathable()
		entityHasCountOfItem()
		npcType()
		sendEntityMessage()
		liquidAt()
		liquidAlongLine()
		isTileProtected()
		destroyLiquid()
		spawnLiquid()
		isNpc()
		getProperty()
		gravity()
		entityMoney()
		objectLineQuery()
		spawnMonster()
		lineCollision()
		lineTileCollision()
		rectCollision()
		getObjectParameter()
		entityHandItem()
		setProperty()
		entityHandItemDescriptor()
		time()
		placeMaterial()
		entityName()
		findUniqueEntity()
		threatLevel()
		placeObject()
		spawnTreasure()
		spawnVehicle()
		damageTileArea()
		windLevel()
		tileIsOccupied()
		containerTakeAt()
		loungeableOccupied()
		resolvePolyCollision()
		nearestTo()
		spawnStagehand()
		polyCollision()
		containerOpen()
		pointCollision()
		distance()
		rectTileCollision()
		debugPoly()
		pointTileCollision()
		containerStackItems()
		collisionBlocksAlongLine()
		entityDamageTeam()
		containerAvailable()
		containerItemApply()
		farmableStage()
		containerSize()
		polyContains()
		stagehandType()
		containerItemsCanFit()
		placeMod()
		containerTakeNumItemsAt()
		dayLength()
		callScriptedEntity()
		spawnProjectile()
		containerItemsFitWhere()
		npcLineQuery()
		npcQuery()
		containerTakeAll()
		findPlatformerPath()
		entityDescription()
		xwrap()
		spawnItem()
		containerSwapItemsNoCombine()
		containerAddItems()
		objectSpaces()
		playerQuery()
		containerConsumeAt()
		monsterType()
		entityType()
		containerSwapItems()
		debugText()
		day()
		containerPutItemsAt()
		entitySpecies()
		loungeableQuery()
		lightLevel()
		entityCanDamage()
		underground()
		spawnNpc()
		material()
		monsterQuery()
		objectQuery()
		containerConsume()
		entityLineQuery()
		containerClose()
		entityPosition()
		objectAt()
		containerItems()
	}
	tonumber()
	ic = {
		stripColor()
		giveBack()
		renameThis()
		checkStack()
		sortFunc()
		sort()
		itemAmount()
		amountEquipped()
		sort_relative()
		itemConfig()
		searchBox()
		clientVersion = 1
		quickstack()
		searchButton()
		renameButton()
		lock()
		getQuality()
	}
	assert()
	rawset()
	getmetatable()
	string = {
		rep()
		gmatch()
		reverse()
		pack()
		char()
		sub()
		format()
		byte()
		match()
		dump()
		find()
		unpack()
		packsize()
		upper()
		gsub()
		lower()
		len()
	}
	pcall()
	player = {
		consumeItemWithParameter()
		shipUpgrades()
		altHandItemTags()
		upgradeShip()
		serverUuid()
		gender()
		worldId()
		equippedTech()
		completeMission()
		inventoryTags()
		removeEssentialItem()
		hasItem()
		recordEvent()
		addBookmark()
		lounge()
		cleanupItems()
		consumeItem()
		makeTechUnavailable()
		setUniverseFlag()
		giveBlueprint()
		hasItemWithParameter()
		species()
		playCinematic()
		altHandItem()
		primaryHandItemTags()
		availableTechs()
		enabledTechs()
		enableTech()
		giveItem()
		playTime()
		setIntroComplete()
		essentialItem()
		ownShipWorldId()
		makeTechAvailable()
		warp()
		equipTech()
		startQuest()
		enableMission()
		hasQuest()
		itemsWithTag()
		isLounging()
		primaryHandItem()
		confirm()
		hasCompletedQuest()
		hasCountOfItem()
		equippedItem()
		setEquippedItem()
		radioMessage()
		giveEssentialItem()
		introComplete()
		canStartQuest()
		consumeTaggedItem()
		getItemWithParameter()
	}
	config = {
		getParameter()
	}
	root = {
		questConfig()
		treeFoliageDirectory()
		getConfigurationPath()
		loadVersionedJson()
		materialHealth()
		tenantConfig()
		itemConfig()
		materialMiningSound()
		projectileConfig()
		imageSpaces()
		techType()
		createTreasure()
		materialFootstepSound()
		itemHasTag()
		imageSize()
		treeStemDirectory()
		npcPortrait()
		hasTech()
		getMatchingTenants()
		getConfiguration()
		createItem()
		generateName()
		setConfiguration()
		techConfig()
		materialPath()
		makeCurrentVersionedJson()
		monsterMovementSettings()
		isTreasurePool()
		itemTags()
		itemType()
		evalFunction()
		monsterSkillParameter()
		assetJson()
		setConfigurationPath()
		monsterPortrait()
		recipesForItem()
		createBiome()
		behaviorModule()
		liquidStatusEffects()
		npcConfig()
		nonEmptyRegion()
		evalFunction2()
		projectileGravityMultiplier()
		npcVariant()
	}
	math = {
		tan()
		atan()
		modf()
		exp()
		type()
		acos()
		abs()
		mininteger = -9223372036854775808
		maxinteger = 9223372036854775807
		deg()
		asin()
		randomseed()
		random()
		sqrt()
		huge = inf
		min()
		log()
		pi = 3.1415926535898
		rad()
		max()
		floor()
		ult()
		cos()
		tointeger()
		fmod()
		sin()
		ceil()
	}
	widget = {
		setListSelected()
		setImage()
		setButtonCheckedImages()
		setImageRotation()
		setButtonImage()
		getListSelected()
		itemGridItems()
		addListItem()
		removeListItem()
		setButtonImages()
		blur()
		getData()
		setOptionVisible()
		playSound()
		setChecked()
		getSelectedOption()
		setFontColor()
		setSize()
		setOptionEnabled()
		clearListItems()
		setPosition()
		setProgress()
		getText()
		getSliderValue()
		setButtonEnabled()
		setButtonOverlayImage()
		setData()
		setSelectedOption()
		focus()
		getSize()
		setImageScale()
		setVisible()
		getPosition()
		setText()
		getChecked()
	}
	xpcall()
	setmetatable()
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	status = {
		removeEphemeralEffect()
		resetResource()
		addPersistentEffect()
		addEphemeralEffect()
		resourceMax()
		addPersistentEffects()
		clearEphemeralEffects()
		statPositive()
		modifyResource()
		statusProperty()
		resourcePercentage()
		resource()
		isResource()
		setResourcePercentage()
		getPersistentEffects()
		resourcePositive()
		clearPersistentEffects()
		giveResource()
		overConsumeResource()
		damageTakenSince()
		activeUniqueStatusEffectSummary()
		addEphemeralEffects()
		setStatusProperty()
		resourceLocked()
		modifyResourcePercentage()
		stat()
		clearAllPersistentEffects()
		setResourceLocked()
		resetAllResources()
		resourceNames()
		setPersistentEffects()
		inflictedDamageSince()
		consumeResource()
		inflictedHitsSince()
		setResource()
	}
	utf8 = {
		charpattern = "[
[03:47:54.733] [Warn] 	coroutine = {
		wrap()
		resume()
		create()
		isyieldable()
		status()
		running()
		yield()
	}
	jarray()
	type()
	init()
	require()
	table = {
		insert()
		unpack()
		pack()
		concat()
		sort()
		move()
		remove()
	}
	_VERSION = "Lua 5.3"
	update()
	rawequal()
	world = {
		isMonster()
		entityPortrait()
		entityQuery()
		itemDropQuery()
		entityVelocity()
		damageTiles()
		entityHealth()
		debugPoint()
		debugLine()
		entityExists()
		entityUniqueId()
		timeOfDay()
		entityGender()
		entityAggressive()
		magnitude()
		mod()
		platformerPathStart()
		containerItemAt()
		breathable()
		entityHasCountOfItem()
		npcType()
		sendEntityMessage()
		liquidAt()
		liquidAlongLine()
		isTileProtected()
		destroyLiquid()
		spawnLiquid()
		isNpc()
		getProperty()
		gravity()
		entityMoney()
		objectLineQuery()
		spawnMonster()
		lineCollision()
		lineTileCollision()
		rectCollision()
		getObjectParameter()
		entityHandItem()
		setProperty()
		entityHandItemDescriptor()
		time()
		placeMaterial()
		entityName()
		findUniqueEntity()
		threatLevel()
		placeObject()
		spawnTreasure()
		spawnVehicle()
		damageTileArea()
		windLevel()
		tileIsOccupied()
		containerTakeAt()
		loungeableOccupied()
		resolvePolyCollision()
		nearestTo()
		spawnStagehand()
		polyCollision()
		containerOpen()
		pointCollision()
		distance()
		rectTileCollision()
		debugPoly()
		pointTileCollision()
		containerStackItems()
		collisionBlocksAlongLine()
		entityDamageTeam()
		containerAvailable()
		containerItemApply()
		farmableStage()
		containerSize()
		polyContains()
		stagehandType()
		containerItemsCanFit()
		placeMod()
		containerTakeNumItemsAt()
		dayLength()
		callScriptedEntity()
		spawnProjectile()
		containerItemsFitWhere()
		npcLineQuery()
		npcQuery()
		containerTakeAll()
		findPlatformerPath()
		entityDescription()
		xwrap()
		spawnItem()
		containerSwapItemsNoCombine()
		containerAddItems()
		objectSpaces()
		playerQuery()
		containerConsumeAt()
		monsterType()
		entityType()
		containerSwapItems()
		debugText()
		day()
		containerPutItemsAt()
		entitySpecies()
		loungeableQuery()
		lightLevel()
		entityCanDamage()
		underground()
		spawnNpc()
		material()
		monsterQuery()
		objectQuery()
		containerConsume()
		entityLineQuery()
		containerClose()
		entityPosition()
		objectAt()
		containerItems()
	}
	tonumber()
	ic = {
		stripColor()
		giveBack()
		renameThis()
		checkStack()
		sortFunc()
		sort()
		itemAmount()
		amountEquipped()
		sort_relative()
		itemConfig()
		searchBox()
		clientVersion = 1
		quickstack()
		searchButton()
		renameButton()
		lock()
		getQuality()
	}
	assert()
	rawset()
	getmetatable()
	string = {
		rep()
		gmatch()
		reverse()
		pack()
		char()
		sub()
		format()
		byte()
		match()
		dump()
		find()
		unpack()
		packsize()
		upper()
		gsub()
		lower()
		len()
	}
	pcall()
	player = {
		consumeItemWithParameter()
		shipUpgrades()
		altHandItemTags()
		upgradeShip()
		serverUuid()
		gender()
		worldId()
		equippedTech()
		completeMission()
		inventoryTags()
		removeEssentialItem()
		hasItem()
		recordEvent()
		addBookmark()
		lounge()
		cleanupItems()
		consumeItem()
		makeTechUnavailable()
		setUniverseFlag()
		giveBlueprint()
		hasItemWithParameter()
		species()
		playCinematic()
		altHandItem()
		primaryHandItemTags()
		availableTechs()
		enabledTechs()
		enableTech()
		giveItem()
		playTime()
		setIntroComplete()
		essentialItem()
		ownShipWorldId()
		makeTechAvailable()
		warp()
		equipTech()
		startQuest()
		enableMission()
		hasQuest()
		itemsWithTag()
		isLounging()
		primaryHandItem()
		confirm()
		hasCompletedQuest()
		hasCountOfItem()
		equippedItem()
		setEquippedItem()
		radioMessage()
		giveEssentialItem()
		introComplete()
		canStartQuest()
		consumeTaggedItem()
		getItemWithParameter()
	}
	config = {
		getParameter()
	}
	root = {
		questConfig()
		treeFoliageDirectory()
		getConfigurationPath()
		loadVersionedJson()
		materialHealth()
		tenantConfig()
		itemConfig()
		materialMiningSound()
		projectileConfig()
		imageSpaces()
		techType()
		createTreasure()
		materialFootstepSound()
		itemHasTag()
		imageSize()
		treeStemDirectory()
		npcPortrait()
		hasTech()
		getMatchingTenants()
		getConfiguration()
		createItem()
		generateName()
		setConfiguration()
		techConfig()
		materialPath()
		makeCurrentVersionedJson()
		monsterMovementSettings()
		isTreasurePool()
		itemTags()
		itemType()
		evalFunction()
		monsterSkillParameter()
		assetJson()
		setConfigurationPath()
		monsterPortrait()
		recipesForItem()
		createBiome()
		behaviorModule()
		liquidStatusEffects()
		npcConfig()
		nonEmptyRegion()
		evalFunction2()
		projectileGravityMultiplier()
		npcVariant()
	}
	math = {
		tan()
		atan()
		modf()
		exp()
		type()
		acos()
		abs()
		mininteger = -9223372036854775808
		maxinteger = 9223372036854775807
		deg()
		asin()
		randomseed()
		random()
		sqrt()
		huge = inf
		min()
		log()
		pi = 3.1415926535898
		rad()
		max()
		floor()
		ult()
		cos()
		tointeger()
		fmod()
		sin()
		ceil()
	}
	widget = {
		setListSelected()
		setImage()
		setButtonCheckedImages()
		setImageRotation()
		setButtonImage()
		getListSelected()
		itemGridItems()
		addListItem()
		removeListItem()
		setButtonImages()
		blur()
		getData()
		setOptionVisible()
		playSound()
		setChecked()
		getSelectedOption()
		setFontColor()
		setSize()
		setOptionEnabled()
		clearListItems()
		setPosition()
		setProgress()
		getText()
		getSliderValue()
		setButtonEnabled()
		setButtonOverlayImage()
		setData()
		setSelectedOption()
		focus()
		getSize()
		setImageScale()
		setVisible()
		getPosition()
		setText()
		getChecked()
	}
	xpcall()
	setmetatable()
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	status = {
		removeEphemeralEffect()
		resetResource()
		addPersistentEffect()
		addEphemeralEffect()
		resourceMax()
		addPersistentEffects()
		clearEphemeralEffects()
		statPositive()
		modifyResource()
		statusProperty()
		resourcePercentage()
		resource()
		isResource()
		setResourcePercentage()
		getPersistentEffects()
		resourcePositive()
		clearPersistentEffects()
		giveResource()
		overConsumeResource()
		damageTakenSince()
		activeUniqueStatusEffectSummary()
		addEphemeralEffects()
		setStatusProperty()
		resourceLocked()
		modifyResourcePercentage()
		stat()
		clearAllPersistentEffects()
		setResourceLocked()
		resetAllResources()
		resourceNames()
		setPersistentEffects()
		inflictedDamageSince()
		consumeResource()
		inflictedHitsSince()
		setResource()
	}
	utf8 = {
		charpattern = "[
[03:48:10.901] [Warn] 	coroutine = {
		wrap()
		resume()
		create()
		isyieldable()
		status()
		running()
		yield()
	}
	jarray()
	type()
	init()
	require()
	table = {
		insert()
		unpack()
		pack()
		concat()
		sort()
		move()
		remove()
	}
	_VERSION = "Lua 5.3"
	update()
	rawequal()
	world = {
		isMonster()
		entityPortrait()
		entityQuery()
		itemDropQuery()
		entityVelocity()
		damageTiles()
		entityHealth()
		debugPoint()
		debugLine()
		entityExists()
		entityUniqueId()
		timeOfDay()
		entityGender()
		entityAggressive()
		magnitude()
		mod()
		platformerPathStart()
		containerItemAt()
		breathable()
		entityHasCountOfItem()
		npcType()
		sendEntityMessage()
		liquidAt()
		liquidAlongLine()
		isTileProtected()
		destroyLiquid()
		spawnLiquid()
		isNpc()
		getProperty()
		gravity()
		entityMoney()
		objectLineQuery()
		spawnMonster()
		lineCollision()
		lineTileCollision()
		rectCollision()
		getObjectParameter()
		entityHandItem()
		setProperty()
		entityHandItemDescriptor()
		time()
		placeMaterial()
		entityName()
		findUniqueEntity()
		threatLevel()
		placeObject()
		spawnTreasure()
		spawnVehicle()
		damageTileArea()
		windLevel()
		tileIsOccupied()
		containerTakeAt()
		loungeableOccupied()
		resolvePolyCollision()
		nearestTo()
		spawnStagehand()
		polyCollision()
		containerOpen()
		pointCollision()
		distance()
		rectTileCollision()
		debugPoly()
		pointTileCollision()
		containerStackItems()
		collisionBlocksAlongLine()
		entityDamageTeam()
		containerAvailable()
		containerItemApply()
		farmableStage()
		containerSize()
		polyContains()
		stagehandType()
		containerItemsCanFit()
		placeMod()
		containerTakeNumItemsAt()
		dayLength()
		callScriptedEntity()
		spawnProjectile()
		containerItemsFitWhere()
		npcLineQuery()
		npcQuery()
		containerTakeAll()
		findPlatformerPath()
		entityDescription()
		xwrap()
		spawnItem()
		containerSwapItemsNoCombine()
		containerAddItems()
		objectSpaces()
		playerQuery()
		containerConsumeAt()
		monsterType()
		entityType()
		containerSwapItems()
		debugText()
		day()
		containerPutItemsAt()
		entitySpecies()
		loungeableQuery()
		lightLevel()
		entityCanDamage()
		underground()
		spawnNpc()
		material()
		monsterQuery()
		objectQuery()
		containerConsume()
		entityLineQuery()
		containerClose()
		entityPosition()
		objectAt()
		containerItems()
	}
	tonumber()
	ic = {
		stripColor()
		giveBack()
		renameThis()
		checkStack()
		sortFunc()
		sort()
		itemAmount()
		amountEquipped()
		sort_relative()
		itemConfig()
		searchBox()
		clientVersion = 1
		quickstack()
		searchButton()
		renameButton()
		lock()
		getQuality()
	}
	assert()
	rawset()
	getmetatable()
	string = {
		rep()
		gmatch()
		reverse()
		pack()
		char()
		sub()
		format()
		byte()
		match()
		dump()
		find()
		unpack()
		packsize()
		upper()
		gsub()
		lower()
		len()
	}
	pcall()
	player = {
		consumeItemWithParameter()
		shipUpgrades()
		altHandItemTags()
		upgradeShip()
		serverUuid()
		gender()
		worldId()
		equippedTech()
		completeMission()
		inventoryTags()
		removeEssentialItem()
		hasItem()
		recordEvent()
		addBookmark()
		lounge()
		cleanupItems()
		consumeItem()
		makeTechUnavailable()
		setUniverseFlag()
		giveBlueprint()
		hasItemWithParameter()
		species()
		playCinematic()
		altHandItem()
		primaryHandItemTags()
		availableTechs()
		enabledTechs()
		enableTech()
		giveItem()
		playTime()
		setIntroComplete()
		essentialItem()
		ownShipWorldId()
		makeTechAvailable()
		warp()
		equipTech()
		startQuest()
		enableMission()
		hasQuest()
		itemsWithTag()
		isLounging()
		primaryHandItem()
		confirm()
		hasCompletedQuest()
		hasCountOfItem()
		equippedItem()
		setEquippedItem()
		radioMessage()
		giveEssentialItem()
		introComplete()
		canStartQuest()
		consumeTaggedItem()
		getItemWithParameter()
	}
	config = {
		getParameter()
	}
	root = {
		questConfig()
		treeFoliageDirectory()
		getConfigurationPath()
		loadVersionedJson()
		materialHealth()
		tenantConfig()
		itemConfig()
		materialMiningSound()
		projectileConfig()
		imageSpaces()
		techType()
		createTreasure()
		materialFootstepSound()
		itemHasTag()
		imageSize()
		treeStemDirectory()
		npcPortrait()
		hasTech()
		getMatchingTenants()
		getConfiguration()
		createItem()
		generateName()
		setConfiguration()
		techConfig()
		materialPath()
		makeCurrentVersionedJson()
		monsterMovementSettings()
		isTreasurePool()
		itemTags()
		itemType()
		evalFunction()
		monsterSkillParameter()
		assetJson()
		setConfigurationPath()
		monsterPortrait()
		recipesForItem()
		createBiome()
		behaviorModule()
		liquidStatusEffects()
		npcConfig()
		nonEmptyRegion()
		evalFunction2()
		projectileGravityMultiplier()
		npcVariant()
	}
	math = {
		tan()
		atan()
		modf()
		exp()
		type()
		acos()
		abs()
		mininteger = -9223372036854775808
		maxinteger = 9223372036854775807
		deg()
		asin()
		randomseed()
		random()
		sqrt()
		huge = inf
		min()
		log()
		pi = 3.1415926535898
		rad()
		max()
		floor()
		ult()
		cos()
		tointeger()
		fmod()
		sin()
		ceil()
	}
	widget = {
		setListSelected()
		setImage()
		setButtonCheckedImages()
		setImageRotation()
		setButtonImage()
		getListSelected()
		itemGridItems()
		addListItem()
		removeListItem()
		setButtonImages()
		blur()
		getData()
		setOptionVisible()
		playSound()
		setChecked()
		getSelectedOption()
		setFontColor()
		setSize()
		setOptionEnabled()
		clearListItems()
		setPosition()
		setProgress()
		getText()
		getSliderValue()
		setButtonEnabled()
		setButtonOverlayImage()
		setData()
		setSelectedOption()
		focus()
		getSize()
		setImageScale()
		setVisible()
		getPosition()
		setText()
		getChecked()
	}
	xpcall()
	setmetatable()
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	status = {
		removeEphemeralEffect()
		resetResource()
		addPersistentEffect()
		addEphemeralEffect()
		resourceMax()
		addPersistentEffects()
		clearEphemeralEffects()
		statPositive()
		modifyResource()
		statusProperty()
		resourcePercentage()
		resource()
		isResource()
		setResourcePercentage()
		getPersistentEffects()
		resourcePositive()
		clearPersistentEffects()
		giveResource()
		overConsumeResource()
		damageTakenSince()
		activeUniqueStatusEffectSummary()
		addEphemeralEffects()
		setStatusProperty()
		resourceLocked()
		modifyResourcePercentage()
		stat()
		clearAllPersistentEffects()
		setResourceLocked()
		resetAllResources()
		resourceNames()
		setPersistentEffects()
		inflictedDamageSince()
		consumeResource()
		inflictedHitsSince()
		setResource()
	}
	utf8 = {
		charpattern = "[
[03:48:12.134] [Warn] 	coroutine = {
		wrap()
		resume()
		create()
		isyieldable()
		status()
		running()
		yield()
	}
	jarray()
	type()
	init()
	require()
	table = {
		insert()
		unpack()
		pack()
		concat()
		sort()
		move()
		remove()
	}
	_VERSION = "Lua 5.3"
	update()
	rawequal()
	world = {
		isMonster()
		entityPortrait()
		entityQuery()
		itemDropQuery()
		entityVelocity()
		damageTiles()
		entityHealth()
		debugPoint()
		debugLine()
		entityExists()
		entityUniqueId()
		timeOfDay()
		entityGender()
		entityAggressive()
		magnitude()
		mod()
		platformerPathStart()
		containerItemAt()
		breathable()
		entityHasCountOfItem()
		npcType()
		sendEntityMessage()
		liquidAt()
		liquidAlongLine()
		isTileProtected()
		destroyLiquid()
		spawnLiquid()
		isNpc()
		getProperty()
		gravity()
		entityMoney()
		objectLineQuery()
		spawnMonster()
		lineCollision()
		lineTileCollision()
		rectCollision()
		getObjectParameter()
		entityHandItem()
		setProperty()
		entityHandItemDescriptor()
		time()
		placeMaterial()
		entityName()
		findUniqueEntity()
		threatLevel()
		placeObject()
		spawnTreasure()
		spawnVehicle()
		damageTileArea()
		windLevel()
		tileIsOccupied()
		containerTakeAt()
		loungeableOccupied()
		resolvePolyCollision()
		nearestTo()
		spawnStagehand()
		polyCollision()
		containerOpen()
		pointCollision()
		distance()
		rectTileCollision()
		debugPoly()
		pointTileCollision()
		containerStackItems()
		collisionBlocksAlongLine()
		entityDamageTeam()
		containerAvailable()
		containerItemApply()
		farmableStage()
		containerSize()
		polyContains()
		stagehandType()
		containerItemsCanFit()
		placeMod()
		containerTakeNumItemsAt()
		dayLength()
		callScriptedEntity()
		spawnProjectile()
		containerItemsFitWhere()
		npcLineQuery()
		npcQuery()
		containerTakeAll()
		findPlatformerPath()
		entityDescription()
		xwrap()
		spawnItem()
		containerSwapItemsNoCombine()
		containerAddItems()
		objectSpaces()
		playerQuery()
		containerConsumeAt()
		monsterType()
		entityType()
		containerSwapItems()
		debugText()
		day()
		containerPutItemsAt()
		entitySpecies()
		loungeableQuery()
		lightLevel()
		entityCanDamage()
		underground()
		spawnNpc()
		material()
		monsterQuery()
		objectQuery()
		containerConsume()
		entityLineQuery()
		containerClose()
		entityPosition()
		objectAt()
		containerItems()
	}
	tonumber()
	ic = {
		stripColor()
		giveBack()
		renameThis()
		checkStack()
		sortFunc()
		sort()
		itemAmount()
		amountEquipped()
		sort_relative()
		itemConfig()
		searchBox()
		clientVersion = 1
		quickstack()
		searchButton()
		renameButton()
		lock()
		getQuality()
	}
	assert()
	rawset()
	getmetatable()
	string = {
		rep()
		gmatch()
		reverse()
		pack()
		char()
		sub()
		format()
		byte()
		match()
		dump()
		find()
		unpack()
		packsize()
		upper()
		gsub()
		lower()
		len()
	}
	pcall()
	player = {
		consumeItemWithParameter()
		shipUpgrades()
		altHandItemTags()
		upgradeShip()
		serverUuid()
		gender()
		worldId()
		equippedTech()
		completeMission()
		inventoryTags()
		removeEssentialItem()
		hasItem()
		recordEvent()
		addBookmark()
		lounge()
		cleanupItems()
		consumeItem()
		makeTechUnavailable()
		setUniverseFlag()
		giveBlueprint()
		hasItemWithParameter()
		species()
		playCinematic()
		altHandItem()
		primaryHandItemTags()
		availableTechs()
		enabledTechs()
		enableTech()
		giveItem()
		playTime()
		setIntroComplete()
		essentialItem()
		ownShipWorldId()
		makeTechAvailable()
		warp()
		equipTech()
		startQuest()
		enableMission()
		hasQuest()
		itemsWithTag()
		isLounging()
		primaryHandItem()
		confirm()
		hasCompletedQuest()
		hasCountOfItem()
		equippedItem()
		setEquippedItem()
		radioMessage()
		giveEssentialItem()
		introComplete()
		canStartQuest()
		consumeTaggedItem()
		getItemWithParameter()
	}
	config = {
		getParameter()
	}
	root = {
		questConfig()
		treeFoliageDirectory()
		getConfigurationPath()
		loadVersionedJson()
		materialHealth()
		tenantConfig()
		itemConfig()
		materialMiningSound()
		projectileConfig()
		imageSpaces()
		techType()
		createTreasure()
		materialFootstepSound()
		itemHasTag()
		imageSize()
		treeStemDirectory()
		npcPortrait()
		hasTech()
		getMatchingTenants()
		getConfiguration()
		createItem()
		generateName()
		setConfiguration()
		techConfig()
		materialPath()
		makeCurrentVersionedJson()
		monsterMovementSettings()
		isTreasurePool()
		itemTags()
		itemType()
		evalFunction()
		monsterSkillParameter()
		assetJson()
		setConfigurationPath()
		monsterPortrait()
		recipesForItem()
		createBiome()
		behaviorModule()
		liquidStatusEffects()
		npcConfig()
		nonEmptyRegion()
		evalFunction2()
		projectileGravityMultiplier()
		npcVariant()
	}
	math = {
		tan()
		atan()
		modf()
		exp()
		type()
		acos()
		abs()
		mininteger = -9223372036854775808
		maxinteger = 9223372036854775807
		deg()
		asin()
		randomseed()
		random()
		sqrt()
		huge = inf
		min()
		log()
		pi = 3.1415926535898
		rad()
		max()
		floor()
		ult()
		cos()
		tointeger()
		fmod()
		sin()
		ceil()
	}
	widget = {
		setListSelected()
		setImage()
		setButtonCheckedImages()
		setImageRotation()
		setButtonImage()
		getListSelected()
		itemGridItems()
		addListItem()
		removeListItem()
		setButtonImages()
		blur()
		getData()
		setOptionVisible()
		playSound()
		setChecked()
		getSelectedOption()
		setFontColor()
		setSize()
		setOptionEnabled()
		clearListItems()
		setPosition()
		setProgress()
		getText()
		getSliderValue()
		setButtonEnabled()
		setButtonOverlayImage()
		setData()
		setSelectedOption()
		focus()
		getSize()
		setImageScale()
		setVisible()
		getPosition()
		setText()
		getChecked()
	}
	xpcall()
	setmetatable()
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	status = {
		removeEphemeralEffect()
		resetResource()
		addPersistentEffect()
		addEphemeralEffect()
		resourceMax()
		addPersistentEffects()
		clearEphemeralEffects()
		statPositive()
		modifyResource()
		statusProperty()
		resourcePercentage()
		resource()
		isResource()
		setResourcePercentage()
		getPersistentEffects()
		resourcePositive()
		clearPersistentEffects()
		giveResource()
		overConsumeResource()
		damageTakenSince()
		activeUniqueStatusEffectSummary()
		addEphemeralEffects()
		setStatusProperty()
		resourceLocked()
		modifyResourcePercentage()
		stat()
		clearAllPersistentEffects()
		setResourceLocked()
		resetAllResources()
		resourceNames()
		setPersistentEffects()
		inflictedDamageSince()
		consumeResource()
		inflictedHitsSince()
		setResource()
	}
	utf8 = {
		charpattern = "[
[03:48:16.608] [Warn] 	coroutine = {
		wrap()
		resume()
		create()
		isyieldable()
		status()
		running()
		yield()
	}
	jarray()
	type()
	init()
	require()
	table = {
		insert()
		unpack()
		pack()
		concat()
		sort()
		move()
		remove()
	}
	_VERSION = "Lua 5.3"
	update()
	rawequal()
	world = {
		isMonster()
		entityPortrait()
		entityQuery()
		itemDropQuery()
		entityVelocity()
		damageTiles()
		entityHealth()
		debugPoint()
		debugLine()
		entityExists()
		entityUniqueId()
		timeOfDay()
		entityGender()
		entityAggressive()
		magnitude()
		mod()
		platformerPathStart()
		containerItemAt()
		breathable()
		entityHasCountOfItem()
		npcType()
		sendEntityMessage()
		liquidAt()
		liquidAlongLine()
		isTileProtected()
		destroyLiquid()
		spawnLiquid()
		isNpc()
		getProperty()
		gravity()
		entityMoney()
		objectLineQuery()
		spawnMonster()
		lineCollision()
		lineTileCollision()
		rectCollision()
		getObjectParameter()
		entityHandItem()
		setProperty()
		entityHandItemDescriptor()
		time()
		placeMaterial()
		entityName()
		findUniqueEntity()
		threatLevel()
		placeObject()
		spawnTreasure()
		spawnVehicle()
		damageTileArea()
		windLevel()
		tileIsOccupied()
		containerTakeAt()
		loungeableOccupied()
		resolvePolyCollision()
		nearestTo()
		spawnStagehand()
		polyCollision()
		containerOpen()
		pointCollision()
		distance()
		rectTileCollision()
		debugPoly()
		pointTileCollision()
		containerStackItems()
		collisionBlocksAlongLine()
		entityDamageTeam()
		containerAvailable()
		containerItemApply()
		farmableStage()
		containerSize()
		polyContains()
		stagehandType()
		containerItemsCanFit()
		placeMod()
		containerTakeNumItemsAt()
		dayLength()
		callScriptedEntity()
		spawnProjectile()
		containerItemsFitWhere()
		npcLineQuery()
		npcQuery()
		containerTakeAll()
		findPlatformerPath()
		entityDescription()
		xwrap()
		spawnItem()
		containerSwapItemsNoCombine()
		containerAddItems()
		objectSpaces()
		playerQuery()
		containerConsumeAt()
		monsterType()
		entityType()
		containerSwapItems()
		debugText()
		day()
		containerPutItemsAt()
		entitySpecies()
		loungeableQuery()
		lightLevel()
		entityCanDamage()
		underground()
		spawnNpc()
		material()
		monsterQuery()
		objectQuery()
		containerConsume()
		entityLineQuery()
		containerClose()
		entityPosition()
		objectAt()
		containerItems()
	}
	tonumber()
	ic = {
		stripColor()
		giveBack()
		renameThis()
		checkStack()
		sortFunc()
		sort()
		itemAmount()
		amountEquipped()
		sort_relative()
		itemConfig()
		searchBox()
		clientVersion = 1
		quickstack()
		searchButton()
		renameButton()
		lock()
		getQuality()
	}
	assert()
	rawset()
	getmetatable()
	string = {
		rep()
		gmatch()
		reverse()
		pack()
		char()
		sub()
		format()
		byte()
		match()
		dump()
		find()
		unpack()
		packsize()
		upper()
		gsub()
		lower()
		len()
	}
	pcall()
	player = {
		consumeItemWithParameter()
		shipUpgrades()
		altHandItemTags()
		upgradeShip()
		serverUuid()
		gender()
		worldId()
		equippedTech()
		completeMission()
		inventoryTags()
		removeEssentialItem()
		hasItem()
		recordEvent()
		addBookmark()
		lounge()
		cleanupItems()
		consumeItem()
		makeTechUnavailable()
		setUniverseFlag()
		giveBlueprint()
		hasItemWithParameter()
		species()
		playCinematic()
		altHandItem()
		primaryHandItemTags()
		availableTechs()
		enabledTechs()
		enableTech()
		giveItem()
		playTime()
		setIntroComplete()
		essentialItem()
		ownShipWorldId()
		makeTechAvailable()
		warp()
		equipTech()
		startQuest()
		enableMission()
		hasQuest()
		itemsWithTag()
		isLounging()
		primaryHandItem()
		confirm()
		hasCompletedQuest()
		hasCountOfItem()
		equippedItem()
		setEquippedItem()
		radioMessage()
		giveEssentialItem()
		introComplete()
		canStartQuest()
		consumeTaggedItem()
		getItemWithParameter()
	}
	config = {
		getParameter()
	}
	root = {
		questConfig()
		treeFoliageDirectory()
		getConfigurationPath()
		loadVersionedJson()
		materialHealth()
		tenantConfig()
		itemConfig()
		materialMiningSound()
		projectileConfig()
		imageSpaces()
		techType()
		createTreasure()
		materialFootstepSound()
		itemHasTag()
		imageSize()
		treeStemDirectory()
		npcPortrait()
		hasTech()
		getMatchingTenants()
		getConfiguration()
		createItem()
		generateName()
		setConfiguration()
		techConfig()
		materialPath()
		makeCurrentVersionedJson()
		monsterMovementSettings()
		isTreasurePool()
		itemTags()
		itemType()
		evalFunction()
		monsterSkillParameter()
		assetJson()
		setConfigurationPath()
		monsterPortrait()
		recipesForItem()
		createBiome()
		behaviorModule()
		liquidStatusEffects()
		npcConfig()
		nonEmptyRegion()
		evalFunction2()
		projectileGravityMultiplier()
		npcVariant()
	}
	math = {
		tan()
		atan()
		modf()
		exp()
		type()
		acos()
		abs()
		mininteger = -9223372036854775808
		maxinteger = 9223372036854775807
		deg()
		asin()
		randomseed()
		random()
		sqrt()
		huge = inf
		min()
		log()
		pi = 3.1415926535898
		rad()
		max()
		floor()
		ult()
		cos()
		tointeger()
		fmod()
		sin()
		ceil()
	}
	widget = {
		setListSelected()
		setImage()
		setButtonCheckedImages()
		setImageRotation()
		setButtonImage()
		getListSelected()
		itemGridItems()
		addListItem()
		removeListItem()
		setButtonImages()
		blur()
		getData()
		setOptionVisible()
		playSound()
		setChecked()
		getSelectedOption()
		setFontColor()
		setSize()
		setOptionEnabled()
		clearListItems()
		setPosition()
		setProgress()
		getText()
		getSliderValue()
		setButtonEnabled()
		setButtonOverlayImage()
		setData()
		setSelectedOption()
		focus()
		getSize()
		setImageScale()
		setVisible()
		getPosition()
		setText()
		getChecked()
	}
	xpcall()
	setmetatable()
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	status = {
		removeEphemeralEffect()
		resetResource()
		addPersistentEffect()
		addEphemeralEffect()
		resourceMax()
		addPersistentEffects()
		clearEphemeralEffects()
		statPositive()
		modifyResource()
		statusProperty()
		resourcePercentage()
		resource()
		isResource()
		setResourcePercentage()
		getPersistentEffects()
		resourcePositive()
		clearPersistentEffects()
		giveResource()
		overConsumeResource()
		damageTakenSince()
		activeUniqueStatusEffectSummary()
		addEphemeralEffects()
		setStatusProperty()
		resourceLocked()
		modifyResourcePercentage()
		stat()
		clearAllPersistentEffects()
		setResourceLocked()
		resetAllResources()
		resourceNames()
		setPersistentEffects()
		inflictedDamageSince()
		consumeResource()
		inflictedHitsSince()
		setResource()
	}
	utf8 = {
		charpattern = "[
[03:48:19.888] [Warn] 	coroutine = {
		wrap()
		resume()
		create()
		isyieldable()
		status()
		running()
		yield()
	}
	jarray()
	type()
	init()
	require()
	table = {
		insert()
		unpack()
		pack()
		concat()
		sort()
		move()
		remove()
	}
	_VERSION = "Lua 5.3"
	update()
	rawequal()
	world = {
		isMonster()
		entityPortrait()
		entityQuery()
		itemDropQuery()
		entityVelocity()
		damageTiles()
		entityHealth()
		debugPoint()
		debugLine()
		entityExists()
		entityUniqueId()
		timeOfDay()
		entityGender()
		entityAggressive()
		magnitude()
		mod()
		platformerPathStart()
		containerItemAt()
		breathable()
		entityHasCountOfItem()
		npcType()
		sendEntityMessage()
		liquidAt()
		liquidAlongLine()
		isTileProtected()
		destroyLiquid()
		spawnLiquid()
		isNpc()
		getProperty()
		gravity()
		entityMoney()
		objectLineQuery()
		spawnMonster()
		lineCollision()
		lineTileCollision()
		rectCollision()
		getObjectParameter()
		entityHandItem()
		setProperty()
		entityHandItemDescriptor()
		time()
		placeMaterial()
		entityName()
		findUniqueEntity()
		threatLevel()
		placeObject()
		spawnTreasure()
		spawnVehicle()
		damageTileArea()
		windLevel()
		tileIsOccupied()
		containerTakeAt()
		loungeableOccupied()
		resolvePolyCollision()
		nearestTo()
		spawnStagehand()
		polyCollision()
		containerOpen()
		pointCollision()
		distance()
		rectTileCollision()
		debugPoly()
		pointTileCollision()
		containerStackItems()
		collisionBlocksAlongLine()
		entityDamageTeam()
		containerAvailable()
		containerItemApply()
		farmableStage()
		containerSize()
		polyContains()
		stagehandType()
		containerItemsCanFit()
		placeMod()
		containerTakeNumItemsAt()
		dayLength()
		callScriptedEntity()
		spawnProjectile()
		containerItemsFitWhere()
		npcLineQuery()
		npcQuery()
		containerTakeAll()
		findPlatformerPath()
		entityDescription()
		xwrap()
		spawnItem()
		containerSwapItemsNoCombine()
		containerAddItems()
		objectSpaces()
		playerQuery()
		containerConsumeAt()
		monsterType()
		entityType()
		containerSwapItems()
		debugText()
		day()
		containerPutItemsAt()
		entitySpecies()
		loungeableQuery()
		lightLevel()
		entityCanDamage()
		underground()
		spawnNpc()
		material()
		monsterQuery()
		objectQuery()
		containerConsume()
		entityLineQuery()
		containerClose()
		entityPosition()
		objectAt()
		containerItems()
	}
	tonumber()
	ic = {
		stripColor()
		giveBack()
		renameThis()
		checkStack()
		sortFunc()
		sort()
		itemAmount()
		amountEquipped()
		sort_relative()
		itemConfig()
		searchBox()
		clientVersion = 1
		quickstack()
		searchButton()
		renameButton()
		lock()
		getQuality()
	}
	assert()
	rawset()
	getmetatable()
	string = {
		rep()
		gmatch()
		reverse()
		pack()
		char()
		sub()
		format()
		byte()
		match()
		dump()
		find()
		unpack()
		packsize()
		upper()
		gsub()
		lower()
		len()
	}
	pcall()
	player = {
		consumeItemWithParameter()
		shipUpgrades()
		altHandItemTags()
		upgradeShip()
		serverUuid()
		gender()
		worldId()
		equippedTech()
		completeMission()
		inventoryTags()
		removeEssentialItem()
		hasItem()
		recordEvent()
		addBookmark()
		lounge()
		cleanupItems()
		consumeItem()
		makeTechUnavailable()
		setUniverseFlag()
		giveBlueprint()
		hasItemWithParameter()
		species()
		playCinematic()
		altHandItem()
		primaryHandItemTags()
		availableTechs()
		enabledTechs()
		enableTech()
		giveItem()
		playTime()
		setIntroComplete()
		essentialItem()
		ownShipWorldId()
		makeTechAvailable()
		warp()
		equipTech()
		startQuest()
		enableMission()
		hasQuest()
		itemsWithTag()
		isLounging()
		primaryHandItem()
		confirm()
		hasCompletedQuest()
		hasCountOfItem()
		equippedItem()
		setEquippedItem()
		radioMessage()
		giveEssentialItem()
		introComplete()
		canStartQuest()
		consumeTaggedItem()
		getItemWithParameter()
	}
	config = {
		getParameter()
	}
	root = {
		questConfig()
		treeFoliageDirectory()
		getConfigurationPath()
		loadVersionedJson()
		materialHealth()
		tenantConfig()
		itemConfig()
		materialMiningSound()
		projectileConfig()
		imageSpaces()
		techType()
		createTreasure()
		materialFootstepSound()
		itemHasTag()
		imageSize()
		treeStemDirectory()
		npcPortrait()
		hasTech()
		getMatchingTenants()
		getConfiguration()
		createItem()
		generateName()
		setConfiguration()
		techConfig()
		materialPath()
		makeCurrentVersionedJson()
		monsterMovementSettings()
		isTreasurePool()
		itemTags()
		itemType()
		evalFunction()
		monsterSkillParameter()
		assetJson()
		setConfigurationPath()
		monsterPortrait()
		recipesForItem()
		createBiome()
		behaviorModule()
		liquidStatusEffects()
		npcConfig()
		nonEmptyRegion()
		evalFunction2()
		projectileGravityMultiplier()
		npcVariant()
	}
	math = {
		tan()
		atan()
		modf()
		exp()
		type()
		acos()
		abs()
		mininteger = -9223372036854775808
		maxinteger = 9223372036854775807
		deg()
		asin()
		randomseed()
		random()
		sqrt()
		huge = inf
		min()
		log()
		pi = 3.1415926535898
		rad()
		max()
		floor()
		ult()
		cos()
		tointeger()
		fmod()
		sin()
		ceil()
	}
	widget = {
		setListSelected()
		setImage()
		setButtonCheckedImages()
		setImageRotation()
		setButtonImage()
		getListSelected()
		itemGridItems()
		addListItem()
		removeListItem()
		setButtonImages()
		blur()
		getData()
		setOptionVisible()
		playSound()
		setChecked()
		getSelectedOption()
		setFontColor()
		setSize()
		setOptionEnabled()
		clearListItems()
		setPosition()
		setProgress()
		getText()
		getSliderValue()
		setButtonEnabled()
		setButtonOverlayImage()
		setData()
		setSelectedOption()
		focus()
		getSize()
		setImageScale()
		setVisible()
		getPosition()
		setText()
		getChecked()
	}
	xpcall()
	setmetatable()
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	status = {
		removeEphemeralEffect()
		resetResource()
		addPersistentEffect()
		addEphemeralEffect()
		resourceMax()
		addPersistentEffects()
		clearEphemeralEffects()
		statPositive()
		modifyResource()
		statusProperty()
		resourcePercentage()
		resource()
		isResource()
		setResourcePercentage()
		getPersistentEffects()
		resourcePositive()
		clearPersistentEffects()
		giveResource()
		overConsumeResource()
		damageTakenSince()
		activeUniqueStatusEffectSummary()
		addEphemeralEffects()
		setStatusProperty()
		resourceLocked()
		modifyResourcePercentage()
		stat()
		clearAllPersistentEffects()
		setResourceLocked()
		resetAllResources()
		resourceNames()
		setPersistentEffects()
		inflictedDamageSince()
		consumeResource()
		inflictedHitsSince()
		setResource()
	}
	utf8 = {
		charpattern = "[
[03:48:52.434] [Warn] 	coroutine = {
		wrap()
		resume()
		create()
		isyieldable()
		status()
		running()
		yield()
	}
	jarray()
	type()
	init()
	require()
	table = {
		insert()
		unpack()
		pack()
		concat()
		sort()
		move()
		remove()
	}
	_VERSION = "Lua 5.3"
	update()
	rawequal()
	world = {
		isMonster()
		entityPortrait()
		entityQuery()
		itemDropQuery()
		entityVelocity()
		damageTiles()
		entityHealth()
		debugPoint()
		debugLine()
		entityExists()
		entityUniqueId()
		timeOfDay()
		entityGender()
		entityAggressive()
		magnitude()
		mod()
		platformerPathStart()
		containerItemAt()
		breathable()
		entityHasCountOfItem()
		npcType()
		sendEntityMessage()
		liquidAt()
		liquidAlongLine()
		isTileProtected()
		destroyLiquid()
		spawnLiquid()
		isNpc()
		getProperty()
		gravity()
		entityMoney()
		objectLineQuery()
		spawnMonster()
		lineCollision()
		lineTileCollision()
		rectCollision()
		getObjectParameter()
		entityHandItem()
		setProperty()
		entityHandItemDescriptor()
		time()
		placeMaterial()
		entityName()
		findUniqueEntity()
		threatLevel()
		placeObject()
		spawnTreasure()
		spawnVehicle()
		damageTileArea()
		windLevel()
		tileIsOccupied()
		containerTakeAt()
		loungeableOccupied()
		resolvePolyCollision()
		nearestTo()
		spawnStagehand()
		polyCollision()
		containerOpen()
		pointCollision()
		distance()
		rectTileCollision()
		debugPoly()
		pointTileCollision()
		containerStackItems()
		collisionBlocksAlongLine()
		entityDamageTeam()
		containerAvailable()
		containerItemApply()
		farmableStage()
		containerSize()
		polyContains()
		stagehandType()
		containerItemsCanFit()
		placeMod()
		containerTakeNumItemsAt()
		dayLength()
		callScriptedEntity()
		spawnProjectile()
		containerItemsFitWhere()
		npcLineQuery()
		npcQuery()
		containerTakeAll()
		findPlatformerPath()
		entityDescription()
		xwrap()
		spawnItem()
		containerSwapItemsNoCombine()
		containerAddItems()
		objectSpaces()
		playerQuery()
		containerConsumeAt()
		monsterType()
		entityType()
		containerSwapItems()
		debugText()
		day()
		containerPutItemsAt()
		entitySpecies()
		loungeableQuery()
		lightLevel()
		entityCanDamage()
		underground()
		spawnNpc()
		material()
		monsterQuery()
		objectQuery()
		containerConsume()
		entityLineQuery()
		containerClose()
		entityPosition()
		objectAt()
		containerItems()
	}
	tonumber()
	ic = {
		stripColor()
		giveBack()
		renameThis()
		checkStack()
		sortFunc()
		sort()
		itemAmount()
		amountEquipped()
		sort_relative()
		itemConfig()
		searchBox()
		clientVersion = 1
		quickstack()
		searchButton()
		renameButton()
		lock()
		getQuality()
	}
	assert()
	rawset()
	getmetatable()
	string = {
		rep()
		gmatch()
		reverse()
		pack()
		char()
		sub()
		format()
		byte()
		match()
		dump()
		find()
		unpack()
		packsize()
		upper()
		gsub()
		lower()
		len()
	}
	pcall()
	player = {
		consumeItemWithParameter()
		shipUpgrades()
		altHandItemTags()
		upgradeShip()
		serverUuid()
		gender()
		worldId()
		equippedTech()
		completeMission()
		inventoryTags()
		removeEssentialItem()
		hasItem()
		recordEvent()
		addBookmark()
		lounge()
		cleanupItems()
		consumeItem()
		makeTechUnavailable()
		setUniverseFlag()
		giveBlueprint()
		hasItemWithParameter()
		species()
		playCinematic()
		altHandItem()
		primaryHandItemTags()
		availableTechs()
		enabledTechs()
		enableTech()
		giveItem()
		playTime()
		setIntroComplete()
		essentialItem()
		ownShipWorldId()
		makeTechAvailable()
		warp()
		equipTech()
		startQuest()
		enableMission()
		hasQuest()
		itemsWithTag()
		isLounging()
		primaryHandItem()
		confirm()
		hasCompletedQuest()
		hasCountOfItem()
		equippedItem()
		setEquippedItem()
		radioMessage()
		giveEssentialItem()
		introComplete()
		canStartQuest()
		consumeTaggedItem()
		getItemWithParameter()
	}
	config = {
		getParameter()
	}
	root = {
		questConfig()
		treeFoliageDirectory()
		getConfigurationPath()
		loadVersionedJson()
		materialHealth()
		tenantConfig()
		itemConfig()
		materialMiningSound()
		projectileConfig()
		imageSpaces()
		techType()
		createTreasure()
		materialFootstepSound()
		itemHasTag()
		imageSize()
		treeStemDirectory()
		npcPortrait()
		hasTech()
		getMatchingTenants()
		getConfiguration()
		createItem()
		generateName()
		setConfiguration()
		techConfig()
		materialPath()
		makeCurrentVersionedJson()
		monsterMovementSettings()
		isTreasurePool()
		itemTags()
		itemType()
		evalFunction()
		monsterSkillParameter()
		assetJson()
		setConfigurationPath()
		monsterPortrait()
		recipesForItem()
		createBiome()
		behaviorModule()
		liquidStatusEffects()
		npcConfig()
		nonEmptyRegion()
		evalFunction2()
		projectileGravityMultiplier()
		npcVariant()
	}
	math = {
		tan()
		atan()
		modf()
		exp()
		type()
		acos()
		abs()
		mininteger = -9223372036854775808
		maxinteger = 9223372036854775807
		deg()
		asin()
		randomseed()
		random()
		sqrt()
		huge = inf
		min()
		log()
		pi = 3.1415926535898
		rad()
		max()
		floor()
		ult()
		cos()
		tointeger()
		fmod()
		sin()
		ceil()
	}
	widget = {
		setListSelected()
		setImage()
		setButtonCheckedImages()
		setImageRotation()
		setButtonImage()
		getListSelected()
		itemGridItems()
		addListItem()
		removeListItem()
		setButtonImages()
		blur()
		getData()
		setOptionVisible()
		playSound()
		setChecked()
		getSelectedOption()
		setFontColor()
		setSize()
		setOptionEnabled()
		clearListItems()
		setPosition()
		setProgress()
		getText()
		getSliderValue()
		setButtonEnabled()
		setButtonOverlayImage()
		setData()
		setSelectedOption()
		focus()
		getSize()
		setImageScale()
		setVisible()
		getPosition()
		setText()
		getChecked()
	}
	xpcall()
	setmetatable()
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	status = {
		removeEphemeralEffect()
		resetResource()
		addPersistentEffect()
		addEphemeralEffect()
		resourceMax()
		addPersistentEffects()
		clearEphemeralEffects()
		statPositive()
		modifyResource()
		statusProperty()
		resourcePercentage()
		resource()
		isResource()
		setResourcePercentage()
		getPersistentEffects()
		resourcePositive()
		clearPersistentEffects()
		giveResource()
		overConsumeResource()
		damageTakenSince()
		activeUniqueStatusEffectSummary()
		addEphemeralEffects()
		setStatusProperty()
		resourceLocked()
		modifyResourcePercentage()
		stat()
		clearAllPersistentEffects()
		setResourceLocked()
		resetAllResources()
		resourceNames()
		setPersistentEffects()
		inflictedDamageSince()
		consumeResource()
		inflictedHitsSince()
		setResource()
	}
	utf8 = {
		charpattern = "[
[03:49:02.316] [Warn] 	coroutine = {
		wrap()
		resume()
		create()
		isyieldable()
		status()
		running()
		yield()
	}
	jarray()
	type()
	init()
	require()
	table = {
		insert()
		unpack()
		pack()
		concat()
		sort()
		move()
		remove()
	}
	_VERSION = "Lua 5.3"
	update()
	rawequal()
	world = {
		isMonster()
		entityPortrait()
		entityQuery()
		itemDropQuery()
		entityVelocity()
		damageTiles()
		entityHealth()
		debugPoint()
		debugLine()
		entityExists()
		entityUniqueId()
		timeOfDay()
		entityGender()
		entityAggressive()
		magnitude()
		mod()
		platformerPathStart()
		containerItemAt()
		breathable()
		entityHasCountOfItem()
		npcType()
		sendEntityMessage()
		liquidAt()
		liquidAlongLine()
		isTileProtected()
		destroyLiquid()
		spawnLiquid()
		isNpc()
		getProperty()
		gravity()
		entityMoney()
		objectLineQuery()
		spawnMonster()
		lineCollision()
		lineTileCollision()
		rectCollision()
		getObjectParameter()
		entityHandItem()
		setProperty()
		entityHandItemDescriptor()
		time()
		placeMaterial()
		entityName()
		findUniqueEntity()
		threatLevel()
		placeObject()
		spawnTreasure()
		spawnVehicle()
		damageTileArea()
		windLevel()
		tileIsOccupied()
		containerTakeAt()
		loungeableOccupied()
		resolvePolyCollision()
		nearestTo()
		spawnStagehand()
		polyCollision()
		containerOpen()
		pointCollision()
		distance()
		rectTileCollision()
		debugPoly()
		pointTileCollision()
		containerStackItems()
		collisionBlocksAlongLine()
		entityDamageTeam()
		containerAvailable()
		containerItemApply()
		farmableStage()
		containerSize()
		polyContains()
		stagehandType()
		containerItemsCanFit()
		placeMod()
		containerTakeNumItemsAt()
		dayLength()
		callScriptedEntity()
		spawnProjectile()
		containerItemsFitWhere()
		npcLineQuery()
		npcQuery()
		containerTakeAll()
		findPlatformerPath()
		entityDescription()
		xwrap()
		spawnItem()
		containerSwapItemsNoCombine()
		containerAddItems()
		objectSpaces()
		playerQuery()
		containerConsumeAt()
		monsterType()
		entityType()
		containerSwapItems()
		debugText()
		day()
		containerPutItemsAt()
		entitySpecies()
		loungeableQuery()
		lightLevel()
		entityCanDamage()
		underground()
		spawnNpc()
		material()
		monsterQuery()
		objectQuery()
		containerConsume()
		entityLineQuery()
		containerClose()
		entityPosition()
		objectAt()
		containerItems()
	}
	tonumber()
	ic = {
		stripColor()
		giveBack()
		renameThis()
		checkStack()
		sortFunc()
		sort()
		itemAmount()
		amountEquipped()
		sort_relative()
		itemConfig()
		searchBox()
		clientVersion = 1
		quickstack()
		searchButton()
		renameButton()
		lock()
		getQuality()
	}
	assert()
	rawset()
	getmetatable()
	string = {
		rep()
		gmatch()
		reverse()
		pack()
		char()
		sub()
		format()
		byte()
		match()
		dump()
		find()
		unpack()
		packsize()
		upper()
		gsub()
		lower()
		len()
	}
	pcall()
	player = {
		consumeItemWithParameter()
		shipUpgrades()
		altHandItemTags()
		upgradeShip()
		serverUuid()
		gender()
		worldId()
		equippedTech()
		completeMission()
		inventoryTags()
		removeEssentialItem()
		hasItem()
		recordEvent()
		addBookmark()
		lounge()
		cleanupItems()
		consumeItem()
		makeTechUnavailable()
		setUniverseFlag()
		giveBlueprint()
		hasItemWithParameter()
		species()
		playCinematic()
		altHandItem()
		primaryHandItemTags()
		availableTechs()
		enabledTechs()
		enableTech()
		giveItem()
		playTime()
		setIntroComplete()
		essentialItem()
		ownShipWorldId()
		makeTechAvailable()
		warp()
		equipTech()
		startQuest()
		enableMission()
		hasQuest()
		itemsWithTag()
		isLounging()
		primaryHandItem()
		confirm()
		hasCompletedQuest()
		hasCountOfItem()
		equippedItem()
		setEquippedItem()
		radioMessage()
		giveEssentialItem()
		introComplete()
		canStartQuest()
		consumeTaggedItem()
		getItemWithParameter()
	}
	config = {
		getParameter()
	}
	root = {
		questConfig()
		treeFoliageDirectory()
		getConfigurationPath()
		loadVersionedJson()
		materialHealth()
		tenantConfig()
		itemConfig()
		materialMiningSound()
		projectileConfig()
		imageSpaces()
		techType()
		createTreasure()
		materialFootstepSound()
		itemHasTag()
		imageSize()
		treeStemDirectory()
		npcPortrait()
		hasTech()
		getMatchingTenants()
		getConfiguration()
		createItem()
		generateName()
		setConfiguration()
		techConfig()
		materialPath()
		makeCurrentVersionedJson()
		monsterMovementSettings()
		isTreasurePool()
		itemTags()
		itemType()
		evalFunction()
		monsterSkillParameter()
		assetJson()
		setConfigurationPath()
		monsterPortrait()
		recipesForItem()
		createBiome()
		behaviorModule()
		liquidStatusEffects()
		npcConfig()
		nonEmptyRegion()
		evalFunction2()
		projectileGravityMultiplier()
		npcVariant()
	}
	math = {
		tan()
		atan()
		modf()
		exp()
		type()
		acos()
		abs()
		mininteger = -9223372036854775808
		maxinteger = 9223372036854775807
		deg()
		asin()
		randomseed()
		random()
		sqrt()
		huge = inf
		min()
		log()
		pi = 3.1415926535898
		rad()
		max()
		floor()
		ult()
		cos()
		tointeger()
		fmod()
		sin()
		ceil()
	}
	widget = {
		setListSelected()
		setImage()
		setButtonCheckedImages()
		setImageRotation()
		setButtonImage()
		getListSelected()
		itemGridItems()
		addListItem()
		removeListItem()
		setButtonImages()
		blur()
		getData()
		setOptionVisible()
		playSound()
		setChecked()
		getSelectedOption()
		setFontColor()
		setSize()
		setOptionEnabled()
		clearListItems()
		setPosition()
		setProgress()
		getText()
		getSliderValue()
		setButtonEnabled()
		setButtonOverlayImage()
		setData()
		setSelectedOption()
		focus()
		getSize()
		setImageScale()
		setVisible()
		getPosition()
		setText()
		getChecked()
	}
	xpcall()
	setmetatable()
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	status = {
		removeEphemeralEffect()
		resetResource()
		addPersistentEffect()
		addEphemeralEffect()
		resourceMax()
		addPersistentEffects()
		clearEphemeralEffects()
		statPositive()
		modifyResource()
		statusProperty()
		resourcePercentage()
		resource()
		isResource()
		setResourcePercentage()
		getPersistentEffects()
		resourcePositive()
		clearPersistentEffects()
		giveResource()
		overConsumeResource()
		damageTakenSince()
		activeUniqueStatusEffectSummary()
		addEphemeralEffects()
		setStatusProperty()
		resourceLocked()
		modifyResourcePercentage()
		stat()
		clearAllPersistentEffects()
		setResourceLocked()
		resetAllResources()
		resourceNames()
		setPersistentEffects()
		inflictedDamageSince()
		consumeResource()
		inflictedHitsSince()
		setResource()
	}
	utf8 = {
		charpattern = "[
[03:49:04.782] [Warn] 	coroutine = {
		wrap()
		resume()
		create()
		isyieldable()
		status()
		running()
		yield()
	}
	jarray()
	type()
	init()
	require()
	table = {
		insert()
		unpack()
		pack()
		concat()
		sort()
		move()
		remove()
	}
	_VERSION = "Lua 5.3"
	update()
	rawequal()
	world = {
		isMonster()
		entityPortrait()
		entityQuery()
		itemDropQuery()
		entityVelocity()
		damageTiles()
		entityHealth()
		debugPoint()
		debugLine()
		entityExists()
		entityUniqueId()
		timeOfDay()
		entityGender()
		entityAggressive()
		magnitude()
		mod()
		platformerPathStart()
		containerItemAt()
		breathable()
		entityHasCountOfItem()
		npcType()
		sendEntityMessage()
		liquidAt()
		liquidAlongLine()
		isTileProtected()
		destroyLiquid()
		spawnLiquid()
		isNpc()
		getProperty()
		gravity()
		entityMoney()
		objectLineQuery()
		spawnMonster()
		lineCollision()
		lineTileCollision()
		rectCollision()
		getObjectParameter()
		entityHandItem()
		setProperty()
		entityHandItemDescriptor()
		time()
		placeMaterial()
		entityName()
		findUniqueEntity()
		threatLevel()
		placeObject()
		spawnTreasure()
		spawnVehicle()
		damageTileArea()
		windLevel()
		tileIsOccupied()
		containerTakeAt()
		loungeableOccupied()
		resolvePolyCollision()
		nearestTo()
		spawnStagehand()
		polyCollision()
		containerOpen()
		pointCollision()
		distance()
		rectTileCollision()
		debugPoly()
		pointTileCollision()
		containerStackItems()
		collisionBlocksAlongLine()
		entityDamageTeam()
		containerAvailable()
		containerItemApply()
		farmableStage()
		containerSize()
		polyContains()
		stagehandType()
		containerItemsCanFit()
		placeMod()
		containerTakeNumItemsAt()
		dayLength()
		callScriptedEntity()
		spawnProjectile()
		containerItemsFitWhere()
		npcLineQuery()
		npcQuery()
		containerTakeAll()
		findPlatformerPath()
		entityDescription()
		xwrap()
		spawnItem()
		containerSwapItemsNoCombine()
		containerAddItems()
		objectSpaces()
		playerQuery()
		containerConsumeAt()
		monsterType()
		entityType()
		containerSwapItems()
		debugText()
		day()
		containerPutItemsAt()
		entitySpecies()
		loungeableQuery()
		lightLevel()
		entityCanDamage()
		underground()
		spawnNpc()
		material()
		monsterQuery()
		objectQuery()
		containerConsume()
		entityLineQuery()
		containerClose()
		entityPosition()
		objectAt()
		containerItems()
	}
	tonumber()
	ic = {
		stripColor()
		giveBack()
		renameThis()
		checkStack()
		sortFunc()
		sort()
		itemAmount()
		amountEquipped()
		sort_relative()
		itemConfig()
		searchBox()
		clientVersion = 1
		quickstack()
		searchButton()
		renameButton()
		lock()
		getQuality()
	}
	assert()
	rawset()
	getmetatable()
	string = {
		rep()
		gmatch()
		reverse()
		pack()
		char()
		sub()
		format()
		byte()
		match()
		dump()
		find()
		unpack()
		packsize()
		upper()
		gsub()
		lower()
		len()
	}
	pcall()
	player = {
		consumeItemWithParameter()
		shipUpgrades()
		altHandItemTags()
		upgradeShip()
		serverUuid()
		gender()
		worldId()
		equippedTech()
		completeMission()
		inventoryTags()
		removeEssentialItem()
		hasItem()
		recordEvent()
		addBookmark()
		lounge()
		cleanupItems()
		consumeItem()
		makeTechUnavailable()
		setUniverseFlag()
		giveBlueprint()
		hasItemWithParameter()
		species()
		playCinematic()
		altHandItem()
		primaryHandItemTags()
		availableTechs()
		enabledTechs()
		enableTech()
		giveItem()
		playTime()
		setIntroComplete()
		essentialItem()
		ownShipWorldId()
		makeTechAvailable()
		warp()
		equipTech()
		startQuest()
		enableMission()
		hasQuest()
		itemsWithTag()
		isLounging()
		primaryHandItem()
		confirm()
		hasCompletedQuest()
		hasCountOfItem()
		equippedItem()
		setEquippedItem()
		radioMessage()
		giveEssentialItem()
		introComplete()
		canStartQuest()
		consumeTaggedItem()
		getItemWithParameter()
	}
	config = {
		getParameter()
	}
	root = {
		questConfig()
		treeFoliageDirectory()
		getConfigurationPath()
		loadVersionedJson()
		materialHealth()
		tenantConfig()
		itemConfig()
		materialMiningSound()
		projectileConfig()
		imageSpaces()
		techType()
		createTreasure()
		materialFootstepSound()
		itemHasTag()
		imageSize()
		treeStemDirectory()
		npcPortrait()
		hasTech()
		getMatchingTenants()
		getConfiguration()
		createItem()
		generateName()
		setConfiguration()
		techConfig()
		materialPath()
		makeCurrentVersionedJson()
		monsterMovementSettings()
		isTreasurePool()
		itemTags()
		itemType()
		evalFunction()
		monsterSkillParameter()
		assetJson()
		setConfigurationPath()
		monsterPortrait()
		recipesForItem()
		createBiome()
		behaviorModule()
		liquidStatusEffects()
		npcConfig()
		nonEmptyRegion()
		evalFunction2()
		projectileGravityMultiplier()
		npcVariant()
	}
	math = {
		tan()
		atan()
		modf()
		exp()
		type()
		acos()
		abs()
		mininteger = -9223372036854775808
		maxinteger = 9223372036854775807
		deg()
		asin()
		randomseed()
		random()
		sqrt()
		huge = inf
		min()
		log()
		pi = 3.1415926535898
		rad()
		max()
		floor()
		ult()
		cos()
		tointeger()
		fmod()
		sin()
		ceil()
	}
	widget = {
		setListSelected()
		setImage()
		setButtonCheckedImages()
		setImageRotation()
		setButtonImage()
		getListSelected()
		itemGridItems()
		addListItem()
		removeListItem()
		setButtonImages()
		blur()
		getData()
		setOptionVisible()
		playSound()
		setChecked()
		getSelectedOption()
		setFontColor()
		setSize()
		setOptionEnabled()
		clearListItems()
		setPosition()
		setProgress()
		getText()
		getSliderValue()
		setButtonEnabled()
		setButtonOverlayImage()
		setData()
		setSelectedOption()
		focus()
		getSize()
		setImageScale()
		setVisible()
		getPosition()
		setText()
		getChecked()
	}
	xpcall()
	setmetatable()
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	status = {
		removeEphemeralEffect()
		resetResource()
		addPersistentEffect()
		addEphemeralEffect()
		resourceMax()
		addPersistentEffects()
		clearEphemeralEffects()
		statPositive()
		modifyResource()
		statusProperty()
		resourcePercentage()
		resource()
		isResource()
		setResourcePercentage()
		getPersistentEffects()
		resourcePositive()
		clearPersistentEffects()
		giveResource()
		overConsumeResource()
		damageTakenSince()
		activeUniqueStatusEffectSummary()
		addEphemeralEffects()
		setStatusProperty()
		resourceLocked()
		modifyResourcePercentage()
		stat()
		clearAllPersistentEffects()
		setResourceLocked()
		resetAllResources()
		resourceNames()
		setPersistentEffects()
		inflictedDamageSince()
		consumeResource()
		inflictedHitsSince()
		setResource()
	}
	utf8 = {
		charpattern = "[
[03:49:06.559] [Warn] 	coroutine = {
		wrap()
		resume()
		create()
		isyieldable()
		status()
		running()
		yield()
	}
	jarray()
	type()
	init()
	require()
	table = {
		insert()
		unpack()
		pack()
		concat()
		sort()
		move()
		remove()
	}
	_VERSION = "Lua 5.3"
	update()
	rawequal()
	world = {
		isMonster()
		entityPortrait()
		entityQuery()
		itemDropQuery()
		entityVelocity()
		damageTiles()
		entityHealth()
		debugPoint()
		debugLine()
		entityExists()
		entityUniqueId()
		timeOfDay()
		entityGender()
		entityAggressive()
		magnitude()
		mod()
		platformerPathStart()
		containerItemAt()
		breathable()
		entityHasCountOfItem()
		npcType()
		sendEntityMessage()
		liquidAt()
		liquidAlongLine()
		isTileProtected()
		destroyLiquid()
		spawnLiquid()
		isNpc()
		getProperty()
		gravity()
		entityMoney()
		objectLineQuery()
		spawnMonster()
		lineCollision()
		lineTileCollision()
		rectCollision()
		getObjectParameter()
		entityHandItem()
		setProperty()
		entityHandItemDescriptor()
		time()
		placeMaterial()
		entityName()
		findUniqueEntity()
		threatLevel()
		placeObject()
		spawnTreasure()
		spawnVehicle()
		damageTileArea()
		windLevel()
		tileIsOccupied()
		containerTakeAt()
		loungeableOccupied()
		resolvePolyCollision()
		nearestTo()
		spawnStagehand()
		polyCollision()
		containerOpen()
		pointCollision()
		distance()
		rectTileCollision()
		debugPoly()
		pointTileCollision()
		containerStackItems()
		collisionBlocksAlongLine()
		entityDamageTeam()
		containerAvailable()
		containerItemApply()
		farmableStage()
		containerSize()
		polyContains()
		stagehandType()
		containerItemsCanFit()
		placeMod()
		containerTakeNumItemsAt()
		dayLength()
		callScriptedEntity()
		spawnProjectile()
		containerItemsFitWhere()
		npcLineQuery()
		npcQuery()
		containerTakeAll()
		findPlatformerPath()
		entityDescription()
		xwrap()
		spawnItem()
		containerSwapItemsNoCombine()
		containerAddItems()
		objectSpaces()
		playerQuery()
		containerConsumeAt()
		monsterType()
		entityType()
		containerSwapItems()
		debugText()
		day()
		containerPutItemsAt()
		entitySpecies()
		loungeableQuery()
		lightLevel()
		entityCanDamage()
		underground()
		spawnNpc()
		material()
		monsterQuery()
		objectQuery()
		containerConsume()
		entityLineQuery()
		containerClose()
		entityPosition()
		objectAt()
		containerItems()
	}
	tonumber()
	ic = {
		stripColor()
		giveBack()
		renameThis()
		checkStack()
		sortFunc()
		sort()
		itemAmount()
		amountEquipped()
		sort_relative()
		itemConfig()
		searchBox()
		clientVersion = 1
		quickstack()
		searchButton()
		renameButton()
		lock()
		getQuality()
	}
	assert()
	rawset()
	getmetatable()
	string = {
		rep()
		gmatch()
		reverse()
		pack()
		char()
		sub()
		format()
		byte()
		match()
		dump()
		find()
		unpack()
		packsize()
		upper()
		gsub()
		lower()
		len()
	}
	pcall()
	player = {
		consumeItemWithParameter()
		shipUpgrades()
		altHandItemTags()
		upgradeShip()
		serverUuid()
		gender()
		worldId()
		equippedTech()
		completeMission()
		inventoryTags()
		removeEssentialItem()
		hasItem()
		recordEvent()
		addBookmark()
		lounge()
		cleanupItems()
		consumeItem()
		makeTechUnavailable()
		setUniverseFlag()
		giveBlueprint()
		hasItemWithParameter()
		species()
		playCinematic()
		altHandItem()
		primaryHandItemTags()
		availableTechs()
		enabledTechs()
		enableTech()
		giveItem()
		playTime()
		setIntroComplete()
		essentialItem()
		ownShipWorldId()
		makeTechAvailable()
		warp()
		equipTech()
		startQuest()
		enableMission()
		hasQuest()
		itemsWithTag()
		isLounging()
		primaryHandItem()
		confirm()
		hasCompletedQuest()
		hasCountOfItem()
		equippedItem()
		setEquippedItem()
		radioMessage()
		giveEssentialItem()
		introComplete()
		canStartQuest()
		consumeTaggedItem()
		getItemWithParameter()
	}
	config = {
		getParameter()
	}
	root = {
		questConfig()
		treeFoliageDirectory()
		getConfigurationPath()
		loadVersionedJson()
		materialHealth()
		tenantConfig()
		itemConfig()
		materialMiningSound()
		projectileConfig()
		imageSpaces()
		techType()
		createTreasure()
		materialFootstepSound()
		itemHasTag()
		imageSize()
		treeStemDirectory()
		npcPortrait()
		hasTech()
		getMatchingTenants()
		getConfiguration()
		createItem()
		generateName()
		setConfiguration()
		techConfig()
		materialPath()
		makeCurrentVersionedJson()
		monsterMovementSettings()
		isTreasurePool()
		itemTags()
		itemType()
		evalFunction()
		monsterSkillParameter()
		assetJson()
		setConfigurationPath()
		monsterPortrait()
		recipesForItem()
		createBiome()
		behaviorModule()
		liquidStatusEffects()
		npcConfig()
		nonEmptyRegion()
		evalFunction2()
		projectileGravityMultiplier()
		npcVariant()
	}
	math = {
		tan()
		atan()
		modf()
		exp()
		type()
		acos()
		abs()
		mininteger = -9223372036854775808
		maxinteger = 9223372036854775807
		deg()
		asin()
		randomseed()
		random()
		sqrt()
		huge = inf
		min()
		log()
		pi = 3.1415926535898
		rad()
		max()
		floor()
		ult()
		cos()
		tointeger()
		fmod()
		sin()
		ceil()
	}
	widget = {
		setListSelected()
		setImage()
		setButtonCheckedImages()
		setImageRotation()
		setButtonImage()
		getListSelected()
		itemGridItems()
		addListItem()
		removeListItem()
		setButtonImages()
		blur()
		getData()
		setOptionVisible()
		playSound()
		setChecked()
		getSelectedOption()
		setFontColor()
		setSize()
		setOptionEnabled()
		clearListItems()
		setPosition()
		setProgress()
		getText()
		getSliderValue()
		setButtonEnabled()
		setButtonOverlayImage()
		setData()
		setSelectedOption()
		focus()
		getSize()
		setImageScale()
		setVisible()
		getPosition()
		setText()
		getChecked()
	}
	xpcall()
	setmetatable()
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	status = {
		removeEphemeralEffect()
		resetResource()
		addPersistentEffect()
		addEphemeralEffect()
		resourceMax()
		addPersistentEffects()
		clearEphemeralEffects()
		statPositive()
		modifyResource()
		statusProperty()
		resourcePercentage()
		resource()
		isResource()
		setResourcePercentage()
		getPersistentEffects()
		resourcePositive()
		clearPersistentEffects()
		giveResource()
		overConsumeResource()
		damageTakenSince()
		activeUniqueStatusEffectSummary()
		addEphemeralEffects()
		setStatusProperty()
		resourceLocked()
		modifyResourcePercentage()
		stat()
		clearAllPersistentEffects()
		setResourceLocked()
		resetAllResources()
		resourceNames()
		setPersistentEffects()
		inflictedDamageSince()
		consumeResource()
		inflictedHitsSince()
		setResource()
	}
	utf8 = {
		charpattern = "[
[03:49:28.367] [Warn] 	coroutine = {
		wrap()
		resume()
		create()
		isyieldable()
		status()
		running()
		yield()
	}
	jarray()
	type()
	init()
	require()
	table = {
		insert()
		unpack()
		pack()
		concat()
		sort()
		move()
		remove()
	}
	_VERSION = "Lua 5.3"
	update()
	rawequal()
	world = {
		isMonster()
		entityPortrait()
		entityQuery()
		itemDropQuery()
		entityVelocity()
		damageTiles()
		entityHealth()
		debugPoint()
		debugLine()
		entityExists()
		entityUniqueId()
		timeOfDay()
		entityGender()
		entityAggressive()
		magnitude()
		mod()
		platformerPathStart()
		containerItemAt()
		breathable()
		entityHasCountOfItem()
		npcType()
		sendEntityMessage()
		liquidAt()
		liquidAlongLine()
		isTileProtected()
		destroyLiquid()
		spawnLiquid()
		isNpc()
		getProperty()
		gravity()
		entityMoney()
		objectLineQuery()
		spawnMonster()
		lineCollision()
		lineTileCollision()
		rectCollision()
		getObjectParameter()
		entityHandItem()
		setProperty()
		entityHandItemDescriptor()
		time()
		placeMaterial()
		entityName()
		findUniqueEntity()
		threatLevel()
		placeObject()
		spawnTreasure()
		spawnVehicle()
		damageTileArea()
		windLevel()
		tileIsOccupied()
		containerTakeAt()
		loungeableOccupied()
		resolvePolyCollision()
		nearestTo()
		spawnStagehand()
		polyCollision()
		containerOpen()
		pointCollision()
		distance()
		rectTileCollision()
		debugPoly()
		pointTileCollision()
		containerStackItems()
		collisionBlocksAlongLine()
		entityDamageTeam()
		containerAvailable()
		containerItemApply()
		farmableStage()
		containerSize()
		polyContains()
		stagehandType()
		containerItemsCanFit()
		placeMod()
		containerTakeNumItemsAt()
		dayLength()
		callScriptedEntity()
		spawnProjectile()
		containerItemsFitWhere()
		npcLineQuery()
		npcQuery()
		containerTakeAll()
		findPlatformerPath()
		entityDescription()
		xwrap()
		spawnItem()
		containerSwapItemsNoCombine()
		containerAddItems()
		objectSpaces()
		playerQuery()
		containerConsumeAt()
		monsterType()
		entityType()
		containerSwapItems()
		debugText()
		day()
		containerPutItemsAt()
		entitySpecies()
		loungeableQuery()
		lightLevel()
		entityCanDamage()
		underground()
		spawnNpc()
		material()
		monsterQuery()
		objectQuery()
		containerConsume()
		entityLineQuery()
		containerClose()
		entityPosition()
		objectAt()
		containerItems()
	}
	tonumber()
	ic = {
		stripColor()
		giveBack()
		renameThis()
		checkStack()
		sortFunc()
		sort()
		itemAmount()
		amountEquipped()
		sort_relative()
		itemConfig()
		searchBox()
		clientVersion = 1
		quickstack()
		searchButton()
		renameButton()
		lock()
		getQuality()
	}
	assert()
	rawset()
	getmetatable()
	string = {
		rep()
		gmatch()
		reverse()
		pack()
		char()
		sub()
		format()
		byte()
		match()
		dump()
		find()
		unpack()
		packsize()
		upper()
		gsub()
		lower()
		len()
	}
	pcall()
	player = {
		consumeItemWithParameter()
		shipUpgrades()
		altHandItemTags()
		upgradeShip()
		serverUuid()
		gender()
		worldId()
		equippedTech()
		completeMission()
		inventoryTags()
		removeEssentialItem()
		hasItem()
		recordEvent()
		addBookmark()
		lounge()
		cleanupItems()
		consumeItem()
		makeTechUnavailable()
		setUniverseFlag()
		giveBlueprint()
		hasItemWithParameter()
		species()
		playCinematic()
		altHandItem()
		primaryHandItemTags()
		availableTechs()
		enabledTechs()
		enableTech()
		giveItem()
		playTime()
		setIntroComplete()
		essentialItem()
		ownShipWorldId()
		makeTechAvailable()
		warp()
		equipTech()
		startQuest()
		enableMission()
		hasQuest()
		itemsWithTag()
		isLounging()
		primaryHandItem()
		confirm()
		hasCompletedQuest()
		hasCountOfItem()
		equippedItem()
		setEquippedItem()
		radioMessage()
		giveEssentialItem()
		introComplete()
		canStartQuest()
		consumeTaggedItem()
		getItemWithParameter()
	}
	config = {
		getParameter()
	}
	root = {
		questConfig()
		treeFoliageDirectory()
		getConfigurationPath()
		loadVersionedJson()
		materialHealth()
		tenantConfig()
		itemConfig()
		materialMiningSound()
		projectileConfig()
		imageSpaces()
		techType()
		createTreasure()
		materialFootstepSound()
		itemHasTag()
		imageSize()
		treeStemDirectory()
		npcPortrait()
		hasTech()
		getMatchingTenants()
		getConfiguration()
		createItem()
		generateName()
		setConfiguration()
		techConfig()
		materialPath()
		makeCurrentVersionedJson()
		monsterMovementSettings()
		isTreasurePool()
		itemTags()
		itemType()
		evalFunction()
		monsterSkillParameter()
		assetJson()
		setConfigurationPath()
		monsterPortrait()
		recipesForItem()
		createBiome()
		behaviorModule()
		liquidStatusEffects()
		npcConfig()
		nonEmptyRegion()
		evalFunction2()
		projectileGravityMultiplier()
		npcVariant()
	}
	math = {
		tan()
		atan()
		modf()
		exp()
		type()
		acos()
		abs()
		mininteger = -9223372036854775808
		maxinteger = 9223372036854775807
		deg()
		asin()
		randomseed()
		random()
		sqrt()
		huge = inf
		min()
		log()
		pi = 3.1415926535898
		rad()
		max()
		floor()
		ult()
		cos()
		tointeger()
		fmod()
		sin()
		ceil()
	}
	widget = {
		setListSelected()
		setImage()
		setButtonCheckedImages()
		setImageRotation()
		setButtonImage()
		getListSelected()
		itemGridItems()
		addListItem()
		removeListItem()
		setButtonImages()
		blur()
		getData()
		setOptionVisible()
		playSound()
		setChecked()
		getSelectedOption()
		setFontColor()
		setSize()
		setOptionEnabled()
		clearListItems()
		setPosition()
		setProgress()
		getText()
		getSliderValue()
		setButtonEnabled()
		setButtonOverlayImage()
		setData()
		setSelectedOption()
		focus()
		getSize()
		setImageScale()
		setVisible()
		getPosition()
		setText()
		getChecked()
	}
	xpcall()
	setmetatable()
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	status = {
		removeEphemeralEffect()
		resetResource()
		addPersistentEffect()
		addEphemeralEffect()
		resourceMax()
		addPersistentEffects()
		clearEphemeralEffects()
		statPositive()
		modifyResource()
		statusProperty()
		resourcePercentage()
		resource()
		isResource()
		setResourcePercentage()
		getPersistentEffects()
		resourcePositive()
		clearPersistentEffects()
		giveResource()
		overConsumeResource()
		damageTakenSince()
		activeUniqueStatusEffectSummary()
		addEphemeralEffects()
		setStatusProperty()
		resourceLocked()
		modifyResourcePercentage()
		stat()
		clearAllPersistentEffects()
		setResourceLocked()
		resetAllResources()
		resourceNames()
		setPersistentEffects()
		inflictedDamageSince()
		consumeResource()
		inflictedHitsSince()
		setResource()
	}
	utf8 = {
		charpattern = "[
[03:49:46.435] [Warn] 	coroutine = {
		wrap()
		resume()
		create()
		isyieldable()
		status()
		running()
		yield()
	}
	jarray()
	type()
	init()
	require()
	table = {
		insert()
		unpack()
		pack()
		concat()
		sort()
		move()
		remove()
	}
	_VERSION = "Lua 5.3"
	update()
	rawequal()
	world = {
		isMonster()
		entityPortrait()
		entityQuery()
		itemDropQuery()
		entityVelocity()
		damageTiles()
		entityHealth()
		debugPoint()
		debugLine()
		entityExists()
		entityUniqueId()
		timeOfDay()
		entityGender()
		entityAggressive()
		magnitude()
		mod()
		platformerPathStart()
		containerItemAt()
		breathable()
		entityHasCountOfItem()
		npcType()
		sendEntityMessage()
		liquidAt()
		liquidAlongLine()
		isTileProtected()
		destroyLiquid()
		spawnLiquid()
		isNpc()
		getProperty()
		gravity()
		entityMoney()
		objectLineQuery()
		spawnMonster()
		lineCollision()
		lineTileCollision()
		rectCollision()
		getObjectParameter()
		entityHandItem()
		setProperty()
		entityHandItemDescriptor()
		time()
		placeMaterial()
		entityName()
		findUniqueEntity()
		threatLevel()
		placeObject()
		spawnTreasure()
		spawnVehicle()
		damageTileArea()
		windLevel()
		tileIsOccupied()
		containerTakeAt()
		loungeableOccupied()
		resolvePolyCollision()
		nearestTo()
		spawnStagehand()
		polyCollision()
		containerOpen()
		pointCollision()
		distance()
		rectTileCollision()
		debugPoly()
		pointTileCollision()
		containerStackItems()
		collisionBlocksAlongLine()
		entityDamageTeam()
		containerAvailable()
		containerItemApply()
		farmableStage()
		containerSize()
		polyContains()
		stagehandType()
		containerItemsCanFit()
		placeMod()
		containerTakeNumItemsAt()
		dayLength()
		callScriptedEntity()
		spawnProjectile()
		containerItemsFitWhere()
		npcLineQuery()
		npcQuery()
		containerTakeAll()
		findPlatformerPath()
		entityDescription()
		xwrap()
		spawnItem()
		containerSwapItemsNoCombine()
		containerAddItems()
		objectSpaces()
		playerQuery()
		containerConsumeAt()
		monsterType()
		entityType()
		containerSwapItems()
		debugText()
		day()
		containerPutItemsAt()
		entitySpecies()
		loungeableQuery()
		lightLevel()
		entityCanDamage()
		underground()
		spawnNpc()
		material()
		monsterQuery()
		objectQuery()
		containerConsume()
		entityLineQuery()
		containerClose()
		entityPosition()
		objectAt()
		containerItems()
	}
	tonumber()
	ic = {
		stripColor()
		giveBack()
		renameThis()
		checkStack()
		sortFunc()
		sort()
		itemAmount()
		amountEquipped()
		sort_relative()
		itemConfig()
		searchBox()
		clientVersion = 1
		quickstack()
		searchButton()
		renameButton()
		lock()
		getQuality()
	}
	assert()
	rawset()
	getmetatable()
	string = {
		rep()
		gmatch()
		reverse()
		pack()
		char()
		sub()
		format()
		byte()
		match()
		dump()
		find()
		unpack()
		packsize()
		upper()
		gsub()
		lower()
		len()
	}
	pcall()
	player = {
		consumeItemWithParameter()
		shipUpgrades()
		altHandItemTags()
		upgradeShip()
		serverUuid()
		gender()
		worldId()
		equippedTech()
		completeMission()
		inventoryTags()
		removeEssentialItem()
		hasItem()
		recordEvent()
		addBookmark()
		lounge()
		cleanupItems()
		consumeItem()
		makeTechUnavailable()
		setUniverseFlag()
		giveBlueprint()
		hasItemWithParameter()
		species()
		playCinematic()
		altHandItem()
		primaryHandItemTags()
		availableTechs()
		enabledTechs()
		enableTech()
		giveItem()
		playTime()
		setIntroComplete()
		essentialItem()
		ownShipWorldId()
		makeTechAvailable()
		warp()
		equipTech()
		startQuest()
		enableMission()
		hasQuest()
		itemsWithTag()
		isLounging()
		primaryHandItem()
		confirm()
		hasCompletedQuest()
		hasCountOfItem()
		equippedItem()
		setEquippedItem()
		radioMessage()
		giveEssentialItem()
		introComplete()
		canStartQuest()
		consumeTaggedItem()
		getItemWithParameter()
	}
	config = {
		getParameter()
	}
	root = {
		questConfig()
		treeFoliageDirectory()
		getConfigurationPath()
		loadVersionedJson()
		materialHealth()
		tenantConfig()
		itemConfig()
		materialMiningSound()
		projectileConfig()
		imageSpaces()
		techType()
		createTreasure()
		materialFootstepSound()
		itemHasTag()
		imageSize()
		treeStemDirectory()
		npcPortrait()
		hasTech()
		getMatchingTenants()
		getConfiguration()
		createItem()
		generateName()
		setConfiguration()
		techConfig()
		materialPath()
		makeCurrentVersionedJson()
		monsterMovementSettings()
		isTreasurePool()
		itemTags()
		itemType()
		evalFunction()
		monsterSkillParameter()
		assetJson()
		setConfigurationPath()
		monsterPortrait()
		recipesForItem()
		createBiome()
		behaviorModule()
		liquidStatusEffects()
		npcConfig()
		nonEmptyRegion()
		evalFunction2()
		projectileGravityMultiplier()
		npcVariant()
	}
	math = {
		tan()
		atan()
		modf()
		exp()
		type()
		acos()
		abs()
		mininteger = -9223372036854775808
		maxinteger = 9223372036854775807
		deg()
		asin()
		randomseed()
		random()
		sqrt()
		huge = inf
		min()
		log()
		pi = 3.1415926535898
		rad()
		max()
		floor()
		ult()
		cos()
		tointeger()
		fmod()
		sin()
		ceil()
	}
	widget = {
		setListSelected()
		setImage()
		setButtonCheckedImages()
		setImageRotation()
		setButtonImage()
		getListSelected()
		itemGridItems()
		addListItem()
		removeListItem()
		setButtonImages()
		blur()
		getData()
		setOptionVisible()
		playSound()
		setChecked()
		getSelectedOption()
		setFontColor()
		setSize()
		setOptionEnabled()
		clearListItems()
		setPosition()
		setProgress()
		getText()
		getSliderValue()
		setButtonEnabled()
		setButtonOverlayImage()
		setData()
		setSelectedOption()
		focus()
		getSize()
		setImageScale()
		setVisible()
		getPosition()
		setText()
		getChecked()
	}
	xpcall()
	setmetatable()
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	status = {
		removeEphemeralEffect()
		resetResource()
		addPersistentEffect()
		addEphemeralEffect()
		resourceMax()
		addPersistentEffects()
		clearEphemeralEffects()
		statPositive()
		modifyResource()
		statusProperty()
		resourcePercentage()
		resource()
		isResource()
		setResourcePercentage()
		getPersistentEffects()
		resourcePositive()
		clearPersistentEffects()
		giveResource()
		overConsumeResource()
		damageTakenSince()
		activeUniqueStatusEffectSummary()
		addEphemeralEffects()
		setStatusProperty()
		resourceLocked()
		modifyResourcePercentage()
		stat()
		clearAllPersistentEffects()
		setResourceLocked()
		resetAllResources()
		resourceNames()
		setPersistentEffects()
		inflictedDamageSince()
		consumeResource()
		inflictedHitsSince()
		setResource()
	}
	utf8 = {
		charpattern = "[
[03:49:48.516] [Warn] 	coroutine = {
		wrap()
		resume()
		create()
		isyieldable()
		status()
		running()
		yield()
	}
	jarray()
	type()
	init()
	require()
	table = {
		insert()
		unpack()
		pack()
		concat()
		sort()
		move()
		remove()
	}
	_VERSION = "Lua 5.3"
	update()
	rawequal()
	world = {
		isMonster()
		entityPortrait()
		entityQuery()
		itemDropQuery()
		entityVelocity()
		damageTiles()
		entityHealth()
		debugPoint()
		debugLine()
		entityExists()
		entityUniqueId()
		timeOfDay()
		entityGender()
		entityAggressive()
		magnitude()
		mod()
		platformerPathStart()
		containerItemAt()
		breathable()
		entityHasCountOfItem()
		npcType()
		sendEntityMessage()
		liquidAt()
		liquidAlongLine()
		isTileProtected()
		destroyLiquid()
		spawnLiquid()
		isNpc()
		getProperty()
		gravity()
		entityMoney()
		objectLineQuery()
		spawnMonster()
		lineCollision()
		lineTileCollision()
		rectCollision()
		getObjectParameter()
		entityHandItem()
		setProperty()
		entityHandItemDescriptor()
		time()
		placeMaterial()
		entityName()
		findUniqueEntity()
		threatLevel()
		placeObject()
		spawnTreasure()
		spawnVehicle()
		damageTileArea()
		windLevel()
		tileIsOccupied()
		containerTakeAt()
		loungeableOccupied()
		resolvePolyCollision()
		nearestTo()
		spawnStagehand()
		polyCollision()
		containerOpen()
		pointCollision()
		distance()
		rectTileCollision()
		debugPoly()
		pointTileCollision()
		containerStackItems()
		collisionBlocksAlongLine()
		entityDamageTeam()
		containerAvailable()
		containerItemApply()
		farmableStage()
		containerSize()
		polyContains()
		stagehandType()
		containerItemsCanFit()
		placeMod()
		containerTakeNumItemsAt()
		dayLength()
		callScriptedEntity()
		spawnProjectile()
		containerItemsFitWhere()
		npcLineQuery()
		npcQuery()
		containerTakeAll()
		findPlatformerPath()
		entityDescription()
		xwrap()
		spawnItem()
		containerSwapItemsNoCombine()
		containerAddItems()
		objectSpaces()
		playerQuery()
		containerConsumeAt()
		monsterType()
		entityType()
		containerSwapItems()
		debugText()
		day()
		containerPutItemsAt()
		entitySpecies()
		loungeableQuery()
		lightLevel()
		entityCanDamage()
		underground()
		spawnNpc()
		material()
		monsterQuery()
		objectQuery()
		containerConsume()
		entityLineQuery()
		containerClose()
		entityPosition()
		objectAt()
		containerItems()
	}
	tonumber()
	ic = {
		stripColor()
		giveBack()
		renameThis()
		checkStack()
		sortFunc()
		sort()
		itemAmount()
		amountEquipped()
		sort_relative()
		itemConfig()
		searchBox()
		clientVersion = 1
		quickstack()
		searchButton()
		renameButton()
		lock()
		getQuality()
	}
	assert()
	rawset()
	getmetatable()
	string = {
		rep()
		gmatch()
		reverse()
		pack()
		char()
		sub()
		format()
		byte()
		match()
		dump()
		find()
		unpack()
		packsize()
		upper()
		gsub()
		lower()
		len()
	}
	pcall()
	player = {
		consumeItemWithParameter()
		shipUpgrades()
		altHandItemTags()
		upgradeShip()
		serverUuid()
		gender()
		worldId()
		equippedTech()
		completeMission()
		inventoryTags()
		removeEssentialItem()
		hasItem()
		recordEvent()
		addBookmark()
		lounge()
		cleanupItems()
		consumeItem()
		makeTechUnavailable()
		setUniverseFlag()
		giveBlueprint()
		hasItemWithParameter()
		species()
		playCinematic()
		altHandItem()
		primaryHandItemTags()
		availableTechs()
		enabledTechs()
		enableTech()
		giveItem()
		playTime()
		setIntroComplete()
		essentialItem()
		ownShipWorldId()
		makeTechAvailable()
		warp()
		equipTech()
		startQuest()
		enableMission()
		hasQuest()
		itemsWithTag()
		isLounging()
		primaryHandItem()
		confirm()
		hasCompletedQuest()
		hasCountOfItem()
		equippedItem()
		setEquippedItem()
		radioMessage()
		giveEssentialItem()
		introComplete()
		canStartQuest()
		consumeTaggedItem()
		getItemWithParameter()
	}
	config = {
		getParameter()
	}
	root = {
		questConfig()
		treeFoliageDirectory()
		getConfigurationPath()
		loadVersionedJson()
		materialHealth()
		tenantConfig()
		itemConfig()
		materialMiningSound()
		projectileConfig()
		imageSpaces()
		techType()
		createTreasure()
		materialFootstepSound()
		itemHasTag()
		imageSize()
		treeStemDirectory()
		npcPortrait()
		hasTech()
		getMatchingTenants()
		getConfiguration()
		createItem()
		generateName()
		setConfiguration()
		techConfig()
		materialPath()
		makeCurrentVersionedJson()
		monsterMovementSettings()
		isTreasurePool()
		itemTags()
		itemType()
		evalFunction()
		monsterSkillParameter()
		assetJson()
		setConfigurationPath()
		monsterPortrait()
		recipesForItem()
		createBiome()
		behaviorModule()
		liquidStatusEffects()
		npcConfig()
		nonEmptyRegion()
		evalFunction2()
		projectileGravityMultiplier()
		npcVariant()
	}
	math = {
		tan()
		atan()
		modf()
		exp()
		type()
		acos()
		abs()
		mininteger = -9223372036854775808
		maxinteger = 9223372036854775807
		deg()
		asin()
		randomseed()
		random()
		sqrt()
		huge = inf
		min()
		log()
		pi = 3.1415926535898
		rad()
		max()
		floor()
		ult()
		cos()
		tointeger()
		fmod()
		sin()
		ceil()
	}
	widget = {
		setListSelected()
		setImage()
		setButtonCheckedImages()
		setImageRotation()
		setButtonImage()
		getListSelected()
		itemGridItems()
		addListItem()
		removeListItem()
		setButtonImages()
		blur()
		getData()
		setOptionVisible()
		playSound()
		setChecked()
		getSelectedOption()
		setFontColor()
		setSize()
		setOptionEnabled()
		clearListItems()
		setPosition()
		setProgress()
		getText()
		getSliderValue()
		setButtonEnabled()
		setButtonOverlayImage()
		setData()
		setSelectedOption()
		focus()
		getSize()
		setImageScale()
		setVisible()
		getPosition()
		setText()
		getChecked()
	}
	xpcall()
	setmetatable()
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	status = {
		removeEphemeralEffect()
		resetResource()
		addPersistentEffect()
		addEphemeralEffect()
		resourceMax()
		addPersistentEffects()
		clearEphemeralEffects()
		statPositive()
		modifyResource()
		statusProperty()
		resourcePercentage()
		resource()
		isResource()
		setResourcePercentage()
		getPersistentEffects()
		resourcePositive()
		clearPersistentEffects()
		giveResource()
		overConsumeResource()
		damageTakenSince()
		activeUniqueStatusEffectSummary()
		addEphemeralEffects()
		setStatusProperty()
		resourceLocked()
		modifyResourcePercentage()
		stat()
		clearAllPersistentEffects()
		setResourceLocked()
		resetAllResources()
		resourceNames()
		setPersistentEffects()
		inflictedDamageSince()
		consumeResource()
		inflictedHitsSince()
		setResource()
	}
	utf8 = {
		charpattern = "[
[03:49:49.616] [Warn] 	coroutine = {
		wrap()
		resume()
		create()
		isyieldable()
		status()
		running()
		yield()
	}
	jarray()
	type()
	init()
	require()
	table = {
		insert()
		unpack()
		pack()
		concat()
		sort()
		move()
		remove()
	}
	_VERSION = "Lua 5.3"
	update()
	rawequal()
	world = {
		isMonster()
		entityPortrait()
		entityQuery()
		itemDropQuery()
		entityVelocity()
		damageTiles()
		entityHealth()
		debugPoint()
		debugLine()
		entityExists()
		entityUniqueId()
		timeOfDay()
		entityGender()
		entityAggressive()
		magnitude()
		mod()
		platformerPathStart()
		containerItemAt()
		breathable()
		entityHasCountOfItem()
		npcType()
		sendEntityMessage()
		liquidAt()
		liquidAlongLine()
		isTileProtected()
		destroyLiquid()
		spawnLiquid()
		isNpc()
		getProperty()
		gravity()
		entityMoney()
		objectLineQuery()
		spawnMonster()
		lineCollision()
		lineTileCollision()
		rectCollision()
		getObjectParameter()
		entityHandItem()
		setProperty()
		entityHandItemDescriptor()
		time()
		placeMaterial()
		entityName()
		findUniqueEntity()
		threatLevel()
		placeObject()
		spawnTreasure()
		spawnVehicle()
		damageTileArea()
		windLevel()
		tileIsOccupied()
		containerTakeAt()
		loungeableOccupied()
		resolvePolyCollision()
		nearestTo()
		spawnStagehand()
		polyCollision()
		containerOpen()
		pointCollision()
		distance()
		rectTileCollision()
		debugPoly()
		pointTileCollision()
		containerStackItems()
		collisionBlocksAlongLine()
		entityDamageTeam()
		containerAvailable()
		containerItemApply()
		farmableStage()
		containerSize()
		polyContains()
		stagehandType()
		containerItemsCanFit()
		placeMod()
		containerTakeNumItemsAt()
		dayLength()
		callScriptedEntity()
		spawnProjectile()
		containerItemsFitWhere()
		npcLineQuery()
		npcQuery()
		containerTakeAll()
		findPlatformerPath()
		entityDescription()
		xwrap()
		spawnItem()
		containerSwapItemsNoCombine()
		containerAddItems()
		objectSpaces()
		playerQuery()
		containerConsumeAt()
		monsterType()
		entityType()
		containerSwapItems()
		debugText()
		day()
		containerPutItemsAt()
		entitySpecies()
		loungeableQuery()
		lightLevel()
		entityCanDamage()
		underground()
		spawnNpc()
		material()
		monsterQuery()
		objectQuery()
		containerConsume()
		entityLineQuery()
		containerClose()
		entityPosition()
		objectAt()
		containerItems()
	}
	tonumber()
	ic = {
		stripColor()
		giveBack()
		renameThis()
		checkStack()
		sortFunc()
		sort()
		itemAmount()
		amountEquipped()
		sort_relative()
		itemConfig()
		searchBox()
		clientVersion = 1
		quickstack()
		searchButton()
		renameButton()
		lock()
		getQuality()
	}
	assert()
	rawset()
	getmetatable()
	string = {
		rep()
		gmatch()
		reverse()
		pack()
		char()
		sub()
		format()
		byte()
		match()
		dump()
		find()
		unpack()
		packsize()
		upper()
		gsub()
		lower()
		len()
	}
	pcall()
	player = {
		consumeItemWithParameter()
		shipUpgrades()
		altHandItemTags()
		upgradeShip()
		serverUuid()
		gender()
		worldId()
		equippedTech()
		completeMission()
		inventoryTags()
		removeEssentialItem()
		hasItem()
		recordEvent()
		addBookmark()
		lounge()
		cleanupItems()
		consumeItem()
		makeTechUnavailable()
		setUniverseFlag()
		giveBlueprint()
		hasItemWithParameter()
		species()
		playCinematic()
		altHandItem()
		primaryHandItemTags()
		availableTechs()
		enabledTechs()
		enableTech()
		giveItem()
		playTime()
		setIntroComplete()
		essentialItem()
		ownShipWorldId()
		makeTechAvailable()
		warp()
		equipTech()
		startQuest()
		enableMission()
		hasQuest()
		itemsWithTag()
		isLounging()
		primaryHandItem()
		confirm()
		hasCompletedQuest()
		hasCountOfItem()
		equippedItem()
		setEquippedItem()
		radioMessage()
		giveEssentialItem()
		introComplete()
		canStartQuest()
		consumeTaggedItem()
		getItemWithParameter()
	}
	config = {
		getParameter()
	}
	root = {
		questConfig()
		treeFoliageDirectory()
		getConfigurationPath()
		loadVersionedJson()
		materialHealth()
		tenantConfig()
		itemConfig()
		materialMiningSound()
		projectileConfig()
		imageSpaces()
		techType()
		createTreasure()
		materialFootstepSound()
		itemHasTag()
		imageSize()
		treeStemDirectory()
		npcPortrait()
		hasTech()
		getMatchingTenants()
		getConfiguration()
		createItem()
		generateName()
		setConfiguration()
		techConfig()
		materialPath()
		makeCurrentVersionedJson()
		monsterMovementSettings()
		isTreasurePool()
		itemTags()
		itemType()
		evalFunction()
		monsterSkillParameter()
		assetJson()
		setConfigurationPath()
		monsterPortrait()
		recipesForItem()
		createBiome()
		behaviorModule()
		liquidStatusEffects()
		npcConfig()
		nonEmptyRegion()
		evalFunction2()
		projectileGravityMultiplier()
		npcVariant()
	}
	math = {
		tan()
		atan()
		modf()
		exp()
		type()
		acos()
		abs()
		mininteger = -9223372036854775808
		maxinteger = 9223372036854775807
		deg()
		asin()
		randomseed()
		random()
		sqrt()
		huge = inf
		min()
		log()
		pi = 3.1415926535898
		rad()
		max()
		floor()
		ult()
		cos()
		tointeger()
		fmod()
		sin()
		ceil()
	}
	widget = {
		setListSelected()
		setImage()
		setButtonCheckedImages()
		setImageRotation()
		setButtonImage()
		getListSelected()
		itemGridItems()
		addListItem()
		removeListItem()
		setButtonImages()
		blur()
		getData()
		setOptionVisible()
		playSound()
		setChecked()
		getSelectedOption()
		setFontColor()
		setSize()
		setOptionEnabled()
		clearListItems()
		setPosition()
		setProgress()
		getText()
		getSliderValue()
		setButtonEnabled()
		setButtonOverlayImage()
		setData()
		setSelectedOption()
		focus()
		getSize()
		setImageScale()
		setVisible()
		getPosition()
		setText()
		getChecked()
	}
	xpcall()
	setmetatable()
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	status = {
		removeEphemeralEffect()
		resetResource()
		addPersistentEffect()
		addEphemeralEffect()
		resourceMax()
		addPersistentEffects()
		clearEphemeralEffects()
		statPositive()
		modifyResource()
		statusProperty()
		resourcePercentage()
		resource()
		isResource()
		setResourcePercentage()
		getPersistentEffects()
		resourcePositive()
		clearPersistentEffects()
		giveResource()
		overConsumeResource()
		damageTakenSince()
		activeUniqueStatusEffectSummary()
		addEphemeralEffects()
		setStatusProperty()
		resourceLocked()
		modifyResourcePercentage()
		stat()
		clearAllPersistentEffects()
		setResourceLocked()
		resetAllResources()
		resourceNames()
		setPersistentEffects()
		inflictedDamageSince()
		consumeResource()
		inflictedHitsSince()
		setResource()
	}
	utf8 = {
		charpattern = "[
[03:49:51.346] [Warn] 	coroutine = {
		wrap()
		resume()
		create()
		isyieldable()
		status()
		running()
		yield()
	}
	jarray()
	type()
	init()
	require()
	table = {
		insert()
		unpack()
		pack()
		concat()
		sort()
		move()
		remove()
	}
	_VERSION = "Lua 5.3"
	update()
	rawequal()
	world = {
		isMonster()
		entityPortrait()
		entityQuery()
		itemDropQuery()
		entityVelocity()
		damageTiles()
		entityHealth()
		debugPoint()
		debugLine()
		entityExists()
		entityUniqueId()
		timeOfDay()
		entityGender()
		entityAggressive()
		magnitude()
		mod()
		platformerPathStart()
		containerItemAt()
		breathable()
		entityHasCountOfItem()
		npcType()
		sendEntityMessage()
		liquidAt()
		liquidAlongLine()
		isTileProtected()
		destroyLiquid()
		spawnLiquid()
		isNpc()
		getProperty()
		gravity()
		entityMoney()
		objectLineQuery()
		spawnMonster()
		lineCollision()
		lineTileCollision()
		rectCollision()
		getObjectParameter()
		entityHandItem()
		setProperty()
		entityHandItemDescriptor()
		time()
		placeMaterial()
		entityName()
		findUniqueEntity()
		threatLevel()
		placeObject()
		spawnTreasure()
		spawnVehicle()
		damageTileArea()
		windLevel()
		tileIsOccupied()
		containerTakeAt()
		loungeableOccupied()
		resolvePolyCollision()
		nearestTo()
		spawnStagehand()
		polyCollision()
		containerOpen()
		pointCollision()
		distance()
		rectTileCollision()
		debugPoly()
		pointTileCollision()
		containerStackItems()
		collisionBlocksAlongLine()
		entityDamageTeam()
		containerAvailable()
		containerItemApply()
		farmableStage()
		containerSize()
		polyContains()
		stagehandType()
		containerItemsCanFit()
		placeMod()
		containerTakeNumItemsAt()
		dayLength()
		callScriptedEntity()
		spawnProjectile()
		containerItemsFitWhere()
		npcLineQuery()
		npcQuery()
		containerTakeAll()
		findPlatformerPath()
		entityDescription()
		xwrap()
		spawnItem()
		containerSwapItemsNoCombine()
		containerAddItems()
		objectSpaces()
		playerQuery()
		containerConsumeAt()
		monsterType()
		entityType()
		containerSwapItems()
		debugText()
		day()
		containerPutItemsAt()
		entitySpecies()
		loungeableQuery()
		lightLevel()
		entityCanDamage()
		underground()
		spawnNpc()
		material()
		monsterQuery()
		objectQuery()
		containerConsume()
		entityLineQuery()
		containerClose()
		entityPosition()
		objectAt()
		containerItems()
	}
	tonumber()
	ic = {
		stripColor()
		giveBack()
		renameThis()
		checkStack()
		sortFunc()
		sort()
		itemAmount()
		amountEquipped()
		sort_relative()
		itemConfig()
		searchBox()
		clientVersion = 1
		quickstack()
		searchButton()
		renameButton()
		lock()
		getQuality()
	}
	assert()
	rawset()
	getmetatable()
	string = {
		rep()
		gmatch()
		reverse()
		pack()
		char()
		sub()
		format()
		byte()
		match()
		dump()
		find()
		unpack()
		packsize()
		upper()
		gsub()
		lower()
		len()
	}
	pcall()
	player = {
		consumeItemWithParameter()
		shipUpgrades()
		altHandItemTags()
		upgradeShip()
		serverUuid()
		gender()
		worldId()
		equippedTech()
		completeMission()
		inventoryTags()
		removeEssentialItem()
		hasItem()
		recordEvent()
		addBookmark()
		lounge()
		cleanupItems()
		consumeItem()
		makeTechUnavailable()
		setUniverseFlag()
		giveBlueprint()
		hasItemWithParameter()
		species()
		playCinematic()
		altHandItem()
		primaryHandItemTags()
		availableTechs()
		enabledTechs()
		enableTech()
		giveItem()
		playTime()
		setIntroComplete()
		essentialItem()
		ownShipWorldId()
		makeTechAvailable()
		warp()
		equipTech()
		startQuest()
		enableMission()
		hasQuest()
		itemsWithTag()
		isLounging()
		primaryHandItem()
		confirm()
		hasCompletedQuest()
		hasCountOfItem()
		equippedItem()
		setEquippedItem()
		radioMessage()
		giveEssentialItem()
		introComplete()
		canStartQuest()
		consumeTaggedItem()
		getItemWithParameter()
	}
	config = {
		getParameter()
	}
	root = {
		questConfig()
		treeFoliageDirectory()
		getConfigurationPath()
		loadVersionedJson()
		materialHealth()
		tenantConfig()
		itemConfig()
		materialMiningSound()
		projectileConfig()
		imageSpaces()
		techType()
		createTreasure()
		materialFootstepSound()
		itemHasTag()
		imageSize()
		treeStemDirectory()
		npcPortrait()
		hasTech()
		getMatchingTenants()
		getConfiguration()
		createItem()
		generateName()
		setConfiguration()
		techConfig()
		materialPath()
		makeCurrentVersionedJson()
		monsterMovementSettings()
		isTreasurePool()
		itemTags()
		itemType()
		evalFunction()
		monsterSkillParameter()
		assetJson()
		setConfigurationPath()
		monsterPortrait()
		recipesForItem()
		createBiome()
		behaviorModule()
		liquidStatusEffects()
		npcConfig()
		nonEmptyRegion()
		evalFunction2()
		projectileGravityMultiplier()
		npcVariant()
	}
	math = {
		tan()
		atan()
		modf()
		exp()
		type()
		acos()
		abs()
		mininteger = -9223372036854775808
		maxinteger = 9223372036854775807
		deg()
		asin()
		randomseed()
		random()
		sqrt()
		huge = inf
		min()
		log()
		pi = 3.1415926535898
		rad()
		max()
		floor()
		ult()
		cos()
		tointeger()
		fmod()
		sin()
		ceil()
	}
	widget = {
		setListSelected()
		setImage()
		setButtonCheckedImages()
		setImageRotation()
		setButtonImage()
		getListSelected()
		itemGridItems()
		addListItem()
		removeListItem()
		setButtonImages()
		blur()
		getData()
		setOptionVisible()
		playSound()
		setChecked()
		getSelectedOption()
		setFontColor()
		setSize()
		setOptionEnabled()
		clearListItems()
		setPosition()
		setProgress()
		getText()
		getSliderValue()
		setButtonEnabled()
		setButtonOverlayImage()
		setData()
		setSelectedOption()
		focus()
		getSize()
		setImageScale()
		setVisible()
		getPosition()
		setText()
		getChecked()
	}
	xpcall()
	setmetatable()
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	status = {
		removeEphemeralEffect()
		resetResource()
		addPersistentEffect()
		addEphemeralEffect()
		resourceMax()
		addPersistentEffects()
		clearEphemeralEffects()
		statPositive()
		modifyResource()
		statusProperty()
		resourcePercentage()
		resource()
		isResource()
		setResourcePercentage()
		getPersistentEffects()
		resourcePositive()
		clearPersistentEffects()
		giveResource()
		overConsumeResource()
		damageTakenSince()
		activeUniqueStatusEffectSummary()
		addEphemeralEffects()
		setStatusProperty()
		resourceLocked()
		modifyResourcePercentage()
		stat()
		clearAllPersistentEffects()
		setResourceLocked()
		resetAllResources()
		resourceNames()
		setPersistentEffects()
		inflictedDamageSince()
		consumeResource()
		inflictedHitsSince()
		setResource()
	}
	utf8 = {
		charpattern = "[
[03:49:52.234] [Warn] 	coroutine = {
		wrap()
		resume()
		create()
		isyieldable()
		status()
		running()
		yield()
	}
	jarray()
	type()
	init()
	require()
	table = {
		insert()
		unpack()
		pack()
		concat()
		sort()
		move()
		remove()
	}
	_VERSION = "Lua 5.3"
	update()
	rawequal()
	world = {
		isMonster()
		entityPortrait()
		entityQuery()
		itemDropQuery()
		entityVelocity()
		damageTiles()
		entityHealth()
		debugPoint()
		debugLine()
		entityExists()
		entityUniqueId()
		timeOfDay()
		entityGender()
		entityAggressive()
		magnitude()
		mod()
		platformerPathStart()
		containerItemAt()
		breathable()
		entityHasCountOfItem()
		npcType()
		sendEntityMessage()
		liquidAt()
		liquidAlongLine()
		isTileProtected()
		destroyLiquid()
		spawnLiquid()
		isNpc()
		getProperty()
		gravity()
		entityMoney()
		objectLineQuery()
		spawnMonster()
		lineCollision()
		lineTileCollision()
		rectCollision()
		getObjectParameter()
		entityHandItem()
		setProperty()
		entityHandItemDescriptor()
		time()
		placeMaterial()
		entityName()
		findUniqueEntity()
		threatLevel()
		placeObject()
		spawnTreasure()
		spawnVehicle()
		damageTileArea()
		windLevel()
		tileIsOccupied()
		containerTakeAt()
		loungeableOccupied()
		resolvePolyCollision()
		nearestTo()
		spawnStagehand()
		polyCollision()
		containerOpen()
		pointCollision()
		distance()
		rectTileCollision()
		debugPoly()
		pointTileCollision()
		containerStackItems()
		collisionBlocksAlongLine()
		entityDamageTeam()
		containerAvailable()
		containerItemApply()
		farmableStage()
		containerSize()
		polyContains()
		stagehandType()
		containerItemsCanFit()
		placeMod()
		containerTakeNumItemsAt()
		dayLength()
		callScriptedEntity()
		spawnProjectile()
		containerItemsFitWhere()
		npcLineQuery()
		npcQuery()
		containerTakeAll()
		findPlatformerPath()
		entityDescription()
		xwrap()
		spawnItem()
		containerSwapItemsNoCombine()
		containerAddItems()
		objectSpaces()
		playerQuery()
		containerConsumeAt()
		monsterType()
		entityType()
		containerSwapItems()
		debugText()
		day()
		containerPutItemsAt()
		entitySpecies()
		loungeableQuery()
		lightLevel()
		entityCanDamage()
		underground()
		spawnNpc()
		material()
		monsterQuery()
		objectQuery()
		containerConsume()
		entityLineQuery()
		containerClose()
		entityPosition()
		objectAt()
		containerItems()
	}
	tonumber()
	ic = {
		stripColor()
		giveBack()
		renameThis()
		checkStack()
		sortFunc()
		sort()
		itemAmount()
		amountEquipped()
		sort_relative()
		itemConfig()
		searchBox()
		clientVersion = 1
		quickstack()
		searchButton()
		renameButton()
		lock()
		getQuality()
	}
	assert()
	rawset()
	getmetatable()
	string = {
		rep()
		gmatch()
		reverse()
		pack()
		char()
		sub()
		format()
		byte()
		match()
		dump()
		find()
		unpack()
		packsize()
		upper()
		gsub()
		lower()
		len()
	}
	pcall()
	player = {
		consumeItemWithParameter()
		shipUpgrades()
		altHandItemTags()
		upgradeShip()
		serverUuid()
		gender()
		worldId()
		equippedTech()
		completeMission()
		inventoryTags()
		removeEssentialItem()
		hasItem()
		recordEvent()
		addBookmark()
		lounge()
		cleanupItems()
		consumeItem()
		makeTechUnavailable()
		setUniverseFlag()
		giveBlueprint()
		hasItemWithParameter()
		species()
		playCinematic()
		altHandItem()
		primaryHandItemTags()
		availableTechs()
		enabledTechs()
		enableTech()
		giveItem()
		playTime()
		setIntroComplete()
		essentialItem()
		ownShipWorldId()
		makeTechAvailable()
		warp()
		equipTech()
		startQuest()
		enableMission()
		hasQuest()
		itemsWithTag()
		isLounging()
		primaryHandItem()
		confirm()
		hasCompletedQuest()
		hasCountOfItem()
		equippedItem()
		setEquippedItem()
		radioMessage()
		giveEssentialItem()
		introComplete()
		canStartQuest()
		consumeTaggedItem()
		getItemWithParameter()
	}
	config = {
		getParameter()
	}
	root = {
		questConfig()
		treeFoliageDirectory()
		getConfigurationPath()
		loadVersionedJson()
		materialHealth()
		tenantConfig()
		itemConfig()
		materialMiningSound()
		projectileConfig()
		imageSpaces()
		techType()
		createTreasure()
		materialFootstepSound()
		itemHasTag()
		imageSize()
		treeStemDirectory()
		npcPortrait()
		hasTech()
		getMatchingTenants()
		getConfiguration()
		createItem()
		generateName()
		setConfiguration()
		techConfig()
		materialPath()
		makeCurrentVersionedJson()
		monsterMovementSettings()
		isTreasurePool()
		itemTags()
		itemType()
		evalFunction()
		monsterSkillParameter()
		assetJson()
		setConfigurationPath()
		monsterPortrait()
		recipesForItem()
		createBiome()
		behaviorModule()
		liquidStatusEffects()
		npcConfig()
		nonEmptyRegion()
		evalFunction2()
		projectileGravityMultiplier()
		npcVariant()
	}
	math = {
		tan()
		atan()
		modf()
		exp()
		type()
		acos()
		abs()
		mininteger = -9223372036854775808
		maxinteger = 9223372036854775807
		deg()
		asin()
		randomseed()
		random()
		sqrt()
		huge = inf
		min()
		log()
		pi = 3.1415926535898
		rad()
		max()
		floor()
		ult()
		cos()
		tointeger()
		fmod()
		sin()
		ceil()
	}
	widget = {
		setListSelected()
		setImage()
		setButtonCheckedImages()
		setImageRotation()
		setButtonImage()
		getListSelected()
		itemGridItems()
		addListItem()
		removeListItem()
		setButtonImages()
		blur()
		getData()
		setOptionVisible()
		playSound()
		setChecked()
		getSelectedOption()
		setFontColor()
		setSize()
		setOptionEnabled()
		clearListItems()
		setPosition()
		setProgress()
		getText()
		getSliderValue()
		setButtonEnabled()
		setButtonOverlayImage()
		setData()
		setSelectedOption()
		focus()
		getSize()
		setImageScale()
		setVisible()
		getPosition()
		setText()
		getChecked()
	}
	xpcall()
	setmetatable()
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	status = {
		removeEphemeralEffect()
		resetResource()
		addPersistentEffect()
		addEphemeralEffect()
		resourceMax()
		addPersistentEffects()
		clearEphemeralEffects()
		statPositive()
		modifyResource()
		statusProperty()
		resourcePercentage()
		resource()
		isResource()
		setResourcePercentage()
		getPersistentEffects()
		resourcePositive()
		clearPersistentEffects()
		giveResource()
		overConsumeResource()
		damageTakenSince()
		activeUniqueStatusEffectSummary()
		addEphemeralEffects()
		setStatusProperty()
		resourceLocked()
		modifyResourcePercentage()
		stat()
		clearAllPersistentEffects()
		setResourceLocked()
		resetAllResources()
		resourceNames()
		setPersistentEffects()
		inflictedDamageSince()
		consumeResource()
		inflictedHitsSince()
		setResource()
	}
	utf8 = {
		charpattern = "[
[03:50:37.472] [Warn] 	coroutine = {
		wrap()
		resume()
		create()
		isyieldable()
		status()
		running()
		yield()
	}
	jarray()
	type()
	init()
	require()
	table = {
		insert()
		unpack()
		pack()
		concat()
		sort()
		move()
		remove()
	}
	_VERSION = "Lua 5.3"
	update()
	rawequal()
	world = {
		isMonster()
		entityPortrait()
		entityQuery()
		itemDropQuery()
		entityVelocity()
		damageTiles()
		entityHealth()
		debugPoint()
		debugLine()
		entityExists()
		entityUniqueId()
		timeOfDay()
		entityGender()
		entityAggressive()
		magnitude()
		mod()
		platformerPathStart()
		containerItemAt()
		breathable()
		entityHasCountOfItem()
		npcType()
		sendEntityMessage()
		liquidAt()
		liquidAlongLine()
		isTileProtected()
		destroyLiquid()
		spawnLiquid()
		isNpc()
		getProperty()
		gravity()
		entityMoney()
		objectLineQuery()
		spawnMonster()
		lineCollision()
		lineTileCollision()
		rectCollision()
		getObjectParameter()
		entityHandItem()
		setProperty()
		entityHandItemDescriptor()
		time()
		placeMaterial()
		entityName()
		findUniqueEntity()
		threatLevel()
		placeObject()
		spawnTreasure()
		spawnVehicle()
		damageTileArea()
		windLevel()
		tileIsOccupied()
		containerTakeAt()
		loungeableOccupied()
		resolvePolyCollision()
		nearestTo()
		spawnStagehand()
		polyCollision()
		containerOpen()
		pointCollision()
		distance()
		rectTileCollision()
		debugPoly()
		pointTileCollision()
		containerStackItems()
		collisionBlocksAlongLine()
		entityDamageTeam()
		containerAvailable()
		containerItemApply()
		farmableStage()
		containerSize()
		polyContains()
		stagehandType()
		containerItemsCanFit()
		placeMod()
		containerTakeNumItemsAt()
		dayLength()
		callScriptedEntity()
		spawnProjectile()
		containerItemsFitWhere()
		npcLineQuery()
		npcQuery()
		containerTakeAll()
		findPlatformerPath()
		entityDescription()
		xwrap()
		spawnItem()
		containerSwapItemsNoCombine()
		containerAddItems()
		objectSpaces()
		playerQuery()
		containerConsumeAt()
		monsterType()
		entityType()
		containerSwapItems()
		debugText()
		day()
		containerPutItemsAt()
		entitySpecies()
		loungeableQuery()
		lightLevel()
		entityCanDamage()
		underground()
		spawnNpc()
		material()
		monsterQuery()
		objectQuery()
		containerConsume()
		entityLineQuery()
		containerClose()
		entityPosition()
		objectAt()
		containerItems()
	}
	tonumber()
	ic = {
		stripColor()
		giveBack()
		renameThis()
		checkStack()
		sortFunc()
		sort()
		itemAmount()
		amountEquipped()
		sort_relative()
		itemConfig()
		searchBox()
		clientVersion = 1
		quickstack()
		searchButton()
		renameButton()
		lock()
		getQuality()
	}
	assert()
	rawset()
	getmetatable()
	string = {
		rep()
		gmatch()
		reverse()
		pack()
		char()
		sub()
		format()
		byte()
		match()
		dump()
		find()
		unpack()
		packsize()
		upper()
		gsub()
		lower()
		len()
	}
	pcall()
	player = {
		consumeItemWithParameter()
		shipUpgrades()
		altHandItemTags()
		upgradeShip()
		serverUuid()
		gender()
		worldId()
		equippedTech()
		completeMission()
		inventoryTags()
		removeEssentialItem()
		hasItem()
		recordEvent()
		addBookmark()
		lounge()
		cleanupItems()
		consumeItem()
		makeTechUnavailable()
		setUniverseFlag()
		giveBlueprint()
		hasItemWithParameter()
		species()
		playCinematic()
		altHandItem()
		primaryHandItemTags()
		availableTechs()
		enabledTechs()
		enableTech()
		giveItem()
		playTime()
		setIntroComplete()
		essentialItem()
		ownShipWorldId()
		makeTechAvailable()
		warp()
		equipTech()
		startQuest()
		enableMission()
		hasQuest()
		itemsWithTag()
		isLounging()
		primaryHandItem()
		confirm()
		hasCompletedQuest()
		hasCountOfItem()
		equippedItem()
		setEquippedItem()
		radioMessage()
		giveEssentialItem()
		introComplete()
		canStartQuest()
		consumeTaggedItem()
		getItemWithParameter()
	}
	config = {
		getParameter()
	}
	root = {
		questConfig()
		treeFoliageDirectory()
		getConfigurationPath()
		loadVersionedJson()
		materialHealth()
		tenantConfig()
		itemConfig()
		materialMiningSound()
		projectileConfig()
		imageSpaces()
		techType()
		createTreasure()
		materialFootstepSound()
		itemHasTag()
		imageSize()
		treeStemDirectory()
		npcPortrait()
		hasTech()
		getMatchingTenants()
		getConfiguration()
		createItem()
		generateName()
		setConfiguration()
		techConfig()
		materialPath()
		makeCurrentVersionedJson()
		monsterMovementSettings()
		isTreasurePool()
		itemTags()
		itemType()
		evalFunction()
		monsterSkillParameter()
		assetJson()
		setConfigurationPath()
		monsterPortrait()
		recipesForItem()
		createBiome()
		behaviorModule()
		liquidStatusEffects()
		npcConfig()
		nonEmptyRegion()
		evalFunction2()
		projectileGravityMultiplier()
		npcVariant()
	}
	math = {
		tan()
		atan()
		modf()
		exp()
		type()
		acos()
		abs()
		mininteger = -9223372036854775808
		maxinteger = 9223372036854775807
		deg()
		asin()
		randomseed()
		random()
		sqrt()
		huge = inf
		min()
		log()
		pi = 3.1415926535898
		rad()
		max()
		floor()
		ult()
		cos()
		tointeger()
		fmod()
		sin()
		ceil()
	}
	widget = {
		setListSelected()
		setImage()
		setButtonCheckedImages()
		setImageRotation()
		setButtonImage()
		getListSelected()
		itemGridItems()
		addListItem()
		removeListItem()
		setButtonImages()
		blur()
		getData()
		setOptionVisible()
		playSound()
		setChecked()
		getSelectedOption()
		setFontColor()
		setSize()
		setOptionEnabled()
		clearListItems()
		setPosition()
		setProgress()
		getText()
		getSliderValue()
		setButtonEnabled()
		setButtonOverlayImage()
		setData()
		setSelectedOption()
		focus()
		getSize()
		setImageScale()
		setVisible()
		getPosition()
		setText()
		getChecked()
	}
	xpcall()
	setmetatable()
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	status = {
		removeEphemeralEffect()
		resetResource()
		addPersistentEffect()
		addEphemeralEffect()
		resourceMax()
		addPersistentEffects()
		clearEphemeralEffects()
		statPositive()
		modifyResource()
		statusProperty()
		resourcePercentage()
		resource()
		isResource()
		setResourcePercentage()
		getPersistentEffects()
		resourcePositive()
		clearPersistentEffects()
		giveResource()
		overConsumeResource()
		damageTakenSince()
		activeUniqueStatusEffectSummary()
		addEphemeralEffects()
		setStatusProperty()
		resourceLocked()
		modifyResourcePercentage()
		stat()
		clearAllPersistentEffects()
		setResourceLocked()
		resetAllResources()
		resourceNames()
		setPersistentEffects()
		inflictedDamageSince()
		consumeResource()
		inflictedHitsSince()
		setResource()
	}
	utf8 = {
		charpattern = "[
[03:50:39.446] [Warn] 	coroutine = {
		wrap()
		resume()
		create()
		isyieldable()
		status()
		running()
		yield()
	}
	jarray()
	type()
	init()
	require()
	table = {
		insert()
		unpack()
		pack()
		concat()
		sort()
		move()
		remove()
	}
	_VERSION = "Lua 5.3"
	update()
	rawequal()
	world = {
		isMonster()
		entityPortrait()
		entityQuery()
		itemDropQuery()
		entityVelocity()
		damageTiles()
		entityHealth()
		debugPoint()
		debugLine()
		entityExists()
		entityUniqueId()
		timeOfDay()
		entityGender()
		entityAggressive()
		magnitude()
		mod()
		platformerPathStart()
		containerItemAt()
		breathable()
		entityHasCountOfItem()
		npcType()
		sendEntityMessage()
		liquidAt()
		liquidAlongLine()
		isTileProtected()
		destroyLiquid()
		spawnLiquid()
		isNpc()
		getProperty()
		gravity()
		entityMoney()
		objectLineQuery()
		spawnMonster()
		lineCollision()
		lineTileCollision()
		rectCollision()
		getObjectParameter()
		entityHandItem()
		setProperty()
		entityHandItemDescriptor()
		time()
		placeMaterial()
		entityName()
		findUniqueEntity()
		threatLevel()
		placeObject()
		spawnTreasure()
		spawnVehicle()
		damageTileArea()
		windLevel()
		tileIsOccupied()
		containerTakeAt()
		loungeableOccupied()
		resolvePolyCollision()
		nearestTo()
		spawnStagehand()
		polyCollision()
		containerOpen()
		pointCollision()
		distance()
		rectTileCollision()
		debugPoly()
		pointTileCollision()
		containerStackItems()
		collisionBlocksAlongLine()
		entityDamageTeam()
		containerAvailable()
		containerItemApply()
		farmableStage()
		containerSize()
		polyContains()
		stagehandType()
		containerItemsCanFit()
		placeMod()
		containerTakeNumItemsAt()
		dayLength()
		callScriptedEntity()
		spawnProjectile()
		containerItemsFitWhere()
		npcLineQuery()
		npcQuery()
		containerTakeAll()
		findPlatformerPath()
		entityDescription()
		xwrap()
		spawnItem()
		containerSwapItemsNoCombine()
		containerAddItems()
		objectSpaces()
		playerQuery()
		containerConsumeAt()
		monsterType()
		entityType()
		containerSwapItems()
		debugText()
		day()
		containerPutItemsAt()
		entitySpecies()
		loungeableQuery()
		lightLevel()
		entityCanDamage()
		underground()
		spawnNpc()
		material()
		monsterQuery()
		objectQuery()
		containerConsume()
		entityLineQuery()
		containerClose()
		entityPosition()
		objectAt()
		containerItems()
	}
	tonumber()
	ic = {
		stripColor()
		giveBack()
		renameThis()
		checkStack()
		sortFunc()
		sort()
		itemAmount()
		amountEquipped()
		sort_relative()
		itemConfig()
		searchBox()
		clientVersion = 1
		quickstack()
		searchButton()
		renameButton()
		lock()
		getQuality()
	}
	assert()
	rawset()
	getmetatable()
	string = {
		rep()
		gmatch()
		reverse()
		pack()
		char()
		sub()
		format()
		byte()
		match()
		dump()
		find()
		unpack()
		packsize()
		upper()
		gsub()
		lower()
		len()
	}
	pcall()
	player = {
		consumeItemWithParameter()
		shipUpgrades()
		altHandItemTags()
		upgradeShip()
		serverUuid()
		gender()
		worldId()
		equippedTech()
		completeMission()
		inventoryTags()
		removeEssentialItem()
		hasItem()
		recordEvent()
		addBookmark()
		lounge()
		cleanupItems()
		consumeItem()
		makeTechUnavailable()
		setUniverseFlag()
		giveBlueprint()
		hasItemWithParameter()
		species()
		playCinematic()
		altHandItem()
		primaryHandItemTags()
		availableTechs()
		enabledTechs()
		enableTech()
		giveItem()
		playTime()
		setIntroComplete()
		essentialItem()
		ownShipWorldId()
		makeTechAvailable()
		warp()
		equipTech()
		startQuest()
		enableMission()
		hasQuest()
		itemsWithTag()
		isLounging()
		primaryHandItem()
		confirm()
		hasCompletedQuest()
		hasCountOfItem()
		equippedItem()
		setEquippedItem()
		radioMessage()
		giveEssentialItem()
		introComplete()
		canStartQuest()
		consumeTaggedItem()
		getItemWithParameter()
	}
	config = {
		getParameter()
	}
	root = {
		questConfig()
		treeFoliageDirectory()
		getConfigurationPath()
		loadVersionedJson()
		materialHealth()
		tenantConfig()
		itemConfig()
		materialMiningSound()
		projectileConfig()
		imageSpaces()
		techType()
		createTreasure()
		materialFootstepSound()
		itemHasTag()
		imageSize()
		treeStemDirectory()
		npcPortrait()
		hasTech()
		getMatchingTenants()
		getConfiguration()
		createItem()
		generateName()
		setConfiguration()
		techConfig()
		materialPath()
		makeCurrentVersionedJson()
		monsterMovementSettings()
		isTreasurePool()
		itemTags()
		itemType()
		evalFunction()
		monsterSkillParameter()
		assetJson()
		setConfigurationPath()
		monsterPortrait()
		recipesForItem()
		createBiome()
		behaviorModule()
		liquidStatusEffects()
		npcConfig()
		nonEmptyRegion()
		evalFunction2()
		projectileGravityMultiplier()
		npcVariant()
	}
	math = {
		tan()
		atan()
		modf()
		exp()
		type()
		acos()
		abs()
		mininteger = -9223372036854775808
		maxinteger = 9223372036854775807
		deg()
		asin()
		randomseed()
		random()
		sqrt()
		huge = inf
		min()
		log()
		pi = 3.1415926535898
		rad()
		max()
		floor()
		ult()
		cos()
		tointeger()
		fmod()
		sin()
		ceil()
	}
	widget = {
		setListSelected()
		setImage()
		setButtonCheckedImages()
		setImageRotation()
		setButtonImage()
		getListSelected()
		itemGridItems()
		addListItem()
		removeListItem()
		setButtonImages()
		blur()
		getData()
		setOptionVisible()
		playSound()
		setChecked()
		getSelectedOption()
		setFontColor()
		setSize()
		setOptionEnabled()
		clearListItems()
		setPosition()
		setProgress()
		getText()
		getSliderValue()
		setButtonEnabled()
		setButtonOverlayImage()
		setData()
		setSelectedOption()
		focus()
		getSize()
		setImageScale()
		setVisible()
		getPosition()
		setText()
		getChecked()
	}
	xpcall()
	setmetatable()
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	status = {
		removeEphemeralEffect()
		resetResource()
		addPersistentEffect()
		addEphemeralEffect()
		resourceMax()
		addPersistentEffects()
		clearEphemeralEffects()
		statPositive()
		modifyResource()
		statusProperty()
		resourcePercentage()
		resource()
		isResource()
		setResourcePercentage()
		getPersistentEffects()
		resourcePositive()
		clearPersistentEffects()
		giveResource()
		overConsumeResource()
		damageTakenSince()
		activeUniqueStatusEffectSummary()
		addEphemeralEffects()
		setStatusProperty()
		resourceLocked()
		modifyResourcePercentage()
		stat()
		clearAllPersistentEffects()
		setResourceLocked()
		resetAllResources()
		resourceNames()
		setPersistentEffects()
		inflictedDamageSince()
		consumeResource()
		inflictedHitsSince()
		setResource()
	}
	utf8 = {
		charpattern = "[
[03:50:41.478] [Warn] 	coroutine = {
		wrap()
		resume()
		create()
		isyieldable()
		status()
		running()
		yield()
	}
	jarray()
	type()
	init()
	require()
	table = {
		insert()
		unpack()
		pack()
		concat()
		sort()
		move()
		remove()
	}
	_VERSION = "Lua 5.3"
	update()
	rawequal()
	world = {
		isMonster()
		entityPortrait()
		entityQuery()
		itemDropQuery()
		entityVelocity()
		damageTiles()
		entityHealth()
		debugPoint()
		debugLine()
		entityExists()
		entityUniqueId()
		timeOfDay()
		entityGender()
		entityAggressive()
		magnitude()
		mod()
		platformerPathStart()
		containerItemAt()
		breathable()
		entityHasCountOfItem()
		npcType()
		sendEntityMessage()
		liquidAt()
		liquidAlongLine()
		isTileProtected()
		destroyLiquid()
		spawnLiquid()
		isNpc()
		getProperty()
		gravity()
		entityMoney()
		objectLineQuery()
		spawnMonster()
		lineCollision()
		lineTileCollision()
		rectCollision()
		getObjectParameter()
		entityHandItem()
		setProperty()
		entityHandItemDescriptor()
		time()
		placeMaterial()
		entityName()
		findUniqueEntity()
		threatLevel()
		placeObject()
		spawnTreasure()
		spawnVehicle()
		damageTileArea()
		windLevel()
		tileIsOccupied()
		containerTakeAt()
		loungeableOccupied()
		resolvePolyCollision()
		nearestTo()
		spawnStagehand()
		polyCollision()
		containerOpen()
		pointCollision()
		distance()
		rectTileCollision()
		debugPoly()
		pointTileCollision()
		containerStackItems()
		collisionBlocksAlongLine()
		entityDamageTeam()
		containerAvailable()
		containerItemApply()
		farmableStage()
		containerSize()
		polyContains()
		stagehandType()
		containerItemsCanFit()
		placeMod()
		containerTakeNumItemsAt()
		dayLength()
		callScriptedEntity()
		spawnProjectile()
		containerItemsFitWhere()
		npcLineQuery()
		npcQuery()
		containerTakeAll()
		findPlatformerPath()
		entityDescription()
		xwrap()
		spawnItem()
		containerSwapItemsNoCombine()
		containerAddItems()
		objectSpaces()
		playerQuery()
		containerConsumeAt()
		monsterType()
		entityType()
		containerSwapItems()
		debugText()
		day()
		containerPutItemsAt()
		entitySpecies()
		loungeableQuery()
		lightLevel()
		entityCanDamage()
		underground()
		spawnNpc()
		material()
		monsterQuery()
		objectQuery()
		containerConsume()
		entityLineQuery()
		containerClose()
		entityPosition()
		objectAt()
		containerItems()
	}
	tonumber()
	ic = {
		stripColor()
		giveBack()
		renameThis()
		checkStack()
		sortFunc()
		sort()
		itemAmount()
		amountEquipped()
		sort_relative()
		itemConfig()
		searchBox()
		clientVersion = 1
		quickstack()
		searchButton()
		renameButton()
		lock()
		getQuality()
	}
	assert()
	rawset()
	getmetatable()
	string = {
		rep()
		gmatch()
		reverse()
		pack()
		char()
		sub()
		format()
		byte()
		match()
		dump()
		find()
		unpack()
		packsize()
		upper()
		gsub()
		lower()
		len()
	}
	pcall()
	player = {
		consumeItemWithParameter()
		shipUpgrades()
		altHandItemTags()
		upgradeShip()
		serverUuid()
		gender()
		worldId()
		equippedTech()
		completeMission()
		inventoryTags()
		removeEssentialItem()
		hasItem()
		recordEvent()
		addBookmark()
		lounge()
		cleanupItems()
		consumeItem()
		makeTechUnavailable()
		setUniverseFlag()
		giveBlueprint()
		hasItemWithParameter()
		species()
		playCinematic()
		altHandItem()
		primaryHandItemTags()
		availableTechs()
		enabledTechs()
		enableTech()
		giveItem()
		playTime()
		setIntroComplete()
		essentialItem()
		ownShipWorldId()
		makeTechAvailable()
		warp()
		equipTech()
		startQuest()
		enableMission()
		hasQuest()
		itemsWithTag()
		isLounging()
		primaryHandItem()
		confirm()
		hasCompletedQuest()
		hasCountOfItem()
		equippedItem()
		setEquippedItem()
		radioMessage()
		giveEssentialItem()
		introComplete()
		canStartQuest()
		consumeTaggedItem()
		getItemWithParameter()
	}
	config = {
		getParameter()
	}
	root = {
		questConfig()
		treeFoliageDirectory()
		getConfigurationPath()
		loadVersionedJson()
		materialHealth()
		tenantConfig()
		itemConfig()
		materialMiningSound()
		projectileConfig()
		imageSpaces()
		techType()
		createTreasure()
		materialFootstepSound()
		itemHasTag()
		imageSize()
		treeStemDirectory()
		npcPortrait()
		hasTech()
		getMatchingTenants()
		getConfiguration()
		createItem()
		generateName()
		setConfiguration()
		techConfig()
		materialPath()
		makeCurrentVersionedJson()
		monsterMovementSettings()
		isTreasurePool()
		itemTags()
		itemType()
		evalFunction()
		monsterSkillParameter()
		assetJson()
		setConfigurationPath()
		monsterPortrait()
		recipesForItem()
		createBiome()
		behaviorModule()
		liquidStatusEffects()
		npcConfig()
		nonEmptyRegion()
		evalFunction2()
		projectileGravityMultiplier()
		npcVariant()
	}
	math = {
		tan()
		atan()
		modf()
		exp()
		type()
		acos()
		abs()
		mininteger = -9223372036854775808
		maxinteger = 9223372036854775807
		deg()
		asin()
		randomseed()
		random()
		sqrt()
		huge = inf
		min()
		log()
		pi = 3.1415926535898
		rad()
		max()
		floor()
		ult()
		cos()
		tointeger()
		fmod()
		sin()
		ceil()
	}
	widget = {
		setListSelected()
		setImage()
		setButtonCheckedImages()
		setImageRotation()
		setButtonImage()
		getListSelected()
		itemGridItems()
		addListItem()
		removeListItem()
		setButtonImages()
		blur()
		getData()
		setOptionVisible()
		playSound()
		setChecked()
		getSelectedOption()
		setFontColor()
		setSize()
		setOptionEnabled()
		clearListItems()
		setPosition()
		setProgress()
		getText()
		getSliderValue()
		setButtonEnabled()
		setButtonOverlayImage()
		setData()
		setSelectedOption()
		focus()
		getSize()
		setImageScale()
		setVisible()
		getPosition()
		setText()
		getChecked()
	}
	xpcall()
	setmetatable()
	pane = {
		playerEntityId()
		dismiss()
		containerEntityId()
	}
	status = {
		removeEphemeralEffect()
		resetResource()
		addPersistentEffect()
		addEphemeralEffect()
		resourceMax()
		addPersistentEffects()
		clearEphemeralEffects()
		statPositive()
		modifyResource()
		statusProperty()
		resourcePercentage()
		resource()
		isResource()
		setResourcePercentage()
		getPersistentEffects()
		resourcePositive()
		clearPersistentEffects()
		giveResource()
		overConsumeResource()
		damageTakenSince()
		activeUniqueStatusEffectSummary()
		addEphemeralEffects()
		setStatusProperty()
		resourceLocked()
		modifyResourcePercentage()
		stat()
		clearAllPersistentEffects()
		setResourceLocked()
		resetAllResources()
		resourceNames()
		setPersistentEffects()
		inflictedDamageSince()
		consumeResource()
		inflictedHitsSince()
		setResource()
	}
	utf8 = {
		charpattern = "[
[03:54:00.732] [Info] Chat: <SAIL> You've reached the limit of how many crew members you can bring with you. Drop some off on your ship to expand your crew further.
[03:54:09.944] [Info] UniverseServer: Loading client ship world ClientShipWorld:40d0c64bbadbfcac62e62a636f4f2308
[03:54:10.895] [Info] UniverseServer: Warping player 1 to ClientShipWorld:40d0c64bbadbfcac62e62a636f4f2308
[03:54:11.021] [Info] Client received world stop packet, leaving: Removed
[03:54:11.021] [Info] UniverseServer: Stopping idle world CelestialWorld:-549421120:-174071947:-77840190:8
[03:54:29.219] [Info] UniverseServer: Loading celestial world -549421120:-174071947:-77840190:8
[03:54:29.420] [Info] UniverseServer: Warping player 1 to CelestialWorld:-549421120:-174071947:-77840190:8=65960b76dbc4345d6a78ca55b02f8224
[03:54:29.456] [Info] Client received world stop packet, leaving: Removed
[03:54:29.748] [Info] UniverseServer: Stopping idle world ClientShipWorld:40d0c64bbadbfcac62e62a636f4f2308
[03:54:55.668] [Info] UniverseServer: Loading client ship world ClientShipWorld:40d0c64bbadbfcac62e62a636f4f2308
[03:54:56.747] [Info] UniverseServer: Warping player 1 to ClientShipWorld:40d0c64bbadbfcac62e62a636f4f2308
[03:54:56.822] [Info] UniverseServer: Stopping idle world CelestialWorld:-549421120:-174071947:-77840190:8
[03:54:56.934] [Info] Client received world stop packet, leaving: Removed
[03:55:19.875] [Warn] 	script = {
		setUpdateDelta()
		updateDt()
	}
	xpcall()
	print()
	_VERSION = "Lua 5.3"
	rawget()
	sb = {
		logError()
		makePerlinSource()
		print()
		printJson()
		replaceTags()
		makeRandomSource()
		interpolateSinEase()
		nrand()
		logWarn()
		makeUuid()
		staticRandomDouble()
		staticRandomDoubleRange()
		staticRandomI32Range()
		logInfo()
		jsonMerge()
		setLogMap()
		staticRandomI32()
		jsonQuery()
	}
	jobject()
	pairs()
	jsize()
	jresize()
	p()
	math = {
		ult()
		pi = 3.1415926535898
		tointeger()
		rad()
		abs()
		maxinteger = 9223372036854775807
		mininteger = -9223372036854775808
		ceil()
		huge = inf
		acos()
		type()
		atan()
		max()
		asin()
		sqrt()
		sin()
		fmod()
		randomseed()
		exp()
		cos()
		random()
		min()
		modf()
		floor()
		log()
		deg()
		tan()
	}
	root = {
		recipesForItem()
		materialMiningSound()
		behaviorModule()
		npcConfig()
		materialPath()
		itemTags()
		treeStemDirectory()
		createBiome()
		createItem()
		projectileGravityMultiplier()
		materialHealth()
		makeCurrentVersionedJson()
		setConfiguration()
		evalFunction2()
		monsterSkillParameter()
		nonEmptyRegion()
		getConfiguration()
		createTreasure()
		techConfig()
		getMatchingTenants()
		generateName()
		loadVersionedJson()
		projectileConfig()
		treeFoliageDirectory()
		npcPortrait()
		itemHasTag()
		evalFunction()
		itemType()
		tenantConfig()
		imageSize()
		monsterMovementSettings()
		getConfigurationPath()
		isTreasurePool()
		hasTech()
		monsterPortrait()
		assetJson()
		questConfig()
		npcVariant()
		itemConfig()
		techType()
		imageSpaces()
		materialFootstepSound()
		liquidStatusEffects()
		setConfigurationPath()
	}
	widget = {
		setButtonEnabled()
		focus()
		setButtonCheckedImages()
		clearListItems()
		setListSelected()
		getSize()
		setButtonOverlayImage()
		addListItem()
		playSound()
		itemGridItems()
		setData()
		getData()
		setPosition()
		getListSelected()
		setButtonImage()
		removeListItem()
		blur()
		setVisible()
		getPosition()
		getSelectedOption()
		setProgress()
		getSliderValue()
		getText()
		setImage()
		setFontColor()
		setOptionEnabled()
		setImageScale()
		setSelectedOption()
		setChecked()
		setOptionVisible()
		setImageRotation()
		setButtonImages()
		setText()
		getChecked()
		setSize()
	}
	require()
	select()
	jremove()
	init()
	ic = {
		checkStack()
		getQuality()
		quickstack()
		giveBack()
		searchBox()
		renameButton()
		searchButton()
		renameThis()
		sort()
		amountEquipped()
		lock()
		sort_relative()
		itemAmount()
		itemConfig()
		stripColor()
		clientVersion = 1
		sortFunc()
	}
	player = {
		playTime()
		enabledTechs()
		serverUuid()
		worldId()
		enableMission()
		availableTechs()
		setEquippedItem()
		equippedTech()
		altHandItem()
		giveEssentialItem()
		confirm()
		canStartQuest()
		altHandItemTags()
		setIntroComplete()
		makeTechUnavailable()
		inventoryTags()
		recordEvent()
		ownShipWorldId()
		playCinematic()
		warp()
		consumeItemWithParameter()
		hasQuest()
		hasItem()
		lounge()
		getItemWithParameter()
		equipTech()
		essentialItem()
		equippedItem()
		hasCountOfItem()
		itemsWithTag()
		primaryHandItem()
		cleanupItems()
		startQuest()
		species()
		consumeTaggedItem()
		introComplete()
		upgradeShip()
		radioMessage()
		enableTech()
		addBookmark()
		hasItemWithParameter()
		removeEssentialItem()
		hasCompletedQuest()
		setUniverseFlag()
		gender()
		consumeItem()
		primaryHandItemTags()
		isLounging()
		shipUpgrades()
		completeMission()
		giveBlueprint()
		giveItem()
		makeTechAvailable()
	}
	pcall()
	string = {
		packsize()
		reverse()
		lower()
		gmatch()
		gsub()
		pack()
		sub()
		find()
		dump()
		match()
		rep()
		upper()
		byte()
		format()
		char()
		unpack()
		len()
	}
	rawequal()
	pane = {
		dismiss()
		playerEntityId()
		containerEntityId()
	}
	assert()
	getmetatable()
	utf8 = {
		len()
		codepoint()
		charpattern = "[
[03:55:41.651] [Info] UniverseServer: Creating temporary world file for world InstanceWorld:outpost:-:-
[03:55:41.651] [Info] UniverseServer: Creating temporary instance world 'InstanceWorld:outpost:-:-'
[03:55:41.662] [Info] Placing dungeon outpost
[03:55:41.721] [Info] Forcing generation of dungeon outpost
[03:55:41.768] [Info] Placing dungeon at (0, 750)
[03:55:45.034] [Info] Protected dungeonIds for world set to (0)
[03:55:45.114] [Info] Generating dungeon outpost_techscientist1
[03:55:45.114] [Info] Placing dungeon at (355, 636)
[03:55:45.118] [Warn] Failed to place dungeon object: drip1 direction: 1 position: (372, 634)
[03:55:45.120] [Info] Generating dungeon outpost_terramart
[03:55:45.120] [Info] Placing dungeon at (332, 621)
[03:55:45.124] [Info] Generating dungeon outpost_frogfurnishing
[03:55:45.124] [Info] Placing dungeon at (332, 655)
[03:55:45.128] [Info] Generating dungeon outpost_2stopshop
[03:55:45.128] [Info] Placing dungeon at (427, 618)
[03:55:45.132] [Info] Generating dungeon outpost_ursaminer
[03:55:45.132] [Info] Placing dungeon at (406, 651)
[03:55:45.135] [Info] Generating dungeon outpost_techscientist2
[03:55:45.135] [Info] Placing dungeon at (355, 636)
[03:55:45.140] [Warn] Failed to place dungeon object: drip1 direction: 1 position: (372, 634)
[03:55:45.142] [Info] Generating dungeon outpost_beakeasy1
[03:55:45.142] [Info] Placing dungeon at (447, 567)
[03:55:45.151] [Info] Generating dungeon outpost_beakeasy2
[03:55:45.151] [Info] Placing dungeon at (429, 567)
[03:55:45.156] [Info] Generating dungeon outpost_nuru
[03:55:45.156] [Info] Placing dungeon at (838, 608)
[03:55:45.169] [Info] Generating dungeon outpost_penguinbay
[03:55:45.169] [Info] Placing dungeon at (452, 627)
[03:55:45.172] [Warn] Failed to place dungeon object: outpostkeypad direction: 1 position: (461, 611)
[03:55:45.177] [Info] Generating dungeon outpost_signstore
[03:55:45.177] [Info] Placing dungeon at (308, 640)
[03:55:45.253] [Info] UniverseServer: Warping player 1 to InstanceWorld:outpost:-:-=outpost
[03:55:45.893] [Info] Client received world stop packet, leaving: Removed
[03:55:46.025] [Info] UniverseServer: Stopping idle world ClientShipWorld:40d0c64bbadbfcac62e62a636f4f2308
[03:56:46.429] [Info] UniverseServer: Loading client ship world ClientShipWorld:40d0c64bbadbfcac62e62a636f4f2308
[03:56:47.368] [Info] UniverseServer: Warping player 1 to ClientShipWorld:40d0c64bbadbfcac62e62a636f4f2308
[03:56:47.428] [Info] Client received world stop packet, leaving: Removed
[03:56:47.492] [Info] UniverseServer: Stopping idle world InstanceWorld:outpost:-:-
[03:56:48.477] [Info] UniverseServer: Expiring temporary world InstanceWorld:outpost:-:-
[04:04:52.887] [Info] UniverseServer: Creating temporary world file for world InstanceWorld:outpost:-:-
[04:04:52.888] [Info] UniverseServer: Creating temporary instance world 'InstanceWorld:outpost:-:-'
[04:04:52.899] [Info] Placing dungeon outpost
[04:04:52.903] [Info] Forcing generation of dungeon outpost
[04:04:52.951] [Info] Placing dungeon at (0, 750)
[04:04:56.155] [Info] Protected dungeonIds for world set to (0)
[04:04:56.233] [Info] Generating dungeon outpost_techscientist1
[04:04:56.233] [Info] Placing dungeon at (355, 636)
[04:04:56.238] [Warn] Failed to place dungeon object: drip1 direction: 1 position: (372, 634)
[04:04:56.239] [Info] Generating dungeon outpost_terramart
[04:04:56.239] [Info] Placing dungeon at (332, 621)
[04:04:56.241] [Info] Generating dungeon outpost_frogfurnishing
[04:04:56.241] [Info] Placing dungeon at (332, 655)
[04:04:56.244] [Info] Generating dungeon outpost_2stopshop
[04:04:56.244] [Info] Placing dungeon at (427, 618)
[04:04:56.246] [Info] Generating dungeon outpost_ursaminer
[04:04:56.246] [Info] Placing dungeon at (406, 651)
[04:04:56.249] [Info] Generating dungeon outpost_techscientist2
[04:04:56.249] [Info] Placing dungeon at (355, 636)
[04:04:56.254] [Warn] Failed to place dungeon object: drip1 direction: 1 position: (372, 634)
[04:04:56.254] [Info] Generating dungeon outpost_beakeasy1
[04:04:56.254] [Info] Placing dungeon at (447, 567)
[04:04:56.262] [Info] Generating dungeon outpost_beakeasy2
[04:04:56.262] [Info] Placing dungeon at (429, 567)
[04:04:56.266] [Info] Generating dungeon outpost_nuru
[04:04:56.266] [Info] Placing dungeon at (838, 608)
[04:04:56.278] [Info] Generating dungeon outpost_penguinbay
[04:04:56.278] [Info] Placing dungeon at (452, 627)
[04:04:56.281] [Warn] Failed to place dungeon object: outpostkeypad direction: 1 position: (461, 611)
[04:04:56.282] [Info] Generating dungeon outpost_signstore
[04:04:56.282] [Info] Placing dungeon at (308, 640)
[04:04:56.376] [Info] UniverseServer: Warping player 1 to InstanceWorld:outpost:-:-=outpost
[04:04:56.996] [Info] Client received world stop packet, leaving: Removed
[04:04:57.122] [Info] UniverseServer: Stopping idle world ClientShipWorld:40d0c64bbadbfcac62e62a636f4f2308
[04:09:01.871] [Info] UniverseServer: Loading client ship world ClientShipWorld:40d0c64bbadbfcac62e62a636f4f2308
[04:09:02.813] [Info] UniverseServer: Warping player 1 to ClientShipWorld:40d0c64bbadbfcac62e62a636f4f2308
[04:09:02.924] [Info] UniverseServer: Stopping idle world InstanceWorld:outpost:-:-
[04:09:02.946] [Info] Client received world stop packet, leaving: Removed
[04:09:03.471] [Info] UniverseServer: Expiring temporary world InstanceWorld:outpost:-:-
[04:09:10.877] [Info] UniverseClient: Client disconnecting...
[04:09:10.951] [Info] Client received world stop packet, leaving: Removed
[04:09:11.220] [Info] UniverseServer: Client 'Lutecia' <1> (local) disconnected for reason: 
[04:09:11.220] [Info] UniverseServer: Stopping idle world ClientShipWorld:40d0c64bbadbfcac62e62a636f4f2308
[04:09:11.729] [Info] UniverseServer: Stopping UniverseServer
[04:09:11.744] [Info] Clearing steam rich presence connection
[04:09:13.794] [Info] Application: quit requested
[04:09:13.795] [Info] Application: quitting...
[04:09:13.795] [Info] Application: shutdown...
[04:09:14.120] [Info] Root: Shutting down Root
[04:09:14.488] [Info] Application: Destroying SDL Window
[04:09:14.594] [Info] Application: stopped gracefully
